<?xml version="1.0" encoding="utf-8"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-strict.xsd">
  <file original="Sisulizer" datatype="unknown" source-language="en-US" target-language="zh-CN">
    <body>
      <group id="root" datatype="unknown">
        <trans-unit>
          <source>Select the range where the import from. The range is a string that contains the upper left and bottom right corners of tge selected area coded in the same way as Excel codes range. The format is ad:ad where a is column code that is any combibination of alphabets (e.g. A or AB) and d is a row number starting from 1.</source>
          <target>选择从中导入的范围。范围是一个字符串，其中包含以与 Excel 代码范围相同的方式编码的 tge 选定区域的左上角和右下角。格式为 ad:ad，其中 a 是任何字母组合（例如 A 或 AB）的列代码，d 是从 1 开始的行号。</target>
        </trans-unit>
        <trans-unit>
          <source>Entities to be processed</source>
          <target>待处理实体</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the format for Command Separated Values file to be imported.</source>
          <target>使用此表指定要导入的命令分隔值文件的格式。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies a .h file that contains the symbolic names of the resource id. If you specify this Sisulizer uses these symbolic names instead of the resource ids that are integers. Let&#x27;s have an example. We have two files: resources.rc that contains the resources and resources.h that contains names and ids. resources.h contains the following line:</source>
          <target>指定一个 .h 文件，其中包含资源 ID 的符号名称。如果您指定此 Sisulizer 使用这些符号名称而不是整数的资源 ID。让我们举个例子。我们有两个文件：包含资源的 resources.rc 和包含名称和 ID 的 resources.h。 resources.h 包含以下行：</target>
        </trans-unit>
        <trans-unit>
          <source>Ignore exclude characters when</source>
          <target>忽略排除字符时</target>
        </trans-unit>
        <trans-unit>
          <source>Main view when a project is open</source>
          <target>项目打开时的主视图</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to set the font used in the editor.</source>
          <target>使用此表设置编辑器中使用的字体。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the localized name of the country (e.g. Suomi, Deutschland, &amp;#26085;&amp;#26412;).</source>
          <target>指定国家的本地化名称（例如 Suomi、Deutschland、日本）。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the package contains the spell checker files.</source>
          <target>如果选中，则该包包含拼写检查器文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Hide selection</source>
          <target>隐藏选择</target>
        </trans-unit>
        <trans-unit>
          <source>4.0 or later</source>
          <target>4.0 或更高版本</target>
        </trans-unit>
        <trans-unit>
          <source>The default coding is used. If you use .NET 3.5 or older the legacy coding (e.g. zh-CHS/zh-CHT) is used. If you use .NET 4.0 or later the standard coding (e.g. zh-Hans/zh-Hant) is used.</source>
          <target>使用默认编码。如果您使用 .NET 3.5 或更早版本，则使用旧编码（例如 zh-CHS/zh-CHT）。如果您使用 .NET 4.0 或更高版本，则使用标准编码（例如 zh-Hans/zh-Hant）。</target>
        </trans-unit>
        <trans-unit>
          <source>Use byte order mark</source>
          <target>使用字节顺序标记</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the database where the translation memory data is stored.</source>
          <target>指定存储翻译记忆库数据的数据库。</target>
        </trans-unit>
        <trans-unit>
          <source>Line feed character (LF, 0x0A)</source>
          <target>换行符 (LF, 0x0A)</target>
        </trans-unit>
        <trans-unit>
          <source>Clipped text</source>
          <target>剪切文本</target>
        </trans-unit>
        <trans-unit>
          <source>For an example let&#x27;s look at SelectFile.pas that has the following resource string.</source>
          <target>例如，让我们看看具有以下资源字符串的 SelectFile.pas。</target>
        </trans-unit>
        <trans-unit>
          <source>For each plural message Sisulizer adds as many rows as specified in this field. If you plan to support only Western and Asian languages 2 is enough. 3 covers most languages excluding Arabic, Slovenian and Welsh. 4 covers all but Arabic. If you want to correctly translate to all Arabic forms set this to 6.</source>
          <target>对于每个复数消息，Sisulizer 添加与此字段中指定的行数相同的行。如果你打算只支持西方和亚洲语言 2 就足够了。 3 涵盖大多数语言，不包括阿拉伯语、斯洛文尼亚语和威尔士语。 4 涵盖除阿拉伯语之外的所有内容。如果您想正确翻译成所有阿拉伯语形式，请将其设置为 6。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the extra parameters passed to the emulator when launching the application.</source>
          <target>指定启动应用程序时传递给模拟器的额外参数。</target>
        </trans-unit>
        <trans-unit>
          <source>Use only local parameters</source>
          <target>仅使用本地参数</target>
        </trans-unit>
        <trans-unit>
          <source>C/C++ escapes</source>
          <target>C/C++ 转义</target>
        </trans-unit>
        <trans-unit>
          <source>Add the languages that you want to support. Flash creates a language file under a language specific sub directory. If you original Flash file is Sample.fla, Flash will create &amp;lt;langcode&amp;gt;\Sample_&amp;lt;langcode&amp;gt;.xml file for each language. For example en\Sample_en.xml contains the English strings.</source>
          <target>添加您想要支持的语言。 Flash 在特定于语言的子目录下创建语言文件。如果您的原始 Flash 文件是 Sample.fla，Flash 将为每种语言创建 &amp;lt;langcode&amp;gt;\Sample_&amp;lt;langcode&amp;gt;.xml 文件。例如 en\Sample_en.xml 包含英文字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Widestring (Unicode) usage</source>
          <target>宽字符串 (Unicode) 用法</target>
        </trans-unit>
        <trans-unit>
          <source>Edit row comment.</source>
          <target>编辑行注释。</target>
        </trans-unit>
        <trans-unit>
          <source>If you want to disable localization of a string, add an exclude tag on the same line where the string is located. The syntax is</source>
          <target>如果要禁用字符串的本地化，请在字符串所在的同一行添加排除标记。语法是</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;lt;sl&amp;gt;\XML\code.xml contains a sample XML file that contains embedded source code.</source>
          <target>&amp;lt;sl&amp;gt;\XML\code.xml 包含一个包含嵌入源代码的示例 XML 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to map a unmapped component. An unmapped component is your own or a 3rd party component that is unknown to Sisulizer. In order to show it right in the visual editor Sisulizer needs to know the type of the componet.</source>
          <target>使用此对话框映射未映射的组件。未映射的组件是您自己的或 Sisulizer 不知道的第 3 方组件。为了在可视化编辑器中正确显示它，Sisulizer 需要知道组件的类型。</target>
        </trans-unit>
        <trans-unit>
          <source>Fixed all valiation errors that cna be automatically fixed.</source>
          <target>修复了所有可以自动修复的验证错误。</target>
        </trans-unit>
        <trans-unit>
          <source>Excluded properties</source>
          <target>排除的属性</target>
        </trans-unit>
        <trans-unit>
          <source>Show column headers</source>
          <target>显示列标题</target>
        </trans-unit>
        <trans-unit>
          <source>The image appears near the bottom of the button</source>
          <target>图像出现在按钮底部附近</target>
        </trans-unit>
        <trans-unit>
          <source>Removes the selected item from its current position.</source>
          <target>从当前位置移除所选项目。</target>
        </trans-unit>
        <trans-unit>
          <source>If you want to underline the the word most you might store the data in the following way:</source>
          <target>如果您想给单词加下划线，您可以按以下方式存储数据：</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer&#x27;s VCPP directory contains Visual C++ samples, VCL directory contains Delphi/C++Builder samples, FireMonkey contains Delphi FireMonkey samples, VB directory contains Visual Basic samples.</source>
          <target>Sisulizer的VCPP目录包含Visual C++示例，VCL目录包含Delphi/C++Builder示例，FireMonkey包含Delphi FireMonkey示例，VB目录包含Visual Basic示例。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify how the resized controls are shown.</source>
          <target>使用此表指定调整大小的控件的显示方式。</target>
        </trans-unit>
        <trans-unit>
          <source>It is a set that stores the types that TLaTranslator should translate. By default it is an empty set that means that every property is translated no matter of its type. Because this includes Left, Top, Width, Height and Picture properties it might be that during the runtime language change you will see some flickering. In such case you can enable only string types. A good place for that is the initialization part of main unit.</source>
          <target>它是一个存储 TLaTranslator 应该翻译的类型的集合。默认情况下，它是一个空集，这意味着无论其类型如何，每个属性都会被转换。因为这包括 Left、Top、Width、Height 和 Picture 属性，所以在运行时语言更改期间您可能会看到一些闪烁。在这种情况下，您只能启用字符串类型。一个很好的地方是主单元的初始化部分。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify how to select translations when using translation memory to translate projects.</source>
          <target>使用此表指定在使用翻译记忆库翻译项目时如何选择翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Rebuild your Visual Studio project</source>
          <target>重建你的 Visual Studio 项目</target>
        </trans-unit>
        <trans-unit>
          <source>If you choose Tiedosto | Kieli menu (File | Language) the application call Sisulizer&#x27;s SelectLanguage functions that shows a language dialog that contains available languages.</source>
          <target>如果您选择 Tiedosto | Kieli 菜单（文件 | 语言）应用程序调用 Sisulizer 的 SelectLanguage 函数，该函数显示包含可用语言的语言对话框。</target>
        </trans-unit>
        <trans-unit>
          <source>Rule type</source>
          <target>规则类型</target>
        </trans-unit>
        <trans-unit>
          <source>Some files contains source code elements embedded into the main file. The most obvious sample is an HTML file containing JavaScript code. The file is HTML and should be parsed as HTML data. However the script parts should be parsed as source code. Sisulizer can handle this.</source>
          <target>一些文件包含嵌入到主文件中的源代码元素。最明显的示例是包含 JavaScript 代码的 HTML 文件。该文件是 HTML，应该被解析为 HTML 数据。但是脚本部分应该被解析为源代码。 Sisulizer 可以处理这个问题。</target>
        </trans-unit>
        <trans-unit>
          <source>Embedded Visual Basic project file</source>
          <target>嵌入式 Visual Basic 项目文件</target>
        </trans-unit>
        <trans-unit>
          <source>Comparing different localization methods</source>
          <target>比较不同的定位方法</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to customize how the pane&#x27;s toolbar looks like.</source>
          <target>使用此工作表自定义窗格工具栏的外观。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the framework that is used. Possible values are:</source>
          <target>指定使用的框架。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>managed</source>
          <target>管理</target>
        </trans-unit>
        <trans-unit>
          <source>By default Visual Studio uses IDS_xxx as resource ids. If this is true in your case you can leave this filed empty. However if you use some other id naming convention you have to specify the original resource files (.rc) too. This way Sisulizer can map the integer id to the correct symbolic name.</source>
          <target>默认情况下，Visual Studio 使用 IDS_xxx 作为资源 ID。如果您的情况属实，您可以将此字段留空。但是，如果您使用其他一些 id 命名约定，您也必须指定原始资源文件 (.rc)。这样 Sisulizer 可以将整数 id 映射到正确的符号名称。</target>
        </trans-unit>
        <trans-unit>
          <source>This is Microsoft new glossary file format where each line contains the string in several languages and each columns are separated by tab. File does not contain any other data but translations. You can &lt;a href=&quot;http://www.microsoft.com/language&quot;&gt;dow&lt;/a&gt;&lt;a href=&quot;http://www.microsoft.com/language/&quot;&gt;nload&lt;/a&gt; this file from Microsoft web pages (you need to be a MSDN subscriber).</source>
          <target>这是 Microsoft 新的词汇表文件格式，其中每行包含多种语言的字符串，每列由制表符分隔。文件不包含任何其他数据，但翻译。您可以&lt;a href=&quot;http://www.microsoft.com/language&quot;&gt;道琼斯指数&lt;/a&gt;&lt;a href=&quot;http://www.microsoft.com/language/&quot;&gt;n载入&lt;/a&gt;从微软的网页文件（你需要MSDN订阅者）。</target>
        </trans-unit>
        <trans-unit>
          <source>No matter what spell checking mode you use you need to have at least one spell checker configure for the language of the column or original language if you are checking spelling of the original strings.</source>
          <target>无论您使用哪种拼写检查模式，如果您要检查原始字符串的拼写，则至少需要为列的语言或原始语言配置一个拼写检查器。</target>
        </trans-unit>
        <trans-unit>
          <source>If your translator can not understand your original language but he or she understand some other language in the project you can turn on alternative original language. Let&#x27;s have an example. Your original language is Japanese and you want to localized to English, German and Finnish. It is relatively easy to find a translator who can translate from Japanese to English or German. However from Japanese to Finnish is much harder to find. If you have already done English translation you can turn on English as an alternative language. In that case the Finnish translator does not see the original Japanese string but English string and he or she is translating from English to Finnish.</source>
          <target>如果您的翻译无法理解您的原始语言，但他或她理解项目中的其他语言，您可以打开替代原始语言。让我们举个例子。您的原始语言是日语，并且您想本地化为英语、德语和芬兰语。找到可以从日语翻译成英语或德语的翻译人员相对容易。然而，从日语到芬兰语更难找到。如果您已经完成了英语翻译，您可以打开英语作为替代语言。在这种情况下，芬兰语翻译人员看到的不是原始日语字符串而是英语字符串，并且他或她正在从英语翻译成芬兰语。</target>
        </trans-unit>
        <trans-unit>
          <source>Strings are encoded with other &lt;a href=&quot;http://en.wikipedia.org/wiki/Code_page&quot; target=&quot;_blank&quot;&gt;code pages&lt;/a&gt;.</source>
          <target>字符串使用其他&lt;a href=&quot;http://en.wikipedia.org/wiki/Code_page&quot; target=&quot;_blank&quot;&gt;代码页&lt;/a&gt;进行编码。</target>
        </trans-unit>
        <trans-unit>
          <source>Tab character (0x09)</source>
          <target>制表符 (0x09)</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the test options for the language.</source>
          <target>使用此表指定语言的测试选项。</target>
        </trans-unit>
        <trans-unit>
          <source>The localized Japanese Country table will look like this after Sisulizer has updated the localized field values:</source>
          <target>Sisulizer 更新本地化字段值后，本地化的日本国家/地区表将如下所示：</target>
        </trans-unit>
        <trans-unit>
          <source>Exclude strings that contain only the following characters</source>
          <target>排除仅包含以下字符的字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Add contructor in the App class (App.xaml.cs) and set the culture there.</source>
          <target>在 App 类 (App.xaml.cs) 中添加构造函数并在那里设置区域性。</target>
        </trans-unit>
        <trans-unit>
          <source>Only the string following the tag</source>
          <target>只有标签后面的字符串</target>
        </trans-unit>
        <trans-unit>
          <source>This dialog shows the components of the dialog or form in a tree structure.</source>
          <target>此对话框以树结构显示对话框或表单的组件。</target>
        </trans-unit>
        <trans-unit>
          <source>Mark or unmark current row with Read Only state.</source>
          <target>使用只读状态标记或取消标记当前行。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer could not register COM object. You have to register it manually. Start command line as Administrator privileges and go to the directory that  the message box show and enter the command shown on the message box.</source>
          <target>Sisulizer 无法注册 COM 对象。您必须手动注册它。以管理员权限启动命令行并转到消息框显示的目录并输入消息框上显示的命令。</target>
        </trans-unit>
        <trans-unit>
          <source>Microsoft Glossary file</source>
          <target>Microsoft 词汇表文件</target>
        </trans-unit>
        <trans-unit>
          <source>Either the context value or original value of the rows has changed. Check if the translations are still valid.&lt;br&gt;You can clear this status on every rows of the project by choosing &lt;a href=&quot;ProjectClearChangedMenu.htm&quot;&gt;Project | Clear Changed Status&lt;/a&gt;.</source>
          <target>行的上下文值或原始值已更改。检查翻译是否仍然有效。&lt;br&gt;您可以通过选择&lt;a href=&quot;ProjectClearChangedMenu.htm&quot;&gt;Project |&lt;/a&gt;在项目的每一行上清除此状态。&lt;a href=&quot;ProjectClearChangedMenu.htm&quot;&gt;清除更改状态&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>A null characters is written following the last string character.</source>
          <target>在最后一个字符串字符之后写入空字符。</target>
        </trans-unit>
        <trans-unit>
          <source>You can remove items from the list by moving a mouse over an item and right clicking the item to show a popup menu. The menu contains following items:</source>
          <target>您可以通过将鼠标移到某个项目上并右键单击该项目以显示弹出菜单来从列表中删除项目。菜单包含以下项目：</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the excluded rows are hidden. If unchecked the excluded rows are visible but disabled.</source>
          <target>如果选中，则隐藏排除的行。如果未选中，则排除的行可见但被禁用。</target>
        </trans-unit>
        <trans-unit>
          <source>New languages can be added without changing the database structure</source>
          <target>可以在不改变数据库结构的情况下添加新语言</target>
        </trans-unit>
        <trans-unit>
          <source>Delphi and C++Builder&lt;br&gt;Visual C++&lt;br&gt;Visual Basic</source>
          <target>Delphi 和 C++Builder&lt;br&gt;可视化 C++&lt;br&gt;视觉基础</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the table specific settings. Check &lt;em&gt;Use table specific settings&lt;/em&gt; to use table specific setting. If unchecked source specific settings are used.</source>
          <target>指定表特定设置。选中&lt;em&gt;使用表特定设置&lt;/em&gt;以使用表特定设置。如果使用未选中的源特定设置。</target>
        </trans-unit>
        <trans-unit>
          <source>A null terminated Ansi string</source>
          <target>空终止的 Ansi 字符串</target>
        </trans-unit>
        <trans-unit>
          <source>All strings that have same original value are treated as duplicate strings.</source>
          <target>所有具有相同原始值的字符串都被视为重复字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Each script has its own default font. This depends on the platform (e.g. Windows vs. .NET). For example Japanese uses Japanese script and the default font of Japanese script for Windows application is MS UI Gothic 9.</source>
          <target>每个脚本都有自己的默认字体。这取决于平台（例如 Windows 与 .NET）。例如日语使用日语脚本，Windows 应用程序的日语脚本的默认字体是 MS UI Gothic 9。</target>
        </trans-unit>
        <trans-unit>
          <source>Include the Sisulizer version number and system information. Choose Help | System Information, close the System Information dialog and paste the content of the clipboard to text of the email.</source>
          <target>包括 Sisulizer 版本号和系统信息。选择帮助 |系统信息，关闭系统信息对话框并将剪贴板的内容粘贴到电子邮件的文本中。</target>
        </trans-unit>
        <trans-unit>
          <source>Support for Visual Studio 2013 including Update 2</source>
          <target>支持 Visual Studio 2013，包括 Update 2</target>
        </trans-unit>
        <trans-unit>
          <source>First line sample shows the layout of the resulting text file. It changes according to the settings done by the user.</source>
          <target>第一行示例显示了生成的文本文件的布局。它根据用户所做的设置而变化。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the name of the language in its own language (e.g. suomi, Deutsch, &amp;#26085;&amp;#26412;&amp;#35486;).</source>
          <target>以自己的语言（例如 suomi、Deutsch、日本语）指定语言的名称。</target>
        </trans-unit>
        <trans-unit>
          <source>Name of the company that wrote the assembly</source>
          <target>编写程序集的公司名称</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can access and localize SQL Server Compact databases</source>
          <target>Sisulizer 可以访问和本地化 SQL Server Compact 数据库</target>
        </trans-unit>
        <trans-unit>
          <source>When starting Sisulizer first time the default translation memory will be created. Some properties of the translation memory can not be changed after creatoin of translation memory. This is why Sisulizer asks user the creation settings. Generally it is recommended to accept the default values.</source>
          <target>首次启动 Sisulizer 时，将创建默认翻译记忆库。翻译记忆库创建后无法更改翻译记忆库的某些属性。这就是 Sisulizer 询问用户创建设置的原因。通常建议接受默认值。</target>
        </trans-unit>
        <trans-unit>
          <source>String size in byte following an Ansi string</source>
          <target>Ansi 字符串后的字符串大小（以字节为单位）</target>
        </trans-unit>
        <trans-unit>
          <source>Marked rows and translations</source>
          <target>标记的行和翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Text files (*.txt)</source>
          <target>文本文件 (*.txt)</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer uses language combo boxes and tree views. If this check box is checked Sisulizer adds also sub languages for those languages that only have one sub languages. When this check box is checked the language list contains both Japanese and Japanese (Japan). When this check box is unchecked the list contains only Japanese. In both cases both English and all its sub languages are added.</source>
          <target>Sisulizer 使用语言组合框和树视图。如果选中此复选框，Sisulizer 还会为那些只有一种子语言的语言添加子语言。选中此复选框后，语言列表将同时包含日语和日语（日本）。取消选中此复选框时，列表仅包含日语。在这两种情况下，都会添加英语及其所有子语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Click Add to add a new property. Click Remove to delete the selected property. Click Edit to edit the selected property.</source>
          <target>单击添加以添加新属性。单击删除以删除选定的属性。单击编辑以编辑选定的属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows translated HTML 100% WYSIWYG.</source>
          <target>显示已翻译的 HTML 100% WYSIWYG。</target>
        </trans-unit>
        <trans-unit>
          <source>Separate lines</source>
          <target>单独的行</target>
        </trans-unit>
        <trans-unit>
          <source>Delphi does not have a good localization support for FireMonkey. The platform itself is very much localization ready but Delphi IDE does not have any way to create the resource files for your application. Instead FireMonkey contains TLang component that provides very rudimentary localizartion support. It requires that you add TLang component on every form and manully maintain the translations of each forms. This is very time using and frustrating. You should not use TLang and you don&#x27;t have to use it if you use Sisulizer. If you already have a project using TLang you don&#x27;t loose any translation you have allready done. Just create a new Sisulizer project containing your application. Sisulizer automatically imports translations from each TLang component. Once imported you can safely remove TLang components. You won&#x27;t need them any more.</source>
          <target>Delphi 对 FireMonkey 没有很好的本地化支持。该平台本身已做好本地化准备，但 Delphi IDE 无法为您的应用程序创建资源文件。相反，FireMonkey 包含提供非常基本的本地化支持的 TLang 组件。它要求您在每个表单上添加 TLang 组件并手动维护每个表单的翻译。这是非常耗时且令人沮丧的。您不应该使用 TLang，如果您使用 Sisulizer，则不必使用它。如果您已经有一个使用 TLang 的项目，那么您已经完成的任何翻译都不会丢失。只需创建一个包含您的应用程序的新 Sisulizer 项目。 Sisulizer 自动从每个 TLang 组件导入翻译。导入后，您可以安全地删除 TLang 组件。你不再需要它们了。</target>
        </trans-unit>
        <trans-unit>
          <source>Use compatible MsBuild</source>
          <target>使用兼容的 MsBuild</target>
        </trans-unit>
        <trans-unit>
          <source>When building use translations that have at least this status</source>
          <target>构建使用至少具有此状态的翻译时</target>
        </trans-unit>
        <trans-unit>
          <source>implementation</source>
          <target>执行</target>
        </trans-unit>
        <trans-unit>
          <source>C++Builder binary file</source>
          <target>C++Builder 二进制文件</target>
        </trans-unit>
        <trans-unit>
          <source>Use this menu to exclude items from the project.</source>
          <target>使用此菜单从项目中排除项目。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the translation memory is multi-user enabled. This means that the translation memory uses username/password combination to identify the user and. Users can have different acces rights to use the translation memory such as full access or read only access.</source>
          <target>如果选中，则翻译记忆库已启用多用户。这意味着翻译记忆库使用用户名/密码组合来识别用户和。用户可以拥有不同的访问权限来使用翻译记忆库，例如完全访问或只读访问。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer shows the splash screen when the applications starts.</source>
          <target>如果选中 Sisulizer 在应用程序启动时显示启动画面。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify how the selected XML file is localized.</source>
          <target>使用此表指定所选 XML 文件的本地化方式。</target>
        </trans-unit>
        <trans-unit>
          <source>Read more about &lt;a href=&quot;QtLocalization.htm&quot;&gt;Qt localization&lt;/a&gt;.</source>
          <target>阅读有关&lt;a href=&quot;QtLocalization.htm&quot;&gt;Qt 本地化的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>There are five kind of Windows binary files all having the same extension (.exe, .dll and .ocx). They are:</source>
          <target>有五种 Windows 二进制文件都具有相同的扩展名（.exe、.dll 和 .ocx）。他们是：</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the components of the selected form and their properties in a tree view.</source>
          <target>在树视图中显示所选表单的组件及其属性。</target>
        </trans-unit>
        <trans-unit>
          <source>As above but separator is hyphen (-) instead of underline (_). The syntax is&lt;br&gt;      
        &lt;code&gt;la[-co[-variant]]&lt;/code&gt;&lt;br&gt;
        where
      &lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot;&gt; &lt;tr&gt; &lt;td nowrap&gt;la&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/ISO-639&quot; target=&quot;_blank&quot;&gt;ISO-639&lt;/a&gt; language code&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td nowrap&gt;co&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/ISO-3166&quot; target=&quot;_blank&quot;&gt;ISO-3166&lt;/a&gt; country code&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td nowrap&gt;variant&lt;/td&gt; &lt;td&gt;ISO variant code&lt;/td&gt; &lt;/tr&gt;  &lt;/table&gt;
      For example &amp;quot;en&amp;quot; is for English, &amp;quot;en-US&amp;quot; is fo English (United States), and &amp;quot;zh-TW&amp;quot; is for Traditional Chinese. ISO language code does not have any way to code a country neutral Traditional Chinese. That is why Chinese (Taiwan) is used.</source>
          <target>同上，但分隔符是连字符 (-) 而不是下划线 (_)。语法是&lt;br&gt;&lt;code&gt;la[-co[-variant]]&lt;/code&gt;&lt;br&gt;在哪里&lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot;&gt;&lt;tr&gt;&lt;td nowrap&gt;啦&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/ISO-639&quot; target=&quot;_blank&quot;&gt;ISO-639&lt;/a&gt;语言代码&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td nowrap&gt;合作&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/ISO-3166&quot; target=&quot;_blank&quot;&gt;ISO-3166&lt;/a&gt;国家代码&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td nowrap&gt;变体&lt;/td&gt;&lt;td&gt;ISO 变体代码&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;例如，“en”代表英语，“en-US”代表英语（美国），“zh-TW”代表繁体中文。 ISO 语言代码没有任何方法可以对国家中性繁体中文进行编码。这就是使用中文（台湾）的原因。</target>
        </trans-unit>
        <trans-unit>
          <source>Marked flag</source>
          <target>标记的标志</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer will automatically detect the format of each item. In most cases Sisulizer can correctly detect the format. If it does uncheck this check box and specify the format.</source>
          <target>如果选中 Sisulizer 将自动检测每个项目的格式。在大多数情况下，Sisulizer 可以正确检测格式。如果确实取消选中此复选框并指定格式。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer escapes</source>
          <target>硅化剂逃逸</target>
        </trans-unit>
        <trans-unit>
          <source>Few examples about Sisulizer languages codes:</source>
          <target>关于 Sisulizer 语言代码的几个例子：</target>
        </trans-unit>
        <trans-unit>
          <source>Variant code. If variant is given but no country then two hyphen must be used between language and variant. For example: en--Eng</source>
          <target>变体代码。如果提供了变体但没有提供国家/地区，则必须在语言和变体之间使用两个连字符。例如：en--Eng</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks if  a control has been moved out of the client are of its parent control possibly cutting parts of the control away.</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查控件是否已从客户端移出其父控件，可能会切掉控件的一部分。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows &lt;a href=&quot;ProjectStatisticsReportDialog.htm&quot;&gt;Project Statistics Report dialog&lt;/a&gt; that creates project report.</source>
          <target>显示创建项目报告的&lt;a href=&quot;ProjectStatisticsReportDialog.htm&quot;&gt;项目统计报告对话框&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the byte order used in the created MO files. Possible values are:</source>
          <target>指定在创建的 MO 文件中使用的字节顺序。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer&#x27;s HTML directory contains HTML samples.</source>
          <target>Sisulizer 的 HTML 目录包含 HTML 示例。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the localized name of the variant (e.g. Engineering).</source>
          <target>指定变体的本地化名称（例如 Engineering）。</target>
        </trans-unit>
        <trans-unit>
          <source>Resource file</source>
          <target>资源文件</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies how rows are included as visible based on their data type. Check those data types that you want to be visible in the exchanged project.</source>
          <target>指定如何根据行的数据类型将行包含为可见。检查您希望在交换项目中可见的那些数据类型。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can localize text data. Text can be encoded almost in every possible encoding including code page encoding and Unicode formats. Sisulizer can detect a custom resource data as text data if text in encoded as UTF-8 or UTF-16 and contains byte order mark (BOM).</source>
          <target>Sisulizer 可以本地化文本数据。文本几乎可以用所有可能的编码进行编码，包括代码页编码和 Unicode 格式。如果文本以 UTF-8 或 UTF-16 编码并包含字节顺序标记 (BOM)，则 Sisulizer 可以将自定义资源数据检测为文本数据。</target>
        </trans-unit>
        <trans-unit>
          <source>CHS or CHT is added after language code.</source>
          <target>CHS 或 CHT 添加在语言代码之后。</target>
        </trans-unit>
        <trans-unit>
          <source>Enter the &lt;a href=&quot;Segmentation.htm&quot;&gt;regular expression&lt;/a&gt; specifying the string breaking rule. You can enter string by typing or by clicking + button and choosing regular expression items from the popup menu that appears.</source>
          <target>输入指定字符串中断规则的&lt;a href=&quot;Segmentation.htm&quot;&gt;正则表达式&lt;/a&gt;。您可以通过键入或单击 + 按钮并从出现的弹出菜单中选择正则表达式项来输入字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>.NET applications</source>
          <target>.NET 应用程序</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;R&lt;/em&gt;&lt;em&gt;ead only&lt;/em&gt; specifies how rows are included as visible based on their read only state. Possible values are:</source>
          <target>&lt;em&gt;[R&lt;/em&gt; &lt;em&gt;EAD仅&lt;/em&gt;指定行包括如何为可见基于其只读状态。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>There is an optional header following zero or more records. Header and and each record contain one or more &lt;a href=&quot;BinaryFieldDialog.htm&quot;&gt;fields&lt;/a&gt;.</source>
          <target>零个或多个记录后面有一个可选的标题。标题和每条记录包含一个或多个&lt;a href=&quot;BinaryFieldDialog.htm&quot;&gt;字段&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Choose this menu to edit &lt;a href=&quot;TranslationEnginesDialogInternalTranslationMemory.htm&quot;&gt;translation engines&lt;/a&gt;.</source>
          <target>选择此菜单可编辑&lt;a href=&quot;TranslationEnginesDialogInternalTranslationMemory.htm&quot;&gt;翻译引擎&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify how to break paragraphs into segments. This is done based on the &lt;a href=&quot;Segmentation.htm&quot;&gt;segmentation rules&lt;/a&gt;.</source>
          <target>使用此表指定如何将段落分成多个段。这是基于&lt;a href=&quot;Segmentation.htm&quot;&gt;分割规则完成的&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>A .NET application or library compiled with any .NET compiler such as Visual Studio or RAD Studio.</source>
          <target>使用任何 .NET 编译器（例如 Visual Studio 或 RAD Studio）编译的 .NET 应用程序或库。</target>
        </trans-unit>
        <trans-unit>
          <source>When application has loaded the document its state (= values of properties) is not the same as in design time. The design time state is the state that exist in the .resx file (e.g. form data). The caption of the main form, document URL, and language menu state have been changed on run time. When a language change occurs Sisulizer automatically updates the static properties (e.g. those that exist on the form data) but does not change these dynamic properties. This is why you have to set them again. The following code changes the language and translates dynamic properties.</source>
          <target>当应用程序加载文档时，其状态（= 属性值）与设计时不同。设计时状态是存在于 .resx 文件中的状态（例如表单数据）。主窗体的标题、文档 URL 和语言菜单状态已在运行时更改。当语言发生变化时，Sisulizer 会自动更新静态属性（例如存在于表单数据中的那些），但不会更改这些动态属性。这就是您必须再次设置它们的原因。以下代码更改语言并翻译动态属性。</target>
        </trans-unit>
        <trans-unit>
          <source>When Sisulizer writes localized XLIFF files it replaces the &amp;lt;target&amp;gt; element data with data from Sisulizer project and changes the target language of the XLIFF to the current build language. If the file does not contains a &amp;lt;target&amp;gt; element Sisulizer adds it. As a result you will have as many copies of the original XLIFF files as you have languages in the Sisulizer project.</source>
          <target>当 Sisulizer 写入本地化的 XLIFF 文件时，它会用来自 Sisulizer 项目的数据替换 &amp;lt;target&amp;gt; 元素数据，并将 XLIFF 的目标语言更改为当前构建语言。如果文件不包含 &amp;lt;target&amp;gt; 元素，则 Sisulizer 会添加它。因此，您将拥有与 Sisulizer 项目中的语言一样多的原始 XLIFF 文件副本。</target>
        </trans-unit>
        <trans-unit>
          <source>This dialog shows  methods that you can use to translate your project. You can &lt;a href=&quot;WorkingWithTranslationSheet.htm&quot;&gt;translate  project manually&lt;/a&gt;, you can &lt;a href=&quot;ImportingData.htm&quot;&gt;import translations&lt;/a&gt;, or you can &lt;a href=&quot;Exchanging.htm&quot;&gt;send project to a translator&lt;/a&gt;. You can also use external tool like &lt;a href=&quot;TranslationEngines.htm&quot;&gt;machine translators&lt;/a&gt; and &lt;a href=&quot;SpellChecking.htm&quot;&gt;spell checkers&lt;/a&gt; to translate and edit your projects. Some tools are included in  Sisulizer setup. Some tools are free to download and use. Some tools must be purchased.</source>
          <target>此对话框显示可用于翻译项目的方法。您可以&lt;a href=&quot;WorkingWithTranslationSheet.htm&quot;&gt;手动翻译项目&lt;/a&gt;，可以&lt;a href=&quot;ImportingData.htm&quot;&gt;导入翻译&lt;/a&gt;，也可以&lt;a href=&quot;Exchanging.htm&quot;&gt;将项目发送给翻译人员&lt;/a&gt;。您还可以使用&lt;a href=&quot;TranslationEngines.htm&quot;&gt;机器翻译器&lt;/a&gt;和&lt;a href=&quot;SpellChecking.htm&quot;&gt;拼写检查器&lt;/a&gt;等外部工具来翻译和编辑您的项目。 Sisulizer 设置中包含一些工具。有些工具可以免费下载和使用。必须购买一些工具。</target>
        </trans-unit>
        <trans-unit>
          <source>In Windows MS Shell Dlg 2 is a generic font. MS Shell Dlg 2 is the standard user interface font of Windows. You should use it always when writing applications. If an application use MS Shell Dlg 2 Windows will map the font to actual font on runtime. This mapping depends on the version and language of your operating system. On English Windows XP it is Tahoma. On Simplified Chinese XP it is Simsun. Using MS Shell Dlg 2 always ensures that the font of your application uses the default user interface font of the target operating system. You can check the current value by using the registry editor and opening&amp;quot;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows&amp;nbsp;NT\CurrentVersion\FontSubstitutes&amp;quot; key.</source>
          <target>在 Windows MS Shell Dlg 2 中是一种通用字体。 MS Shell Dlg 2 是 Windows 的标准用户界面字体。您应该在编写应用程序时始终使用它。如果应用程序使用 MS Shell Dlg 2，Windows 将在运行时将字体映射到实际字体。此映射取决于操作系统的版本和语言。在英文 Windows XP 上，它是 Tahoma。在简体中文 XP 上是 Simsun。使用 MS Shell Dlg 2 始终确保应用程序的字体使用目标操作系统的默认用户界面字体。您可以通过使用注册表编辑器并打开“HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\FontSubstitutes”项来检查当前值。</target>
        </trans-unit>
        <trans-unit>
          <source>Import only strings</source>
          <target>仅导入字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Array of bytes</source>
          <target>字节数组</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the grid size. Possible values are:</source>
          <target>指定网格大小。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>If checked white space characters are removed between the separator character (=) and the value. For example</source>
          <target>如果在分隔符 (=) 和值之间删除选中的空白字符。例如</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the target language. For example the folloiwng XLIFF file use Finnish as target language:</source>
          <target>指定目标语言。例如以下 XLIFF 文件使用芬兰语作为目标语言：</target>
        </trans-unit>
        <trans-unit>
          <source>Translates list items of TListView control and derived.</source>
          <target>翻译 TListView 控件和派生的列表项。</target>
        </trans-unit>
        <trans-unit>
          <source>Click &lt;em&gt;Check all&lt;/em&gt; to check all sections. Click &lt;em&gt;Uncheck all&lt;/em&gt; to clear all selections. Click &lt;em&gt;Show file&lt;/em&gt; to view the file. Click &lt;em&gt;Import&lt;/em&gt; to import selected keys from a file. Click &lt;em&gt;Export&lt;/em&gt; to export the selected keys to a file.</source>
          <target>单击“&lt;em&gt;全部&lt;/em&gt;检查”以检查所有部分。单击&lt;em&gt;取消全部选中&lt;/em&gt;以清除所有选择。单击&lt;em&gt;显示文件&lt;/em&gt;以查看文件。单击&lt;em&gt;导入&lt;/em&gt;以从文件导入选定的密钥。单击&lt;em&gt;导出&lt;/em&gt;将选定的密钥&lt;em&gt;导出&lt;/em&gt;到文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Automatically selects keyboard by language</source>
          <target>按语言自动选择键盘</target>
        </trans-unit>
        <trans-unit>
          <source>The following paragraphs contain additional information about file formats where more that one file format share the same file extension or there existing two or more ways to import data from the file.</source>
          <target>以下段落包含有关文件格式的附加信息，其中多个文件格式共享相同的文件扩展名，或者存在两种或多种从文件导入数据的方法。</target>
        </trans-unit>
        <trans-unit>
          <source>Enclose characters</source>
          <target>包含字符</target>
        </trans-unit>
        <trans-unit>
          <source>Support for server based databases (e.g.  MySQL or SQL Server)</source>
          <target>支持基于服务器的数据库（例如 MySQL 或 SQL Server）</target>
        </trans-unit>
        <trans-unit>
          <source>Language and encoding list</source>
          <target>语言和编码列表</target>
        </trans-unit>
        <trans-unit>
          <source>If checked heights and widths of visual components can be reduced compared to the original values.</source>
          <target>如果检查的视觉组件的高度和宽度与原始值相比可以减少。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the parameters that are passed to the application when it is run. This value can contain the &lt;a href=&quot;LanguageCodeVariables.htm&quot;&gt;file and language code parameters&lt;/a&gt;.</source>
          <target>指定运行时传递给应用程序的参数。该值可以包含&lt;a href=&quot;LanguageCodeVariables.htm&quot;&gt;文件和语言代码参数&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Current view</source>
          <target>目前来看</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the system langages and the default languages</source>
          <target>指定系统语言和默认语言</target>
        </trans-unit>
        <trans-unit>
          <source>Uncheck &lt;em&gt;Use proxy settings&lt;/em&gt; in order to ignore proxy settings. When unchecked Sisulizer does not use any proxy setting when accessing Internet.</source>
          <target>取消选中&lt;em&gt;使用代理设置&lt;/em&gt;以忽略代理设置。如果未选中 Sisulizer 在访问 Internet 时不使用任何代理设置。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies a affixes definition file. This file usually has the same name as the dictionary file but has .aff file extension.</source>
          <target>指定词缀定义文件。此文件通常与字典文件同名，但具有 .aff 文件扩展名。</target>
        </trans-unit>
        <trans-unit>
          <source>Variable is replaced with the fixed name of the file or original file extension without period (if the file does not have a fixed name).&lt;br&gt;
        &lt;code&gt;C:\MyFiles\Sample.exe -&amp;gt; MyName&lt;/code&gt;&lt;br&gt;
        Fixed name is a name determined by the original platform and it can not be fixed (e.g. .NET specifies assembly name in the project file and that name must be used in order to enable satellite assembly file).</source>
          <target>变量替换为文件的固定名称或原始文件扩展名，不带句点（如果文件没有固定名称）。&lt;br&gt; &lt;code&gt;C:\MyFiles\Sample.exe -&amp;gt; MyName&lt;/code&gt;&lt;br&gt;固定名称是由原始平台确定的名称，不能固定（例如.NET 在项目文件中指定程序集名称，必须使用该名称才能启用附属程序集文件）。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies if visual source code editor is displayed or not. Uncheck this is you do not want the translator see your source code.</source>
          <target>指定是否显示可视化源代码编辑器。取消选中这是您不希望翻译人员看到您的源代码。</target>
        </trans-unit>
        <trans-unit>
          <source>Export only the first instance of each duplicated strings. This means that first string of each duplicate group is exported. All other strings in the same group will be skipped.</source>
          <target>仅导出每个重复字符串的第一个实例。这意味着导出每个重复组的第一个字符串。将跳过同一组中的所有其他字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Plural forms</source>
          <target>复数形式</target>
        </trans-unit>
        <trans-unit>
          <source>Write max chars</source>
          <target>写入最大字符</target>
        </trans-unit>
        <trans-unit>
          <source>Creating localized files</source>
          <target>创建本地化文件</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the minimum translation status that is accepted to the output files. Sisulizer writes all those translations to the output file that have translation status this or higher.</source>
          <target>指定输出文件接受的最低翻译状态。 Sisulizer 将所有这些翻译写入具有此或更高翻译状态的输出文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Assembly version</source>
          <target>组装版</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to enter the requested value.</source>
          <target>使用此对话框输入请求的值。</target>
        </trans-unit>
        <trans-unit>
          <source>Generally Sisulizer does not need .NET framework or SDK. However if you want to create localized assemblies and on certain other situations one or both are needed.</source>
          <target>通常 Sisulizer 不需要 .NET 框架或 SDK。但是，如果您想创建本地化程序集，并且在某些其他情况下需要其中之一或两者。</target>
        </trans-unit>
        <trans-unit>
          <source>Current node</source>
          <target>当前节点</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;value&lt;/em&gt; element is checked and &lt;em&gt;localize&lt;/em&gt; attribute is set to be a localize attribute. You can check an element by double clicking it and you can change the attribute type by right clicking it.</source>
          <target>检查&lt;em&gt;value&lt;/em&gt;元素并将&lt;em&gt;localize&lt;/em&gt;属性设置为 localize 属性。您可以通过双击一个元素来检查它，您可以通过右键单击它来更改属性类型。</target>
        </trans-unit>
        <trans-unit>
          <source>Save project before run</source>
          <target>运行前保存项目</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure WPF (.NET) settings.</source>
          <target>使用此对话框配置 WPF (.NET) 设置。</target>
        </trans-unit>
        <trans-unit>
          <source>JavaScript/TypeScript source code</source>
          <target>JavaScript/TypeScript 源代码</target>
        </trans-unit>
        <trans-unit>
          <source>TLaTranslator call LaBeforeTranslate event every time before assigning a value to a property. The event contains cancel parameter. It the event set this to True TLaTranslator does not set the property value but remains it intact. The following lines contains a sample event that disables translations of Label2 component.</source>
          <target>TLaTranslator 每次在为属性赋值之前都会调用 LaBeforeTranslate 事件。该事件包含取消参数。如果事件将此设置为 True TLaTranslator 不会设置属性值但保持不变。以下几行包含禁用 Label2 组件转换的示例事件。</target>
        </trans-unit>
        <trans-unit>
          <source>If your package type is Free Edition setup you can select no languages. In that case Sisulizer will make Free Edition setup that contains no project, just Free Edition setup. Normally there is not need to create Free Edition only setup because translator can download the setup from Sisulizer&#x27;s home page. However the home page always contains the most recent version. If you just want to deploy the same version as you have to your translator without any projects make a package that contains no languages.</source>
          <target>如果您的软件包类型是免费版设置，则您不能选择任何语言。在这种情况下，Sisulizer 将制作不包含任何项目的免费版设置，只包含免费版设置。通常不需要创建仅免费版的安装程序，因为翻译人员可以从 Sisulizer 的主页下载安装程序。但是，主页始终包含最新版本。如果您只想在没有任何项目的情况下将与您拥有的版本相同的版本部署到您的翻译器，请制作一个不包含任何语言的包。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer creates localized item before run if the project has been modified since the last build process.</source>
          <target>如果选中 Sisulizer 在运行前创建本地化项目，如果项目自上次构建过程以来已被修改。</target>
        </trans-unit>
        <trans-unit>
          <source>Length in Characters Validation</source>
          <target>字符长度验证</target>
        </trans-unit>
        <trans-unit>
          <source>Generates an error if two or more controls share the same hotkey letter.</source>
          <target>如果两个或多个控件共享相同的热键字母，则会生成错误。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer combines  Run, Span and text elements that are sub elements of TextBlock. For example if we have</source>
          <target>如果选中 Sisulizer，则组合了作为 TextBlock 子元素的 Run、Span 和 text 元素。例如，如果我们有</target>
        </trans-unit>
        <trans-unit>
          <source>By default each item in the language list correspond to the language of the project. For example if you have English, German and Japanese in the project the language list contains these items. When exporting to TMX Sisulizer writes the language codes to the TMX file. Normally it is all right to use the language codes matching to the project languages. In our example it would be</source>
          <target>默认情况下，语言列表中的每一项都对应于项目的语言。例如，如果项目中有英语、德语和日语，则语言列表包含这些项目。导出到 TMX 时，Sisulizer 将语言代码写入 TMX 文件。通常使用与项目语言相匹配的语言代码就可以了。在我们的例子中，它将是</target>
        </trans-unit>
        <trans-unit>
          <source>Visual Studio .NET project file (.csproj, .vbproj, .oxygene) containing managed code project (e.g. C#, Visual Basic or Delphi Prism)</source>
          <target>包含托管代码项目（例如 C#、Visual Basic 或 Delphi Prism）的 Visual Studio .NET 项目文件（.csproj、.vbproj、.oxygene）</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer sets the keyboard layout (if any) to match the language being edited.</source>
          <target>如果选中 Sisulizer 设置键盘布局（如果有）以匹配正在编辑的语言。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;a href=&quot;http://translate.google.com/&quot; target=&quot;_blank&quot;&gt;Google Translate&lt;/a&gt; is a &lt;a href=&quot;TranslationEngines.htm#MachineTranslator&quot;&gt;machine translator&lt;/a&gt; provided by Google. Google Translate supports all major languages.</source>
          <target>&lt;a href=&quot;http://translate.google.com/&quot; target=&quot;_blank&quot;&gt;谷歌翻译&lt;/a&gt;是谷歌提供的&lt;a href=&quot;TranslationEngines.htm#MachineTranslator&quot;&gt;机器翻译器&lt;/a&gt;。谷歌翻译支持所有主要语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure Java settings.</source>
          <target>使用此对话框配置 Java 设置。</target>
        </trans-unit>
        <trans-unit>
          <source>Strings are quoted using double quotion marks.&lt;br&gt;For example &lt;code&gt;Hello World&lt;/code&gt; becomes to &lt;code&gt;&amp;quot;Hello World&amp;quot;&lt;/code&gt;.</source>
          <target>字符串使用双引号引起来。&lt;br&gt;例如&lt;code&gt;Hello World&lt;/code&gt;变成&lt;code&gt;&amp;quot;Hello World&amp;quot;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit>
          <source>Write marked row</source>
          <target>写入标记行</target>
        </trans-unit>
        <trans-unit>
          <source>Imports data from a PO file (.po).</source>
          <target>从 PO 文件 (.po) 导入数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Project Wizard - Visual Studio .NET project file</source>
          <target>项目向导 - Visual Studio .NET 项目文件</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the PO file (.pot or .po) that contains the source strings. Select also the language of the source file.</source>
          <target>指定包含源字符串的 PO 文件（.pot 或 .po）。还要选择源文件的语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Set the language only when writing bi-directional resource</source>
          <target>仅在写入双向资源时设置语言</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks if a component has been resized from it&#x27;s original size.</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查组件是否已从其原始大小调整大小。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Neutral Chinese coding&lt;/em&gt; combo is used to select what coding is used.</source>
          <target>&lt;em&gt;中性中文编码&lt;/em&gt;组合用于选择使用什么编码。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer automatically updates the translations of all duplicate strings.</source>
          <target>Sisulizer 自动更新所有重复字符串的翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Localized application</source>
          <target>本地化应用</target>
        </trans-unit>
        <trans-unit>
          <source>Learn more about &lt;a href=&quot;ImportExistingTranslations.htm&quot;&gt;importing existing translations&lt;/a&gt;.</source>
          <target>了解有关&lt;a href=&quot;ImportExistingTranslations.htm&quot;&gt;导入现有翻译的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure output pane settings.</source>
          <target>使用此对话框配置输出窗格设置。</target>
        </trans-unit>
        <trans-unit>
          <source>Add this unit to your project to translate list items of TListView control and derived.</source>
          <target>将此单元添加到您的项目中以翻译 TListView 控件和派生的列表项。</target>
        </trans-unit>
        <trans-unit>
          <source>Record size byte</source>
          <target>记录大小字节</target>
        </trans-unit>
        <trans-unit>
          <source>Multilingual applications</source>
          <target>多语言应用</target>
        </trans-unit>
        <trans-unit>
          <source>You don&#x27;t have .NET SDK installed.</source>
          <target>您没有安装 .NET SDK。</target>
        </trans-unit>
        <trans-unit>
          <source>As you can see only the selected string have been replaced. Everything else (e.g. key and section names) are left unchanged. You can control what elements to localize by using &lt;a href=&quot;IniSourceDialogKeysSheet.htm&quot;&gt;Keys sheet&lt;/a&gt; of &lt;a href=&quot;IniSourceDialog.htm&quot;&gt;Ini dialog&lt;/a&gt;.</source>
          <target>如您所见，只有选定的字符串已被替换。其他所有内容（例如键名和节名）保持不变。您可以使用&lt;a href=&quot;IniSourceDialog.htm&quot;&gt;Ini 对话框的&lt;/a&gt;&lt;a href=&quot;IniSourceDialogKeysSheet.htm&quot;&gt;Keys 表&lt;/a&gt;来控制要本地化的元素。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer creates one &amp;lt;projectname&amp;gt;.app sub directory. It contains application file (e.g. Project.), resource library files (e.g. Project1.de and Project1.fr) and resource files in Contents sub directory.&lt;br&gt;
    The output directory contains support for several languages.</source>
          <target>Sisulizer 创建一个 &amp;lt;projectname&amp;gt;.app 子目录。它包含应用程序文件（如 Project.）、资源库文件（如 Project1.de 和 Project1.fr）和 Contents 子目录中的资源文件。&lt;br&gt;输出目录包含对多种语言的支持。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked wild cards such as * and ? can be used in the search strings.&lt;br&gt;
      For example, if you search for &lt;em&gt;auto*&lt;/em&gt;, you will not find &lt;em&gt;automobile&lt;/em&gt;.</source>
          <target>如果检查通配符，例如 * 和 ?可用于搜索字符串。&lt;br&gt;例如，如果您搜索&lt;em&gt;auto*&lt;/em&gt; ，您将找不到&lt;em&gt;汽车&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to set the import options for project. Some of the options may be hidden depending on the import type.</source>
          <target>使用此表设置项目的导入选项。根据导入类型，某些选项可能会隐藏。</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks if  a control is overlapping another control and possibly hiding parts of the control. For example text  is not under the text field.</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查控件是否与另一个控件重叠并可能隐藏控件的某些部分。例如文本不在文本字段下。</target>
        </trans-unit>
        <trans-unit>
          <source>If the import status is equal or higher than the current status</source>
          <target>如果导入状态等于或高于当前状态</target>
        </trans-unit>
        <trans-unit>
          <source>If you want to modify the value to be set change the value in the newValue parameter. If you want to disable translation of the property set cancel to True. You register the event my assigning it to global LaBeforeTranslate variable. A good place for that is the initialization part of main unit.</source>
          <target>如果要修改要设置的值，请​​更改 newValue 参数中的值。如果要禁用属性设置取消转换为 True。您注册事件我将其分配给全局 LaBeforeTranslate 变量。一个很好的地方是主单元的初始化部分。</target>
        </trans-unit>
        <trans-unit>
          <source>Enabled main view items</source>
          <target>启用主视图项</target>
        </trans-unit>
        <trans-unit>
          <source>Scan project</source>
          <target>扫描项目</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies what  enclose character are used. This is enabled when the &lt;em&gt; Enclose&lt;/em&gt; check box in the &lt;em&gt;Methods&lt;/em&gt; group is checked. Possible characters are:</source>
          <target>指定使用什么包围字符。检查&lt;em&gt;方法&lt;/em&gt;组中的&lt;em&gt;附件&lt;/em&gt;复选框后启用了这一点。可能的字符有：</target>
        </trans-unit>
        <trans-unit>
          <source>Shows &lt;a href=&quot;RulesDialog.htm&quot;&gt;Components dialogs&lt;/a&gt; that lets you edit the components settings.</source>
          <target>显示可让您编辑组件设置的&lt;a href=&quot;RulesDialog.htm&quot;&gt;组件对话框&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the language that is used when writing the original value. For example:</source>
          <target>指定写入原始值时使用的语言。例如：</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the origin of the find. This is the starting point of the find operation. Possible values are:</source>
          <target>指定查找的来源。这是查找操作的起点。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>If checked toolbar is visible. If unchecked toolbar is not shown.</source>
          <target>如果选中的工具栏可见。如果未显示未选中的工具栏。</target>
        </trans-unit>
        <trans-unit>
          <source>Some Visual Basic applications use different approach. They uses Load event to get the string values from the string resource and assing the values to the user interface elements. When localizing such an application use the &lt;a href=&quot;#Binary&quot;&gt;binary localization&lt;/a&gt; method. &amp;lt;sl&amp;gt;\VB\Binary\Converter contains a sample applications using the binary localization. However binary localization is not the recommended way to localize Visual Basic applications. use it only if your Visual Basic application already uses resource strings.</source>
          <target>一些 Visual Basic 应用程序使用不同的方法。他们使用 Load 事件从字符串资源中获取字符串值并将这些值分配给用户界面元素。本地化此类应用程序时，请使用&lt;a href=&quot;#Binary&quot;&gt;二进制本地化&lt;/a&gt;方法。 &amp;lt;sl&amp;gt;\VB\Binary\Converter 包含使用二进制本地化的示例应用程序。但是，二进制本地化不是本地化 Visual Basic 应用程序的推荐方法。仅当您的 Visual Basic 应用程序已使用资源字符串时才使用它。</target>
        </trans-unit>
        <trans-unit>
          <source>Password, Retype password</source>
          <target>密码，重新输入密码</target>
        </trans-unit>
        <trans-unit>
          <source>Some Sisulizer  editions do not contains all features. Anyway by default all the features are visible and you can choose a menu that starts the operation of the feature. If you choose such a feature  Sisulizer shows this message box. If you want to use the feature you have to upgrade your Sisulizer editon. In order to do that click &lt;em&gt;Buy an upgrade online&lt;/em&gt; to purchase an upgrade, enter the license key and finally click OK to change the edition. Click Cancel to abort to operation you started.</source>
          <target>某些 Sisulizer 版本不包含所有功能。无论如何，默认情况下所有功能都是可见的，您可以选择一个菜单来启动该功能的操作。如果您选择此类功能，Sisulizer 将显示此消息框。如果您想使用该功能，您必须升级您的 Sisulizer 版本。为此，请单击&lt;em&gt;在线&lt;/em&gt;购买&lt;em&gt;升级&lt;/em&gt;以购买升级，输入许可证密钥，最后单击确定更改版本。单击取消以中止您开始的操作。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer has to create new row ids when it adds localized rows. By default Sisulizer uses the next available integer number for row ids. If you want to use some other id or your row id is not an integer value you have two choices. Either you enter a SQL statement that returns a new row id or you write a stored procedure that returns a new row id. To configure row id generation right click the table name in the project tree (not Database source dialog) and choose Properties.</source>
          <target>Sisulizer 在添加本地化行时必须创建新的行 ID。默认情况下，Sisulizer 使用下一个可用的整数作为行 ID。如果您想使用其他 id 或您的行 id 不是整数值，您有两种选择。要么输入返回新行 ID 的 SQL 语句，要么编写返回新行 ID 的存储过程。要配置行 ID 生成，请右键单击项目树（不是数据库源对话框）中的表名，然后选择属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Item index is the string context. Each item (code or string) has an index value that is a counting integer values starting from 0.&lt;br&gt;
      Compared to String value method this method creates own row for each instance of the same string letting you to translate them in a different way.&lt;br&gt;
      This is the default value.</source>
          <target>项目索引是字符串上下文。每个项目（代码或字符串）都有一个索引值，它是从 0 开始的计数整数值。&lt;br&gt;与字符串值方法相比，此方法为同一字符串的每个实例创建自己的行，让您以不同的方式翻译它们。&lt;br&gt;这是默认值。</target>
        </trans-unit>
        <trans-unit>
          <source>The best way to localize the menus and toolbars using these commands is to add the header attribute to the item. This makes framework to use the text of in the attribute instead of the default string in the command. The string will also appear to Sisulizer project so it can be localized. For example if you have following XAML line:</source>
          <target>使用这些命令本地化菜单和工具栏的最佳方法是向项目添加标题属性。这使得框架使用属性中的文本而不是命令中的默认字符串。该字符串也将出现在 Sisulizer 项目中，因此可以对其进行本地化。例如，如果您有以下 XAML 行：</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer creates localized resource DLL files. They are resource-only DLLs that contains the same resource data as the original file but the resource data has been localized to the target language.&lt;br&gt;&lt;strong&gt;Delphi and C++Builder (VCL)&lt;/strong&gt;&lt;br&gt;Use &lt;a href=&quot;RuntimeLanguageChangeVcl.htm&quot;&gt;VCL&#x27;s resource files&lt;/a&gt; and Sisulizer VCL functions to enable run-time language switch.&lt;br&gt;For example if the original file is MySample.exe and the project contains German and Japanese, Sisulizer creates Sample.DE and Sample.JA resource DLL files.&lt;br&gt;&lt;strong&gt;Visual C++ (MFC)&lt;/strong&gt;&lt;br&gt;Use &lt;a href=&quot;RuntimeLanguageChangeOther.htm&quot;&gt;MFC&#x27;s resource files&lt;/a&gt; to enable initial language choose.&lt;br&gt;For example if the original file is MySample.exe and the project contains German and Japanese, Sisulizer creates SampleDE.dll and SampleJA.dll resource DLL files.</source>
          <target>如果选中 Sisulizer，则会创建本地化的资源 DLL 文件。它们是纯资源 DLL，包含与原始文件相同的资源数据，但资源数据已本地化为目标语言。&lt;br&gt; &lt;strong&gt;Delphi 和 C++Builder (VCL)&lt;/strong&gt;&lt;br&gt;使用&lt;a href=&quot;RuntimeLanguageChangeVcl.htm&quot;&gt;VCL 的资源文件&lt;/a&gt;和 Sisulizer VCL 函数来启用运行时语言切换。&lt;br&gt;例如，如果原始文件是 MySample.exe 并且项目包含德语和日语，则 Sisulizer 会创建 Sample.DE 和 Sample.JA 资源 DLL 文件。&lt;br&gt; &lt;strong&gt;Visual C++ (MFC)&lt;/strong&gt;&lt;br&gt;使用&lt;a href=&quot;RuntimeLanguageChangeOther.htm&quot;&gt;MFC 的资源文件&lt;/a&gt;来启用初始语言选择。&lt;br&gt;例如，如果原始文件是 MySample.exe 并且项目包含德语和日语，则 Sisulizer 会创建 SampleDE.dll 和 SampleJA.dll 资源 DLL 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>.NET version</source>
          <target>.NET 版本</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer does not contain resource DLL extraction function for MFC. You have to write you own code to extract DLLs from resource to local files.</source>
          <target>Sisulizer 不包含 MFC 的资源 DLL 提取功能。您必须编写自己的代码才能将 DLL 从资源中提取到本地文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Compare original values when locating a target row. The item is imported to all rows where the original value equals to the original value of the import item.</source>
          <target>定位目标行时比较原始值。项目被导入到原始值等于导入项目的原始值的所有行。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the end party of the component classname.</source>
          <target>指定组件类名的结束方。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure node pane settings.</source>
          <target>使用此对话框配置节点窗格设置。</target>
        </trans-unit>
        <trans-unit>
          <source>Some components contain string properties that should not be localized. For example most database components contain table name, SQL statements or connection strings. You can disable scanning of these properties by adding them to the properties list as an excluded property.</source>
          <target>某些组件包含不应本地化的字符串属性。例如，大多数数据库组件包含表名、SQL 语句或连接字符串。您可以通过将这些属性作为排除属性添加到属性列表来禁用对这些属性的扫描。</target>
        </trans-unit>
        <trans-unit>
          <source>Java archive file</source>
          <target>Java归档文件</target>
        </trans-unit>
        <trans-unit>
          <source>Zooms in the current item in the editor.</source>
          <target>放大编辑器中的当前项目。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer compiler the localized project to an EXE file.</source>
          <target>如果选中 Sisulizer，则将本地化项目编译为 EXE 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Database type</source>
          <target>数据库类型</target>
        </trans-unit>
        <trans-unit>
          <source>ADO/ODBC compatible</source>
          <target>ADO/ODBC 兼容</target>
        </trans-unit>
        <trans-unit>
          <source>Context column</source>
          <target>上下文列</target>
        </trans-unit>
        <trans-unit>
          <source>You can install multiple Sisulizer on a single computer. When installing second or later Sisulizer make sure that you choose &lt;em&gt;Make a fresh installation&lt;/em&gt; on the &lt;em&gt;Existing Installations&lt;/em&gt; sheet of Sisulizer setup. Also make sure that the installation directory is different from the ones already installed.</source>
          <target>您可以在一台计算机上安装多个 Sisulizer。安装第二个或更高版本的 Sisulizer 时，&lt;em&gt;请确保&lt;/em&gt;在 Sisulizer 安装程序的&lt;em&gt;现有安装&lt;/em&gt;表上选择全新安装。还要确保安装目录与已安装的目录不同。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to enter the string value.</source>
          <target>使用此对话框输入字符串值。</target>
        </trans-unit>
        <trans-unit>
          <source>A select rows dialog is shown that contains list of all duplicate strings. the user can select which one to update.</source>
          <target>将显示一个选择行对话框，其中包含所有重复字符串的列表。用户可以选择更新哪一个。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the first two lines of the selected file. Click ... to show the selected file in the default viewer.</source>
          <target>显示所选文件的前两行。单击 ... 以在默认查看器中显示所选文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Set or clear current row with &lt;a href=&quot;WorkingWithTranslationSheet.htm#Marked&quot;&gt;Marked&lt;/a&gt; state.</source>
          <target>设置或清除&lt;a href=&quot;WorkingWithTranslationSheet.htm#Marked&quot;&gt;标记&lt;/a&gt;状态的当前行。</target>
        </trans-unit>
        <trans-unit>
          <source>Write always original</source>
          <target>永远写原创</target>
        </trans-unit>
        <trans-unit>
          <source>Sometimes you don&#x27;t want to remove or exclude a row but you just want to disable translating of the row. To do that you can mark any row as &lt;em&gt;Do not translate&lt;/em&gt;. Such a row is shown on the sheet but can not be edited. Use Row | Do Not Translate menu to mark row as &lt;em&gt;Do not translate&lt;/em&gt;. If row has been set as &lt;em&gt;Do not translate&lt;/em&gt; it has &lt;img src=&quot;Images/DoNotTranslate.png&quot;&gt; image on flags column on the left side of the sheet.</source>
          <target>有时您不想删除或排除一行，而只想禁用该行的翻译。为此，您可以将任何行标记为&lt;em&gt;Do not translate&lt;/em&gt; 。此类行显示在工作表上但无法编辑。使用行 |不翻译菜单将行标记为&lt;em&gt;不翻译&lt;/em&gt;。如果行已设置为&lt;em&gt;不翻译&lt;/em&gt;它有&lt;img src=&quot;Images/DoNotTranslate.png&quot;&gt;工作表左侧的标志列上的图像。</target>
        </trans-unit>
        <trans-unit>
          <source>Let&#x27;s have an example. We have a string resource item that contains the following XML data:</source>
          <target>让我们举个例子。我们有一个包含以下 XML 数据的字符串资源项：</target>
        </trans-unit>
        <trans-unit>
          <source>If checked each section of the file is show as a corresponding node in the project tree. If unchecked there will be only one node in the project tree for whole file.</source>
          <target>如果选中，文件的每个部分都显示为项目树中的相应节点。如果取消选中，整个文件的项目树中将只有一个节点。</target>
        </trans-unit>
        <trans-unit>
          <source>User account</source>
          <target>用户帐号</target>
        </trans-unit>
        <trans-unit>
          <source>Use the Options sheet of VCL source dialog. Right click your application on the project tree and choose Properties. Options sheet contains &lt;em&gt;Widestring (Unicode) usage&lt;/em&gt; part.</source>
          <target>使用 VCL 源对话框的选项表。在项目树上右键单击您的应用程序并选择属性。选项表包含&lt;em&gt;宽字符串 (Unicode) 使用&lt;/em&gt;部分。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can encrypt the exchange package with a password. Type the password in the Password and Retype password fields. If the package is password protected it can not be opened or installed without the password.</source>
          <target>Sisulizer 可以使用密码对交换包进行加密。在密码和重新输入密码字段中输入密码。如果软件包受密码保护，则没有密码将无法打开或安装。</target>
        </trans-unit>
        <trans-unit>
          <source>When Sisulizer reads the original &lt;a href=&quot;Sources.htm&quot;&gt;sources&lt;/a&gt; it extracts all the resource data that has been selected to be scanned. Sisulizer processes the resource data and adds the rows and visual elements if needed. Sometimes there are rows visible that you don&#x27;t really want to have there. Either they need not the be translated or they are not translated at this point. Sisulizer has many ways to exclude data from the projects.</source>
          <target>当 Sisulizer 读取原始&lt;a href=&quot;Sources.htm&quot;&gt;资源时，&lt;/a&gt;它会提取所有已选择进行扫描的资源数据。 Sisulizer 处理资源数据并根据需要添加行和视觉元素。有时，有些行是您不想看到的。它们要么不需要被翻译，要么在这一点上不被翻译。 Sisulizer 有很多方法可以从项目中排除数据。</target>
        </trans-unit>
        <trans-unit>
          <source>In addition of localization methods this topic contains information about the following issues:</source>
          <target>除了本地化方法之外，本主题还包含有关以下问题的信息：</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies other options.</source>
          <target>指定其他选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be a &lt;a href=&quot;WindowsLocalization.htm#VisualBasic&quot;&gt;Visual Basic form file&lt;/a&gt; (e.g. C:\Samples\Main.frm).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是&lt;a href=&quot;WindowsLocalization.htm#VisualBasic&quot;&gt;Visual Basic 表单文件&lt;/a&gt;（例如 C:\Samples\Main.frm）。</target>
        </trans-unit>
        <trans-unit>
          <source>When you run Project Wizard Sisulizer will check if there are existing translations (i.e. existing localized file). If there are Sisulizer will prompt a message box that shows the avilable languages and lets you either accept or reject importing of the existing translations.</source>
          <target>当您运行项目向导时，Sisulizer 将检查是否有现有的翻译（即现有的本地化文件）。如果有 Sisulizer 将提示一个消息框，显示可用的语言，并让您接受或拒绝现有翻译的导入。</target>
        </trans-unit>
        <trans-unit>
          <source>Creating the exchange file</source>
          <target>创建交换文件</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;a href=&quot;Validation.htm&quot;&gt;Validation&lt;/a&gt; and &lt;a href=&quot;SpellChecking.htm&quot;&gt;spell checking&lt;/a&gt;</source>
          <target>&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;和&lt;a href=&quot;SpellChecking.htm&quot;&gt;拼写检查&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;WindowsLocalization.htm&quot;&gt;Visual Basic form is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;WindowsLocalization.htm&quot;&gt;Visual Basic 窗体的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Mark inherited components</source>
          <target>标记继承的组件</target>
        </trans-unit>
        <trans-unit>
          <source>Scan inherited forms hierarchically</source>
          <target>分层扫描继承的表单</target>
        </trans-unit>
        <trans-unit>
          <source>Excludes the selected original validation error in the future.</source>
          <target>将来排除选定的原始验证错误。</target>
        </trans-unit>
        <trans-unit>
          <source>Single file</source>
          <target>单个文件</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer adds language specific part into the names of all localized resources. If unchecked Sisulizer adds culture specific part into the names of those resources that require it. The standard resource types such resources are ResX resources and XAML resources required the language part.</source>
          <target>如果选中 Sisulizer，则会将语言特定部分添加到所有本地化资源的名称中。如果未选中，Sisulizer 会将特定于文化的部分添加到需要它的那些资源的名称中。此类资源的标准资源类型是 ResX 资源和 XAML 资源所需的语言部分。</target>
        </trans-unit>
        <trans-unit>
          <source>Translation defect id</source>
          <target>翻译缺陷 ID</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be an &lt;a href=&quot;IniLocalization.htm&quot;&gt;ini file&lt;/a&gt; (e.g. C:\Samples\Sample.ini) or any orther file that uses &lt;a href=&quot;IniLocalization.htm&quot;&gt;ini format&lt;/a&gt; such as InstallShield SHL files.</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是&lt;a href=&quot;IniLocalization.htm&quot;&gt;ini 文件&lt;/a&gt;（例如 C:\Samples\Sample.ini）或任何其他使用&lt;a href=&quot;IniLocalization.htm&quot;&gt;ini 格式的&lt;/a&gt;文件，例如 InstallShield SHL 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Resizes the group of components to the height or width of the smallest selected component.</source>
          <target>将组件组的大小调整为最小选定组件的高度或宽度。</target>
        </trans-unit>
        <trans-unit>
          <source>The easiest way is to limit rows that are shown on the sheet is to select a sub node of the project. On the left side of Sisulizer main view there is a project tree that contains all the &lt;a href=&quot;Sources.htm&quot;&gt;sources&lt;/a&gt; that you have added to the project. By default the root node is selected. This makes the sheet to show all rows of all sources. You can select a single source or a sub node of a source. Every time you select a new node Sisulizer updates the sheet to show rows that belong to that node only. If a node has a visual editor (e.g. dialog node) Sisulizer shows visual editor above the translation sheet. &lt;a href=&quot;MainFormOpen.htm#VisualEditor&quot;&gt;Visual editor&lt;/a&gt; shows the selected items visually using the translations given in the sheet.</source>
          <target>限制工作表上显示的行的最简单方法是选择项目的子节点。在 Sisulizer 主视图的左侧有一个项目树，其中包含您添加到项目中的所有&lt;a href=&quot;Sources.htm&quot;&gt;源&lt;/a&gt;。默认情况下选择根节点。这使工作表显示所有来源的所有行。您可以选择单个源或源的子节点。每次选择新节点时，Sisulizer 都会更新工作表以仅显示属于该节点的行。如果节点具有可视化编辑器（例如对话节点），Sisulizer 在翻译表上方显示可视化编辑器。&lt;a href=&quot;MainFormOpen.htm#VisualEditor&quot;&gt;可视化编辑器&lt;/a&gt;使用工作表中给出的翻译直观地显示所选项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Any file where the file format and file extension matches the import file.</source>
          <target>文件格式和文件扩展名与导入文件匹配的任何文件。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the selected line is not highligthed when the pane does not have focus.</source>
          <target>如果选中，则在窗格没有焦点时不会突出显示所选行。</target>
        </trans-unit>
        <trans-unit>
          <source>We have the following rows in the Sisulizer project.</source>
          <target>我们在 Sisulizer 项目中有以下几行。</target>
        </trans-unit>
        <trans-unit>
          <source>Only in the header fields of  binary files</source>
          <target>仅在二进制文件的头字段中</target>
        </trans-unit>
        <trans-unit>
          <source>You can use wild cards in the exclude files. For example adding D:\MyFiles\Sample\Form*.resx will exclude all .resx files in D:\MyFiles\Sample directory starting with Form.</source>
          <target>您可以在排除文件中使用通配符。例如，添加 D:\MyFiles\Sample\Form*.resx 将排除 D:\MyFiles\Sample 目录中以 Form 开头的所有 .resx 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Scan contents</source>
          <target>扫描内容</target>
        </trans-unit>
        <trans-unit>
          <source>void TForm1::FormCreate(TObject *Sender)
{
  Caption = &amp;quot;&lt;strong&gt;こんにちは&lt;/strong&gt;&amp;quot;; // Form caption
  Label1-&amp;gt;Caption = &amp;quot;&lt;strong&gt;お元気ですか&lt;/strong&gt;&amp;quot;;
}</source>
          <target>void TForm1 :: FormCreate (TObject * Sender) {Caption = &amp;quot; &lt;strong&gt;Hello&lt;/strong&gt; &amp;quot;; // 表单标题 Label1-&amp;gt; Caption = &amp;quot; &lt;strong&gt;How are you?&lt;/strong&gt; &amp;quot;;}</target>
        </trans-unit>
        <trans-unit>
          <source>The following image contain original non sorted table of contents that contains alphabet based sub folders. The name of the each sub folder is only one character. Each sub folder contains pages that start with the same name as the folder name.</source>
          <target>下图包含原始未排序的目录，其中包含基于字母的子文件夹。每个子文件夹的名称只有一个字符。每个子文件夹都包含以与文件夹名称相同的名称开头的页面。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Windows code&lt;/em&gt; specifies a two-character code. It is used, for example, as a file extension when creating resource DLL&#x27;s.</source>
          <target>&lt;em&gt;Windows 代码&lt;/em&gt;指定两个字符的代码。例如，它在创建资源 DLL 时用作文件扩展名。</target>
        </trans-unit>
        <trans-unit>
          <source>All duplicated strings are visible.</source>
          <target>所有重复的字符串都是可见的。</target>
        </trans-unit>
        <trans-unit>
          <source>Small icons</source>
          <target>小图标</target>
        </trans-unit>
        <trans-unit>
          <source>By default HTML files are show on default HTML browser of Windows. You can specify here a custom application that will be used to show HTML files.</source>
          <target>默认情况下，HTML 文件显示在 Windows 的默认 HTML 浏览器上。您可以在此处指定将用于显示 HTML 文件的自定义应用程序。</target>
        </trans-unit>
        <trans-unit>
          <source>To learn more about SlMake open command line prompt, go to Sisulizer directory, and type SlMake &amp;lt;taskname&amp;gt; -h. For example:</source>
          <target>要了解有关 SlMake 打开命令行提示符的更多信息，请转到 Sisulizer 目录，然后键入 SlMake &amp;lt;taskname&amp;gt; -h。例如：</target>
        </trans-unit>
        <trans-unit>
          <source>Show hints</source>
          <target>显示提示</target>
        </trans-unit>
        <trans-unit>
          <source>If checked translation comments are written to the file.</source>
          <target>如果检查的翻译注释被写入文件。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;a href=&quot;Validation.htm&quot;&gt;Validation&lt;/a&gt; feature also contains spell checking validation. Choose Validation | Validate Original or Validation | Validate Translation and check &lt;em&gt;Incorrect spelling&lt;/em&gt; in the validation list.</source>
          <target>&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;功能还包含拼写检查验证。选择验证 |验证原件或验证 |验证翻译并检查验证列表中的&lt;em&gt;拼写错误&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be a &lt;a href=&quot;WindowsLocalization.htm#Binary&quot;&gt;Windows binary file&lt;/a&gt; created by Visual Basic binary file (e.g. C:\Samples\Sample.exe).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是由 Visual Basic 二进制文件（例如 C:\Samples\Sample.exe）创建的&lt;a href=&quot;WindowsLocalization.htm#Binary&quot;&gt;Windows 二进制文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be a  &lt;a href=&quot;NetLocalization.htm#Assembly&quot;&gt;.NET assembly file&lt;/a&gt; (e.g. C:\Samples\Project.exe or C:\Samples\MyLibrary.dll).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是&lt;a href=&quot;NetLocalization.htm#Assembly&quot;&gt;.NET 程序集文件&lt;/a&gt;（例如 C:\Samples\Project.exe 或 C:\Samples\MyLibrary.dll）。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Enabled values&lt;/em&gt; contains a list of positive &lt;a href=&quot;XmlLocalizeAttribute.htm&quot;&gt;localize attribute&lt;/a&gt; values. &lt;em&gt;Disabled values&lt;/em&gt; contains a list of negative &lt;a href=&quot;XmlLocalizeAttribute.htm&quot;&gt;localize attribute&lt;/a&gt; values.</source>
          <target>&lt;em&gt;启用的值&lt;/em&gt;包含积极的&lt;a href=&quot;XmlLocalizeAttribute.htm&quot;&gt;本地化属性&lt;/a&gt;值的列表。&lt;em&gt;禁用值&lt;/em&gt;包含负&lt;a href=&quot;XmlLocalizeAttribute.htm&quot;&gt;本地化属性&lt;/a&gt;值的列表。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows or hides  &lt;a href=&quot;MainFormClose.htm#Tips&quot;&gt;Tip of the Day pane&lt;/a&gt;.</source>
          <target>显示或隐藏&lt;a href=&quot;MainFormClose.htm#Tips&quot;&gt;每日提示窗格&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Read more abut &lt;a href=&quot;../ComponentMapping.htm&quot;&gt;component mapping&lt;/a&gt;.</source>
          <target>阅读更多关于&lt;a href=&quot;../ComponentMapping.htm&quot;&gt;组件映射&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Spell checker</source>
          <target>拼写检查器</target>
        </trans-unit>
        <trans-unit>
          <source>In order to perform this only minimal changes to original application is needed. Basically you have to add one line of code that call the select language functions and you have to link Sisulizer&#x27;s library with the application. The files you need to deploy your application are the application itself, Sisulizer library and the satellite assembly files in sub directories.</source>
          <target>为了执行此操作，只需要对原始应用程序进行最少的更改。基本上，您必须添加一行调用选择语言函数的代码，并且必须将 Sisulizer 的库与应用程序链接起来。部署应用程序所需的文件是应用程序本身、Sisulizer 库和子目录中的附属程序集文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows only nontranslatable properties (e.g. Align) of   the 
  component.</source>
          <target>仅显示组件的不可翻译属性（例如对齐）。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the first row of the sheet will contains the language names.</source>
          <target>如果选中，工作表的第一行将包含语言名称。</target>
        </trans-unit>
        <trans-unit>
          <source>Selects the previous page in the page control.</source>
          <target>选择页面控件中的上一页。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Key&lt;/em&gt; specifies the user account that the Microsoft Translator  uses. If you have a category id for Microsoft Translator  enter that to &lt;em&gt;Category ID&lt;/em&gt; field. Click &lt;em&gt;Get account&lt;/em&gt; button to get your own account.  Learn more about Microsoft Translator &lt;a href=&quot;MicrosoftTranslator.htm&quot;&gt;account&lt;/a&gt;.</source>
          <target>&lt;em&gt;Key&lt;/em&gt;指定 Microsoft Translator 使用的用户帐户。如果您有 Microsoft Translator 的类别 ID，请将其输入到&lt;em&gt;类别 ID&lt;/em&gt;字段。单击&lt;em&gt;获取帐户&lt;/em&gt;按钮以获取您自己的帐户。了解有关 Microsoft Translator&lt;a href=&quot;MicrosoftTranslator.htm&quot;&gt;帐户的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Determines whether text captions are displayed on tool buttons.</source>
          <target>确定是否在工具按钮上显示文本标题。</target>
        </trans-unit>
        <trans-unit>
          <source>BOM is not used with code page based text files.</source>
          <target>BOM 不用于基于代码页的文本文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the XML file options.</source>
          <target>使用此表指定 XML 文件选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to view or edit a system country of Sisulizer. System country belongs to a system language. Country specifies a country where the language is spoken. For example English (United States) is an English system country for United States. Similarly English (United Kingdom) is an English system country for United Kingdom.</source>
          <target>使用此对话框查看或编辑 Sisulizer 的系统国家/地区。系统国家属于一种系统语言。 Country 指定使用该语言的国家/地区。例如英语（美国）是美国的英语系统国家。同样，英语（英国）是英国的英语系统国家。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Root&lt;/em&gt; is the default root directory for files.</source>
          <target>&lt;em&gt;Root&lt;/em&gt;是文件的默认根目录。</target>
        </trans-unit>
        <trans-unit>
          <source>If the language id of the original resource is 0 (neutral) and the output file is multilingual Sisulizer changes the language of the original resource to match the original language.</source>
          <target>如果原始资源的语言 id 为 0（中性）并且输出文件是多语言的，Sisulizer 将更改原始资源的语言以匹配原始语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Exclude all string properties by default</source>
          <target>默认排除所有字符串属性</target>
        </trans-unit>
        <trans-unit>
          <source>Use the following directory</source>
          <target>使用以下目录</target>
        </trans-unit>
        <trans-unit>
          <source>Resource name</source>
          <target>资源名称</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer automatically open the most previous project when starting the application.</source>
          <target>如果选中 Sisulizer，则在启动应用程序时会自动打开最近的项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Now the context of first sport element is &lt;em&gt;sports.0&lt;/em&gt;, second is &lt;em&gt;sports.1&lt;/em&gt;, etc. If we add a new element to the beginning of sports element the context values of existing sport elements do not change.</source>
          <target>现在第一个运动元素的上下文是&lt;em&gt;sports.0&lt;/em&gt; ，第二个是&lt;em&gt;sports.1&lt;/em&gt; ，等等。如果我们在运动元素的开头添加一个新元素，现有运动元素的上下文值不会改变。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the both original and localized resource data of selected node in a binary format.</source>
          <target>以二进制格式显示所选节点的原始和本地化资源数据。</target>
        </trans-unit>
        <trans-unit>
          <source>File parameters are:</source>
          <target>文件参数为：</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the component options. Possible values are:</source>
          <target>指定组件选项。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the name of the property. The  name can contain wild cards (* and ?).</source>
          <target>指定属性的名称。名称可以包含通配符（* 和 ?）。</target>
        </trans-unit>
        <trans-unit>
          <source>Reading order</source>
          <target>阅读顺序</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer always sets the language.</source>
          <target>Sisulizer 始终设置语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the Qt file options.</source>
          <target>使用此表指定 Qt 文件选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Validation symbols</source>
          <target>验证符号</target>
        </trans-unit>
        <trans-unit>
          <source>Search next item.</source>
          <target>搜索下一个项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Resource contains user defined binary data. It is parsed according to the format user has defined or selected.</source>
          <target>资源包含用户定义的二进制数据。它根据用户定义或选择的格式进行解析。</target>
        </trans-unit>
        <trans-unit>
          <source>Project file to merge</source>
          <target>要合并的项目文件</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer Language Code is combination of language, country, variant and script. The syntax is</source>
          <target>Sisulizer 语言代码是语言、国家、变体和脚本的组合。语法是</target>
        </trans-unit>
        <trans-unit>
          <source>Property contain an XML data. Enter one line for each element or attribute that you want to localize. Each line contains the path and name of the element/attribute. Parent and child element are separated by @ character. Attribute name start with # characters. Do not include the name of the root element.</source>
          <target>属性包含一个 XML 数据。为要本地化的每个元素或属性输入一行。每行包含元素/属性的路径和名称。父元素和子元素由@ 字符分隔。属性名称以 # 个字符开头。不要包含根元素的名称。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the RC file options.</source>
          <target>使用此表指定 RC 文件选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Possible id field</source>
          <target>可能的 id 字段</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the begin character.</source>
          <target>指定开始字符。</target>
        </trans-unit>
        <trans-unit>
          <source>Excluding resources and data types</source>
          <target>排除资源和数据类型</target>
        </trans-unit>
        <trans-unit>
          <source>Visual Windows Localization (Visual C++, Delphi, C++Builder and Visual Basic)</source>
          <target>可视化 Windows 本地化（Visual C++、Delphi、C++Builder 和 Visual Basic）</target>
        </trans-unit>
        <trans-unit>
          <source>SDK is installed with Microsoft Visual Studio. The following table contains the default SDK directories:</source>
          <target>SDK 随 Microsoft Visual Studio 一起安装。下表包含默认的 SDK 目录：</target>
        </trans-unit>
        <trans-unit>
          <source>Run (or execute) native version for the selected target.</source>
          <target>为所选目标运行（或执行）本机版本。</target>
        </trans-unit>
        <trans-unit>
          <source>Scan owner draw text</source>
          <target>扫描所有者绘制文本</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the context file (.h) that is used.</source>
          <target>指定使用的上下文文件 (.h)。</target>
        </trans-unit>
        <trans-unit>
          <source>Change all untranslated font names.</source>
          <target>更改所有未翻译的字体名称。</target>
        </trans-unit>
        <trans-unit>
          <source>If enabled Sisulizer changes the translation status automatically to the selected status after a translation has been modified.</source>
          <target>如果启用，Sisulizer 会在修改翻译后自动将翻译状态更改为选定状态。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer has three spell checking modes. They are:</source>
          <target>Sisulizer 具有三种拼写检查模式。他们是：</target>
        </trans-unit>
        <trans-unit>
          <source>Show as Binary | Both</source>
          <target>显示为二进制 |两个都</target>
        </trans-unit>
        <trans-unit>
          <source>Delphi 3 and later. All C++Builder versions.</source>
          <target>德尔福 3 及更高版本。所有 C++Builder 版本。</target>
        </trans-unit>
        <trans-unit>
          <source>then what is scanned depends in the value of the check box.</source>
          <target>那么扫描的内容取决于复选框的值。</target>
        </trans-unit>
        <trans-unit>
          <source>As an example, suppose that an application MyApplication.exe uses MFC and is running on a Windows XP. The system UI language is ENU [English (United States)] and the current user&#x27;s UI language is set to DES [German (Switzerland)]. MFC will look for the following DLLs in the following order:</source>
          <target>例如，假设应用程序 MyApplication.exe 使用 MFC 并在 Windows XP 上运行。系统UI语言为ENU【英语（美国）】，当前用户的UI语言设置为DES【德语（瑞士）】。 MFC 将按以下顺序查找以下 DLL：</target>
        </trans-unit>
        <trans-unit>
          <source>Support for .NET 4.5.1, 4.5.2,  4.6, 4.6.1,  4.6.2, 4.7 and 4.7.1</source>
          <target>支持 .NET 4.5.1、4.5.2、4.6、4.6.1、4.6.2、4.7 和 4.7.1</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies how scripts inside the HTML are localized. Possible values are:</source>
          <target>指定如何本地化 HTML 中的脚本。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>In this method Sisulizer updates the values of the localized fields. The localized fields are equal to the original field except they contain data in different language. For example if the original language is English and you want to localize the database to German and Japanese you add German and Japanese fields for those fields that contain strings to be localized.</source>
          <target>在此方法中，Sisulizer 更新本地化字段的值。本地化字段与原始字段相同，只是它们包含不同语言的数据。例如，如果原始语言是英语，而您想将数据库本地化为德语和日语，则为包含要本地化的字符串的字段添加德语和日语字段。</target>
        </trans-unit>
        <trans-unit>
          <source>If you check &lt;em&gt;Make build automation setup that installs only SlMake.exe&lt;/em&gt; in the setup application only &lt;a href=&quot;SlMake.htm&quot;&gt;SlMake&lt;/a&gt; and files needed by it will be installed. Use this option when installing Sisulizer into your build automation server. If you use your development machine as your build server then install a normal installation.</source>
          <target>如果您在安装应用程序中&lt;a href=&quot;SlMake.htm&quot;&gt;选中&lt;/a&gt;仅&lt;em&gt;安装 SlMake.exe 的 Make 构建自动化安装程序，则仅&lt;/em&gt;安装&lt;a href=&quot;SlMake.htm&quot;&gt;SlMake&lt;/a&gt;和它所需的文件。将 Sisulizer 安装到构建自动化服务器时使用此选项。如果您使用开发机器作为构建服务器，则安装正常安装。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer scans images of the HTML files making it possible to replace them in the localized files.</source>
          <target>如果选中 Sisulizer 会扫描 HTML 文件的图像，从而可以在本地化文件中替换它们。</target>
        </trans-unit>
        <trans-unit>
          <source>This dialog specifies the strings that have been excluded from the project by the native value.</source>
          <target>此对话框指定已由本机值从项目中排除的字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>n</source>
          <target>n</target>
        </trans-unit>
        <trans-unit>
          <source>Item contains JavaScript or TypeScript source code.</source>
          <target>项目包含 JavaScript 或 TypeScript 源代码。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can use following DLL and COM libraries:</source>
          <target>Sisulizer 可以使用以下 DLL 和 COM 库：</target>
        </trans-unit>
        <trans-unit>
          <source>Common font changing</source>
          <target>常用字体更改</target>
        </trans-unit>
        <trans-unit>
          <source>Yes if data is in UTF-8 and UTF-16 and it contains byte order mark (BOM)</source>
          <target>是，如果数据采用 UTF-8 和 UTF-16 格式并且包含字节顺序标记 (BOM)</target>
        </trans-unit>
        <trans-unit>
          <source>This window is shown when Sisulizer is starting. If you are evaluating Sisulizer you can register your product by entering a license key or you change the &lt;a href=&quot;Licenses.htm&quot;&gt;edition&lt;/a&gt; that you are &lt;a href=&quot;Evaluation.htm&quot;&gt;evaluating&lt;/a&gt;.</source>
          <target>此窗口在 Sisulizer 启动时显示。如果您正在评估 Sisulizer，您可以通过输入许可证密钥来注册您的产品，或者更改您正在&lt;a href=&quot;Evaluation.htm&quot;&gt;评估&lt;/a&gt;的&lt;a href=&quot;Licenses.htm&quot;&gt;版本&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Neutral language</source>
          <target>中性语言</target>
        </trans-unit>
        <trans-unit>
          <source>Selected languages</source>
          <target>选定的语言</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the delimiter character that is used to speparate columns. Selected the value from the list or type the delimiter character.</source>
          <target>指定用于分隔列的分隔符。从列表中选择值或键入分隔符。</target>
        </trans-unit>
        <trans-unit>
          <source>Remove the leading and trailing white spaces from the elements.</source>
          <target>从元素中删除前导和尾随空格。</target>
        </trans-unit>
        <trans-unit>
          <source>Contains the list of global definitions. A global definition is a text definition that is shared with all projects of this Sisulizer installation. If you want to use an existing global definition selected it from the list. If you want to use a custom definition that is used only in this case select &lt;em&gt;This is a custom definition that is used only in this case&lt;/em&gt;.</source>
          <target>包含全局定义列表。全局定义是与此 Sisulizer 安装的所有项目共享的文本定义。如果要使用现有的全局定义，请从列表中选择它。如果要使用仅在这种情况下使用的自定义定义，请选择&lt;em&gt;这是仅在这种情况下使用的自定义定义&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer imports the item even if its translated value equals to the original value. If unchecked Sisulizer does not import item if its translated value equals to the original value.</source>
          <target>如果选中 Sisulizer，即使其翻译值等于原始值，也会导入该项目。如果未选中 Sisulizer 如果其翻译值等于原始值，则不会导入项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Borland/CogeGear .NET project group file</source>
          <target>Borland/CogeGear .NET 项目组文件</target>
        </trans-unit>
        <trans-unit>
          <source>Send the original project file (.slp) as it is. This is the easiest and fastest way to send data to translator. However the translator will get the whole project including all existing languages and translations. Translator has to have Sisulizer installed or he or she has to install free Sisulizer Free Edition.</source>
          <target>按原样发送原始项目文件 (.slp)。这是将数据发送到翻译器的最简单、最快捷的方式。但是，翻译人员将获得包括所有现有语言和翻译在内的整个项目。翻译者必须安装 Sisulizer 或者他或她必须安装免费的 Sisulizer 免费版。</target>
        </trans-unit>
        <trans-unit>
          <source>Use caption in menu context</source>
          <target>在菜单上下文中使用标题</target>
        </trans-unit>
        <trans-unit>
          <source>Retranslate automatically translated items if original value changes</source>
          <target>如果原始值发生变化，则重新翻译自动翻译的项目</target>
        </trans-unit>
        <trans-unit>
          <source>COPYRIGHT&lt;br&gt;
  This software is copyrighted 2005-2016 by Sisulizer. The use and copyright of this software is governed by international copyright treaties. Sisulizer retains full title and rights to this software and documentation and in no way does the license granted diminish the intellectual property rights of Sisulizer. You must not redistribute the registration codes provided--on paper, electronically, or in any other form.</source>
          <target>版权&lt;br&gt;该软件的版权归 Sisulizer 2005-2016 年所有。本软件的使用和版权受国际版权条约的约束。 Sisulizer 保留对本软件和文档的全部所有权和权利，授予的许可绝不会削弱 Sisulizer 的知识产权。您不得以纸质、电子或任何其他形式重新分发所提供的注册代码。</target>
        </trans-unit>
        <trans-unit>
          <source>Enter the maximum value of the translation in characters.</source>
          <target>以字符为单位输入翻译的最大值。</target>
        </trans-unit>
        <trans-unit>
          <source>Selects the upper cell of the currently selected cell.</source>
          <target>选择当前选定单元格的上方单元格。</target>
        </trans-unit>
        <trans-unit>
          <source>String size in word following an UTF-8 string</source>
          <target>UTF-8 字符串后的字串大小</target>
        </trans-unit>
        <trans-unit>
          <source>This contains online statistics about the selected node.</source>
          <target>这包含有关所选节点的在线统计信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Excluded string types</source>
          <target>排除的字符串类型</target>
        </trans-unit>
        <trans-unit>
          <source>Show grid</source>
          <target>显示网格</target>
        </trans-unit>
        <trans-unit>
          <source>Let&#x27;s have an example. Before taking combined string in used our project contains the following row:</source>
          <target>让我们举个例子。在使用组合字符串之前，我们的项目包含以下行：</target>
        </trans-unit>
        <trans-unit>
          <source>Some tools combine string into a single string table. In that case you can also choose the same option. After that importing from existing EXE-file can be properly done.</source>
          <target>一些工具将字符串组合成单个字符串表。在这种情况下，您也可以选择相同的选项。之后可以正确地从现有的 EXE 文件导入。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to configure how forms are localized.</source>
          <target>使用此表配置表单的本地化方式。</target>
        </trans-unit>
        <trans-unit>
          <source>The localized Country table will look like this after Sisulizer has updated the localized field values:</source>
          <target>在 Sisulizer 更新本地化字段值后，本地化的 Country 表将如下所示：</target>
        </trans-unit>
        <trans-unit>
          <source>The original string is replaced with the given string.</source>
          <target>原始字符串被给定的字符串替换。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to set the import options for translation memory.</source>
          <target>使用此表设置翻译记忆库的导入选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Select the original language</source>
          <target>选择原始语言</target>
        </trans-unit>
        <trans-unit>
          <source>Windows PE file (.exe, .dll, .bpl, .ocx)  that has been compiled with Delphi (Win32). 
    Both VCL and FireMonkey are supported.</source>
          <target>已使用 Delphi (Win32) 编译的 Windows PE 文件（.exe、.dll、.bpl、.ocx）。支持 VCL 和 FireMonkey。</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be a &lt;a href=&quot;PoLocalization.htm&quot;&gt; PO file&lt;/a&gt;  (e.g. C:\Samples\sample.pot)</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是&lt;a href=&quot;PoLocalization.htm&quot;&gt;PO 文件&lt;/a&gt;（例如 C:\Samples\sample.pot）</target>
        </trans-unit>
        <trans-unit>
          <source>Include only those rows that have not been marked &lt;em&gt;Invalidated&lt;/em&gt;.</source>
          <target>仅包括那些尚未标记为&lt;em&gt;Invalidated 的行&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer checks if there are untranslated binary resources (images, icons, cursors, ...) in the project when opening the project file. If there are Sisulizer asks if the user wants to exclude binary resources.</source>
          <target>如果选中，Sisulizer 在打开项目文件时检查项目中是否存在未翻译的二进制资源（图像、图标、光标等）。如果有 Sisulizer 询问用户是否要排除二进制资源。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure how the menu editor works.</source>
          <target>使用此对话框配置菜单编辑器的工作方式。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet configure how TMX file is localized.</source>
          <target>使用此表配置 TMX 文件的本地化方式。</target>
        </trans-unit>
        <trans-unit>
          <source>Information/Include tags</source>
          <target>信息/包含标签</target>
        </trans-unit>
        <trans-unit>
          <source>Tagging is a feature where you specify what strings are localized and how they are localized. It is mostly used when localizing programming code that contains strings such as with HTML scripts and plain source code files. Tagging is also used to give resource file items extra information like maximing length of teh string and regular expression to parse string.</source>
          <target>标记是一项功能，您可以在其中指定本地化哪些字符串以及如何对其进行本地化。它主要用于本地化包含字符串的编程代码，例如 HTML 脚本和纯源代码文件。标记还用于为资源文件项提供额外信息，例如最大化字符串长度和正则表达式以解析字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Only parameters given here are used. Parameters given in the solution dialog are ignored.</source>
          <target>仅使用此处给出的参数。解决方案对话框中给出的参数将被忽略。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;strong&gt;resourcestring&lt;/strong&gt;
  SMy_Sample_String = &#x27;This is a sample&#x27;;</source>
          <target>&lt;strong&gt;resourcestring&lt;/strong&gt; SMy_Sample_String = &amp;#39;这是一个样本&amp;#39;;</target>
        </trans-unit>
        <trans-unit>
          <source>Text to be localized</source>
          <target>要本地化的文本</target>
        </trans-unit>
        <trans-unit>
          <source>Following parts are enabled when the &lt;em&gt;Tags usage&lt;/em&gt; is set to &lt;em&gt;Localize all but excluded&lt;/em&gt;.</source>
          <target>当&lt;em&gt;标签使用&lt;/em&gt;设置为&lt;em&gt;Localize all but exclude&lt;/em&gt;时，以下部分被启用。</target>
        </trans-unit>
        <trans-unit>
          <source>Include only those rows that have been marked &lt;em&gt;Marked&lt;/em&gt;.</source>
          <target>只包括那些被标记为&lt;em&gt;Marked 的&lt;/em&gt;行。</target>
        </trans-unit>
        <trans-unit>
          <source>Adding runtime language change is very easy. At minimum it only requires that you add one line of code into your application.</source>
          <target>添加运行时语言更改非常容易。至少它只需要您在应用程序中添加一行代码。</target>
        </trans-unit>
        <trans-unit>
          <source>Select Source Type sheet lets you select the type of the source. The possible values are:</source>
          <target>选择源类型表让您选择源的类型。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Remove unused items</source>
          <target>删除未使用的项目</target>
        </trans-unit>
        <trans-unit>
          <source>Prints the project.</source>
          <target>打印项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Lines up the left edges of the selected components (horizontal only)</source>
          <target>排列所选组件的左边缘（仅限水平）</target>
        </trans-unit>
        <trans-unit>
          <source>Some fonts require that the Charset property of the font should remain fixed. In most cases this is the case of the fonts that uses the symbol charset. This list contains the font names that if in use will keep the Charset property value (i.e. Sisulizer won&#x27;t change the property value).</source>
          <target>某些字体要求字体的 Charset 属性应保持固定。在大多数情况下，这是使用符号字符集的字体的情况。此列表包含字体名称，如果在使用中将保留 Charset 属性值（即 Sisulizer 不会更改属性值）。</target>
        </trans-unit>
        <trans-unit>
          <source>Choose File | Export to start &lt;a href=&quot;ExportWizard.htm&quot;&gt;Export Wizard&lt;/a&gt;. Select the export file format and specify the properties. Send the exported file to the translator. You can also choose File | Exchange, click &lt;em&gt;Export project and send exported file&lt;/em&gt; button and press OK to start Export Wizard.</source>
          <target>选择文件 |导出以启动&lt;a href=&quot;ExportWizard.htm&quot;&gt;导出向导&lt;/a&gt;。选择导出文件格式并指定属性。将导出的文件发送给翻译人员。您也可以选择文件 |交换，单击&lt;em&gt;导出项目并发送导出的文件&lt;/em&gt;按钮，然后按确定启动导出向导。</target>
        </trans-unit>
        <trans-unit>
          <source>An unexpected error occurred in the application. Please send an email to &lt;a href=&quot;mailto:support@sisulizer.com&quot;&gt;support@sisulizer.com&lt;/a&gt; and we will solve the problem. To make solving faster:</source>
          <target>应用程序中发生意外错误。请发送电子邮件至&lt;a href=&quot;mailto:support@sisulizer.com&quot;&gt;support@sisulizer.com&lt;/a&gt; ，我们将解决问题。为了加快求解速度：</target>
        </trans-unit>
        <trans-unit>
          <source>If selected each paragraphs are segmented.</source>
          <target>如果选中，每个段落都会被分段。</target>
        </trans-unit>
        <trans-unit>
          <source>Try to reproduce this error and write instructions how to reproduce it</source>
          <target>尝试重现此错误并编写说明如何重现它</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the empty lines from original property files are copied to the localized property files. If unchecked empty lines are not written to the localized property files.</source>
          <target>如果选中，原始属性文件中的空行将复制到本地化的属性文件中。如果未选中的空行不会写入本地化的属性文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Check &lt;em&gt;Do not show this next time&lt;/em&gt; to not to show this message any more.</source>
          <target>选中&lt;em&gt;下次&lt;/em&gt;不再显示此消息以不再显示此消息。</target>
        </trans-unit>
        <trans-unit>
          <source>Project Wizard - Delphi/C++Builder binary file</source>
          <target>项目向导 - Delphi/C++Builder 二进制文件</target>
        </trans-unit>
        <trans-unit>
          <source>The class name specifies the class name of the component. For example the standard label component is TLabel in VCL and System.Windows.Forms.Text in .NET.</source>
          <target>类名指定组件的类名。例如，标准标签组件是 VCL 中的 TLabel 和 .NET 中的 System.Windows.Forms.Text。</target>
        </trans-unit>
        <trans-unit>
          <source>Create a new Sisulizer project that contains C:\MyFiles\MyApplication.exe as a source file and German and Japanese languages as target languages.</source>
          <target>创建一个新的 Sisulizer 项目，其中包含 C:\MyFiles\MyApplication.exe 作为源文件和德语和日语语言作为目标语言。</target>
        </trans-unit>
        <trans-unit>
          <source>If there is no exact match Sisulizer will use the first spell checker matching only the language part.</source>
          <target>如果没有完全匹配，Sisulizer 将使用仅匹配语言部分的第一个拼写检查器。</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;lt;sldir&amp;gt;\NET\CSharp\LangChange is another sample application that uses it&#x27;s own user interface to select the new language instead of Sisulizer&#x27;s select language dialog.</source>
          <target>&amp;lt;sldir&amp;gt;\NET\CSharp\LangChange 是另一个示例应用程序，它使用自己的用户界面来选择新语言，而不是 Sisulizer 的选择语言对话框。</target>
        </trans-unit>
        <trans-unit>
          <source>Status column tells the status of the mapping. The possible values are:</source>
          <target>状态列告诉映射的状态。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be an &lt;a href=&quot;JsonLocalization.htm&quot;&gt;JSON file&lt;/a&gt; (e.g. C:\Samples\Sample.json).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是&lt;a href=&quot;JsonLocalization.htm&quot;&gt;JSON 文件&lt;/a&gt;（例如 C:\Samples\Sample.json）。</target>
        </trans-unit>
        <trans-unit>
          <source>Grammar checking</source>
          <target>语法检查</target>
        </trans-unit>
        <trans-unit>
          <source>Selects all cells in the current column.</source>
          <target>选择当前列中的所有单元格。</target>
        </trans-unit>
        <trans-unit>
          <source>Source | Excluded types</source>
          <target>来源 |排除的类型</target>
        </trans-unit>
        <trans-unit>
          <source>Imports segmentation rules from a file.</source>
          <target>从文件导入分段规则。</target>
        </trans-unit>
        <trans-unit>
          <source>Save password</source>
          <target>保存密码</target>
        </trans-unit>
        <trans-unit>
          <source>Change an untranslated font if and only if the font name and size match to the default original font.</source>
          <target>当且仅当字体名称和大小与默认原始字体匹配时，才更改未翻译字体。</target>
        </trans-unit>
        <trans-unit>
          <source>VCL.NET applications do not contain the standard .NET resources. Instead VCL resource types (e.g. forms and strings) are used. This is why you can not use project file localization with VCL.NET applications. You have to use assembly file localization. Add the assembly file (e.g. .exe or .dll) to the project instead of the project file (.bdsproj).</source>
          <target>VCL.NET 应用程序不包含标准的 .NET 资源。而是使用 VCL 资源类型（例如表单和字符串）。这就是您不能在 VCL.NET 应用程序中使用项目文件本地化的原因。您必须使用程序集文件本地化。将程序集文件（例如 .exe 或 .dll）添加到项目而不是项目文件 (.bdsproj)。</target>
        </trans-unit>
        <trans-unit>
          <source>Other tools</source>
          <target>其他工具</target>
        </trans-unit>
        <trans-unit>
          <source>Write empty if no  value</source>
          <target>如果没有值则写为空</target>
        </trans-unit>
        <trans-unit>
          <source>Language parameter</source>
          <target>语言参数</target>
        </trans-unit>
        <trans-unit>
          <source>Invalid character width</source>
          <target>字符宽度无效</target>
        </trans-unit>
        <trans-unit>
          <source>This is a license for translators. It has all the features that Enterprise has but you can not create new projects or add new sources or languages to existing projects.</source>
          <target>这是翻译人员的许可证。它具有 Enterprise 的所有功能，但您无法创建新项目或向现有项目添加新源或语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Enter the database address in the Server address field. Enter the database user name in the User name field and the password in the Password field and press Connect to connect to the database.  Finally select the  database in the Database combo box. If you want Sisulizer to remember the password check Rememeber password. Password is stored in an encrypted form.</source>
          <target>在服务器地址字段中输入数据库地址。在用户名字段中输入数据库用户名，在密码字段中输入密码，然后按连接以连接到数据库。最后在数据库组合框中选择数据库。如果您希望 Sisulizer 记住密码，请检查记住密码。密码以加密形式存储。</target>
        </trans-unit>
        <trans-unit>
          <source>Ignore words with all uppercase letter when performing a spell check or underlining wrong words. For example, if you select this option, the spell checker does not flag &lt;strong&gt;SUW&lt;/strong&gt; as a mistake in &amp;quot;This is a &lt;strong&gt;SUW&lt;/strong&gt; car&amp;quot;.</source>
          <target>执行拼写检查或在错误的单词下划线时，忽略所有大写字母的单词。例如，如果您选择此选项，拼写检查器不会在“This is a &lt;strong&gt;SUW&lt;/strong&gt; car”中将&lt;strong&gt;SUW&lt;/strong&gt;标记为错误。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies localized name of the language (e.g. Finnish, German, Japanese).</source>
          <target>指定语言的本地化名称（例如芬兰语、德语、日语）。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer project file.</source>
          <target>Sisulizer 项目文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies how HTML file are built. Possible values are:</source>
          <target>指定如何构建 HTML 文件。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Setup installs</source>
          <target>安装程序安装</target>
        </trans-unit>
        <trans-unit>
          <source>Imports data from a XLIFF file</source>
          <target>从 XLIFF 文件导入数据</target>
        </trans-unit>
        <trans-unit>
          <source>If checked a progress bar is added to the pane header showing the current translation progress.</source>
          <target>如果选中，则会将进度条添加到显示当前翻译进度的窗格标题中。</target>
        </trans-unit>
        <trans-unit>
          <source>User interface language of the application</source>
          <target>应用程序的用户界面语言</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks if a string contains characters whose width is not right. Alphabets, Japanese Katakana and Korean Jamo characters exist both in half width and full width forms. Normally you should not only use full width alphabets or half width katakana or jamo characters.</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查字符串是否包含宽度不正确的字符。字母、日语片假名和韩语 Jamo 字符以半宽和全宽两种形式存在。通常，您不应只使用全角字母或半角片假名或 jamo 字符。</target>
        </trans-unit>
        <trans-unit>
          <source>A language identifier will be added to the localized resource name. For example Sample.xml will come to Sample.fi.xml when localized to Finnish.</source>
          <target>语言标识符将添加到本地化资源名称中。例如，当本地化为芬兰语时，Sample.xml 将变为 Sample.fi.xml。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this group to specify the programming language.</source>
          <target>使用该组指定编程语言。</target>
        </trans-unit>
        <trans-unit>
          <source>This list contains those languages that you have added to the project. You can remove a language from the project by selecting and pressing the Remove (x) button or the Del key. You can reorder the selected languages by dragging and dropping or by pressing Up and Down buttons.</source>
          <target>此列表包含您已添加到项目中的语言。您可以通过选择并按下删除 (x) 按钮或 Del 键从项目中删除语言。您可以通过拖放或按向上和向下按钮对所选语言重新排序。</target>
        </trans-unit>
        <trans-unit>
          <source>OEM code page</source>
          <target>OEM 代码页</target>
        </trans-unit>
        <trans-unit>
          <source>Initial language</source>
          <target>初始语言</target>
        </trans-unit>
        <trans-unit>
          <source>You also have to make sure that Localize attribute group contains true in  &lt;em&gt;Enable values&lt;/em&gt; edit and false in  &lt;em&gt;Disable values&lt;/em&gt; edit.</source>
          <target>您还必须确保本地化属性组在&lt;em&gt;启用值&lt;/em&gt;编辑中包含 true，在&lt;em&gt;禁用值&lt;/em&gt;编辑中包含 false。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the data format. Possible values are:</source>
          <target>指定数据格式。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Package name</source>
          <target>包裹名字</target>
        </trans-unit>
        <trans-unit>
          <source>Source code file</source>
          <target>源代码文件</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the directory that contains assembly files used by the application. By default Sisulizer tries to find them by reading the Visual Studio project file. If this fails enter here the directory that contains your  assembly files. For example some build automation servers (TFS Build) may create output files to some other directory as stand-alone MsBuild would do. Enter this directory here.</source>
          <target>指定包含应用程序使用的程序集文件的目录。默认情况下，Sisulizer 尝试通过读取 Visual Studio 项目文件来找到它们。如果失败，请在此处输入包含程序集文件的目录。例如，某些构建自动化服务器 (TFS Build) 可能会像独立的 MsBuild 一样将输出文件创建到某个其他目录。在此处输入此目录。</target>
        </trans-unit>
        <trans-unit>
          <source>Now you have added two platforms files, 64-bit Windows  file and 32-bit Mac file. The main file of the source is specified in the File sheet and it is 32-bit Windows file. All three files contains the same sources and are localized in the same way.</source>
          <target>现在您已经添加了两个平台文件，64 位 Windows 文件和 32 位 Mac 文件。源的主文件在文件表中指定，它是 32 位 Windows 文件。所有三个文件都包含相同的来源并且以相同的方式本地化。</target>
        </trans-unit>
        <trans-unit>
          <source>Inconsistent format string</source>
          <target>格式字符串不一致</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the characters that start comment line. There can be any number of comment characters. Comments in a Ini file are always single line comment that start with a comment character and ends to the next new line. The default comment characters value is &amp;quot; ;#&amp;quot; that means that both ; and # characters can be used to mark comments. For example:</source>
          <target>指定开始注释行的字符。可以有任意数量的注释字符。 Ini 文件中的注释始终是单行注释，以注释字符开头并结束于下一个新行。默认的注释字符值是“;#”，这意味着 ; # 字符可用于标记注释。例如：</target>
        </trans-unit>
        <trans-unit>
          <source>Polar spell checker library</source>
          <target>Polar 拼写检查器库</target>
        </trans-unit>
        <trans-unit>
          <source>Windows Forms&#x27;s Localizable property</source>
          <target>Windows 窗体的 Localizable 属性</target>
        </trans-unit>
        <trans-unit>
          <source>New Translation Engine dialog box</source>
          <target>新建翻译引擎对话框</target>
        </trans-unit>
        <trans-unit>
          <source>Strings are encoded with  &lt;a href=&quot;http://en.wikipedia.org/wiki/Category:DOS_code_pages&quot; target=&quot;_blank&quot;&gt;OEM (DOS) code pages&lt;/a&gt;.</source>
          <target>字符串使用&lt;a href=&quot;http://en.wikipedia.org/wiki/Category:DOS_code_pages&quot; target=&quot;_blank&quot;&gt;OEM (DOS) 代码页&lt;/a&gt;进行编码。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet configure how a binary file is localized.</source>
          <target>使用此表配置二进制文件的本地化方式。</target>
        </trans-unit>
        <trans-unit>
          <source>Write empty</source>
          <target>写空</target>
        </trans-unit>
        <trans-unit>
          <source>Embedded resource DLLs</source>
          <target>嵌入式资源 DLL</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the expression that is used to parse &lt;a href=&quot;CombinedStrings.htm&quot;&gt;combined string&lt;/a&gt;.</source>
          <target>指定用于解析&lt;a href=&quot;CombinedStrings.htm&quot;&gt;组合字符串的表达式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Place pages into first letter based folders</source>
          <target>将页面放入基于首字母的文件夹中</target>
        </trans-unit>
        <trans-unit>
          <source>Select rows dialog is shown that contains list of all duplicate strings. The user can select which one to update. If a row does not already have a value Sisulizer does not show that row on the list but automatically sets the translation value.</source>
          <target>显示选择行对话框，其中包含所有重复字符串的列表。用户可以选择更新哪一个。如果某行还没有值，Sisulizer 不会在列表中显示该行，而是自动设置翻译值。</target>
        </trans-unit>
        <trans-unit>
          <source>Silverlight&#x27;s application files (.xap) are used to deploy Silverlight application. XAP file contains assembly file(s) and application manifest files. Add  XAP file that you want to localize to a Sisulizer project. Sisulizer scan the assembly files and manifest files. On the build process Sisulizer creates the localized XAP file that contains original assemblies and satellite assemblies either in one language or all languages. Sisulizer also modifies the manifest file to contain satellite assembly files.</source>
          <target>Silverlight 的应用程序文件 (.xap) 用于部署 Silverlight 应用程序。 XAP 文件包含程序集文件和应用程序清单文件。将要本地化的 XAP 文件添加到 Sisulizer 项目。 Sisulizer 扫描程序集文件和清单文件。在构建过程中，Sisulizer 创建本地化的 XAP 文件，其中包含一种语言或所有语言的原始程序集和附属程序集。 Sisulizer 还修改清单文件以包含附属程序集文件。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Special&lt;/em&gt; specifies how row included as visible based on their duplicate status. Possible options are:</source>
          <target>&lt;em&gt;Special&lt;/em&gt;指定如何根据行的重复状态将其包含为可见。可能的选项是：</target>
        </trans-unit>
        <trans-unit>
          <source>Any resource data that has been added as Resource into .NET project. Compiled assembly contains all standard resource items into the g-resource of the assembly file (e.g. MyAssembly.g.resources).</source>
          <target>已作为资源添加到 .NET 项目中的任何资源数据。编译后的程序集包含所有标准资源项到程序集文件（例如 MyAssembly.g.resources）的 g-resource 中。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the expand character.</source>
          <target>指定扩展字符。</target>
        </trans-unit>
        <trans-unit>
          <source>Microsoft glossary file</source>
          <target>微软词汇表文件</target>
        </trans-unit>
        <trans-unit>
          <source>EDICT dictionary file</source>
          <target>EDICT 字典文件</target>
        </trans-unit>
        <trans-unit>
          <source>Windows library file</source>
          <target>Windows 库文件</target>
        </trans-unit>
        <trans-unit>
          <source>Click &lt;em&gt;Add main&lt;/em&gt; to add a new language. &lt;a href=&quot;SystemLanguageDialog.htm&quot;&gt;System Language&lt;/a&gt; dialog box will appear. Set the values and press OK.</source>
          <target>单击&lt;em&gt;添加主要&lt;/em&gt;添加新语言。将出现&lt;a href=&quot;SystemLanguageDialog.htm&quot;&gt;系统语言&lt;/a&gt;对话框。设置值并按 OK。</target>
        </trans-unit>
        <trans-unit>
          <source>When building incomplete database rows</source>
          <target>构建不完整的数据库行时</target>
        </trans-unit>
        <trans-unit>
          <source>Ignore translation status (i.e. do not import it).</source>
          <target>忽略翻译状态（即不导入它）。</target>
        </trans-unit>
        <trans-unit>
          <source>Resource string  tag is used to pass resource string comments and properties to the project. The syntax is</source>
          <target>资源字符串标签用于将资源字符串注释和属性传递给项目。语法是</target>
        </trans-unit>
        <trans-unit>
          <source>Qt user interface file (.ui)</source>
          <target>Qt 用户界面文件 (.ui)</target>
        </trans-unit>
        <trans-unit>
          <source>Automatically when saving the project</source>
          <target>保存项目时自动</target>
        </trans-unit>
        <trans-unit>
          <source>A string that shows the sample text using the given expressions.</source>
          <target>使用给定表达式显示示例文本的字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>The combo box on the upper side of the dialog contains the configured rules. Select the rule definition you want to edit. Click + button to add a new. Click - to remove the selected one. Click notepad image to rename the selected definition.</source>
          <target>对话框上方的组合框包含已配置的规则。选择要编辑的规则定义。单击 + 按钮添加一个新的。单击 - 删除选定的一项。单击记事​​本图像以重命名所选定义。</target>
        </trans-unit>
        <trans-unit>
          <source>Find tags from</source>
          <target>从以下位置查找标签</target>
        </trans-unit>
        <trans-unit>
          <source>Support for Delphi 10 Seattle and C++Builder 10 Seattle</source>
          <target>支持 Delphi 10 Seattle 和 C++Builder 10 Seattle</target>
        </trans-unit>
        <trans-unit>
          <source>Select the virtual device of Android SDK that the application uses. This is needed only if you want to run original or localized application on an Android emulator.</source>
          <target>选择应用程序使用的Android SDK 的虚拟设备。仅当您想在 Android 模拟器上运行原始或本地化应用程序时才需要这样做。</target>
        </trans-unit>
        <trans-unit>
          <source>Combines strings can be used in the following source types:</source>
          <target>组合字符串可用于以下源类型：</target>
        </trans-unit>
        <trans-unit>
          <source>Property contain an HTML file. Enter string &#x27;HTML&#x27; to the first line.</source>
          <target>属性包含一个 HTML 文件。在第一行输入字符串“HTML”。</target>
        </trans-unit>
        <trans-unit>
          <source>Depending on the selected form/dialog or your license some of the buttons may be unavailable.</source>
          <target>根据所选的表单/对话框或您的许可证，某些按钮可能不可用。</target>
        </trans-unit>
        <trans-unit>
          <source>Enter user name and password of your &lt;a href=&quot;http://www.sunda.fi/eng/tuotteet_seramenterprise.html&quot; target=&quot;_blank&quot;&gt;Sunda&lt;/a&gt; account. Check Save password if you want Sisulizer to remember your user id and password.</source>
          <target>输入您的&lt;a href=&quot;http://www.sunda.fi/eng/tuotteet_seramenterprise.html&quot; target=&quot;_blank&quot;&gt;Sunda&lt;/a&gt;帐户的用户名和密码。如果您希望 Sisulizer 记住您的用户 ID 和密码，请选中保存密码。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to control what strings are scanned from the resources files and how they are scanned. Tags are used to control the scan process.</source>
          <target>使用此表来控制从资源文件中扫描哪些字符串以及如何扫描它们。标签用于控制扫描过程。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer  parses string using a regular expression that you specify.</source>
          <target>Sisulizer 使用您指定的正则表达式解析字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>With each database Sisulizer makes a direct connection to database server or file. No database client software or DLL is needed (except with Paradox and dBase where Borland Database Engine is required).</source>
          <target>Sisulizer 通过每个数据库直接连接到数据库服务器或文件。不需要数据库客户端软件或 DLL（除了需要 Borland 数据库引擎的 Paradox 和 dBase）。</target>
        </trans-unit>
        <trans-unit>
          <source>Update translation date of</source>
          <target>更新翻译日期</target>
        </trans-unit>
        <trans-unit>
          <source>Enter user name and password of your &lt;a href=&quot;http://www.worldlingo.com/&quot; target=&quot;_blank&quot;&gt;WorldLingo&lt;/a&gt; account. Check Save password if you want Sisulizer to remember your user id and password.</source>
          <target>输入您的&lt;a href=&quot;http://www.worldlingo.com/&quot; target=&quot;_blank&quot;&gt;WorldLingo&lt;/a&gt;帐户的用户名和密码。如果您希望 Sisulizer 记住您的用户 ID 和密码，请选中保存密码。</target>
        </trans-unit>
        <trans-unit>
          <source>Bring translations from the original file to the project. Overwrite the existing value if it differs from the value in the database.</source>
          <target>将原始文件的翻译带到项目中。如果现有值与数据库中的值不同，则覆盖现有值。</target>
        </trans-unit>
        <trans-unit>
          <source>Please read the following terms and conditions carefully before using this software. Your use of this software indicates your acceptance of this license agreement. If you do not agree with the terms of this license, you must remove this software from your storage devices and cease to use the product.</source>
          <target>在使用本软件之前，请仔细阅读以下条款和条件。您对本软件的使用表明您接受本许可协议。如果您不同意本许可的条款，您必须从您的存储设备中删除该软件并停止使用该产品。</target>
        </trans-unit>
        <trans-unit>
          <source>Project tree locates on the left side of the main view. It contains all &lt;a href=&quot;Sources.htm&quot;&gt;sources&lt;/a&gt; that have been added to the project. The top level nodes are the &lt;a href=&quot;Sources.htm&quot;&gt;sources&lt;/a&gt;. Each source can contains zero or more sub nodes. They represent the structure of the source.</source>
          <target>项目树位于主视图的左侧。它包含已添加到项目中的所有&lt;a href=&quot;Sources.htm&quot;&gt;源&lt;/a&gt;。顶级节点是&lt;a href=&quot;Sources.htm&quot;&gt;源&lt;/a&gt;。每个源可以包含零个或多个子节点。它们代表源的结构。</target>
        </trans-unit>
        <trans-unit>
          <source>The above example was for .NET. &lt;a href=&quot;RuntimeLanguageChangeVcl.htm&quot;&gt;VCL&lt;/a&gt; does not use satellite assembly files but resource DLL files that are stored on the same directory as the application file.</source>
          <target>上面的示例适用于 .NET。 &lt;a href=&quot;RuntimeLanguageChangeVcl.htm&quot;&gt;VCL&lt;/a&gt;不使用附属程序集文件，而是使用与应用程序文件存储在同一目录中的资源 DLL 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>For example &amp;quot;en&amp;quot; is for English, &amp;quot;en-US&amp;quot; is fo English (United States), and &amp;quot;zh-Hant&amp;quot; is for Traditional Chinese.</source>
          <target>例如“en”代表英语，“en-US”代表英语（美国），“zh-Hant”代表繁体中文。</target>
        </trans-unit>
        <trans-unit>
          <source>Language pair</source>
          <target>语言对</target>
        </trans-unit>
        <trans-unit>
          <source>This is like above but most of the features are excluded. The edition can be used to manually enter translations but there are no importing, translation memories, spell checking, and translation validations. The translator can also not create localized files in order to test them. Free edition is free of charge. Anybody can download it from Sisulizer&#x27;s web page or it can be deployed with exchange package. The following features are not enabled:</source>
          <target>这与上面类似，但大多数功能都被排除在外。该版本可用于手动输入翻译，但没有导入、翻译记忆库、拼写检查和翻译验证。翻译人员也不能创建本地化文件来测试它们。免费版是免费的。任何人都可以从 Sisulizer 的网页上下载它，也可以使用交换包进行部署。以下功能未启用：</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the find direction. Possible values are:</source>
          <target>指定查找方向。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks if  there is only one items having the same accelerator.</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查是否只有一个项目具有相同的加速器。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;ChmLocalization.htm&quot;&gt;HTML Help file is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;ChmLocalization.htm&quot;&gt;HTML 帮助文件的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Import settings</source>
          <target>导入设置</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;lt;projectname&amp;gt;.app directory</source>
          <target>&amp;lt;项目名称&amp;gt;.app 目录</target>
        </trans-unit>
        <trans-unit>
          <source>Ignores the spelling error of the selected word at any location.</source>
          <target>忽略所选单词在任何位置的拼写错误。</target>
        </trans-unit>
        <trans-unit>
          <source>iOS strings  file</source>
          <target>iOS 字符串文件</target>
        </trans-unit>
        <trans-unit>
          <source>If you have existing resource DLL&#x27;s of a MFC application that you add to a project Sisulizer can import translations from the resource DLL&#x27;s. For example if you have selected Project1.exe and there exists Project1DE.dll file Project Wizard will add German to the project and imports translations from Project1DE.dll. Resource DLL must locate on the same directory as the application or library file. &lt;!-- #BeginLibraryItem &quot;/Library/WindowsBinaryImport.lbi&quot; --&gt;Sisulizer can also import existing localized files if they are in a sub directories. For example if your original file is Project1.exe and you have de\Project1.exe Sisulizer will import German translations form that file. If you have Project1DE.exe Sisulizer will also import German translations from that file.</source>
          <target>如果您有添加到项目中的 MFC 应用程序的现有资源 DLL，Sisulizer 可以从资源 DLL 导入翻译。例如，如果您选择了 Project1.exe 并且存在 Project1DE.dll 文件，项目向导会将德语添加到项目中并从 Project1DE.dll 导入翻译。资源 DLL 必须与应用程序或库文件位于同一目录中。&lt;!-- #BeginLibraryItem &quot;/Library/WindowsBinaryImport.lbi&quot; --&gt; Sisulizer 还可以导入位于子目录中的现有本地化文件。例如，如果您的原始文件是 Project1.exe 而您有 de\Project1.exe Sisulizer 将从该文件导入德语翻译。如果您有 Project1DE.exe，Sisulizer 还将从该文件导入德语翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Yes if data starts with  XML header: &amp;lt;?xml ... ?&amp;gt;</source>
          <target>是，如果数据以 XML 标头开头：&amp;lt;?xml ... ?&amp;gt;</target>
        </trans-unit>
        <trans-unit>
          <source>To give a property content information for a component add one of the above context attributes and give a unique value to it. You can automate this process by using MsBuild tool. Use the following command line:</source>
          <target>要为组件提供属性内容信息，请添加上述上下文属性之一并为其提供唯一值。您可以使用 MsBuild 工具自动执行此过程。使用以下命令行：</target>
        </trans-unit>
        <trans-unit>
          <source>Click &lt;em&gt;Add&lt;/em&gt; to add an new extension. Click &lt;em&gt;Edit&lt;/em&gt; to edit the selected extension. Click &lt;em&gt;Remove&lt;/em&gt; to remove the selected extension. Click &lt;em&gt;Clear&lt;/em&gt; to remove all extensions.&lt;!-- #EndLibraryItem --&gt;Click &lt;em&gt;&lt;/em&gt; &lt;em&gt;All&lt;/em&gt; to add the most common extensions.</source>
          <target>单击&lt;em&gt;添加&lt;/em&gt;以添加新扩展。单击&lt;em&gt;编辑&lt;/em&gt;以编辑选定的扩展名。单击&lt;em&gt;删除&lt;/em&gt;以删除选定的扩展。单击&lt;em&gt;清除&lt;/em&gt;以删除所有扩展名。&lt;!-- #EndLibraryItem --&gt;点击&lt;em&gt;&lt;/em&gt;&lt;em&gt;全部&lt;/em&gt;添加最常见的扩展。</target>
        </trans-unit>
        <trans-unit>
          <source>ActiveX component file</source>
          <target>ActiveX 组件文件</target>
        </trans-unit>
        <trans-unit>
          <source>This is the most common language code. It specifies a language such as English or German.</source>
          <target>这是最常见的语言代码。它指定一种语言，例如英语或德语。</target>
        </trans-unit>
        <trans-unit>
          <source>Escape character</source>
          <target>转义字符</target>
        </trans-unit>
        <trans-unit>
          <source>Application type</source>
          <target>应用类型</target>
        </trans-unit>
        <trans-unit>
          <source>XAP file localization</source>
          <target>XAP 文件本地化</target>
        </trans-unit>
        <trans-unit>
          <source>Do not use &lt;em&gt;Marked&lt;/em&gt;&lt;em&gt; &lt;/em&gt;state when filtering rows.</source>
          <target>请勿使用&lt;em&gt;标记&lt;/em&gt;&lt;em&gt; &lt;/em&gt;过滤行时的状态。</target>
        </trans-unit>
        <trans-unit>
          <source>Ignore words that are Internet and file addresses. For example &amp;quot;The web page is &lt;strong&gt;http://www.mycars.fi&lt;/strong&gt;&amp;quot; and &amp;quot;The email is &lt;strong&gt;mailto:mikko@mycars.fi&lt;/strong&gt;&amp;quot;</source>
          <target>忽略 Internet 和文件地址的单词。例如“网页是&lt;strong&gt;http://www.mycars.fi&lt;/strong&gt; ”和“电子邮件是&lt;strong&gt;mailto:mikko@mycars.fi&lt;/strong&gt; ”</target>
        </trans-unit>
        <trans-unit>
          <source>Shows online statistics about the project.</source>
          <target>显示有关该项目的在线统计信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows &lt;a href=&quot;ProjectTreeDialog.htm&quot;&gt;Project Tree Properties dialog&lt;/a&gt; that lets you configure the project tree.</source>
          <target>显示&lt;a href=&quot;ProjectTreeDialog.htm&quot;&gt;项目树属性对话框&lt;/a&gt;，可让您配置项目树。</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks if the string length in characters exceeds the maximum length set by the user.</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查以字符为单位的字符串长度是否超过用户设置的最大长度。</target>
        </trans-unit>
        <trans-unit>
          <source>Text file</source>
          <target>文本文件</target>
        </trans-unit>
        <trans-unit>
          <source>l</source>
          <target>这</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer contains three source types for Qt. They are:</source>
          <target>Sisulizer 包含三种 Qt 源类型。他们是：</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the main view shows tip of the day.</source>
          <target>如果选中，主视图会显示当天的提示。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the source language of the file.</source>
          <target>指定文件的源语言。</target>
        </trans-unit>
        <trans-unit>
          <source>In use</source>
          <target>正在使用</target>
        </trans-unit>
        <trans-unit>
          <source>Translation engines is a list of one or more translation engine. It is a service that can automatically translate text from one language to another language(s). There are two kind of translation engines.</source>
          <target>翻译引擎是一个或多个翻译引擎的列表。它是一种可以将文本从一种语言自动翻译成另一种语言的服务。有两种翻译引擎。</target>
        </trans-unit>
        <trans-unit>
          <source>Silverlight deployment  file (.xap)</source>
          <target>Silverlight 部署文件 (.xap)</target>
        </trans-unit>
        <trans-unit>
          <source>Select the character encoding that is used in the original field.</source>
          <target>选择在原始字段中使用的字符编码。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the report file name (e.g. C:\MySamples\MyProject.html). Type the name of press ... to browse a file. If the file already exists Sisulizer will overwrite the old one.</source>
          <target>指定报告文件名（例如 C:\MySamples\MyProject.html）。键入按...的名称以浏览文件。如果文件已经存在，Sisulizer 将覆盖旧文件。</target>
        </trans-unit>
        <trans-unit>
          <source>No source codes needed</source>
          <target>不需要源代码</target>
        </trans-unit>
        <trans-unit>
          <source>Normally you should not enter more new lines as the original data has but Sisulizer does not prevent it because you might need it in some situations. However Sisulizer has a new line validation that is going to warn you if the translation contains different amount of new lines as the original data.</source>
          <target>通常您不应该像原始数据那样输入更多的新行，但 Sisulizer 不会阻止它，因为在某些情况下您可能需要它。然而，Sisulizer 有一个新行验证，如果翻译包含与原始数据不同数量的新行，它会警告您。</target>
        </trans-unit>
        <trans-unit>
          <source>Sets the default zoom to the current item in the editor. In most cases this is 1:1 zoom.</source>
          <target>将默认缩放设置为编辑器中的当前项目。在大多数情况下，这是 1:1 缩放。</target>
        </trans-unit>
        <trans-unit>
          <source>Salesforce translation file (.stf)</source>
          <target>Salesforce 翻译文件 (.stf)</target>
        </trans-unit>
        <trans-unit>
          <source>This dialog is shown if you change the translation or status of a string that is &lt;a href=&quot;DuplicateString.htm&quot;&gt;duplicate&lt;/a&gt;. The dialog contains all other strings that have a different translation or status. Check those items that you want to update similar way as the string you just edited. Uncheck those items that you want to keep unchanged.</source>
          <target>如果您更改&lt;a href=&quot;DuplicateString.htm&quot;&gt;重复&lt;/a&gt;字符串的翻译或状态，则会显示此对话框。该对话框包含具有不同翻译或状态的所有其他字符串。检查那些您想以与您刚刚编辑的字符串类似的方式更新的项目。取消选中要保持不变的项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Call LaResource. ExtractResourceFiles function in the initialization section of the main form.</source>
          <target>致电 LaResource。 ExtractResourceFiles 函数位于主窗体的初始化部分。</target>
        </trans-unit>
        <trans-unit>
          <source>Windows resource file (.rc, .rc2)</source>
          <target>Windows 资源文件（.rc、.rc2）</target>
        </trans-unit>
        <trans-unit>
          <source>This is a string</source>
          <target>这是一个字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Support for Windows 8.1</source>
          <target>支持 Windows 8.1</target>
        </trans-unit>
        <trans-unit>
          <source>Virtual machine parameters</source>
          <target>虚拟机参数</target>
        </trans-unit>
        <trans-unit>
          <source>Click Test to test if Sisulizer can access &lt;a href=&quot;http://www.worldlingo.com/&quot; target=&quot;_blank&quot;&gt;WorldLingo&lt;/a&gt;.</source>
          <target>单击测试以测试 Sisulizer 是否可以访问&lt;a href=&quot;http://www.worldlingo.com/&quot; target=&quot;_blank&quot;&gt;WorldLingo&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the &lt;a href=&quot;ProjectDialog.htm&quot;&gt;Project Options&lt;/a&gt; dialog.</source>
          <target>显示&lt;a href=&quot;ProjectDialog.htm&quot;&gt;项目选项&lt;/a&gt;对话框。</target>
        </trans-unit>
        <trans-unit>
          <source>Import translation status if it is greater than the current one. If you want to import also lower statuses check &lt;em&gt;Even if status is lower&lt;/em&gt; check box.</source>
          <target>如果大于当前翻译状态，则导入翻译状态。如果您还想导入较低的状态，请选中&lt;em&gt;即使状态较低&lt;/em&gt;复选框。</target>
        </trans-unit>
        <trans-unit>
          <source>Android application file</source>
          <target>安卓应用文件</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the spell check settings</source>
          <target>指定拼写检查设置</target>
        </trans-unit>
        <trans-unit>
          <source>Use this method if you have components that you layout or create on run time.</source>
          <target>如果您有在运行时布局或创建的组件，请使用此方法。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the installation directory of HTML Help Workshop. Click ... to browse the directory. If you do not have the HTML Help Workshop click the Download HTML Help Workshop button and download it from Microsoft&#x27;s site.</source>
          <target>指定HTML Help Workshop 的安装目录。单击 ... 浏览目录。如果您没有 HTML 帮助研讨会，请单击“下载 HTML 帮助研讨会”按钮并从 Microsoft 站点下载。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the find options. Possible options are:</source>
          <target>指定查找选项。可能的选项是：</target>
        </trans-unit>
        <trans-unit>
          <source>If your application is an Ansi application it is very important that translations only use script of the language. Ansi applications can not generally show mixed script text and it is very likely that some of the text that does not belong to the default script of the language is not shown correctly. In Unicode application you can mix scripts but event there on most cases translations using two or more scripts are mistakes and not by purpose.</source>
          <target>如果您的应用程序是 Ansi 应用程序，则翻译仅使用该语言的脚本非常重要。 Ansi 应用程序通常无法显示混合脚本文本，并且很可能某些不属于该语言默认脚本的文本无法正确显示。在 Unicode 应用程序中，您可以混合脚本，但在大多数情况下，使用两个或多个脚本的翻译是错误的，而不是故意的。</target>
        </trans-unit>
        <trans-unit>
          <source>If you have different sublangauges in resources, you can check this option in order to force to update all languages fields of different sublanguages in the localized file. Otherwise only the main sublanguages field are updated.</source>
          <target>如果资源中有不同的子语言，您可以选中此选项以强制更新本地化文件中不同子语言的所有语言字段。否则仅更新主要子语言字段。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer works for only 30-days from installation.</source>
          <target>Sisulizer 安装后仅工作 30 天。</target>
        </trans-unit>
        <trans-unit>
          <source>Checks if there exists a newer version of Sisulizer.</source>
          <target>检查是否存在较新版本的 Sisulizer。</target>
        </trans-unit>
        <trans-unit>
          <source>Learn more about &lt;a href=&quot;NetLocalization.htm&quot;&gt;.NET localization&lt;/a&gt;.</source>
          <target>了解有关&lt;a href=&quot;NetLocalization.htm&quot;&gt;.NET 本地化的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Invalid hotkey character</source>
          <target>无效的热键字符</target>
        </trans-unit>
        <trans-unit>
          <source>DRC file is out of date</source>
          <target>DRC 文件已过期</target>
        </trans-unit>
        <trans-unit>
          <source>No quoting is done. Strings are written as they are.</source>
          <target>没有引用。字符串按原样编写。</target>
        </trans-unit>
        <trans-unit>
          <source>All sub elements of TextBlock are scanned a single string that contains tag names. You can change the order of each sub element.</source>
          <target>TextBlock 的所有子元素都被扫描为一个包含标签名称的字符串。您可以更改每个子元素的顺序。</target>
        </trans-unit>
        <trans-unit>
          <source>Receiving data from a translator</source>
          <target>从翻译器接收数据</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer localizes only those strings that have an include tag.</source>
          <target>Sisulizer 只本地化那些带有 include 标签的字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Main view when no project is open</source>
          <target>没有项目打开时的主视图</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;lt;text&amp;gt;Finland is the &amp;lt;u&amp;gt;most northern&amp;lt;/u&amp;gt; country in the world&amp;lt;/text&amp;gt;</source>
          <target>&amp;lt;text&amp;gt;芬兰是&amp;lt;u&amp;gt;世界上最北端&amp;lt;/u&amp;gt;的国家&amp;lt;/text&amp;gt;</target>
        </trans-unit>
        <trans-unit>
          <source>By value</source>
          <target>按价值</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the TMX file version that is written. Possible values are:</source>
          <target>指定写入的 TMX 文件版本。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure text pane settings.</source>
          <target>使用此对话框配置文本窗格设置。</target>
        </trans-unit>
        <trans-unit>
          <source>Depending on the selected format one of more of the following sheets are visible:</source>
          <target>根据所选格式，可以看到以下工作表之一：</target>
        </trans-unit>
        <trans-unit>
          <source>Write max pixels</source>
          <target>写入最大像素</target>
        </trans-unit>
        <trans-unit>
          <source>We also have &lt;a href=&quot;http://www.sisulizer.com/localization/software/third-party-control-support.shtml&quot; target=&quot;_blank&quot;&gt;third party components support program&lt;/a&gt; where most component vendors have already joined. If the vendor of the component that you use is not already joined please contact them and ask them to join.</source>
          <target>我们还有&lt;a href=&quot;http://www.sisulizer.com/localization/software/third-party-control-support.shtml&quot; target=&quot;_blank&quot;&gt;第三方组件支持计划&lt;/a&gt;，大多数组件供应商已经加入。如果您使用的组件的供应商尚未加入，请联系他们并要求他们加入。</target>
        </trans-unit>
        <trans-unit>
          <source>Regular expressions syntax documentation</source>
          <target>正则表达式语法文档</target>
        </trans-unit>
        <trans-unit>
          <source>In order to localize applications using Windows Forms you have to turn true the Localizable property of all forms and user controls.</source>
          <target>为了使用 Windows 窗体本地化应用程序，您必须将所有窗体和用户控件的 Localizable 属性设为 true。</target>
        </trans-unit>
        <trans-unit>
          <source>Keep format in code tags</source>
          <target>在代码标签中保持格式</target>
        </trans-unit>
        <trans-unit>
          <source>Context method of string resources</source>
          <target>字符串资源的上下文方法</target>
        </trans-unit>
        <trans-unit>
          <source>You have now created a Sisulizer project and imported existing translations to the project.</source>
          <target>您现在已经创建了一个 Sisulizer 项目并将现有翻译导入到该项目中。</target>
        </trans-unit>
        <trans-unit>
          <source>The length of the string in characters is written in the preceding byte of the the first character. Maximum string length is 255 characters.</source>
          <target>以字符为单位的字符串长度写在第一个字符的前一个字节中。最大字符串长度为 255 个字符。</target>
        </trans-unit>
        <trans-unit>
          <source>en</source>
          <target>在</target>
        </trans-unit>
        <trans-unit>
          <source>Application class is passed as command line parameter to the emulator.</source>
          <target>应用程序类作为命令行参数传递给模拟器。</target>
        </trans-unit>
        <trans-unit>
          <source>3rd party&lt;br&gt;
    license required</source>
          <target>第三方&lt;br&gt;需要执照</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the data type of the item. The possible values are:</source>
          <target>指定项目的数据类型。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer supports the following report tools:</source>
          <target>Sisulizer 支持以下报告工具：</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer does not locale strings that is in most cases not supposed to be localized. The actual strings depend on the source code type but for example strings in the include file and pragma lines are excluded.</source>
          <target>如果选中 Sisulizer 不本地化在大多数情况下不应该本地化的字符串。实际字符串取决于源代码类型，但例如包含文件和编译指示行中的字符串被排除在外。</target>
        </trans-unit>
        <trans-unit>
          <source>Menu options for the row selected.</source>
          <target>所选行的菜单选项。</target>
        </trans-unit>
        <trans-unit>
          <source>After this the menu item can be localized.</source>
          <target>在此之后，菜单项可以本地化。</target>
        </trans-unit>
        <trans-unit>
          <source>All .NET versions up to 4.6.1 accept both codings but this might change in the future .NET versions. This is why we recommend using the default coding.</source>
          <target>直到 4.6.1 的所有 .NET 版本都接受这两种编码，但这在未来的 .NET 版本中可能会发生变化。这就是我们建议使用默认编码的原因。</target>
        </trans-unit>
        <trans-unit>
          <source>A component with an empty name or id has been found.</source>
          <target>已找到名称或 ID 为空的组件。</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks      if the both original string and its translation include the same number of tabs.</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查原始字符串及其翻译是否包含相同数量的选项卡。</target>
        </trans-unit>
        <trans-unit>
          <source>Show progressbar</source>
          <target>显示进度条</target>
        </trans-unit>
        <trans-unit>
          <source>Support for Windows 10</source>
          <target>支持 Windows 10</target>
        </trans-unit>
        <trans-unit>
          <source>Item has been automatically translated using &lt;a href=&quot;TranslationEngines.htm&quot;&gt;translation engines&lt;/a&gt; or translation has been &lt;a href=&quot;ImportingData.htm&quot;&gt;imported&lt;/a&gt; to the project. You should check the translation.</source>
          <target>项目已使用&lt;a href=&quot;TranslationEngines.htm&quot;&gt;翻译引擎&lt;/a&gt;自动翻译或翻译已&lt;a href=&quot;ImportingData.htm&quot;&gt;导入&lt;/a&gt;项目。你应该检查一下翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Use the validation menu to start validation process, to fix validation errors and to configure how to validate the project.</source>
          <target>使用验证菜单启动验证过程，修复验证错误并配置如何验证项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Windows applications</source>
          <target>Windows 应用程序</target>
        </trans-unit>
        <trans-unit>
          <source>Ansi strings are never converted to Unicode but are written as Ansi strings.</source>
          <target>Ansi 字符串永远不会转换为 Unicode，而是写为 Ansi 字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Spell dictionary file</source>
          <target>拼写字典文件</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the localized resource data of selected node in a binary format.</source>
          <target>以二进制格式显示选定节点的本地化资源数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows size, version, create date, scan date and build date of the project.</source>
          <target>显示项目的大小、版本、创建日期、扫描日期和构建日期。</target>
        </trans-unit>
        <trans-unit>
          <source>The method how VCL chooses the initial resource DLL is:</source>
          <target>VCL如何选择初始资源DLL的方法是：</target>
        </trans-unit>
        <trans-unit>
          <source>When working with translation grid you find the following shortcuts useful:</source>
          <target>使用翻译网格时，您会发现以下快捷方式很有用：</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the following lines will be added to HEAD-section if the section does not already contain them:&lt;br&gt;
        &lt;code&gt;&amp;lt;meta http-equiv=&quot;Content-Language&quot; content=&quot;fi&quot;&amp;gt;&lt;/code&gt;&lt;br&gt;
      &lt;code&gt;&amp;lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;&amp;gt;&lt;/code&gt;&lt;br&gt;
      If the section already contains them Sisulizer just updates the content of the lines.</source>
          <target>如果选中以下行，如果该部分尚未包含它们，则会将它们添加到 HEAD-section：&lt;br&gt; &lt;code&gt;&amp;lt;meta http-equiv=&amp;quot;Content-Language&amp;quot; content=&amp;quot;fi&amp;quot;&amp;gt;&lt;/code&gt;&lt;br&gt; &lt;code&gt;&amp;lt;meta http-equiv=&amp;quot;Content-Type&amp;quot; content=&amp;quot;text/html; charset=utf-8&amp;quot;&amp;gt;&lt;/code&gt;&lt;br&gt;如果该部分已经包含它们 Sisulizer 只是更新行的内容。</target>
        </trans-unit>
        <trans-unit>
          <source>Formatting validations</source>
          <target>格式化验证</target>
        </trans-unit>
        <trans-unit>
          <source>Invalid amount of tabs</source>
          <target>无效的标签数量</target>
        </trans-unit>
        <trans-unit>
          <source>Delphi XE2 supports FireMonkey platform. It is a cross platform component library. You can use Sisulizer to localize the application files that Delphi creates. When you add an OSX target to your Delphi project the compiler creates Mach-O file. It is like EXE file in Windows. Mach-O file contains the compiled code and resources. When Sisulizer localizes a Mach-O file it creates either a file that is identical to the original file except the resource data (forms, strings, images, etc) have been localized into the target language, or a resource library that contains the localized resources.</source>
          <target>Delphi XE2 支持 FireMonkey 平台。它是一个跨平台的组件库。您可以使用 Sisulizer 本地化 Delphi 创建的应用程序文件。当您将 OSX 目标添加到 Delphi 项目时，编译器会创建 Mach-O 文件。它就像 Windows 中的 EXE 文件。 Mach-O 文件包含编译后的代码和资源。当 Sisulizer 本地化 Mach-O 文件时，它会创建一个与原始文件相同的文件，但资源数据（表单、字符串、图像等）已本地化为目标语言，或者创建一个包含本地化资源的资源库.</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Save Password&lt;/em&gt; indicates whatever the password will be saved to the project file. If saved, the password is encrypted in the project file.</source>
          <target>&lt;em&gt;保存密码&lt;/em&gt;表示将保存到项目文件的密码。如果保存，密码会在项目文件中加密。</target>
        </trans-unit>
        <trans-unit>
          <source>Clear the &lt;a href=&quot;WorkingWithTranslationSheet.htm#Marked&quot;&gt;Marked&lt;/a&gt; status of the every row and translation in the project.</source>
          <target>清除项目中每一行和翻译的&lt;a href=&quot;WorkingWithTranslationSheet.htm#Marked&quot;&gt;标记&lt;/a&gt;状态。</target>
        </trans-unit>
        <trans-unit>
          <source>Empty original</source>
          <target>空原件</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected VCL (Delphi/C++Builder) form file is localized. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选 VCL (Delphi/C++Builder) 表单文件的本地化方式。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Include those rows that has &lt;em&gt;Changed&lt;/em&gt; status.</source>
          <target>包括状态已&lt;em&gt;更改的&lt;/em&gt;那些行。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer does not contain &lt;a href=&quot;SpellChecking.htm#Grammar&quot;&gt;grammar checking&lt;/a&gt; support for selected language. Currently grammar checking is enabled for some languages only. Please contact Sisulizer support to check the status of grammar checking for your language.</source>
          <target>Sisulizer 不包含对所选语言的&lt;a href=&quot;SpellChecking.htm#Grammar&quot;&gt;语法检查&lt;/a&gt;支持。目前仅对某些语言启用语法检查。请联系 Sisulizer 支持以检查您的语言的语法检查状态。</target>
        </trans-unit>
        <trans-unit>
          <source>Package contains</source>
          <target>包包含</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;strong&gt;# This is a comment&lt;/strong&gt;&lt;br&gt;
[Values]&lt;br&gt;
One=A string&lt;br&gt;
&lt;strong&gt;# Another comment&lt;/strong&gt;&lt;br&gt;
Two=Another string</source>
          <target>&lt;strong&gt;#这是一条评论&lt;/strong&gt;&lt;br&gt;[价值观]&lt;br&gt;一个=一个字符串&lt;br&gt;&lt;strong&gt;# 另一个评论&lt;/strong&gt;&lt;br&gt;二=另一个字符串</target>
        </trans-unit>
        <trans-unit>
          <source>yes (.xaml only)</source>
          <target>是（仅 .xaml）</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to bind file extensions to a specific scanner or to disable file scanning. Sisulizer uses these &lt;a href=&quot;FileMappings.htm&quot;&gt;file mappings&lt;/a&gt; to bind file types to file scanners. The build-in mappings are suitable for most users. However if your file has a custom file extension you can add a custom file mapping or you can change the build-in mappings.</source>
          <target>使用此表将文件扩展名绑定到特定扫描仪或禁用文件扫描。 Sisulizer 使用这些&lt;a href=&quot;FileMappings.htm&quot;&gt;文件映射&lt;/a&gt;将文件类型绑定到文件扫描仪。内置映射适用于大多数用户。但是，如果您的文件具有自定义文件扩展名，您可以添加自定义文件映射或更改内置映射。</target>
        </trans-unit>
        <trans-unit>
          <source>As above but four digit hex value is used instead decimal value.</source>
          <target>如上所述，但使用四位十六进制值代替十进制值。</target>
        </trans-unit>
        <trans-unit>
          <source>Ignore words with numbers</source>
          <target>忽略带有数字的单词</target>
        </trans-unit>
        <trans-unit>
          <source>Use country neutral translations when translating a sub language</source>
          <target>翻译子语言时使用国家中性翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Translate the selected cells using &lt;a href=&quot;TranslationEnginesDialogInternalTranslationMemory.htm&quot;&gt;translation engines&lt;/a&gt;.</source>
          <target>使用&lt;a href=&quot;TranslationEnginesDialogInternalTranslationMemory.htm&quot;&gt;翻译引擎&lt;/a&gt;翻译选定的单元格。</target>
        </trans-unit>
        <trans-unit>
          <source>200 MB free hard disk space</source>
          <target>200 MB 可用硬盘空间</target>
        </trans-unit>
        <trans-unit>
          <source>Remove unused items automatically</source>
          <target>自动删除未使用的项目</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can properly handle Asian hotkeys with Chinese, Korean, Japanese and Thail languages.</source>
          <target>Sisulizer 可以正确处理中文、韩文、日文和泰文的亚洲热键。</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be a &lt;a href=&quot;WindowsLocalization.htm#Binary&quot;&gt;Windows binary file&lt;/a&gt; created by C++Builder compiler (e.g. C:\Samples\Project1.exe) and using VCL resources.</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是由 C++Builder 编译器（例如 C:\Samples\Project1.exe）创建并使用 VCL 资源创建的&lt;a href=&quot;WindowsLocalization.htm#Binary&quot;&gt;Windows 二进制文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Contains a list of rules that specify the format of the file. Click + to add a new rule. Click x to remove the selected rule. Click &lt;em&gt;Notepad&lt;/em&gt; to &lt;a href=&quot;TextRuleDialog.htm&quot;&gt;edit the selected rule&lt;/a&gt;. Click &lt;em&gt;Up arrow&lt;/em&gt; to move selected rule one step up. Click &lt;em&gt;Down arrow&lt;/em&gt; to move selected rule one step down. Click &lt;em&gt;Import&lt;/em&gt; to read rule definition from a file. Click &lt;em&gt;Export&lt;/em&gt; to write rule definition to a file.</source>
          <target>包含指定文件格式的规则列表。单击 + 添加新规则。单击 x 以删除所选规则。单击&lt;em&gt;记事本&lt;/em&gt;&lt;a href=&quot;TextRuleDialog.htm&quot;&gt;编辑所选规则&lt;/a&gt;。单击&lt;em&gt;向上箭头&lt;/em&gt;将所选规则&lt;em&gt;向上&lt;/em&gt;移动一级。单击&lt;em&gt;向下箭头&lt;/em&gt;将所选规则&lt;em&gt;向下&lt;/em&gt;移动一级。单击&lt;em&gt;导入&lt;/em&gt;以从文件中读取规则定义。单击&lt;em&gt;导出&lt;/em&gt;将规则定义写入文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can localize reports. In order to do that it localizes the report template data and the &lt;a href=&quot;DatabaseLocalization.htm&quot;&gt;database&lt;/a&gt; that the report uses. Together this produces multilingual reports feature where the same report can be produced in several languages.</source>
          <target>Sisulizer 可以本地化报告。为此，它本地化了报告模板数据和报告使用的&lt;a href=&quot;DatabaseLocalization.htm&quot;&gt;数据库&lt;/a&gt;。这将生成多语言报告功能，其中可以用多种语言生成相同的报告。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the programming language of the source code file. Sisulizer tries to detect the programming/script language. If the detection result is not correct select the right language from the list. If there are no such language or not even a compatible one in the list select &lt;em&gt;Other programming language&lt;/em&gt; and enter the string and character delimiters and comment characters. Sample box shows sample source code lines based on the selected settings.</source>
          <target>指定源代码文件的编程语言。 Sisulizer 尝试检测编程/脚本语言。如果检测结果不正确，请从列表中选择正确的语言。如果列表中没有这样的语言或什至没有兼容的&lt;em&gt;语言&lt;/em&gt;，请选择&lt;em&gt;其他编程语言&lt;/em&gt;并输入字符串和字符分隔符以及注释字符。示例框显示基于所选设置的示例源代码行。</target>
        </trans-unit>
        <trans-unit>
          <source>.NET has a build in feature using satellite assemby files. They are resource file that contain localized forms and resource data. When a .NET applications starts .NET runtime is looking for a possible satellite assembly file from the sub directories of that directory where the original file is located. If .NET runtime can find a satellite assembly file it uses resources of the satellite assembly file instead of the original assembly file.</source>
          <target>.NET 具有使用卫星程序集文件的内置功能。它们是包含本地化表单和资源数据的资源文件。当 .NET 应用程序启动时，.NET 运行时会从原始文件所在目录的子目录中寻找可能的附属程序集文件。如果 .NET 运行时可以找到附属程序集文件，它会使用附属程序集文件的资源而不是原始程序集文件。</target>
        </trans-unit>
        <trans-unit>
          <source>If the original Country table looks like this,</source>
          <target>如果原始 Country 表看起来像这样，</target>
        </trans-unit>
        <trans-unit>
          <source>where comment is any string, mc is the maximum length of the translation in characters,  mp is the maximum length of the translation is pixels, and expression is the &lt;a href=&quot;../CombinedStrings.htm&quot;&gt;combined string&lt;/a&gt; expression</source>
          <target>其中，comment 是任何字符串，mc 是翻译的最大长度（以字符为单位），mp 是翻译的最大长度（像素），expression 是&lt;a href=&quot;../CombinedStrings.htm&quot;&gt;组合的字符串&lt;/a&gt;表达式</target>
        </trans-unit>
        <trans-unit>
          <source>Enter the minimum value of the primary id. If you want to use some reserved pool for generated row enter a value that specified the start id of that pool.</source>
          <target>输入主 ID 的最小值。如果您想为生成的行使用一些保留池，请输入一个指定该池的起始 ID 的值。</target>
        </trans-unit>
        <trans-unit>
          <source>Project Wizard - Binary file</source>
          <target>项目向导 - 二进制文件</target>
        </trans-unit>
        <trans-unit>
          <source>Updates the PRODUCTVERSION ?,?,?,? field in VERSIONINFO resource</source>
          <target>更新 PRODUCTVERSION ?,?,?,? VERSIONINFO 资源中的字段</target>
        </trans-unit>
        <trans-unit>
          <source>Triggers are used to notify users to do some task that should be done every now and then. Validating and removing unused items are such task. If you want Sisulizer not to notify you uncheck those tasks.</source>
          <target>触发器用于通知用户执行一些应该不时完成的任务。验证和删除未使用的项目就是这样的任务。如果您不希望 Sisulizer 通知您，请取消选中这些任务。</target>
        </trans-unit>
        <trans-unit>
          <source>Zoom to Fit</source>
          <target>缩放以适合</target>
        </trans-unit>
        <trans-unit>
          <source>Use Multilizer to build localized files that are up to the Multilizer project file. Start Multilizer, open the project and choose Project | Build localized items.</source>
          <target>使用 Multilizer 构建符合 Multilizer 项目文件的本地化文件。启动 Multilizer，打开项目并选择 Project |构建本地化项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Custom dictionary is always project depend and the actual words in the custom dictionary are saved inside Sisulizer project file. Because custom words are embedded to the project file there is no need to backup the custom dictionary file or send custom dictionary file to translators. Sisulizer will automatically exchange also custom dictionary together with the project data.&lt;br&gt;
      This is the recommended way to save custom dictionary.</source>
          <target>自定义词典始终取决于项目，自定义词典中的实际单词保存在 Sisulizer 项目文件中。由于自定义词嵌入到项目文件中，因此无需备份自定义词典文件或将自定义词典文件发送给翻译人员。 Sisulizer 还会自动与项目数据交换自定义字典。&lt;br&gt;这是保存自定义词典的推荐方法。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the localized name of the country (e.g. Finland, Germany, Japan).</source>
          <target>指定国家的本地化名称（例如芬兰、德国、日本）。</target>
        </trans-unit>
        <trans-unit>
          <source>Some projects have binary rows. Such rows usually contain custom data that user translates by loading data from a file. Updating these translations manually may be laborious. To make it easier you can turn on automatic translation update. When it is turned on Sisulizer remembers the file name and the next time the project is opened Sisulizer compares the translated data to the data in the file. If data in the file differs from the current data Sisulizer automatically loads new data from the file to the project. To turn automatic translation update on click Yes when Sisulizer prompts it after you have selected the file for the first time.</source>
          <target>一些项目有二进制行。这些行通常包含用户通过从文件加载数据来翻译的自定义数据。手动更新这些翻译可能很费力。为了更轻松，您可以打开自动翻译更新。当它打开时，Sisulizer 会记住文件名，下次打开项目时，Sisulizer 会将翻译后的数据与文件中的数据进行比较。如果文件中的数据与当前数据不同，Sisulizer 会自动将新数据从文件加载到项目中。要打开自动翻译更新，请在您第一次选择文件后 Sisulizer 提示时单击是。</target>
        </trans-unit>
        <trans-unit>
          <source>How to select duplicate strings</source>
          <target>如何选择重复的字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer&#x27;s Database directory contains database samples.</source>
          <target>Sisulizer 的数据库目录包含数据库示例。</target>
        </trans-unit>
        <trans-unit>
          <source>In this method Sisulizer copies the original row for each language. The copied rows equal to the original one except the Language field value is different (matches the language of the row) and those fields that have been marked to be localized contain localized value.</source>
          <target>在此方法中，Sisulizer 复制每种语言的原始行。复制的行与原始行相同，除了 Language 字段值不同（与行的语言匹配）并且那些已标记为本地化的字段包含本地化值。</target>
        </trans-unit>
        <trans-unit>
          <source>Statistics will be calulated in charcters.</source>
          <target>统计数据将以字符计算。</target>
        </trans-unit>
        <trans-unit>
          <source>Sometimes your data is so long that it does not fit into single field. In that case you have to break a single data into multiple block and store them into multiple table, fields or rows. Sisulizer supports case where you have the first data block in the actual field but all other data block in another table. This table is called extended table and it contains the data block that does not fit to the actual field(s).</source>
          <target>有时您的数据太长以至于无法放入单个字段。在这种情况下，您必须将单个数据分成多个块并将它们存储到多个表、字段或行中。 Sisulizer 支持您在实际字段中拥有第一个数据块但在另一个表中拥有所有其他数据块的情况。该表称为扩展表，它包含不适合实际字段的数据块。</target>
        </trans-unit>
        <trans-unit>
          <source>To make Sisulizer to create localized resource DLLs for your MFC file right click the source name on the project tree and choose Properties. Check &lt;em&gt;Resource DLL files&lt;/em&gt; check box.</source>
          <target>要使 Sisulizer 为您的 MFC 文件创建本地化的资源 DLL，请右键单击项目树上的源名称并选择“属性”。选中&lt;em&gt;资源 DLL 文件&lt;/em&gt;复选框。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can access and localize DBISAM databases</source>
          <target>Sisulizer 可以访问和本地化 DBISAM 数据库</target>
        </trans-unit>
        <trans-unit>
          <source>Qt is a cross-platform applications development platform from &lt;a href=&quot;http://qt.nokia.com/&quot; target=&quot;_blank&quot;&gt;Nokia&lt;/a&gt;. Qt applications use two kind of resource files: user interface files and translation files. User interface files (.ui) define user interface elements such as forms and dialogs. Translations file (.ts) contains strings.</source>
          <target>Qt 是&lt;a href=&quot;http://qt.nokia.com/&quot; target=&quot;_blank&quot;&gt;诺基亚&lt;/a&gt;的跨平台应用程序开发平台。 Qt 应用程序使用两种资源文件：用户界面文件和翻译文件。用户界面文件 (.ui) 定义用户界面元素，例如表单和对话框。翻译文件 (.ts) 包含字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Comment value</source>
          <target>评论值</target>
        </trans-unit>
        <trans-unit>
          <source>Resource contains XML  data.</source>
          <target>资源包含 XML 数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Let&#x27;s have an example. We have an Finnish software where the original language is Finnish. We localize this software to American English, British English, German, Swiss German and Japanese.</source>
          <target>让我们举个例子。我们有一个芬兰语软件，其中的原始语言是芬兰语。我们将此软件本地化为美式英语、英式英语、德语、瑞士德语和日语。</target>
        </trans-unit>
        <trans-unit>
          <source>Add string if the status is greater or equal to</source>
          <target>如果状态大于或等于，则添加字符串</target>
        </trans-unit>
        <trans-unit>
          <source>HTML scripting (i.e. ASP, JSP and PHP) support</source>
          <target>HTML 脚本（即 ASP、JSP 和 PHP）支持</target>
        </trans-unit>
        <trans-unit>
          <source>C/C++ compatible escaping is used. \ is the escape character. Following code are used:</source>
          <target>使用 C/C++ 兼容转义。 \ 是转义字符。使用以下代码：</target>
        </trans-unit>
        <trans-unit>
          <source>MFC 7 and later has a build in feature using resource DLLs. When a MFC applications starts MFC is looking for a possible resource DLL from the same directory where the original .exe or .dll is located. If MFC can find this it uses resources of the resource DLL instead of the original PE file. Resource DLLs are named &lt;I&gt;ApplicationNameXXX&lt;/I&gt;.dll, where &lt;I&gt;ApplicationName&lt;/I&gt; is the name of the .exe or .dll using MFC, and &lt;I&gt;XXX&lt;/I&gt; is the three-letter code for the language of the resources. For example MyApplicationENU.dll is an English (United States) DLL and MyApplicationDEU.dd is German (Germany) DLL.</source>
          <target>MFC 7 及更高版本具有使用资源 DLL 的内置功能。当 MFC 应用程序启动时，MFC 正在从原始 .exe 或 .dll 所在的同一目录中寻找可能的资源 DLL。如果 MFC 可以找到它，它将使用资源 DLL 的资源而不是原始 PE 文件。资源 DLL 被命名为&lt;I&gt;ApplicationNameXXX&lt;/i&gt; .dll，其中&lt;I&gt;ApplicationName&lt;/i&gt;是使用 MFC 的 .exe 或 .dll 的名称， &lt;I&gt;XXX&lt;/i&gt;是资源语言的三字母代码。例如，MyApplicationENU.dll 是英语（美国）DLL，MyApplicationDEU.dd 是德语（德国）DLL。</target>
        </trans-unit>
        <trans-unit>
          <source>Use checked language ids</source>
          <target>使用已检查的语言 ID</target>
        </trans-unit>
        <trans-unit>
          <source>No matter what your tag mode is you can always use slz tag to give information about strings.</source>
          <target>无论您的标签模式是什么，您始终可以使用 slz 标签来提供有关字符串的信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;JsonLocalization.htm&quot;&gt;JSON file is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;JsonLocalization.htm&quot;&gt;JSON 文件的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Create localized items</source>
          <target>创建本地化项目</target>
        </trans-unit>
        <trans-unit>
          <source>An encoding that matchs the original encoding is used.&lt;br&gt;
      For example if original HTML data uses Windows code page 1252 (charset=windows-1252) Sisulizer uses Windows code page that matches the target language. For Japanese it is Windows code page 932. For Finnish it is 1252. For German it is 1252. For Greek it is 1253 and so on.</source>
          <target>使用与原始编码匹配的编码。&lt;br&gt;例如，如果原始 HTML 数据使用 Windows 代码页 1252 (charset=windows-1252) Sisulizer 使用与目标语言匹配的 Windows 代码页。对于日语，它是 Windows 代码页 932。对于芬兰语，它是 1252。对于德语，它是 1252。对于希腊语，它是 1253，等等。</target>
        </trans-unit>
        <trans-unit>
          <source>Resource file localization</source>
          <target>资源文件本地化</target>
        </trans-unit>
        <trans-unit>
          <source>Scan extensions</source>
          <target>扫描扩展</target>
        </trans-unit>
        <trans-unit>
          <source>Embedded resource type</source>
          <target>嵌入资源类型</target>
        </trans-unit>
        <trans-unit>
          <source>WPF and Silverlight</source>
          <target>WPF 和 Silverlight</target>
        </trans-unit>
        <trans-unit>
          <source>Select the language(s) that you want to import.</source>
          <target>选择要导入的语言。</target>
        </trans-unit>
        <trans-unit>
          <source>You can open source dialog by right clicking the name of the source in the project tree and choosing Properties.</source>
          <target>您可以通过右键单击项目树中的源名称并选择“属性”来打开源对话框。</target>
        </trans-unit>
        <trans-unit>
          <source>First line sample shows the layout of the resulting excel sheet. It changes according to the settings done by the user.</source>
          <target>第一行示例显示了生成的 Excel 工作表的布局。它根据用户所做的设置而变化。</target>
        </trans-unit>
        <trans-unit>
          <source>Open the selected item.</source>
          <target>打开所选项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Contains a list of default fonts. The contains the name and size of the default font for each script that the project uses. Some languages uses the same script. For example English and Finnish both use the Western script. To edit a font double click a font line or select a font line and click &lt;em&gt;Edit&lt;/em&gt;.</source>
          <target>包含默认字体列表。包含项目使用的每个脚本的默认字体的名称和大小。某些语言使用相同的脚本。例如英语和芬兰语都使用西方文字。要编辑字体，请双击字体行或选择字体行并单击&lt;em&gt;编辑&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Asian hotkeys</source>
          <target>亚洲热键</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the range where to import and language(s) of each column in the selected range.</source>
          <target>使用此表指定所选范围内每列的导入范围和语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to view or edit a system language of Sisulizer. Your can edit only custom languages (e.g. language that you have added). All other are read only so you can only view them.</source>
          <target>使用此对话框查看或编辑 Sisulizer 的系统语言。您只能编辑自定义语言（例如您添加的语言）。所有其他都是只读的，因此您只能查看它们。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the language of the current item. This is visible only of the Type is set to &lt;em&gt;text&lt;/em&gt;.</source>
          <target>指定当前项目的语言。这仅在 Type 设置为&lt;em&gt;text 时&lt;/em&gt;可见。</target>
        </trans-unit>
        <trans-unit>
          <source>Item contains a count of the items in the file.</source>
          <target>项目包含文件中项目的计数。</target>
        </trans-unit>
        <trans-unit>
          <source>When Sisulizer converts projects made with other localization tool into Sisulizer project it first creates similar project file and them imports existing translations into that.</source>
          <target>当 Sisulizer 将使用其他本地化工具制作的项目转换为 Sisulizer 项目时，它首先创建类似的项目文件，然后将现有翻译导入其中。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked all output files of the solution (e.g. localized satellite assembly files) will be created to that directory. If unchecked then the output directory of each project is used.</source>
          <target>如果选中该解决方案的所有输出文件（例如本地化的附属程序集文件），将在该目录中创建。如果未选中，则使用每个项目的输出目录。</target>
        </trans-unit>
        <trans-unit>
          <source>Windows PE file (.exe, .dll, .ocx)  that has been compiled with a Visual Basic (Win32)</source>
          <target>已使用 Visual Basic (Win32) 编译的 Windows PE 文件（.exe、.dll、.ocx）</target>
        </trans-unit>
        <trans-unit>
          <source>TLaTranslator can translate all basic properties such as string, integer, color, etc. However it can not translate binary properties and some complex properties of certain components. In order to translate also those properties TLaTranslator uses modules. They are add-ons to TLaTranslator and provide translation of binary and complex properties. There are several module classes, one for each type of component. The following table contains the module components.</source>
          <target>TLaTranslator 可以翻译字符串、整数、颜色等所有基本属性，但不能翻译二进制属性和某些组件的一些复杂属性。为了翻译这些属性，TLaTranslator 使用了模块。它们是 TLaTranslator 的附加组件，提供二进制和复杂属性的翻译。有几个模块类，每种类型的组件一个。下表包含模块组件。</target>
        </trans-unit>
        <trans-unit>
          <source>Start creating project by adding HTML resource. Click &lt;em&gt;Create New&lt;/em&gt; to start &lt;a href=&quot;ProjectWizard.htm&quot;&gt;Project Wizard&lt;/a&gt;. Choose &lt;em&gt;Localize all similar files in a directory&lt;/em&gt; and click &lt;em&gt;Next&lt;/em&gt;. Browse the root directory of your WebHelp project and set &lt;em&gt;Select the file type&lt;/em&gt; to *.htm. Complete the wizard and Sisulizer add HTML files to the project.</source>
          <target>通过添加 HTML 资源开始创建项目。单击&lt;em&gt;新建&lt;/em&gt;以启动&lt;a href=&quot;ProjectWizard.htm&quot;&gt;项目向导&lt;/a&gt;。选择&lt;em&gt;本地化目录中的所有类似文件，&lt;/em&gt;然后单击&lt;em&gt;下一步&lt;/em&gt;。浏览 WebHelp 项目的根目录并将&lt;em&gt;选择文件类型&lt;/em&gt;设置为 *.htm。完成向导，Sisulizer 将 HTML 文件添加到项目中。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;API key&lt;/em&gt; specifies the API key  that the Google Traslate uses. You have to buy your own  API key. Click ... to buy your own API key.</source>
          <target>&lt;em&gt;API 密钥&lt;/em&gt;指定 Google Traslate 使用的 API 密钥。您必须购买自己的 API 密钥。单击 ... 购买您自己的 API 密钥。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;IniLocalization.htm&quot;&gt;ini file is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;IniLocalization.htm&quot;&gt;ini 文件的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>For an example lets look at Windows application create by Visual C++. The original file might have C:\Files\MyApp.exe. When Sisulizer creates German application it creates German sub directory (de) and creates the German application into that directory. The result file will be C:\Files\de\MyApp.exe. To run your application in German start the German application instead of the original one.</source>
          <target>例如，让我们看看由 Visual C++ 创建的 Windows 应用程序。原始文件可能包含 C:\Files\MyApp.exe。当 Sisulizer 创建德语应用程序时，它会创建德语子目录 (de) 并将德语应用程序创建到该目录中。结果文件将是 C:\Files\de\MyApp.exe。要以德语运行您的应用程序，请启动德语应用程序而不是原始应用程序。</target>
        </trans-unit>
        <trans-unit>
          <source>It is recommended to have both checked. This way Sisulizer first imports from existing localized files and them from project file. This makes Sisulizer to use the translation from the localized file first and the project translation only if the localized file does not contain translation but the project files does.</source>
          <target>建议两者都检查。这样 Sisulizer 首先从现有的本地化文件导入，然后从项目文件导入。这使得 Sisulizer 首先使用来自本地化文件的翻译，并且仅当本地化文件不包含翻译但项目文件包含时才使用项目翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Set the full path name of Qt&#x27;s lupdate commmand line tool.</source>
          <target>设置Qt的lupdate命令行工具的全路径名。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the file options.</source>
          <target>使用此表指定文件选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Machine translator that uses &lt;a href=&quot;http://www.worldlingo.com/&quot; target=&quot;_blank&quot;&gt;WorldLingo&#x27;s&lt;/a&gt; translation service to translate strings. WorldLingo supports all major languages.</source>
          <target>使用&lt;a href=&quot;http://www.worldlingo.com/&quot; target=&quot;_blank&quot;&gt;WorldLingo 的&lt;/a&gt;翻译服务来翻译字符串的机器翻译器。 WorldLingo 支持所有主要语言。</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks if   a hotkey is specified in the original value, the translated value also has it as well and vice versa.</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查是否在原始值中指定了热键，转换后的值也有它，反之亦然。</target>
        </trans-unit>
        <trans-unit>
          <source>Sets grid spacing in pixels along the x-axis. Specify a higher number to increase grid spacing.</source>
          <target>设置沿 x 轴的网格间距（以像素为单位）。指定更大的数字以增加网格间距。</target>
        </trans-unit>
        <trans-unit>
          <source>This line of C# code makes .NET runtime to look for satellite assembly file that matched the default locale of the user. Not the user intrface language of the operating system itself. Changing the default locale of the user is easy using the control panel. You can &lt;a href=&quot;ActionMessageNetUiLocale.htm&quot;&gt;read more&lt;/a&gt; about how to make the application to use the user default language.</source>
          <target>这行 C# 代码使 .NET 运行时查找与用户的默认语言环境相匹配的附属程序集文件。不是操作系统本身的用户界面语言。使用控制面板可以轻松更改用户的默认语言环境。您可以&lt;a href=&quot;ActionMessageNetUiLocale.htm&quot;&gt;阅读&lt;/a&gt;有关如何使应用程序使用用户默认语言的更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the parameter for Java virtual machine.</source>
          <target>指定 Java 虚拟机的参数。</target>
        </trans-unit>
        <trans-unit>
          <source>User interface component properties or string resource items can contain HTML data instead of plain text. In most cases this HTML data has elements that contain string data. Only the string data need to be localized. The rest of the HTML element need to be left at it is. Without embedded HTML data feature a single row will contains all raw HTML data. This may be very hard to translate and it is also likely that the translated HTML data will become invalid. In order to make translation of embedded HTML data easy and safe Sisulizer can handle string data as HTML. User selects the element that should belocalized and Sisulizer breaks the HTML data into several different part. Each part will be on its own row and each part contains plain text that is easy to translate.</source>
          <target>用户界面组件属性或字符串资源项可以包含 HTML 数据而不是纯文本。在大多数情况下，此 HTML 数据具有包含字符串数据的元素。只有字符串数据需要本地化。 HTML 元素的其余部分需要保留。如果没有嵌入 HTML 数据功能，一行将包含所有原始 HTML 数据。这可能很难翻译，而且翻译后的 HTML 数据也可能无效。为了使嵌入的 HTML 数据的翻译变得容易和安全，Sisulizer 可以将字符串数据作为 HTML 处理。用户选择应该本地化的元素，Sisulizer 将 HTML 数据分成几个不同的部分。每个部分都在自己的行上，每个部分都包含易于翻译的纯文本。</target>
        </trans-unit>
        <trans-unit>
          <source>Because text is read from right to left also the user interface should be aligned from right to left. In Western user interface if two controls are in a sequence the first controls in on the left side and the second control on the right side. In bidirectional user interface it is opposite. Generally horizontal mirroring will perform the layout change. Just mirror the form horizontally and it will be right.</source>
          <target>因为文本是从右向左阅读的，所以用户界面也应该从右向左对齐。在西方用户界面中，如果两个控件按顺序排列，第一个控件在左侧，第二个控件在右侧。在双向用户界面中则相反。通常水平镜像将执行布局更改。只需水平镜像表格，它就会正确。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer&#x27;s &lt;a href=&quot;LocaleCode.htm&quot;&gt;locale code&lt;/a&gt; is used.&lt;br&gt;
    For example &amp;quot;en&amp;quot; is for English, &amp;quot;en-US&amp;quot; is fo English (United States), &amp;quot;zh&amp;quot; is for Simplified Chinese, and &amp;quot;zh.tra&amp;quot; is for Traditional Chinese. The default Chinese script is the Simplified Chinese. This is why the language code of Traditional Chinese has a script part &amp;quot;zh.tra&amp;quot;.</source>
          <target>使用 Sisulizer 的&lt;a href=&quot;LocaleCode.htm&quot;&gt;区域设置代码&lt;/a&gt;。&lt;br&gt;例如“en”是英文，“en-US”是英文（美国），“zh”是简体中文，“zh.tra”是繁体中文。默认的中文脚本是简体中文。这就是为什么繁体中文的语言代码有一个脚本部分“zh.tra”。</target>
        </trans-unit>
        <trans-unit>
          <source>The dialog contains following sheets:</source>
          <target>该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Support for Visual Studio 2017</source>
          <target>支持 Visual Studio 2017</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the pane header is visible.</source>
          <target>如果选中，则窗格标题可见。</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks if the translation contains required strings. Each string row can contains one or more required strings. They are used to check that translation contains the data that is necessary. For example you might have the name of the product in you string and you want to make sure that the translation contains the same name. Take a look at the following string: &amp;quot;SUPERCLEANER is very easy to use&amp;quot;. SUPERCLEANER is the name of the product and if the company has decided that it must be always written like this the string should be set as required. When translator translates this is is very likely that they will translate it in a different way. For example Finnish translations might be &amp;quot;Supercleaner on todella helppo käyttää&amp;quot;. Here the translator has followed the standard Finnish custom but it is against the company policy where name would always be written in capital letters. It should be &amp;quot;SUPERCLEANER on todella helppo käyttää&amp;quot;. Japanese translations might be &amp;quot;スーパークリーナーはとても使いやすいです&amp;quot;. This is according normal Japanese way but against company policy. It should be &amp;quot;SUPERCLEANERはとても使いやすいです&amp;quot;.</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查翻译是否包含必需的字符串。每个字符串行可以包含一个或多个必需的字符串。它们用于检查翻译是否包含必要的数据。例如，您的字符串中可能包含产品名称，并且您希望确保翻译包含相同的名称。看看下面的字符串：“SUPERCLEANER is very easy to use”。 SUPERCLEANER 是产品的名称，如果公司决定必须始终这样写，则应根据需要设置字符串。当翻译人员翻译时，他们很可能会以不同的方式进行翻译。例如，芬兰语翻译可能是“Supercleaner on todella helppo käyttää”。在这里，翻译人员遵循了标准的芬兰习俗，但违反了公司政策，即名称始终以大写字母书写。它应该是“超级清洁剂 on todella helppo käyttää”。日语翻译可能是“スーパークリーナーはとても使いやすいです”。这是按照正常的日本方式，但违反公司政策。应该是「SUPERCLEANERはとても使いやすいです」。</target>
        </trans-unit>
        <trans-unit>
          <source>Use default XAML viewer</source>
          <target>使用默认 XAML 查看器</target>
        </trans-unit>
        <trans-unit>
          <source>If you choose not to keep the original resources Sisulizer will delete the original resource item if it adds a localized one.</source>
          <target>如果您选择不保留原始资源，Sisulizer 如果添加本地化的资源项，则会删除原始资源项。</target>
        </trans-unit>
        <trans-unit>
          <source>Use &lt;a href=&quot;ImportWizard.htm&quot;&gt;Import Wizard&lt;/a&gt; to import translations from the translation file that the translator has sent. Use this if your translator does not use Sisulizer but some other translation tool.</source>
          <target>使用&lt;a href=&quot;ImportWizard.htm&quot;&gt;导入向导&lt;/a&gt;从翻译人员发送的翻译文件中导入翻译。如果您的翻译人员不使用 Sisulizer，而是使用其他一些翻译工具，请使用此选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Check this if you want all external files be relative to the original file(s).</source>
          <target>如果您希望所有外部文件都与原始文件相关，请选中此项。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can use several spell checker engines. The following engines are supported:</source>
          <target>Sisulizer 可以使用多个拼写检查引擎。支持以下引擎：</target>
        </trans-unit>
        <trans-unit>
          <source>Let&#x27;s have an example. You have embedded image resource called MyApplication.MyImage.png. When you read the image data on runtime you use &amp;quot;MyApplication.MyImage.png&amp;quot; name. If you check the check box Sisulizer will rename the resource in the localized satellite assembly file. The German assembly file will have MyApplication.MyImage.&lt;strong&gt;de&lt;/strong&gt;.png&amp;quot; and Japanese file will have &amp;quot;MyApplication.MyImage.&lt;strong&gt;ja&lt;/strong&gt;.png&amp;quot;. In order to correctly read the image data your code must change the name it uses depending on the active locale. If you do not want this make sure that the check box is unchecked. In that case the satellite assembly files will all have the resource with the same name (&amp;quot;MyApplication.MyImage.png&amp;quot;).</source>
          <target>让我们举个例子。您已嵌入名为 MyApplication.MyImage.png 的图像资源。当您在运行时读取图像数据时，您使用“MyApplication.MyImage.png”名称。如果选中复选框 Sisulizer 将重命名本地化附属程序集文件中的资源。德语程序集文件将包含 MyApplication.MyImage。 &lt;strong&gt;de&lt;/strong&gt; .png”和日语文件将具有“MyApplication.MyImage. &lt;strong&gt;ja&lt;/strong&gt; .png”。为了正确读取图像数据，您的代码必须根据活动区域设置更改它使用的名称。如果您不想这样做，请确保取消选中该复选框。在这种情况下，卫星程序集文件将都具有同名的资源（“MyApplication.MyImage.png”）。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the size of the field in bytes. In the case of strings fields this is invisible.</source>
          <target>以字节为单位指定字段的大小。在字符串字段的情况下，这是不可见的。</target>
        </trans-unit>
        <trans-unit>
          <source>Editing mappings</source>
          <target>编辑映射</target>
        </trans-unit>
        <trans-unit>
          <source>Exclude current property from the project by the property name.</source>
          <target>按属性名称从项目中排除当前属性。</target>
        </trans-unit>
        <trans-unit>
          <source>To get the most recent list of available translation memories and machine translators open Translation Engines dialog box and press the Add button. The list contains supported translation engines.</source>
          <target>要获取可用翻译记忆库和机器翻译器的最新列表，请打开翻译引擎对话框并按添加按钮。该列表包含支持的翻译引擎。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows information about the selected &lt;a href=&quot;http://www.sunda.fi/eng/tuotteet_seramenterprise.html&quot; target=&quot;_blank&quot;&gt;Sunda&lt;/a&gt; machine translator.</source>
          <target>显示有关所选&lt;a href=&quot;http://www.sunda.fi/eng/tuotteet_seramenterprise.html&quot; target=&quot;_blank&quot;&gt;Sunda&lt;/a&gt;机器翻译器的信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Borland/CodeGear Developer Studio project group file (.bdsgroup)</source>
          <target>Borland/CodeGear Developer Studio 项目组文件 (.bdsgroup)</target>
        </trans-unit>
        <trans-unit>
          <source>If this tree list does not contain the language that you want to use, you can add a new language to the System languages list. Choose Tools | General menu to open General Settings dialog box and open Languages sheet. It lets you add new languages.</source>
          <target>如果此树列表不包含您要使用的语言，您可以将新语言添加到系统语言列表。选择工具 |常规菜单打开常规设置对话框并打开语言表。它允许您添加新语言。</target>
        </trans-unit>
        <trans-unit>
          <source>In order to localize a WebHelp project you have to add three or four sources to the project. They are:</source>
          <target>为了本地化 WebHelp 项目，您必须向项目添加三个或四个源。他们是：</target>
        </trans-unit>
        <trans-unit>
          <source>Select the original language of the source you are about to add.</source>
          <target>选择您要添加的源的原始语言。</target>
        </trans-unit>
        <trans-unit>
          <source>If this is defined then only strings that are longer than the given value will be 
  candidates when translating duplicate string. For example if the value is 2. 
  Only strings longer than 2 characters will be auto translated.</source>
          <target>如果定义了此项，则在翻译重复字符串时，只有比给定值长的字符串才是候选字符串。例如，如果值为 2。只有超过 2 个字符的字符串才会被自动翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>This localizes the index file.</source>
          <target>这将本地化索引文件。</target>
        </trans-unit>
        <trans-unit>
          <source>The image appears near the left side of the button</source>
          <target>图像出现在按钮左侧附近</target>
        </trans-unit>
        <trans-unit>
          <source>Click &lt;em&gt;Select All&lt;/em&gt; to check all message types. Click &lt;em&gt;Deselect All&lt;/em&gt; to uncheck all messages types. Click &lt;em&gt;Default&lt;/em&gt; to check the default message types.</source>
          <target>单击“全&lt;em&gt;选”&lt;/em&gt;以检查所有消息类型。单击&lt;em&gt;取消全选&lt;/em&gt;以取消选中所有消息类型。单击“&lt;em&gt;默认”&lt;/em&gt;以检查默认消息类型。</target>
        </trans-unit>
        <trans-unit>
          <source>nRes file</source>
          <target>nRes 文件</target>
        </trans-unit>
        <trans-unit>
          <source>Clear translation comments automatically</source>
          <target>自动清除翻译注释</target>
        </trans-unit>
        <trans-unit>
          <source>private void webBrowser1_DocumentCompleted(object sender, WebBrowserDocumentCompletedEventArgs e)
{
  Text = String.Format(Properties.Resources.Caption, Properties.Resources.Url);
  toolStripStatusLabel1.Text = Text;
  languageToolStripMenuItem.Enabled = true;
}</source>
          <target>private void webBrowser1_DocumentCompleted(object sender, WebBrowserDocumentCompletedEventArgs e) { Text = String.Format(Properties.Resources.Caption, Properties.Resources.Url); toolStripStatusLabel1.Text = Text; languageToolStripMenuItem.Enabled = true; }</target>
        </trans-unit>
        <trans-unit>
          <source>TMX file</source>
          <target>TMX文件</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer supports two different methods to localize Android applications. The methods are:</source>
          <target>Sisulizer 支持两种不同的方法来本地化 Android 应用程序。方法是：</target>
        </trans-unit>
        <trans-unit>
          <source>For regular expression syntax documentation pages goto &lt;a href=&quot;http://icu.sourceforge.net/userguide/regexp.html&quot; target=&quot;_blank&quot;&gt;http://icu.sourceforge.net/userguide/regexp.html&lt;/a&gt;</source>
          <target>对于正则表达式语法文档页面转到&lt;a href=&quot;http://icu.sourceforge.net/userguide/regexp.html&quot; target=&quot;_blank&quot;&gt;http://icu.sourceforge.net/userguide/regexp.html&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit>
          <source>Select the language pair where strings are  searched from. This specifies the source and target languages. Choose &lt;em&gt;All languages&lt;/em&gt; if you want to search from all strings.</source>
          <target>选择从中搜索字符串的语言对。这指定了源语言和目标语言。如果您想从所有字符串中搜索，请选择&lt;em&gt;所有语言&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer saves the translations automatically every time the project is saved.</source>
          <target>每次保存项目时，Sisulizer 都会自动保存翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Mac OS through version 9 and Apple II family</source>
          <target>Mac OS 通过版本 9 和 Apple II 系列</target>
        </trans-unit>
        <trans-unit>
          <source>Include images in the Files section</source>
          <target>在文件部分包含图像</target>
        </trans-unit>
        <trans-unit>
          <source>Windows 10, Windows 8.x, Windows 7, Vista or XP</source>
          <target>Windows 10、Windows 8.x、Windows 7、Vista 或 XP</target>
        </trans-unit>
        <trans-unit>
          <source>When importing Sisulizer imports the translations from the selected file based on the context value. This can only be used if your project contains a PO file having the same context values as the imported file.</source>
          <target>导入 Sisulizer 时，会根据上下文值从所选文件中导入翻译。仅当您的项目包含与导入文件具有相同上下文值的 PO 文件时，才能使用此选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer reads tags from the comment attribute of the resource item</source>
          <target>Sisulizer从资源项的comment属性中读取标签</target>
        </trans-unit>
        <trans-unit>
          <source>Enter the database address in the Server address field and the database name in the Database name field. Enter the database user name in the User name field and the password in the Password field and press Connect to connect to the database. If you want Sisulizer to remember the password check Rememeber password. Password is stored in an encrypted form.</source>
          <target>在服务器地址字段中输入数据库地址，在数据库名称字段中输入数据库名称。在用户名字段中输入数据库用户名，在密码字段中输入密码，然后按连接以连接到数据库。如果您希望 Sisulizer 记住密码，请检查记住密码。密码以加密形式存储。</target>
        </trans-unit>
        <trans-unit>
          <source>HTML Help file (.chm)</source>
          <target>HTML 帮助文件 (.chm)</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the localized name of the variant (e.g. Inisin&amp;ouml;&amp;ouml;ri, Technik, &amp;#24037;&amp;#23398;).</source>
          <target>指定变体的本地化名称（例如 Inisinööri、Technik、工学）。</target>
        </trans-unit>
        <trans-unit>
          <source>Status is set to the value specified in the combo box.</source>
          <target>状态设置为组合框中指定的值。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;a href=&quot;Validation.htm&quot;&gt;Validate&lt;/a&gt; translation in the form.</source>
          <target>&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;表单中的翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Entire scop</source>
          <target>整个目的</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Status/Current Status&lt;/em&gt; contains the current translaton status of the string. If you just changed the status of a string these values of those string that you have checked will be updated matching the status of the edited string.</source>
          <target>&lt;em&gt;状态/当前状态&lt;/em&gt;包含字符串的当前翻译状态。如果您刚刚更改了字符串的状态，那么您检查过的那些字符串的这些值将根据编辑后的字符串的状态进行更新。</target>
        </trans-unit>
        <trans-unit>
          <source>By default the range cover the complete data area of the selected sheet. If you want to change it type the new value and press Update button or Tab to move focus from the range edit.</source>
          <target>默认情况下，范围覆盖所选工作表的完整数据区域。如果要更改它，请键入新值，然后按“更新”按钮或 Tab 将焦点从范围编辑中移动。</target>
        </trans-unit>
        <trans-unit>
          <source>Row | Link to File</source>
          <target>行 |链接到文件</target>
        </trans-unit>
        <trans-unit>
          <source>Microsoft New CSV file</source>
          <target>微软新 CSV 文件</target>
        </trans-unit>
        <trans-unit>
          <source>Database cloning</source>
          <target>数据库克隆</target>
        </trans-unit>
        <trans-unit>
          <source>Language and country</source>
          <target>语言和国家</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Country&lt;/em&gt; specifies a ISO-3166 country code.</source>
          <target>&lt;em&gt;Country&lt;/em&gt;指定 ISO-3166 国家/地区代码。</target>
        </trans-unit>
        <trans-unit>
          <source>Enter sample text to be processed and click Process</source>
          <target>输入要处理的示例文本，然后单击“处理”</target>
        </trans-unit>
        <trans-unit>
          <source>The difference between these two are that the first one remembers the last visited directory. When opening a dialog or wizard for the next time it contains the last visited directory. If you browse to some other directory the new directory will be saved as last visited directory. The second options always uses the directory that is specified in the combo box.</source>
          <target>这两者的区别在于第一个记住上次访问的目录。下次打开对话框或向导时，它包含上次访问的目录。如果您浏览到其他目录，新目录将保存为上次访问的目录。第二个选项始终使用组合框中指定的目录。</target>
        </trans-unit>
        <trans-unit>
          <source>The file contains three data records. Each line contains one record. Each record contains two data items: data id and data value. Items are separated by a tab character. When localizing this to Japanese the file will be:</source>
          <target>该文件包含三个数据记录。每行包含一个记录。每条记录包含两个数据项：数据 id 和数据值。项目由制表符分隔。将此文件本地化为日语时，文件将是：</target>
        </trans-unit>
        <trans-unit>
          <source>Localized value equals to the original value. Usually this happens when you first move a control and then you move it back. Default color is green.</source>
          <target>本地化值等于原始值。通常，当您首先移动控件然后将其移回时会发生这种情况。默认颜色为绿色。</target>
        </trans-unit>
        <trans-unit>
          <source>Item contains image data (BMP, JPEG, GIF or PNG) as a Base-64 encoded string.</source>
          <target>项目包含作为 Base-64 编码字符串的图像数据（BMP、JPEG、GIF 或 PNG）。</target>
        </trans-unit>
        <trans-unit>
          <source>Row is in its normal state.</source>
          <target>行处于正常状态。</target>
        </trans-unit>
        <trans-unit>
          <source>REGISTERED (LICENSED) VERSION&lt;br&gt;
  One registered copy of this software may be used by a single person who uses the software personally on one or more computers, or it may be installed on a single workstation used non-simultaneously by more than one person, but not both. This software may be installed on a network server, provided that a separate, appropriate license to use this software has been granted by Sisulizer for each computer terminal having access to this software.</source>
          <target>注册（许可）版本&lt;br&gt;该软件的一个注册副本可以由在一台或多台计算机上亲自使用该软件的一个人使用，或者它可以安装在一个多人非同时使用的单个工作站上，但不能同时使用。该软件可以安装在网络服务器上，前提是 Sisulizer 已为每个有权访问该软件的计算机终端授予使用该软件的单独、适当的许可。</target>
        </trans-unit>
        <trans-unit>
          <source>Translation memory is an application or a service that stores translation to a data store such a database. It can automatically translate those strings that already have translation in the database. If translation memory uses fuzzy matching it can also translate those strings that are similar to strings in the database. Sisulizer uses it own translation memory technology.</source>
          <target>翻译记忆库是将翻译存储到数据存储（例如数据库）的应用程序或服务。它可以自动翻译那些在数据库中已经有翻译的字符串。如果翻译记忆库使用模糊匹配，它也可以翻译那些与数据库中的字符串相似的字符串。 Sisulizer 使用自己的翻译记忆库技术。</target>
        </trans-unit>
        <trans-unit>
          <source>Unmanaged  resource data such as version and icon resources. If checked the following version types options are also shown:</source>
          <target>非托管资源数据，例如版本和图标资源。如果选中，还会显示以下版本类型选项：</target>
        </trans-unit>
        <trans-unit>
          <source>Enter the string you want to search and click &lt;em&gt;Search&lt;/em&gt; to start searching. If you leave this string to empty all strings matching the selected language pair are shown.</source>
          <target>输入要搜索的字符串，然后单击“&lt;em&gt;搜索”&lt;/em&gt;开始搜索。如果将此字符串保留为空，则会显示与所选语言对匹配的所有字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Read only</source>
          <target>只读</target>
        </trans-unit>
        <trans-unit>
          <source>In this method Sisulizer copies the original row for each language. The copied rows equal to the original one except the Language field value is different (matches the language of the row) and those fields that have been marked to be localized contain localized value. Each localized row has a unique primary key value. The row contains an id field that points to the actual resource id, and a language field that contains the language code.</source>
          <target>在此方法中，Sisulizer 复制每种语言的原始行。复制的行与原始行相同，除了 Language 字段值不同（与行的语言匹配）并且那些已标记为本地化的字段包含本地化值。每个本地化行都有一个唯一的主键值。该行包含一个指向实际资源 ID 的 id 字段和一个包含语言代码的语言字段。</target>
        </trans-unit>
        <trans-unit>
          <source>How does it work</source>
          <target>它是如何工作的</target>
        </trans-unit>
        <trans-unit>
          <source>Always update existing translations</source>
          <target>始终更新现有翻译</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the variant is enabled. If unchecked the variant will not be added to language list.</source>
          <target>如果选中，则启用变体。如果取消选中该变体将不会添加到语言列表中。</target>
        </trans-unit>
        <trans-unit>
          <source>SlMake &amp;lt;tasks&amp;gt; project [-q] [-a] [-w] [-e] [-h]</source>
          <target>SlMake &amp;lt;tasks&amp;gt; 项目 [-q] [-a] [-w] [-e] [-h]</target>
        </trans-unit>
        <trans-unit>
          <source>A more complex file format might be like this:</source>
          <target>更复杂的文件格式可能是这样的：</target>
        </trans-unit>
        <trans-unit>
          <source>Your projects contains binary resources and data types such as image and icon that are not translated. In most cases there is no need to translate images. In such a case it is unnecessary to keep the binary items in Sisulizer project. Keeping them makes project file much bigger and slower to open.</source>
          <target>您的项目包含未翻译的二进制资源和数据类型，例如图像和图标。在大多数情况下，不需要翻译图像。在这种情况下，不需要在 Sisulizer 项目中保留二进制项目。保留它们会使项目文件更大且打开速度更慢。</target>
        </trans-unit>
        <trans-unit>
          <source>Translation Engines - Import settings (Sisulizer Translation Memory)</source>
          <target>翻译引擎 - 导入设置（Sisulizer 翻译记忆库）</target>
        </trans-unit>
        <trans-unit>
          <source>Importing from other localization tools</source>
          <target>从其他本地化工具导入</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer shows the format of the bitmap as small text in the cell.</source>
          <target>如果选中，Sisulizer 将位图的格式显示为单元格中的小文本。</target>
        </trans-unit>
        <trans-unit>
          <source>Translation sheet contains several &lt;a href=&quot;Shortcuts.htm&quot;&gt;shortcuts&lt;/a&gt; that make working faster. If you are a translator you spend most of your time with translation sheet. By default the sheet shows all rows of the project that you have opened. Because this might contain thousands of rows Sisulizer has several ways to set sheet showing only the items that you want to work with.</source>
          <target>翻译表包含几个使工作更快的&lt;a href=&quot;Shortcuts.htm&quot;&gt;快捷方式&lt;/a&gt;。如果您是一名翻译，您将大部分时间都花在翻译表上。默认情况下，工作表显示您打开的项目的所有行。因为这可能包含数千行 Sisulizer 有几种方法来设置只显示您想要处理的项目的工作表。</target>
        </trans-unit>
        <trans-unit>
          <source>Spcifies the login id.</source>
          <target>指定登录 ID。</target>
        </trans-unit>
        <trans-unit>
          <source>Each row is a separate translation entity and it is translated independently. The advantage of splitting HTML data is that in most cases the HTML format must be exactly right. If HTML data is shows on the translation sheet as it is, it is possible that translator will enter invalid HTML format. To prevent that you can make Sisulizer to parse string data as HTML.</source>
          <target>每一行都是一个单独的翻译实体，它是独立翻译的。拆分 HTML 数据的优点是在大多数情况下 HTML 格式必须完全正确。如果 HTML 数据按原样显示在翻译表上，翻译人员可能会输入无效的 HTML 格式。为了防止这种情况，您可以让 Sisulizer 将字符串数据解析为 HTML。</target>
        </trans-unit>
        <trans-unit>
          <source>By Original and Context</source>
          <target>按原文和上下文</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to enter the integer value.</source>
          <target>使用此对话框输入整数值。</target>
        </trans-unit>
        <trans-unit>
          <source>The rows are not sorted but they are shown on the default order.</source>
          <target>行未排序，但按默认顺序显示。</target>
        </trans-unit>
        <trans-unit>
          <source>Windows Binary Source | Header files</source>
          <target>Windows 二进制源 |头文件</target>
        </trans-unit>
        <trans-unit>
          <source>Red dot</source>
          <target>红点</target>
        </trans-unit>
        <trans-unit>
          <source>Select the pseudo translation type</source>
          <target>选择伪翻译类型</target>
        </trans-unit>
        <trans-unit>
          <source>When writing localized XML file Sisulizer does never use file entities but writes plain characters.</source>
          <target>在编写本地化的 XML 文件时，Sisulizer 从不使用文件实体，而是编写纯字符。</target>
        </trans-unit>
        <trans-unit>
          <source>Check &lt;em&gt;Translation comments&lt;/em&gt; if you want to include only those  rows that has at least one translation comment.</source>
          <target>如果您只想包括那些至少有一个翻译注释的行，请选中&lt;em&gt;翻译&lt;/em&gt;注释。</target>
        </trans-unit>
        <trans-unit>
          <source>Use charsets on dialogs</source>
          <target>在对话框上使用字符集</target>
        </trans-unit>
        <trans-unit>
          <source>Minimum duplicate string length</source>
          <target>最小重复字符串长度</target>
        </trans-unit>
        <trans-unit>
          <source>Existing translations will be
      searched from the  whole project.</source>
          <target>将从整个项目中搜索现有翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to set the XAML options.</source>
          <target>使用此表设置 XAML 选项。</target>
        </trans-unit>
        <trans-unit>
          <source>The rule specifies a break.</source>
          <target>该规则指定了中断。</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks if translations match those translations in the glossary (e.g. &lt;a href=&quot;TranslationEngines.htm&quot;&gt;translation memory&lt;/a&gt;)</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查翻译是否与词汇表中的那些翻译相匹配（例如&lt;a href=&quot;TranslationEngines.htm&quot;&gt;翻译记忆库&lt;/a&gt;）</target>
        </trans-unit>
        <trans-unit>
          <source>Choose the &lt;a href=&quot;ExchangeWizardLanguagesSheet.htm&quot;&gt;exchange languages&lt;/a&gt;</source>
          <target>选择&lt;a href=&quot;ExchangeWizardLanguagesSheet.htm&quot;&gt;交换语言&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit>
          <source>You need to add the resource file (.lng) into  Sisulizer project and then specify the context file (.h) into the source file settings.</source>
          <target>您需要将资源文件 (.lng) 添加到 Sisulizer 项目中，然后在源文件设置中指定上下文文件 (.h)。</target>
        </trans-unit>
        <trans-unit>
          <source>&#x27;This is &lt;strong&gt;\&#x27;&lt;/strong&gt;single&lt;strong&gt;\&#x27;&lt;/strong&gt; and &amp;quot;double&amp;quot; quote sample&#x27;</source>
          <target>&amp;#39;这是&lt;strong&gt;\&amp;#39;&lt;/strong&gt;单&lt;strong&gt;\&amp;#39;&lt;/strong&gt;和“双”引号样本&amp;#39;</target>
        </trans-unit>
        <trans-unit>
          <source>Yes if the resource contains whole HTML page and not part of it.</source>
          <target>如果资源包含整个 HTML 页面而不是其中的一部分，则是。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer creates Sisulizer project file that contains the same source file and imports all string data either from existing localized files (created by Multilizer in step #1) and/or from Multlizer project file. The difference between these to methods are:</source>
          <target>Sisulizer 创建包含相同源文件的 Sisulizer 项目文件，并从现有的本地化文件（由 Multilizer 在步骤 1 中创建）和/或从 Multlizer 项目文件导入所有字符串数据。这些方法之间的区别是：</target>
        </trans-unit>
        <trans-unit>
          <source>Remember last directory when opening and saving files</source>
          <target>打开和保存文件时记住上一个目录</target>
        </trans-unit>
        <trans-unit>
          <source>Default new line</source>
          <target>默认换行</target>
        </trans-unit>
        <trans-unit>
          <source>Press Add to add a new mapping. Press Remove to delete the selected mapping. Press Edit to edit the selected mapping.</source>
          <target>按添加添加新映射。按删除删除选定的映射。按 Edit 编辑选定的映射。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Host&lt;/em&gt; is the address of the remote computer system.</source>
          <target>&lt;em&gt;主机&lt;/em&gt;是远程计算机系统的地址。</target>
        </trans-unit>
        <trans-unit>
          <source>Windows PE file (.exe, .dll, .bpl, .ocx)  that has been compiled with C++Builder (Win32) and uses VCL or FireMonkey component library</source>
          <target>已使用 C++Builder (Win32) 编译并使用 VCL 或 FireMonkey 组件库的 Windows PE 文件（.exe、.dll、.bpl、.ocx）</target>
        </trans-unit>
        <trans-unit>
          <source>Library that contains functions for .NET 2.0-3.5 localization. This works out of the box.</source>
          <target>包含 .NET 2.0-3.5 本地化函数的库。这是开箱即用的。</target>
        </trans-unit>
        <trans-unit>
          <source>This is available only when exporting from a project. When exporting from a translation memory this option is not available.</source>
          <target>这仅在从项目导出时可用。从翻译记忆库导出时，此选项不可用。</target>
        </trans-unit>
        <trans-unit>
          <source>Show tester</source>
          <target>显示测试仪</target>
        </trans-unit>
        <trans-unit>
          <source>Check original language</source>
          <target>检查原始语言</target>
        </trans-unit>
        <trans-unit>
          <source>This validation can be applied both to original and translated strings.</source>
          <target>此验证可应用于原始字符串和翻译字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>private void languageToolStripMenuItem_Click(object sender, EventArgs e)
{
  if (SelectLanguage.Select(&amp;quot;en&amp;quot;))
  {
    Form1_Load(this, new EventArgs());
    Form1_Shown(this, new EventArgs());
  }
}</source>
          <target>private void languageToolStripMenuItem_Click(object sender, EventArgs e) { if (SelectLanguage.Select(&amp;quot;en&amp;quot;)) { Form1_Load(this, new EventArgs()); Form1_Shown(this, new EventArgs()); } }</target>
        </trans-unit>
        <trans-unit>
          <source>Localizable property is false</source>
          <target>Localizable 属性为 false</target>
        </trans-unit>
        <trans-unit>
          <source>A WIN32 application or library compiled with any other compiler such as Visual C++. This file uses standard Windows resources.</source>
          <target>使用任何其他编译器（如 Visual C++）编译的 WIN32 应用程序或库。此文件使用标准 Windows 资源。</target>
        </trans-unit>
        <trans-unit>
          <source>80 MB free hard disk space</source>
          <target>80 MB 可用硬盘空间</target>
        </trans-unit>
        <trans-unit>
          <source>This works in the same way as &lt;em&gt;Check as you type&lt;/em&gt; spell checking. For example the following image contains a situation where Finnish sentence &amp;quot;Tämä on väärin&amp;quot; (&amp;quot;This is wrong&amp;quot;) is using wrong grammar.</source>
          <target>这与&lt;em&gt;键入&lt;/em&gt;拼写检查时的检查方式相同。例如，下图包含芬兰语句子“Tämä on väärin”（“这是错误的”）使用错误语法的情况。</target>
        </trans-unit>
        <trans-unit>
          <source>Resource contains image data. Sisulizer supports JPEG, BMP, PNG, GIF and icon.</source>
          <target>资源包含图像数据。 Sisulizer 支持 JPEG、BMP、PNG、GIF 和图标。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies how to generate the primary ids for the localized rows that Sisulizer adds to table. Possible options are:</source>
          <target>指定如何为 Sisulizer 添加到表中的本地化行生成主 ID。可能的选项是：</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Top level sorting&lt;/em&gt; specifies how top level items in the contents are sorted. &lt;em&gt;Sub level sorting&lt;/em&gt; specifies how sub level items are sorted.</source>
          <target>&lt;em&gt;顶级排序&lt;/em&gt;指定内容中顶级项目的排序方式。&lt;em&gt;子级排序&lt;/em&gt;指定子级项的排序方式。</target>
        </trans-unit>
        <trans-unit>
          <source>Comes with Visual Studio 2010&lt;br&gt;
      Comes with Windows SDK 7.1</source>
          <target>随 Visual Studio 2010 一起提供&lt;br&gt;附带 Windows SDK 7.1</target>
        </trans-unit>
        <trans-unit>
          <source>To export mappings to a mappings file press the Export button.</source>
          <target>要将映射导出到映射文件，请按“导出”按钮。</target>
        </trans-unit>
        <trans-unit>
          <source>Type the name of the author (e.g. your name).</source>
          <target>输入作者的姓名（例如您的姓名）。</target>
        </trans-unit>
        <trans-unit>
          <source>Library that contains functions for .NET 4.x localization. This works out of the box.</source>
          <target>包含 .NET 4.x 本地化函数的库。这是开箱即用的。</target>
        </trans-unit>
        <trans-unit>
          <source>The following table contains possible import sources and targets.</source>
          <target>下表包含可能的导入源和目标。</target>
        </trans-unit>
        <trans-unit>
          <source>Yes if text file contains either UTF-8 header or UTF-16 byte order mark (BOM). If you file uses Ansi encoding Sisulizer can not detect the format but you have to specify the format manually.</source>
          <target>如果文本文件包含 UTF-8 标头或 UTF-16 字节顺序标记 (BOM)，则为是。如果您的文件使用 Ansi 编码 Sisulizer 无法检测格式，但您必须手动指定格式。</target>
        </trans-unit>
        <trans-unit>
          <source>Statistics will be calculated in strings.</source>
          <target>统计数据将在字符串中计算。</target>
        </trans-unit>
        <trans-unit>
          <source>When applying to the localized files you can check that you translations are right. There are not missing, extra, invalid or duplicate hotkeys. In most cases Sisulizer can automatically fix them.</source>
          <target>应用到本地化文件时，您可以检查您的翻译是否正确。没有丢失、多余、无效或重复的热键。在大多数情况下，Sisulizer 可以自动修复它们。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows only translatable rows (e.g. Caption) of the   component.</source>
          <target>仅显示组件的可翻译行（例如标题）。</target>
        </trans-unit>
        <trans-unit>
          <source>Runtime language change</source>
          <target>运行时语言更改</target>
        </trans-unit>
        <trans-unit>
          <source>Supported translation engines</source>
          <target>支持的翻译引擎</target>
        </trans-unit>
        <trans-unit>
          <source>Updates code page fields to match the localized language in VERSIONINFO resource</source>
          <target>更新代码页字段以匹配 VERSIONINFO 资源中的本地化语言</target>
        </trans-unit>
        <trans-unit>
          <source>Use the &lt;a href=&quot;HtmlSourceDialogScriptsSheet.htm&quot;&gt;Scripts sheet&lt;/a&gt; of &lt;a href=&quot;HtmlSourceDialog.htm&quot;&gt;&lt;/a&gt; &lt;a href=&quot;HtmlSourceDialog.htm&quot;&gt;HTML Source Dialog&lt;/a&gt; to configure how tagging is used.</source>
          <target>使用&lt;a href=&quot;HtmlSourceDialogScriptsSheet.htm&quot;&gt;脚本表&lt;/a&gt;&lt;a href=&quot;HtmlSourceDialog.htm&quot;&gt;&lt;/a&gt;&lt;a href=&quot;HtmlSourceDialog.htm&quot;&gt;HTML 源对话框，&lt;/a&gt;用于配置标记的使用方式。</target>
        </trans-unit>
        <trans-unit>
          <source>What tags are read</source>
          <target>读取什么标签</target>
        </trans-unit>
        <trans-unit>
          <source>This code specifies the language and the region (e.g. country) where the language is spoken. For example English (United States) or German (Germany). Using a country depend language code makes it possible to differentiate two or more different regions where the same language is spoken. For example American English and British English or Standard German and Swiss German. In both cases the language is same but different regions uses different words and/or spelling.</source>
          <target>此代码指定语言和使用该语言的地区（例如国家/地区）。例如英语（美国）或德语（德国）。使用国家/地区相关语言代码可以区分使用相同语言的两个或多个不同地区。例如美式英语和英式英语或标准德语和瑞士德语。在这两种情况下，语言相同，但不同地区使用不同的单词和/或拼写。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to set the default value for the excluded data types.</source>
          <target>使用此表为排除的数据类型设置默认值。</target>
        </trans-unit>
        <trans-unit>
          <source>Missing exclamanation</source>
          <target>缺少感叹号</target>
        </trans-unit>
        <trans-unit>
          <source>By default Sisulizer scans (and localizes) only those strings that have been marked to be localized. For example if you have the following code:</source>
          <target>默认情况下，Sisulizer 仅扫描（并本地化）那些已标记为本地化的字符串。例如，如果您有以下代码：</target>
        </trans-unit>
        <trans-unit>
          <source>merge</source>
          <target>去</target>
        </trans-unit>
        <trans-unit>
          <source>This is the old Microsoft glossary file where one line contains the original (English) and translated value and items are most commonly separated by comma (,). Each line contains many other fields but the English and target strings.</source>
          <target>这是旧的 Microsoft 词汇表文件，其中一行包含原始值（英文）和翻译值，并且项目通常用逗号 (,) 分隔。每行包含许多其他字段，但英语和目标字符串除外。</target>
        </trans-unit>
        <trans-unit>
          <source>Jumps the the first row that has a given paramaters. The options are same as in the &lt;a href=&quot;SheetFilterEditDialog.htm&quot;&gt;sheet filter dialog&lt;/a&gt;.</source>
          <target>跳转具有给定参数的第一行。选项与工作&lt;a href=&quot;SheetFilterEditDialog.htm&quot;&gt;表过滤器对话框中&lt;/a&gt;的选项相同。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure binary settings. Binary settings are used with &lt;a href=&quot;BinaryLocalization.htm&quot;&gt;binary file localization&lt;/a&gt; and &lt;a href=&quot;UserDefinedData.htm&quot;&gt;binary resource localization&lt;/a&gt;.</source>
          <target>使用此对话框配置二进制设置。二进制设置用于&lt;a href=&quot;BinaryLocalization.htm&quot;&gt;二进制文件本地化&lt;/a&gt;和&lt;a href=&quot;UserDefinedData.htm&quot;&gt;二进制资源本地化&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>If XML file contains the same string more than once and the string has been translated in different way Sisulizer might not keep the right translations. For example if we have the following file:</source>
          <target>如果 XML 文件多次包含相同的字符串，并且该字符串以不同的方式进行了翻译，Sisulizer 可能无法保留正确的翻译。例如，如果我们有以下文件：</target>
        </trans-unit>
        <trans-unit>
          <source>Case of Lang-attribute</source>
          <target>Lang-属性的案例</target>
        </trans-unit>
        <trans-unit>
          <source>These contain data of embedded image files.</source>
          <target>这些包含嵌入图像文件的数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Write translation defect id</source>
          <target>写入翻译缺陷 ID</target>
        </trans-unit>
        <trans-unit>
          <source>Inserts the contents of the clipboard into the active position on the project. If data in the clipboard contains several lines then lines are pasted on cells following the selected cell.</source>
          <target>将剪贴板的内容插入到项目的活动位置。如果剪贴板中的数据包含多行，则将在选定单元格之后的单元格上粘贴行。</target>
        </trans-unit>
        <trans-unit>
          <source>A sample files (Country.txt and Country.slp) can be found from &amp;lt;sisulizer&amp;gt;\Text\Text directory. The following picture shows how to definition looks like in text source dialog after you have configured it.</source>
          <target>可以从 &amp;lt;sisulizer&amp;gt;\Text\Text 目录中找到示例文件（Country.txt 和 Country.slp）。下图显示了如何在配置后在文本源对话框中定义。</target>
        </trans-unit>
        <trans-unit>
          <source>This will break the sentance in three different parts: &amp;quot;Finland is the &amp;quot;, &amp;quot;most&amp;quot; and &amp;quot; country in the world&amp;quot;. To translate them separately is impossible or at least very hard. A better choice is to treat the how stuff as a single translation unit.</source>
          <target>这将把句子分成三个不同的部分：“芬兰是”、“最多”和“世界上的国家”。分别翻译它们是不可能的，或者至少非常困难。更好的选择是将 how 内容视为单个翻译单元。</target>
        </trans-unit>
        <trans-unit>
          <source>Only exclude tags</source>
          <target>仅排除标签</target>
        </trans-unit>
        <trans-unit>
          <source>By following these three simple steps you can easily localize your applications, data, and documents.</source>
          <target>通过遵循这三个简单的步骤，您可以轻松地本地化您的应用程序、数据和文档。</target>
        </trans-unit>
        <trans-unit>
          <source>Does not bring any translation from the original file to the project.</source>
          <target>不会将原始文件的任何翻译带入项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Row is locked</source>
          <target>行被锁定</target>
        </trans-unit>
        <trans-unit>
          <source>If MFC does not find any satellite DLLs, it uses whatever resources are contained in the application itself.</source>
          <target>如果 MFC 没有找到任何附属 DLL，它将使用应用程序本身中包含的任何资源。</target>
        </trans-unit>
        <trans-unit>
          <source>Resource contains HTML data.</source>
          <target>资源包含 HTML 数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Visual Basic binary file</source>
          <target>Visual Basic 二进制文件</target>
        </trans-unit>
        <trans-unit>
          <source>4 bytes integer value</source>
          <target>4 字节整数值</target>
        </trans-unit>
        <trans-unit>
          <source>Multiple installations on a single computer</source>
          <target>在一台计算机上安装多个</target>
        </trans-unit>
        <trans-unit>
          <source>When Delphi or C++Builder compiler compiles an application and saves form data into the application resource the compiler encodes all strings. There are four different string encoding methods:</source>
          <target>当 Delphi 或 C++Builder 编译器编译应用程序并将表单数据保存到应用程序资源中时，编译器会对所有字符串进行编码。有四种不同的字符串编码方法：</target>
        </trans-unit>
        <trans-unit>
          <source>Traditional Chinese input method</source>
          <target>繁体中文输入法</target>
        </trans-unit>
        <trans-unit>
          <source>Enter text to be segmented and click Process</source>
          <target>输入要分割的文本，然后单击处理</target>
        </trans-unit>
        <trans-unit>
          <source>Disabled translation engines</source>
          <target>禁用翻译引擎</target>
        </trans-unit>
        <trans-unit>
          <source>If unit name contains &amp;quot;_&amp;quot; charcter the DRC-name can&#x27;t be splitted correctly. For example:</source>
          <target>如果单位名称包含“_”字符，则无法正确拆分 DRC 名称。例如：</target>
        </trans-unit>
        <trans-unit>
          <source>Length in Pixels Validation</source>
          <target>像素长度验证</target>
        </trans-unit>
        <trans-unit>
          <source>Shows column properties dialog that lets you configure settings of the current column.</source>
          <target>显示列属性对话框，可让您配置当前列的设置。</target>
        </trans-unit>
        <trans-unit>
          <source>Type the description of the package.</source>
          <target>键入包的描述。</target>
        </trans-unit>
        <trans-unit>
          <source>When you import localized XML files to Sisulizer project containing the original XML file you have to check the following things. Either make sure that you &lt;strong&gt;use context attributes&lt;/strong&gt; or make sure that the structure of the localized XML file is &lt;strong&gt;identical&lt;/strong&gt; to the original XML file. Identical means that the structure must be exactly the same as the original one. It must contain the same elements in the same order as the original file.</source>
          <target>当您将本地化的 XML 文件导入包含原始 XML 文件的 Sisulizer 项目时，您必须检查以下事项。要么确保&lt;strong&gt;使用上下文属性，&lt;/strong&gt;要么确保本地化 XML 文件的结构&lt;strong&gt;与&lt;/strong&gt;原始 XML 文件&lt;strong&gt;相同&lt;/strong&gt;。相同意味着结构必须与原始结构完全相同。它必须以与原始文件相同的顺序包含相同的元素。</target>
        </trans-unit>
        <trans-unit>
          <source>Regular expressions are very powerful to describe string patterns. Sisulizer uses regular expressions in various cases such as &lt;a href=&quot;CombinedStrings.htm&quot;&gt;combined string expressions&lt;/a&gt;, &lt;a href=&quot;Segmentation.htm&quot;&gt;segmentation&lt;/a&gt; and &lt;a href=&quot;TextLocalization.htm&quot;&gt;text file rules&lt;/a&gt;.</source>
          <target>正则表达式在描述字符串模式方面非常强大。 Sisulizer 在各种情况下使用正则表达式，例如&lt;a href=&quot;CombinedStrings.htm&quot;&gt;组合字符串表达式&lt;/a&gt;、&lt;a href=&quot;Segmentation.htm&quot;&gt;分段&lt;/a&gt;和&lt;a href=&quot;TextLocalization.htm&quot;&gt;文本文件规则&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Record size word</source>
          <target>记录大小字</target>
        </trans-unit>
        <trans-unit>
          <source>When Sisulizer scans custom data it tries to detect the format. If it can not detect it data is scanned as plain binary data.</source>
          <target>当 Sisulizer 扫描自定义数据时，它会尝试检测格式。如果无法检测到它，则将数据扫描为纯二进制数据。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked row comments are written to the file.</source>
          <target>如果选中的行注释写入文件。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;a href=&quot;http://en.wikipedia.org/wiki/ISO-3166&quot; target=&quot;_blank&quot;&gt;ISO-3166&lt;/a&gt; country code</source>
          <target>&lt;a href=&quot;http://en.wikipedia.org/wiki/ISO-3166&quot; target=&quot;_blank&quot;&gt;ISO-3166&lt;/a&gt;国家代码</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer does not parse data at all but treats it as plain bytes. You can &amp;quot;translate&amp;quot; data by assigned different bytes for a language.</source>
          <target>Sisulizer 根本不解析数据，而是将其视为纯字节。您可以通过为一种语言分配不同的字节来“翻译”数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Version number</source>
          <target>版本号</target>
        </trans-unit>
        <trans-unit>
          <source>Ini (and variants) file</source>
          <target>Ini（和变体）文件</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;strong&gt;Note!&lt;/strong&gt; This option is used only when you localize to a  language that  uses alphabets. If you have Chinese, Korean or Japanese in your project the contents file this options is ignored for those languages.</source>
          <target>&lt;strong&gt;笔记！&lt;/strong&gt;仅当您本地化为使用字母的语言时才使用此选项。如果您的项目中有中文、韩文或日文，则这些语言的内容文件将忽略此选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Windows locale code is used. It contains two or three upper case characters.&lt;br&gt;For example &amp;quot;EN&amp;quot; is for English, &amp;quot;ENU&amp;quot; is for English (United Stated), and &amp;quot;CHT&amp;quot; is for Traditional Chinese.</source>
          <target>使用 Windows 区域设置代码。它包含两个或三个大写字符。&lt;br&gt;例如“EN”是英文，“ENU”是英文（美国），“CHT”是繁体中文。</target>
        </trans-unit>
        <trans-unit>
          <source>Japan is a country on the western edge of the Pacific Ocean. This is the extension for Japan description.</source>
          <target>日本是一个位于太平洋西部边缘的国家。这是日本描述的扩展。</target>
        </trans-unit>
        <trans-unit>
          <source>Font replacement is disabled. Only those fonts that have been translated in the project grid will be changed.</source>
          <target>字体替换被禁用。只有在项目网格中已翻译的字体才会更改。</target>
        </trans-unit>
        <trans-unit>
          <source>Click &lt;em&gt;Help&lt;/em&gt; to get more information about each available method. Click &lt;em&gt;Add&lt;/em&gt; to take a  tool in use. Click &lt;em&gt;Download&lt;/em&gt; to download a free tool and to install it. Click &lt;em&gt;Purchase&lt;/em&gt; to buy a tool and to install it. Click &lt;em&gt;Upgrade&lt;/em&gt; to upgrade your Sisulizer edition to support a tool.</source>
          <target>单击&lt;em&gt;帮助&lt;/em&gt;以获取有关每种可用方法的更多信息。单击&lt;em&gt;添加&lt;/em&gt;以获取正在使用的工具。单击&lt;em&gt;下载&lt;/em&gt;以下载免费工具并进行安装。单击&lt;em&gt;购买&lt;/em&gt;以购买工具并安装它。单击&lt;em&gt;升级&lt;/em&gt;以升级您的 Sisulizer 版本以支持工具。</target>
        </trans-unit>
        <trans-unit>
          <source>Jump to next untranslated item in the &lt;a href=&quot;MainFormOpen.htm#TranslationSheet&quot;&gt;translation sheet&lt;/a&gt;.</source>
          <target>跳转到&lt;a href=&quot;MainFormOpen.htm#TranslationSheet&quot;&gt;翻译表&lt;/a&gt;中的下一个未翻译项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to change the component mapping of the selected control.</source>
          <target>使用此对话框可更改所选控件的组件映射。</target>
        </trans-unit>
        <trans-unit>
          <source>This lets you link a file to a translation. When a file has been linked to a translation Sisulizer automatically checks if the file has been changed. If is has then Sisulizer reads the content of the file as translation value. This feature is usefull when translation images and binary data. After editing the translated image or binary file you do not have to copy paster its value to the Sisulizer project but Sisulizer automatically updates the translation when you open the project next time.</source>
          <target>这使您可以将文件链接到翻译。将文件链接到翻译后，Sisulizer 会自动检查文件是否已更改。如果是，则 Sisulizer 读取文件的内容作为翻译值。此功能在翻译图像和二进制数据时很有用。编辑翻译后的图像或二进制文件后，您不必将其值复制到 Sisulizer 项目中，但 Sisulizer 会在您下次打开项目时自动更新翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>String value is the string context.&lt;br&gt;
    If the source code contains same string twice of more then all instances share the single row and they all are translated in the same way.</source>
          <target>字符串值是字符串上下文。&lt;br&gt;如果源代码包含两次以上相同的字符串，则所有实例共享单行，并且它们都以相同的方式进行翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>How new line and other special characters are escaped</source>
          <target>如何转义换行符和其他特殊字符</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer uses several different file formats. Most of them are based on XML and can easily be viewed and edited using any XML or text file compatible editor. Because of XML they can easily be added to a version control database. All XML based Sisulizer files use UTF-8 encoding.</source>
          <target>Sisulizer 使用几种不同的文件格式。它们中的大多数基于 XML，可以使用任何 XML 或文本文件兼容编辑器轻松查看和编辑。由于 XML，它们可以很容易地添加到版本控制数据库中。所有基于 XML 的 Sisulizer 文件都使用 UTF-8 编码。</target>
        </trans-unit>
        <trans-unit>
          <source>Context method</source>
          <target>上下文方法</target>
        </trans-unit>
        <trans-unit>
          <source>Read more from &lt;a href=&quot;http://www.sisulizer.com/support/codepages.shtml#Asian&quot;&gt;Sisulizer web pages&lt;/a&gt;.</source>
          <target>从&lt;a href=&quot;http://www.sisulizer.com/support/codepages.shtml#Asian&quot;&gt;Sisulizer 网页&lt;/a&gt;阅读更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies how incomplete row should be handled during the build process. Possible options are:</source>
          <target>指定在构建过程中应如何处理不完整的行。可能的选项是：</target>
        </trans-unit>
        <trans-unit>
          <source>Shows debug information.</source>
          <target>显示调试信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Windows binary file</source>
          <target>Windows 二进制文件</target>
        </trans-unit>
        <trans-unit>
          <source>You can configure the sources and nodes by choosing the context sensitive menu. To access menu right click any item on the tree.</source>
          <target>您可以通过选择上下文相关菜单来配置源和节点。要访问菜单，请右键单击树上的任何项目。</target>
        </trans-unit>
        <trans-unit>
          <source>In some situations one of the above values might not be available.</source>
          <target>在某些情况下，上述值之一可能不可用。</target>
        </trans-unit>
        <trans-unit>
          <source>A complete list of features in each edition can be read from &lt;a href=&quot;http://www.sisulizer.com/sisulizer-features.shtml&quot;&gt;here&lt;/a&gt;. You can check the current license status by choosing Help | License Key menu. When you are &lt;a href=&quot;Evaluation.htm&quot;&gt;evaluating&lt;/a&gt; Sisulizer you can change the edition at every time you start Sisulizer.</source>
          <target>可以从&lt;a href=&quot;http://www.sisulizer.com/sisulizer-features.shtml&quot;&gt;此处&lt;/a&gt;阅读每个版本的完整功能列表。您可以通过选择 Help | 来检查当前的许可证状态。许可证密钥菜单。在&lt;a href=&quot;Evaluation.htm&quot;&gt;评估&lt;/a&gt;Sisulizer 时，您可以在每次启动 Sisulizer 时更改版本。</target>
        </trans-unit>
        <trans-unit>
          <source>ApplicationCommands class</source>
          <target>应用命令类</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the position of the context column in the exported file. Possible values are:</source>
          <target>指定导出文件中上下文列的位置。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Translation files only (.ts)</source>
          <target>仅翻译文件 (.ts)</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer reads data as picture. JPEG, PNG, GIF, BMP, icon and cursor formats are supported.</source>
          <target>Sisulizer 读取数据为图片。支持 JPEG、PNG、GIF、BMP、图标和光标格式。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the translation</source>
          <target>显示翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure how the project tree looks and works.</source>
          <target>使用此对话框配置项目树的外观和工作方式。</target>
        </trans-unit>
        <trans-unit>
          <source>Notes give your various information.</source>
          <target>笔记为您提供各种信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Hex entity</source>
          <target>十六进制实体</target>
        </trans-unit>
        <trans-unit>
          <source>Show pixel format of bitmap</source>
          <target>显示位图的像素格式</target>
        </trans-unit>
        <trans-unit>
          <source>Some sources contains several different data types. For example a Windows application can contain strings, fonts, colors, positions, sizes, etc. In these case you can &lt;a href=&quot;ExcludeDataTypes.htm&quot;&gt;exclude data types&lt;/a&gt;.</source>
          <target>一些源包含几种不同的数据类型。例如，Windows 应用程序可以包含字符串、字体、颜色、位置、大小等。在这些情况下，您可以&lt;a href=&quot;ExcludeDataTypes.htm&quot;&gt;排除数据类型&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>The tag is applied to all strings in the line where tag is.</source>
          <target>标记应用于标记所在行中的所有字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the excluded strings settings</source>
          <target>指定排除的字符串设置</target>
        </trans-unit>
        <trans-unit>
          <source>SRX uses &lt;a href=&quot;RegularExpressions.htm&quot;&gt;regular expressions&lt;/a&gt; to describe the rules. Regular expressions are very powerful to describe string patterns.</source>
          <target>SRX 使用&lt;a href=&quot;RegularExpressions.htm&quot;&gt;正则表达式&lt;/a&gt;来描述规则。正则表达式在描述字符串模式方面非常强大。</target>
        </trans-unit>
        <trans-unit>
          <source>Selects the right cell of the currently selected cell.</source>
          <target>选择当前选定单元格的右侧单元格。</target>
        </trans-unit>
        <trans-unit>
          <source>Add &amp;quot;...&amp;quot; to Dictionary</source>
          <target>将“...”添加到字典</target>
        </trans-unit>
        <trans-unit>
          <source>Importing from other tools</source>
          <target>从其他工具导入</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer reads data as text file. Ansi, UTF-16 and UTF-16 file formats are supported.</source>
          <target>Sisulizer 将数据读取为文本文件。支持 Ansi、UTF-16 和 UTF-16 文件格式。</target>
        </trans-unit>
        <trans-unit>
          <source>Overwrite the current value</source>
          <target>覆盖当前值</target>
        </trans-unit>
        <trans-unit>
          <source>Exclude the whole component and it&#x27;s properties</source>
          <target>排除整个组件及其属性</target>
        </trans-unit>
        <trans-unit>
          <source>Check spelling as you type</source>
          <target>键入时检查拼写</target>
        </trans-unit>
        <trans-unit>
          <source>Invalid hotkey position</source>
          <target>热键位置无效</target>
        </trans-unit>
        <trans-unit>
          <source>Encoding that is used when creating localized HTML data</source>
          <target>创建本地化 HTML 数据时使用的编码</target>
        </trans-unit>
        <trans-unit>
          <source>Zooms the current item to fix in the client area of the editor.</source>
          <target>缩放当前项目以修复编辑器的客户区。</target>
        </trans-unit>
        <trans-unit>
          <source>ADO/ODBC compatible database.&lt;br&gt;
      Press ... to select the data source.</source>
          <target>ADO/ODBC 兼容数据库。&lt;br&gt;按 ... 选择数据源。</target>
        </trans-unit>
        <trans-unit>
          <source>For example you have the following table structure:</source>
          <target>例如，您有以下表结构：</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;lt;p&amp;gt;Finland is the &amp;lt;u&amp;gt;most northern&amp;lt;/u&amp;gt; country in the world&amp;lt;/p&amp;gt;</source>
          <target>&amp;lt;p&amp;gt;芬兰是&amp;lt;u&amp;gt;世界上最北端&amp;lt;/u&amp;gt;的国家&amp;lt;/p&amp;gt;</target>
        </trans-unit>
        <trans-unit>
          <source>Clears the new states of the items belonging to the selected node.</source>
          <target>清除属于选定节点的项目的新状态。</target>
        </trans-unit>
        <trans-unit>
          <source>You can exclude or include properties of the component separately. The most common situation is to exclude some properties that not need to be translated. Use the following buttons to edit properties:</source>
          <target>您可以单独排除或包含组件的属性。最常见的情况是排除一些不需要翻译的属性。使用以下按钮编辑属性：</target>
        </trans-unit>
        <trans-unit>
          <source>Write translation defect comment</source>
          <target>写翻译缺陷评论</target>
        </trans-unit>
        <trans-unit>
          <source>Zoom default</source>
          <target>默认缩放</target>
        </trans-unit>
        <trans-unit>
          <source>Item contains Perl source code.</source>
          <target>项目包含 Perl 源代码。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to configure how Windows binary files are localized.</source>
          <target>使用此表配置 Windows 二进制文件的本地化方式。</target>
        </trans-unit>
        <trans-unit>
          <source>If your reporting tool is not included in the above list you have two choices. If the reporting tool uses components to define report templates just &lt;a href=&quot;ComponentMapping.htm&quot;&gt;map your report components&lt;/a&gt; to Sisulizer report components. If you reporting tool uses standalone report files contact Sisulizer.</source>
          <target>如果您的报告工具未包含在上述列表中，您有两种选择。如果报告工具使用组件来定义报告模板，只需&lt;a href=&quot;ComponentMapping.htm&quot;&gt;将您的报告组件映射&lt;/a&gt;到 Sisulizer 报告组件。如果您的报告工具使用独立报告文件，请联系 Sisulizer。</target>
        </trans-unit>
        <trans-unit>
          <source>Project Wizard - Visual Studio .NET solution file</source>
          <target>项目向导 - Visual Studio .NET 解决方案文件</target>
        </trans-unit>
        <trans-unit>
          <source>Through validation</source>
          <target>通过验证</target>
        </trans-unit>
        <trans-unit>
          <source>Our recommendation is to use the binary localization except with Visual basic applications where the Visual Basic localization should be used.</source>
          <target>我们的建议是使用二进制本地化，除了应该使用 Visual Basic 本地化的 Visual Basic 应用程序。</target>
        </trans-unit>
        <trans-unit>
          <source>This list shows a list of suggested words found from spell checker dictionaries. If you find a suitable value in the list, select it and click &lt;em&gt;Change&lt;/em&gt;.</source>
          <target>此列表显示从拼写检查器词典中找到的建议单词列表。如果您在列表中找到合适的值，请选择它并点击&lt;em&gt;更改&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>iOS is a mobile operating system and OS X is a dekstop operating system from Apple. Sisulizer can localize iOS&#x27;s and OS X&#x27;s string resource files.</source>
          <target>iOS 是移动操作系统，OS X 是 Apple 的桌面操作系统。 Sisulizer 可以本地化 iOS 和 OS X 的字符串资源文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Table of contents is sorted such way that pages and sub folders are sorted together and they may be pages between folders.</source>
          <target>目录的排序方式是页面和子文件夹一起排序，它们可能是文件夹之间的页面。</target>
        </trans-unit>
        <trans-unit>
          <source>Localized application and library files</source>
          <target>本地化的应用程序和库文件</target>
        </trans-unit>
        <trans-unit>
          <source>The name is case insensitive.</source>
          <target>名称不区分大小写。</target>
        </trans-unit>
        <trans-unit>
          <source>Property contains structured data. Use definitions to specify the data format.</source>
          <target>属性包含结构化数据。使用定义来指定数据格式。</target>
        </trans-unit>
        <trans-unit>
          <source>System code page and  CHM compilation</source>
          <target>系统代码页和 CHM 编译</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the default work directory of Sisulizer. This directory location is the directory that is shown on a file dialogs and wizards that work with files. There are two ways to specify the default directory. Possible values are:</source>
          <target>指定 Sisulizer 的默认工作目录。此目录位置是显示在处理文件的文件对话框和向导中的目录。有两种方法可以指定默认目录。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Contains a encoding list. With some sources multiple encoding can be used. By default the most common encoding is used. However you can change the encoding by right clicking the item and selecting a new value. In some sources such as Delphi and C++Builder the encoding can not be set. In those cases this list is not shown.</source>
          <target>包含编码列表。对于某些来源，可以使用多种编码。默认情况下使用最常见的编码。但是，您可以通过右键单击该项目并选择一个新值来更改编码。在某些源代码中，例如 Delphi 和 C++Builder，无法设置编码。在这些情况下，不会显示此列表。</target>
        </trans-unit>
        <trans-unit>
          <source>Contains functions to  load a new resource DLL, to enumerate available resource DLLs and other resource and locale depent functions.&lt;br&gt;
      Main functions are SetNewResourceFile and
      GetAvailableResources</source>
          <target>包含用于加载新资源 DLL、枚举可用资源 DLL 和其他资源和区域设置相关函数的函数。&lt;br&gt;主要功能是 SetNewResourceFile 和 GetAvailableResources</target>
        </trans-unit>
        <trans-unit>
          <source>Mark read only components</source>
          <target>标记只读组件</target>
        </trans-unit>
        <trans-unit>
          <source>Show as Text | Original</source>
          <target>显示为文本 |原来的</target>
        </trans-unit>
        <trans-unit>
          <source>Bring translations from the database to the project. Overwrite the existing value if it differs from the value in the database.</source>
          <target>将翻译从数据库带到项目中。如果现有值与数据库中的值不同，则覆盖现有值。</target>
        </trans-unit>
        <trans-unit>
          <source>MFC attempts to load the resource DLL for each of the following languages in order, stopping when it finds one:</source>
          <target>MFC 尝试按顺序为以下每种语言加载资源 DLL，当它找到一个时停止：</target>
        </trans-unit>
        <trans-unit>
          <source>Exports all items in the project.</source>
          <target>导出项目中的所有项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies how Sisulizer localizes fonts. The font localization goes like this: If the user has given a translated value fot the font in the project grid Sisulizer uses that font. Otherwise Sisulizer replaces the font using the font replacement rule. This combo box specifies what is the font replacement rule:</source>
          <target>指定 Sisulizer 如何本地化字体。字体本地化是这样的：如果用户在项目网格中为字体提供了翻译值，Sisulizer 将使用该字体。否则 Sisulizer 使用字体替换规则替换字体。此组合框指定什么是字体替换规则：</target>
        </trans-unit>
        <trans-unit>
          <source>A .exe or .dll file has a possibility to store same resource item in several different languages. For example a single .exe file can contain the same dialog resource in English, German and French. This feature makes it possible to create a multilingual .exe.</source>
          <target>.exe 或 .dll 文件可以以多种不同的语言存储相同的资源项。例如，单个 .exe 文件可以包含英语、德语和法语的相同对话框资源。此功能使创建多语言 .exe 成为可能。</target>
        </trans-unit>
        <trans-unit>
          <source>C# source code</source>
          <target>C#源代码</target>
        </trans-unit>
        <trans-unit>
          <source>Visual Basic (Win32) project file</source>
          <target>Visual Basic (Win32) 项目文件</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer reads data as XML</source>
          <target>Sisulizer 将数据读取为 XML</target>
        </trans-unit>
        <trans-unit>
          <source>Exchange Wizard makes it easy to exchange project data between developer and translator. The developers send an exchange package to the translator. The package contains Sisulizer project file and optional Sisulizer Free Edition that is used to translate the project. The exchange package can contain the whole project data or just part of it. This makes it possible to share the translation job with several translators.</source>
          <target>Exchange Wizard 可以轻松地在开发人员和翻译人员之间交换项目数据。开发人员向翻译人员发送一个交换包。该包包含 Sisulizer 项目文件和用于翻译项目的可选 Sisulizer 免费版。交换包可以包含整个项目数据或其中的一部分。这使得与多个翻译人员共享翻译工作成为可能。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the &lt;a href=&quot;EscapeCharacter.htm&quot;&gt;escape&lt;/a&gt; method how line feed, carriage return and other special characters are encoded.</source>
          <target>指定换行、回车和其他特殊字符如何编码的&lt;a href=&quot;EscapeCharacter.htm&quot;&gt;转义&lt;/a&gt;方法。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer writes to the localized resource file all those resource items that has a translation (i.e. a translation has been given in the edit sheet).&lt;br&gt;
      This is the default value.</source>
          <target>如果选中，Sisulizer 会将所有具有翻译的资源项写入本地化的资源文件（即已在编辑表中给出翻译）。&lt;br&gt;这是默认值。</target>
        </trans-unit>
        <trans-unit>
          <source>Let&#x27;s change language again. Choose File | Language and select &amp;#26085;&amp;#26412;&amp;#35486; from the list. Sisulizer loads Japanese resource file (ja\Conveter.resources.dll) and translates the application into Japanese.</source>
          <target>让我们再次改变语言。选择文件 |语言并从列表中选择日本语。 Sisulizer 加载日语资源文件 (ja\Conveter.resources.dll) 并将应用程序翻译成日语。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the case of the Lang-attributes that are used in the file. Possible values are:</source>
          <target>指定文件中使用的语言属性的大小写。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Both parameters are used. If parameters given here contain same parameters as the solution, parameter given here are used and the one given in the solution is ignored.</source>
          <target>两个参数都被使用。如果此处给出的参数包含与解决方案相同的参数，则使用此处给出的参数，而忽略解决方案中给出的参数。</target>
        </trans-unit>
        <trans-unit>
          <source>Visual .NET Localization (Windows Forms, WPF, .NET Compact and Silverlight)</source>
          <target>视觉 .NET 本地化（Windows 窗体、WPF、.NET Compact 和 Silverlight）</target>
        </trans-unit>
        <trans-unit>
          <source>Check &lt;em&gt;Import translations from a database&lt;/em&gt; and press &lt;em&gt;Next&lt;/em&gt; to import translations from a database table.</source>
          <target>选中&lt;em&gt;从数据库导入翻译&lt;/em&gt;并按&lt;em&gt;下一步&lt;/em&gt;从数据库表导入翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>String values in scripts</source>
          <target>脚本中的字符串值</target>
        </trans-unit>
        <trans-unit>
          <source>This dialog specifies the strings that have been excluded from the project by the value of the context.</source>
          <target>此对话框指定已通过上下文值从项目中排除的字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>File format</source>
          <target>文件格式</target>
        </trans-unit>
        <trans-unit>
          <source>Write invalidated translation</source>
          <target>编写无效的翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Let Sisulizer mirror forms during the build process</source>
          <target>让 Sisulizer 在构建过程中形成镜像</target>
        </trans-unit>
        <trans-unit>
          <source>Compare context values when locating a target row. The item is imported to the row where the context value equals to the context value of the import item. This can be used only if the import file contains context data (e.g. Sisulizer project file).</source>
          <target>定位目标行时比较上下文值。项目被导入到上下文值等于导入项目的上下文值的行。仅当导入文件包含上下文数据（例如 Sisulizer 项目文件）时才可以使用此选项。</target>
        </trans-unit>
        <trans-unit>
          <source>XML files</source>
          <target>XML 文件</target>
        </trans-unit>
        <trans-unit>
          <source>Select the file type</source>
          <target>选择文件类型</target>
        </trans-unit>
        <trans-unit>
          <source>Comment characters</source>
          <target>注释字符</target>
        </trans-unit>
        <trans-unit>
          <source>Receive project from translator</source>
          <target>从翻译接收项目</target>
        </trans-unit>
        <trans-unit>
          <source>Fixed length</source>
          <target>定长</target>
        </trans-unit>
        <trans-unit>
          <source>You can safely add new elements only to the end of the last element. You can no remove any existing elements without changing existing context values. Sisulizer can handle context change. If they change it will keep the existing translations.</source>
          <target>您只能安全地将新元素添加到最后一个元素的末尾。您不能在不更改现有上下文值的情况下删除任何现有元素。 Sisulizer 可以处理上下文更改。如果他们更改，它将保留现有的翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the default Java virtual machine executable that Sisulizer uses to launch Java applications.</source>
          <target>指定 Sisulizer 用于启动 Java 应用程序的默认 Java 虚拟机可执行文件。</target>
        </trans-unit>
        <trans-unit>
          <source>To correct spelling move mouse on the top of a marked word and right click to show suggested word list. Choose the right spelling from the list or edit the word manually.&lt;br&gt;Spell checking works also on original column but you can not change the values (because values are hard coded to the original files). If you find a spelling error in the original file(s) you should correct the programmer or author who created the files. Only he or she can modify original files and fix spelling.&lt;br&gt;You can turn this on and off by checking &lt;em&gt;Check spelling as you type&lt;/em&gt; check box on &lt;a href=&quot;GeneralSettingsDialogSpellingSheet.htm&quot;&gt;Spelling sheet&lt;/a&gt; of &lt;a href=&quot;GeneralSettingsDialog.htm&quot;&gt;Tools | General Settings&lt;/a&gt; dialog.</source>
          <target>要纠正拼写，将鼠标移到标记单词的顶部并右键单击以显示建议的单词列表。从列表中选择正确的拼写或手动编辑单词。&lt;br&gt;拼写检查也适用于原始列，但您不能更改值（因为值被硬编码到原始文件中）。如果您发现原始文件中有拼写错误，您应该更正创建这些文件的程序员或作者。只有他或她可以修改原始文件并修复拼写。&lt;br&gt;您可以通过在“&lt;a href=&quot;GeneralSettingsDialog.htm&quot;&gt;工具 |&lt;/a&gt;&lt;a href=&quot;GeneralSettingsDialogSpellingSheet.htm&quot;&gt;拼写&lt;/a&gt;检查表”上的“&lt;em&gt;键入时&lt;/em&gt;检查&lt;a href=&quot;GeneralSettingsDialogSpellingSheet.htm&quot;&gt;拼写”&lt;/a&gt;复选框来打开和关闭此功能&lt;a href=&quot;GeneralSettingsDialog.htm&quot;&gt;。常规设置&lt;/a&gt;对话框。</target>
        </trans-unit>
        <trans-unit>
          <source>Mark linkings to external translation files</source>
          <target>标记指向外部翻译文件的链接</target>
        </trans-unit>
        <trans-unit>
          <source>Opens a Find dialog that lets you find text.</source>
          <target>打开一个查找对话框，您可以在其中查找文本。</target>
        </trans-unit>
        <trans-unit>
          <source>To display Web page text larger or smaller. From the radio group, choose to text size you want.</source>
          <target>显示更大或更小的网页文本。从单选组中，选择所需的文字大小。</target>
        </trans-unit>
        <trans-unit>
          <source>Recent projects</source>
          <target>最近的项目</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer creates a &lt;a href=&quot;LocalizedPeFiles.htm&quot;&gt;localized file&lt;/a&gt; for each language in the project.&lt;br&gt;For example if the original file is MySample.exe and the project contains German and Japanese, Sisulizer creates de\MySample.exe and ja\MySample.exe. These files are equal to the original file except resource data has been localized.</source>
          <target>如果选中 Sisulizer，则会为项目中的每种语言创建一个&lt;a href=&quot;LocalizedPeFiles.htm&quot;&gt;本地化文件&lt;/a&gt;。&lt;br&gt;例如，如果原始文件是 MySample.exe 并且项目包含德语和日语，Sisulizer 将创建 de\MySample.exe 和 ja\MySample.exe。除了资源数据已本地化外，这些文件与原始文件相同。</target>
        </trans-unit>
        <trans-unit>
          <source>Windows binary files (*.exe, *.dll, *.ocx)</source>
          <target>Windows 二进制文件（*.exe、*.dll、*.ocx）</target>
        </trans-unit>
        <trans-unit>
          <source>This string does not contain any special character. This is why the result will be same using both encodings. &amp;lt;tab&amp;gt; means single tab character (0x09).</source>
          <target>该字符串不包含任何特殊字符。这就是为什么使用两种编码的结果相同的原因。 &amp;lt;tab&amp;gt; 表示单个制表符 (0x09)。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer works on Windows 10, Windows 8, Windows 7, Vista, and Windows XP.</source>
          <target>Sisulizer 适用于 Windows 10、Windows 8、Windows 7、Vista 和 Windows XP。</target>
        </trans-unit>
        <trans-unit>
          <source>Original encoding</source>
          <target>原始编码</target>
        </trans-unit>
        <trans-unit>
          <source>Mark long translations as percentages</source>
          <target>将长翻译标记为百分比</target>
        </trans-unit>
        <trans-unit>
          <source>Translation Engines - Translate settings (Sisulizer Translation Memory)</source>
          <target>翻译引擎 - 翻译设置（Sisulizer 翻译记忆库）</target>
        </trans-unit>
        <trans-unit>
          <source>Send spelling error to the author of the file</source>
          <target>将拼写错误发送给文件的作者</target>
        </trans-unit>
        <trans-unit>
          <source>Library file is always lsproof.dll. License file is always LICENCE. Both files are located on the same directory as the dictionary files.</source>
          <target>库文件始终是 lsproof.dll。许可证文件始终为 LICENCE。这两个文件与字典文件位于同一目录中。</target>
        </trans-unit>
        <trans-unit>
          <source>Pseudo translations</source>
          <target>伪翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Mac OSX Localization (Delphi and FireMonkey)</source>
          <target>Mac OSX 本地化（Delphi 和 FireMonkey）</target>
        </trans-unit>
        <trans-unit>
          <source>Uploads files from local directory to the web server.</source>
          <target>将文件从本地目录上传到 Web 服务器。</target>
        </trans-unit>
        <trans-unit>
          <source>Add language part</source>
          <target>添加语言部分</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies if original strings and translations are compared and filtered based on the comparison. Possible values are:</source>
          <target>指定是否根据比较比较和过滤原始字符串和翻译。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the database type and location where the translation memory is located.</source>
          <target>显示翻译记忆库所在的数据库类型和位置。</target>
        </trans-unit>
        <trans-unit>
          <source>Structured files contains one or more records. Each record contains one or more strings. Data is parsed using text definitions.</source>
          <target>结构化文件包含一个或多个记录。每条记录包含一个或多个字符串。使用文本定义解析数据。</target>
        </trans-unit>
        <trans-unit>
          <source>XLIFF source (and target) tags may contain inline elements. Inline elements are &amp;lt;g&amp;gt;, &amp;lt;x/&amp;gt;, &amp;lt;bx/&amp;gt;, &amp;lt;ex/&amp;gt;, &amp;lt;bpt&amp;gt;, &amp;lt;ept&amp;gt;, &amp;lt;sub&amp;gt;, &amp;lt;it&amp;gt;, &amp;lt;ph&amp;gt;. Sisulizer shows the inline elemens visually in the editing sheet.</source>
          <target>XLIFF 源（和目标）标签可能包含行内元素。内联元素是 &amp;lt;g&amp;gt;、&amp;lt;x/&amp;gt;、&amp;lt;bx/&amp;gt;、&amp;lt;ex/&amp;gt;、&amp;lt;bpt&amp;gt;、&amp;lt;ept&amp;gt;、&amp;lt;sub&amp;gt;、&amp;lt;it&amp;gt;、&amp;lt;ph&amp;gt;。 Sisulizer 在编辑表中直观地显示内联元素。</target>
        </trans-unit>
        <trans-unit>
          <source>Property is not localized</source>
          <target>属性未本地化</target>
        </trans-unit>
        <trans-unit>
          <source>Validation menu</source>
          <target>验证菜单</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify a project group file to be localized.</source>
          <target>使用此表指定要本地化的项目组文件。</target>
        </trans-unit>
        <trans-unit>
          <source>When Sisulizer writes localized forms the string value are different to the original values. Their character sets are also different. This might make Sisulizer to use Unicode much more than Ansi. Especially when you are localizing to a non-Latin based language such as Greek or Japanese. If you use Delphi/C++Builder 6 or later there are no problem. All strings encoding are valid. However if you use Delphi/C++Builder 5 or older Unicode encoding are not available for properties that has String type. There is not easy and 100% reliable way to detect what was the Delphi/C++Builder compiler that was used to compile the EXE. This is why you can configure if and how Sisulizer writes Unicode strings.</source>
          <target>当 Sisulizer 写入本地化表单时，字符串值与原始值不同。他们的字符集也不同。这可能会使 Sisulizer 使用 Unicode 多于 Ansi。尤其是当您本地化为非拉丁语系语言（如希腊语或日语）时。如果您使用 Delphi/C++Builder 6 或更高版本，则没有问题。所有字符串编码都是有效的。但是，如果您使用 Delphi/C++Builder 5 或更旧的 Unicode 编码，则字符串类型的属性将不可用。没有简单且 100% 可靠的方法来检测用于编译 EXE 的 Delphi/C++Builder 编译器是什么。这就是为什么您可以配置 Sisulizer 是否以及如何写入 Unicode 字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Mojibake index</source>
          <target>莫吉饼指数</target>
        </trans-unit>
        <trans-unit>
          <source>Create localized files using your current localization tool.</source>
          <target>使用您当前的本地化工具创建本地化文件。</target>
        </trans-unit>
        <trans-unit>
          <source>It is not always practical to add all unknown words to the custom dictionary. Add only those words that are common and you know for sure that they are proper words of the language or names such as product or company names. For all other words it is better to mark them ignored. This tell Sisulizer not to spell check the word. You can ignore words by location or my value. By location ignores that string only on that location. If the same word appears on some other location it will not be ignored. If you ignore by value all same word everywhere on the project are ignored.</source>
          <target>将所有未知单词添加到自定义词典中并不总是可行的。仅添加那些常见的词，并且您确定它们是语言或名称（例如产品或公司名称）的正确词。对于所有其他单词，最好将它们标记为忽略。这告诉 Sisulizer 不要对单词进行拼写检查。您可以按位置或我的值忽略单词。按位置仅在该位置忽略该字符串。如果相同的词出现在其他位置，则不会被忽略。如果您按值忽略项目上所有相同的词都将被忽略。</target>
        </trans-unit>
        <trans-unit>
          <source>Android application are deployed as APK files. An APK file contains compiled code and compiled resources. When you use binary localization you don&#x27;t need source codes at all and you don&#x27;t have to recompile anything. Sisulizer reads the orignal application file (.apk), extracts resources from the file, and finally creates localized application file(s). Each output file contains resources in one language or one output file contains resources in all languages that you support. A localized single language application is similar to the original application but the original resource data has been replaced with the translated ones. A localized multi language application contains the unchanged original resources plus set of localized resources. It is up to you which file you create and deploy. A single language application files are smaller because they contain resources in one language only. A multi language application files are easier to deploy because you can deploy the same file to every market area.</source>
          <target>Android 应用程序部署为 APK 文件。 APK 文件包含已编译的代码和已编译的资源。当您使用二进制本地化时，您根本不需要源代码，也不需要重新编译任何东西。 Sisulizer 读取原始应用程序文件 (.apk)，从文件中提取资源，最后创建本地化的应用程序文件。每个输出文件都包含一种语言的资源，或者一个输出文件包含您支持的所有语言的资源。本地化的单语言应用程序与原始应用程序类似，但原始资源数据已替换为翻译后的资源数据。本地化的多语言应用程序包含未更改的原始资源和本地化资源集。创建和部署哪个文件取决于您。单一语言的应用程序文件较小，因为它们仅包含一种语言的资源。多语言应用程序文件更容易部署，因为您可以将相同的文件部署到每个市场区域。</target>
        </trans-unit>
        <trans-unit>
          <source>Updates language fields to match the localized language in VERSIONINFO resource</source>
          <target>更新语言字段以匹配 VERSIONINFO 资源中的本地化语言</target>
        </trans-unit>
        <trans-unit>
          <source>Field localization</source>
          <target>现场定位</target>
        </trans-unit>
        <trans-unit>
          <source>A spell and grammar checker for Nordic languages: Danish, Finnish, Norwegian (Bokm&amp;aring;l), Norwegian (Nynorsk) and Swedish.&lt;br&gt;
    In order to use it you &lt;a href=&quot;InstallLingsoft.htm&quot;&gt;need to purchase engine and dictionary&lt;/a&gt; from Lingsoft.</source>
          <target>北欧语言的拼写和语法检查器：丹麦语、芬兰语、挪威语 (Bokmål)、挪威语 (Nynorsk) 和瑞典语。&lt;br&gt;为了使用它，您&lt;a href=&quot;InstallLingsoft.htm&quot;&gt;需要&lt;/a&gt;从Lingsoft&lt;a href=&quot;InstallLingsoft.htm&quot;&gt;购买引擎和字典&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Recent project files list makes it possible to quickly reopen a recently opened project, open another existing project, open a sample project, create a new project, or read this online documentation. The list contains the date and time when the project was scanned and saved last time. To open a project click the project name.</source>
          <target>最近的项目文件列表可以快速重新打开最近打开的项目、打开另一个现有项目、打开示例项目、创建新项目或阅读此在线文档。该列表包含上次扫描和保存项目的日期和时间。要打开项目，请单击项目名称。</target>
        </trans-unit>
        <trans-unit>
          <source>A spell checker that supports Czech, Croatian, Danish, Dutch, English (US), English (UK), French, German, Italian, Polish, Russian, Slovenian, Spanish and Swedish.&lt;br&gt;
    By default Sisulizer setup installs the engine and the dictionaries for all above languages. However during the setup you could uncheck one ore more languages. If you need them later &lt;a href=&quot;InstallPolar.htm&quot;&gt;run Sisulizer setup again&lt;/a&gt;.</source>
          <target>拼写检查器，支持捷克语、克罗地亚语、丹麦语、荷兰语、英语（美国）、英语（英国）、法语、德语、意大利语、波兰语、俄语、斯洛文尼亚语、西班牙语和瑞典语。&lt;br&gt;默认情况下，Sisulizer 安装程序会安装上述所有语言的引擎和词典。但是，在设置过程中，您可以取消选中一种或多种语言。如果您稍后需要它们，请再次&lt;a href=&quot;InstallPolar.htm&quot;&gt;运行 Sisulizer 安装程序&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>All nodes of the Sisulizer project will be included to the package by default. You can exclude nodes which should not be added. Double click a node to exclude it. When node is excluded a stop sign will be shown before its icon.</source>
          <target>默认情况下，Sisulizer 项目的所有节点都将包含在包中。您可以排除不应添加的节点。双击节点以将其排除。当节点被排除在外时，其图标前将显示一个停止标志。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows only   changed values.</source>
          <target>仅显示更改的值。</target>
        </trans-unit>
        <trans-unit>
          <source>Sets the dialog options. Possible values are:</source>
          <target>设置对话框选项。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>During various processes (etc. scanning or building) different kind of messages will be written on the output log. There are three groups of messages: hints, notes and warnings. You can disable writing of these messages by unchecked the message check box.</source>
          <target>在各种过程（如扫描或构建）期间，不同类型的消息将写入输出日志。有三组消息：提示、注释和警告。您可以通过取消选中消息复选框来禁用这些消息的写入。</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks if a string contains characters that do not belong to the language of the string. Sometimes when you enter translations you might enter characters that do not belong the script of the target language. This might cause that the computer where the end user runs the applications of views the document can not show the characters. Some examples:</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查字符串是否包含不属于该字符串语言的字符。有时，当您输入翻译时，您可能会输入不属于目标语言脚本的字符。这可能会导致最终用户运行查看文档的应用程序的计算机无法显示字符。一些例子：</target>
        </trans-unit>
        <trans-unit>
          <source>Translation status column</source>
          <target>翻译状态栏</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer exchange package.&lt;br&gt;&lt;strong&gt;Note!&lt;/strong&gt; When opening Sisulizer expands the package to a project file and saves the project in Sisulizer project file format (&lt;!-- #BeginLibraryItem &quot;/Library/ProjectExt.lbi&quot; --&gt; .slp&lt;!-- #EndLibraryItem --&gt;).</source>
          <target>Sisulizer 交换包。&lt;br&gt;&lt;strong&gt;笔记！&lt;/strong&gt;打开 Sisulizer 时会将包展开为项目文件，并将项目保存为 Sisulizer 项目文件格式 (&lt;!-- #BeginLibraryItem &quot;/Library/ProjectExt.lbi&quot; --&gt; .slp&lt;!-- #EndLibraryItem --&gt; ）。</target>
        </trans-unit>
        <trans-unit>
          <source>To make Sisulizer embedding resource DLLs into application right click the source name on the project tree and choose Properties. Then either check &lt;em&gt;Embedded resource DLLs&lt;/em&gt; check box. If you use Sisulizer&#x27;s functions to extract the embedded resource DLLs on run time leave &lt;em&gt;Embedded resource type&lt;/em&gt; and &lt;em&gt;Embedded resource name&lt;/em&gt; edit in their default values.</source>
          <target>要使 Sisulizer 将资源 DLL 嵌入到应用程序中，请右键单击项目树上的源名称并选择“属性”。然后选中&lt;em&gt;嵌入式资源 DLL&lt;/em&gt;复选框。如果您使用 Sisulizer 的函数在运行时提取嵌入式资源 DLL，请将&lt;em&gt;嵌入式资源类型&lt;/em&gt;和&lt;em&gt;嵌入式资源名称&lt;/em&gt;编辑保留为默认值。</target>
        </trans-unit>
        <trans-unit>
          <source>For example if we have &lt;strong&gt;&amp;amp;File&lt;/strong&gt; string in our project and its Japanese translation is &lt;strong&gt;&amp;#12501;&amp;#12449;&amp;#12452;&amp;#12523;(&amp;amp;F)&lt;/strong&gt; Sisulizer adds [File -&amp;gt; &amp;#12501;&amp;#12449;&amp;#12452;&amp;#12523;] translation pair to the translation memory. When using the translation memory for &lt;strong&gt;File&lt;/strong&gt; string Sisulizer translates it to &lt;strong&gt;&amp;#12501;&amp;#12449;&amp;#12452;&amp;#12523;&lt;/strong&gt;. When using the translation memory for &lt;strong&gt;&amp;amp;File&lt;/strong&gt; string Sisulizer translates it to &lt;strong&gt;&amp;#12501;&amp;#12449;&amp;#12452;&amp;#12523;(&amp;amp;F)&lt;/strong&gt;. When using the translation memory for &lt;strong&gt;F&amp;amp;ile&lt;/strong&gt; string Sisulizer translates it to &lt;strong&gt;&amp;#12501;&amp;#12449;&amp;#12452;&amp;#12523;(&amp;amp;I)&lt;/strong&gt;.</source>
          <target>例如，如果我们的项目中有&lt;strong&gt;&amp;amp;File&lt;/strong&gt;字符串，并且它的日语翻译是&lt;strong&gt;ファイル(&amp;amp;F)，&lt;/strong&gt; Sisulizer 会将 [File -&amp;gt; ファイル] 翻译对添加到翻译记忆库中。使用&lt;strong&gt;File&lt;/strong&gt; string 的翻译记忆库时，Sisulizer 将其翻译为&lt;strong&gt;ファイル&lt;/strong&gt;。使用&lt;strong&gt;&amp;amp;File&lt;/strong&gt;字符串的翻译记忆库时，Sisulizer 将其翻译为&lt;strong&gt;ファイル(&amp;amp;F)&lt;/strong&gt; 。使用&lt;strong&gt;F&amp;amp;ile&lt;/strong&gt;字符串的翻译记忆库时，Sisulizer 将其翻译为&lt;strong&gt;ファイル(&amp;amp;I)&lt;/strong&gt; 。</target>
        </trans-unit>
        <trans-unit>
          <source>Keystore is a file that contains your Android key. Enter the file name  or click ... to browse the file.</source>
          <target>密钥库是一个包含您的 Android 密钥的文件。输入文件名或单击...浏览文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Restores the color(s) of the selected control.</source>
          <target>恢复所选控件的颜色。</target>
        </trans-unit>
        <trans-unit>
          <source>Polar spell checker is a basic spell checker. If you want to use more professional spell checker we recommend to use &lt;a href=&quot;InstallHunspell.htm&quot;&gt;Hunspell&lt;/a&gt; or &lt;a href=&quot;InstallLingsoft.htm&quot;&gt;Lingsoft&lt;/a&gt; spell checkers.</source>
          <target>Polar 拼写检查器是一个基本的拼写检查器。如果您想使用更专业的拼写检查器，我们建议使用&lt;a href=&quot;InstallHunspell.htm&quot;&gt;Hunspell&lt;/a&gt;或&lt;a href=&quot;InstallLingsoft.htm&quot;&gt;Lingsoft&lt;/a&gt;拼写检查器。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;a href=&quot;NetLocalization.htm&quot;&gt;.NET&lt;/a&gt;, &lt;a href=&quot;XmlLocalization.htm&quot;&gt;XML&lt;/a&gt;, &lt;a href=&quot;HtmlLocalization.htm&quot;&gt;HTML&lt;/a&gt;, &lt;a href=&quot;OnlineHelpLocalization.htm&quot;&gt;HTML Help&lt;/a&gt;, &lt;a href=&quot;DatabaseLocalization.htm&quot;&gt;database&lt;/a&gt; and &lt;a href=&quot;SourceCodeLocalization.htm&quot;&gt;source code&lt;/a&gt; localizations</source>
          <target>&lt;a href=&quot;NetLocalization.htm&quot;&gt;.NET&lt;/a&gt; 、 &lt;a href=&quot;XmlLocalization.htm&quot;&gt;XML&lt;/a&gt; 、 &lt;a href=&quot;HtmlLocalization.htm&quot;&gt;HTML&lt;/a&gt; 、 &lt;a href=&quot;OnlineHelpLocalization.htm&quot;&gt;HTML 帮助&lt;/a&gt;、&lt;a href=&quot;DatabaseLocalization.htm&quot;&gt;数据库&lt;/a&gt;和&lt;a href=&quot;SourceCodeLocalization.htm&quot;&gt;源代码&lt;/a&gt;本地化</target>
        </trans-unit>
        <trans-unit>
          <source>Select the terminology that you want to optimize. If your text does not contain any specific terminology leave all check boxes unchecked.</source>
          <target>选择要优化的术语。如果您的文本不包含任何特定术语，请取消选中所有复选框。</target>
        </trans-unit>
        <trans-unit>
          <source>Java files</source>
          <target>Java文件</target>
        </trans-unit>
        <trans-unit>
          <source>WPF resource file, XAML files (.xaml), do not contain type information of the properties or does not even contain information if the element is property of event. This sets some difficulties for localizations. Without type information Sisulizer can not figure out if data is property or event and if property what is the type. In general you want to scan most string data but only certain integer data (e.g. Left, Top). Scanning of integer data is hard coded to Sisulizer and it can property scan layout of all component including 3rd party components. The problem appears when scanning a 3rd party control that is not know by Sisulizer. Without type information Sisulizer can not figure out what custom properties are string typed and what are not. This is why it can just not scan all unknown properties. That would make it to scan all other data type and events too. For all other modern resources types such as VCL&#x27;s .dfm or WinForms&#x27;s .resx contain type information. For these platforms Sisulizer can safely scan all string properties without getting huge amount of unnecessary rows. If you want to exclude scanning of a property you can easily exclude it. This same approach does not work for XAML because Sisulizer would scan basically all data including events names. This is why in WPF Sisulizer only scan the known properties such as Text, Left, Top, Background, etc. Sisulizer team has tested all standard WPF controls and all properties of them that are needed to be scanned are scanned. If you use 3rd party WPF controls you have to add the &amp;quot;custom properties&amp;quot; to the included property list in the &lt;a href=&quot;ComponentMapping.htm&quot;&gt;component mapping&lt;/a&gt;.</source>
          <target>WPF 资源文件、XAML 文件 (.xaml) 不包含属性的类型信息，或者如果元素是事件的属性，则甚至不包含信息。这给本地化带来了一些困难。如果没有类型信息，Sisulizer 无法确定数据是属性还是事件，以及属性是什么类型。通常，您希望扫描大多数字符串数据，但只扫描某些整数数据（例如 Left、Top）。整数数据的扫描被硬编码到 Sisulizer，它可以对包括 3rd 方组件在内的所有组件进行属性扫描。扫描 Sisulizer 不知道的第 3 方控件时会出现此问题。如果没有类型信息，Sisulizer 无法确定哪些自定义属性是字符串类型的，哪些不是。这就是为什么它不能扫描所有未知属性的原因。这也将使其扫描所有其他数据类型和事件。对于所有其他现代资源类型，例如 VCL 的 .dfm 或 WinForms 的 .resx 包含类型信息。对于这些平台，Sisulizer 可以安全地扫描所有字符串属性，而不会获得大量不必要的行。如果您想排除对某个属性的扫描，您可以轻松地将其排除。这种相同的方法不适用于 XAML，因为 Sisulizer 基本上会扫描所有数据，包括事件名称。这就是为什么在 WPF Sisulizer 中只扫描已知的属性，如文本、左、顶、背景等。 Sisulizer 团队已经测试了所有标准的 WPF 控件，并且它们的所有需要​​扫描的属性都被扫描。如果您使用 3rd 方 WPF 控件，则必须将“自定义属性”添加到&lt;a href=&quot;ComponentMapping.htm&quot;&gt;组件映射中&lt;/a&gt;包含的属性列表中。</target>
        </trans-unit>
        <trans-unit>
          <source>Item has been added.</source>
          <target>已添加项目。</target>
        </trans-unit>
        <trans-unit>
          <source>If Sisulizer can not detect the data format of custom resource you can specify the format manually. Right click the resource item node on the project three and choose Properties. Uncheck &lt;em&gt;Automatic&lt;/em&gt; check box and set  the format in the &lt;em&gt;Format&lt;/em&gt; combo box.</source>
          <target>如果 Sisulizer 无法检测自定义资源的数据格式，您可以手动指定格式。右键单击项目三上的资源项节点并选择属性。取消选中&lt;em&gt;自动&lt;/em&gt;复选框并在&lt;em&gt;格式&lt;/em&gt;组合框中设置格式。</target>
        </trans-unit>
        <trans-unit>
          <source>Show or hide the filter panel.</source>
          <target>显示或隐藏过滤器面板。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows tip of day information messages.</source>
          <target>显示每日提示信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Use country specific translations when translating the main language</source>
          <target>翻译主要语言时使用国家特定的翻译</target>
        </trans-unit>
        <trans-unit>
          <source>The following table contains language code examples:</source>
          <target>下表包含语言代码示例：</target>
        </trans-unit>
        <trans-unit>
          <source>Block number  field</source>
          <target>块号字段</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies if the table of contents  (TOC) will be sorted. Possible sorting methods  are:</source>
          <target>指定是否对目录 (TOC) 进行排序。可能的排序方法有：</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the excluded data types settings</source>
          <target>指定排除的数据类型设置</target>
        </trans-unit>
        <trans-unit>
          <source>Update language fields to match the target language</source>
          <target>更新语言字段以匹配目标语言</target>
        </trans-unit>
        <trans-unit>
          <source>When using the resource file localization user selects a resource file (.xaml, .baml, .resx or .txt) to be localized. On the build process Sisulizer creates the localized resource files. Sisulizer can automatically compile the created localized resource files to compiled resource files (.resources).</source>
          <target>使用资源文件本地化时，用户选择要本地化的资源文件（.xaml、.baml、.resx 或 .txt）。在构建过程中，Sisulizer 创建本地化的资源文件。 Sisulizer 可以自动将创建的本地化资源文件编译为编译后的资源文件（.resources）。</target>
        </trans-unit>
        <trans-unit>
          <source>Source code localization is very simple in Sisulizer because it is visual and safe. The basic idea of source code localization it to parse the source, extract strings from it and create localized copy of the source code where the original strings are replaced with the translated ones. The structure of the localized file is identical to the original file. Only the strings are different.</source>
          <target>Sisulizer 中的源代码本地化非常简单，因为它是可视化和安全的。源代码本地化的基本思想是解析源代码，从中提取字符串并创建源代码的本地化副本，其中原始字符串替换为翻译后的字符串。本地化文件的结构与原始文件相同。只是字符串不同。</target>
        </trans-unit>
        <trans-unit>
          <source>Select the language of the string in the import field. If you import to the translation memory select also the import language.</source>
          <target>在导入字段中选择字符串的语言。如果您导入到翻译记忆库，还要选择导入语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Your previous localization tool</source>
          <target>您之前的本地化工具</target>
        </trans-unit>
        <trans-unit>
          <source>Change row status from Changed to In use automatically before scanning</source>
          <target>扫描前自动将行状态从 Changed 更改为 In use</target>
        </trans-unit>
        <trans-unit>
          <source>Enter a string that must be in the context value in order the row to be visible in the sheet. If &lt;em&gt;Excluded&lt;/em&gt; is checked matching rows are not shown.</source>
          <target>输入一个必须在上下文值中的字符串，以便该行在工作表中可见。如果选中“&lt;em&gt;排除”，&lt;/em&gt;则不会显示匹配的行。</target>
        </trans-unit>
        <trans-unit>
          <source>Importing from Multilizer Project Files</source>
          <target>从 Multilizer 项目文件导入</target>
        </trans-unit>
        <trans-unit>
          <source>This items is used when a replace type is selected.</source>
          <target>选择替换类型时使用此项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Text file localization can be very challenging. This is because the internal format of a text file can be almost anything. File can contain plain text or it can contain more structural data. For example, look at the following text file:</source>
          <target>文本文件本地化可能非常具有挑战性。这是因为文本文件的内部格式几乎可以是任何格式。文件可以包含纯文本，也可以包含更多结构数据。例如，查看以下文本文件：</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks if  a text is clipped because the size of control is too small to show the full text.</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查文本是否因控件大小太小而无法显示全文而被剪切。</target>
        </trans-unit>
        <trans-unit>
          <source>The name of the property.</source>
          <target>属性的名称。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the encoding that the current item uses. This is visible only if the text file uses code page encoded (e.g. non-Unicode) character encoding.</source>
          <target>指定当前项目使用的编码。这仅在文本文件使用代码页编码（例如非 Unicode）字符编码时可见。</target>
        </trans-unit>
        <trans-unit>
          <source>Report tools use report templates. They define the report layout and bind data to the report. Report tools combine report template with the actual data from database to produce reports. The first step of report localization is to localize the template data. The data can be either embedded to the report component on the user interface form or it can be a separate file. If it is embedded Sisulizer will automatically localize the report template when localizing the form where the report component exist. If you use external report file you have to add the report file to your Sisulizer project. On build process Sisulizer will create localized report files.</source>
          <target>报告工具使用报告模板。它们定义报表布局并将数据绑定到报表。报告工具将报告模板与数据库中的实际数据结合起来生成报告。报表本地化的第一步是本地化模板数据。数据可以嵌入到用户界面表单上的报告组件中，也可以是一个单独的文件。如果是内嵌的，Sisulizer 会在本地化报表组件所在的表单时自动本地化报表模板。如果您使用外部报告文件，您必须将报告文件添加到您的 Sisulizer 项目中。在构建过程中，Sisulizer 将创建本地化的报告文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Fix the selected validation error automatically.</source>
          <target>自动修复选定的验证错误。</target>
        </trans-unit>
        <trans-unit>
          <source>Only first instance</source>
          <target>仅一审</target>
        </trans-unit>
        <trans-unit>
          <source>Clear if translation is different, set if empty or same,</source>
          <target>如果翻译不同则清除，如果为空或相同则设置，</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the source language that is written in the TMX header. For example:</source>
          <target>指定编写在 TMX 标头中的源语言。例如：</target>
        </trans-unit>
        <trans-unit>
          <source>Translate new rows automatically after scanning</source>
          <target>扫描后自动翻译新行</target>
        </trans-unit>
        <trans-unit>
          <source>Compile localized project</source>
          <target>编译本地化项目</target>
        </trans-unit>
        <trans-unit>
          <source>Create localized CHM file</source>
          <target>创建本地化的 CHM 文件</target>
        </trans-unit>
        <trans-unit>
          <source>Translates &lt;a href=&quot;DuplicateString.htm&quot;&gt;duplicated items&lt;/a&gt; in selected cells.</source>
          <target>翻译选定单元格中的&lt;a href=&quot;DuplicateString.htm&quot;&gt;重复项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Visual Basic does not use resources to store forms and strings. This is why Visual Basic projects must be localized in a different way. The idea is to create a complete set of project files (e.g. forms, modules, etc) for each language. The structure of the files is identical to the original files - only the strings and possible form layouts have been localized to the target languages.</source>
          <target>Visual Basic 不使用资源来存储窗体和字符串。这就是必须以不同方式本地化 Visual Basic 项目的原因。这个想法是为每种语言创建一套完整的项目文件（例如表单、模块等）。文件的结构与原始文件相同 - 只有字符串和可能的表单布局已本地化为目标语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Sort pages first, then sub folders</source>
          <target>先对页面进行排序，然后再对子文件夹进行排序</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer localizes index data (.hhk file).</source>
          <target>如果选中 Sisulizer 本地化索引数据（.hhk 文件）。</target>
        </trans-unit>
        <trans-unit>
          <source>The following examples show how to set the user interface culture. Add lines written in bold typeface.</source>
          <target>以下示例显示了如何设置用户界面文化。添加以粗体书写的行。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows only those duplicate rows whose translations are different to each other.</source>
          <target>仅显示那些翻译彼此不同的重复行。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer adds all translations of the unused row to the translation memory before deleting the rows.</source>
          <target>如果选中 Sisulizer，则会在删除行之前将未使用行的所有翻译添加到翻译记忆库中。</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;lt;MT&amp;gt; machine translation</source>
          <target>&amp;lt;MT&amp;gt; 机器翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Let&#x27;s have few combined string expression examples:</source>
          <target>让我们举几个组合字符串表达式的例子：</target>
        </trans-unit>
        <trans-unit>
          <source>PO files (*.po, *pot)</source>
          <target>PO 文件 (* .po, * pot)</target>
        </trans-unit>
        <trans-unit>
          <source>When you build the localized files Sisulizer will create a copy of the original file on sub directory called emb and adds the resource DLLs as custom resources into the application. The following image shows how Sisulizer adds the resource DLLs into the custom resource data. The resource type is SISULIZER and the name of the each resource is the language code of the language that the resource DLL contains. The resource data bytes of the file.</source>
          <target>当您构建本地化文件时，Sisulizer 将在名为 emb 的子目录中创建原始文件的副本，并将资源 DLL 作为自定义资源添加到应用程序中。下图显示了 Sisulizer 如何将资源 DLL 添加到自定义资源数据中。资源类型是SISULIZER，每个资源的名称是资源DLL 包含的语言的语言代码。文件的资源数据字节。</target>
        </trans-unit>
        <trans-unit>
          <source>Binary localization works on every case except with Visual Basic where Visual Basic localization should be used.</source>
          <target>二进制本地化适用于所有情况，但应使用 Visual Basic 本地化的 Visual Basic 除外。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked only strings data types are shown on the edit sheet. All other types are excluded. You can later changed excluded types from &lt;a href=&quot;SourceDialogExcludedTypesSheet.htm&quot;&gt;source &#x27;s property dialog&lt;/a&gt;.</source>
          <target>如果选中，则编辑表上仅显示字符串数据类型。排除所有其他类型。您可以稍后从&lt;a href=&quot;SourceDialogExcludedTypesSheet.htm&quot;&gt;源的属性对话框中&lt;/a&gt;更改排除的类型。</target>
        </trans-unit>
        <trans-unit>
          <source>String value is the string context.&lt;br&gt;
      If the source code contains same string twice of more then all instances share the single row and they all are translated in the same way.</source>
          <target>字符串值是字符串上下文。&lt;br&gt;如果源代码包含两次以上相同的字符串，则所有实例共享单行，并且它们都以相同的方式进行翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Sending data to a translator</source>
          <target>向翻译人员发送数据</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;WindowsLocalization.htm&quot;&gt;Delphi application or library is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定选定的&lt;a href=&quot;WindowsLocalization.htm&quot;&gt;Delphi 应用程序或库的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Select the corresponding form node of the selected string node.</source>
          <target>选择所选字符串节点对应的表单节点。</target>
        </trans-unit>
        <trans-unit>
          <source>Not read only</source>
          <target>非只读</target>
        </trans-unit>
        <trans-unit>
          <source>String is expanded. This method can be used to test that the user interface handles longer translations correctly. It is usual that English worlds are shorter than their translations. The expansion amount depends on the length of the original string. Use &lt;em&gt;Expand percentage&lt;/em&gt; to control the length of the expansion.&lt;br&gt;For example &lt;samp&gt;&amp;quot;Hello World&amp;quot;&lt;/samp&gt; becomes &lt;samp&gt;&amp;quot;Hello World________X&amp;quot;&lt;/samp&gt;.</source>
          <target>字符串被扩展。此方法可用于测试用户界面是否正确处理较长的翻译。通常，英语世界比他们的翻译更短。扩展量取决于原始字符串的长度。使用&lt;em&gt;扩展百分比&lt;/em&gt;来控制扩展的长度。&lt;br&gt;例如， &lt;samp&gt;“Hello World”&lt;/samp&gt;变成&lt;samp&gt;“Hello World________X”&lt;/samp&gt; 。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can run localized applications</source>
          <target>Sisulizer 可以运行本地化应用程序</target>
        </trans-unit>
        <trans-unit>
          <source>Original does not have period but translation has.</source>
          <target>原文没有句号，但翻译有句号。</target>
        </trans-unit>
        <trans-unit>
          <source>r</source>
          <target>r</target>
        </trans-unit>
        <trans-unit>
          <source>VCL has a built-in feature to use resource DLLs. This makes it possible to deploy the same application file (.exe or .dll) with different resource DLLs and still be able to run the application in the language needed. When a VCL application starts VCL looks for available resource DLLs from the same directory where the application file is located. If VCL can find a matching file it uses resources of the resource DLL instead of the original application file. For example if your application is Project1.exe it can have German and French resource DLLs: Project1.DE and Project1.FR. If you start the application on German Windows VCL will use resource data of Project1.DE instead of resource data of Project1.exe.</source>
          <target>VCL 具有使用资源 DLL 的内置功能。这使得使用不同的资源 DLL 部署相同的应用程序文件（.exe 或 .dll）成为可能，并且仍然能够以所需的语言运行应用程序。当 VCL 应用程序启动时，VCL 会从应用程序文件所在的同一目录中查找可用的资源 DLL。如果 VCL 可以找到匹配的文件，它会使用资源 DLL 的资源而不是原始应用程序文件。例如，如果您的应用程序是 Project1.exe，它可以具有德语和法语资源 DLL：Project1.DE 和 Project1.FR。如果您在德语 Windows 上启动应用程序，VCL 将使用 Project1.DE 的资源数据而不是 Project1.exe 的资源数据。</target>
        </trans-unit>
        <trans-unit>
          <source>If &lt;em&gt;String entities&lt;/em&gt; is unchecked Sisulizer does not decode the string but leaves it as it is. For example the above sample will be read as &amp;quot;&amp;amp;sportname;  is very fast sport&amp;quot;.</source>
          <target>如果未选中&lt;em&gt;字符串实体，&lt;/em&gt;则 Sisulizer 不会解码字符串而是保持原样。例如，上面的示例将被读作“&amp;amp;sportname; 是非常快的运动”。</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;lt;sldir&amp;gt;\VCL\DelphiWin\RuntimeChange contains a simple application using resource DLLs. FormCreate events initializes dynamic property values.</source>
          <target>&amp;lt;sldir&amp;gt;\VCL\DelphiWin\RuntimeChange 包含一个使用资源 DLL 的简单应用程序。 FormCreate 事件初始化动态属性值。</target>
        </trans-unit>
        <trans-unit>
          <source>Not in Dictionary</source>
          <target>不在字典中</target>
        </trans-unit>
        <trans-unit>
          <source>You can filter items based on the translation status. Check those statuses that you want to be visible in the sheet. Possible values are:</source>
          <target>您可以根据翻译状态过滤项目。检查您希望在工作表中显示的那些状态。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Lrelease executable</source>
          <target>Lrelease 可执行文件</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the resource file options.</source>
          <target>指定资源文件选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Automatic format</source>
          <target>自动格式化</target>
        </trans-unit>
        <trans-unit>
          <source>When the original [script] font name is [name] and size is [size]</source>
          <target>当原来的 [script] 字体名称为 [name] 且大小为 [size] 时</target>
        </trans-unit>
        <trans-unit>
          <source>Enter the file extension without the period character. For example &amp;quot;exe&amp;quot;.</source>
          <target>输入不带句点字符的文件扩展名。例如“exe”。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this menu to change the status of the selected node.</source>
          <target>使用此菜单更改所选节点的状态。</target>
        </trans-unit>
        <trans-unit>
          <source>This is a comment that start with a comment string and ends with the new line. For example:</source>
          <target>这是一个以注释字符串开头并以新行结束的注释。例如：</target>
        </trans-unit>
        <trans-unit>
          <source>The following line has an include tag that makes Sisulizer to scan the string.:</source>
          <target>下面一行有一个 include 标签，使 Sisulizer 扫描字符串。：</target>
        </trans-unit>
        <trans-unit>
          <source>Saves the translated data to a file.</source>
          <target>将翻译后的数据保存到文件中。</target>
        </trans-unit>
        <trans-unit>
          <source>If you do not include part part to the exclude file it will be used globally for each possible directory of the source. For example adding Form1.resx will disable both D:\MyFiles\Sample\Form1.resx and D:\MyFiles\Sample\Sub\Form1.resx files.</source>
          <target>如果您不将 part 部分包含到排除文件中，它将被全局用于源的每个可能目录。例如，添加 Form1.resx 将禁用 D:\MyFiles\Sample\Form1.resx 和 D:\MyFiles\Sample\Sub\Form1.resx 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Script and country neutral language</source>
          <target>脚本和国家中性语言</target>
        </trans-unit>
        <trans-unit>
          <source>Form1_Shown sets the document URL using a resource string.</source>
          <target>Form1_Shown 使用资源字符串设置文档 URL。</target>
        </trans-unit>
        <trans-unit>
          <source>Windows application file</source>
          <target>Windows 应用程序文件</target>
        </trans-unit>
        <trans-unit>
          <source>Engine list</source>
          <target>发动机清单</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to test the current segmentation rules.</source>
          <target>使用此对话框测试当前的分段规则。</target>
        </trans-unit>
        <trans-unit>
          <source>Translation validation helps you to track down if there are any mistakes or errors on your translations. By running translation validation checking successfully makes sure that the translation job is correct. This is why you should always run validation checks for your translations before creating localized files or sending translated project back to author. Choose  &lt;a href=&quot;ValidationTranslationDialog.htm&quot;&gt;Validation | Validate Translation&lt;/a&gt; to start translation validation and to see the possible validations that can be applied for translations.</source>
          <target>翻译验证可帮助您追踪翻译中是否存在任何错误或错误。通过成功运行翻译验证检查，确保翻译工作正确无误。这就是为什么在创建本地化文件或将翻译的项目发送回作者之前，您应该始终对翻译进行验证检查的原因。选择&lt;a href=&quot;ValidationTranslationDialog.htm&quot;&gt;验证 |验证翻译&lt;/a&gt;以开始翻译验证并查看可应用于翻译的可能验证。</target>
        </trans-unit>
        <trans-unit>
          <source>You use &amp;lt;method&amp;gt;  to mirror forms on run time</source>
          <target>您使用 &amp;lt;method&amp;gt; 在运行时镜像表单</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer compiles resource files (from .resx or .txt to .resources) when building localized files.</source>
          <target>如果选中 Sisulizer 在构建本地化文件时编译资源文件（从 .resx 或 .txt 到 .resources）。</target>
        </trans-unit>
        <trans-unit>
          <source>Translation menu</source>
          <target>翻译菜单</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;lt;data name=&amp;quot;String3&amp;quot; xml:space=&amp;quot;preserve&amp;quot;&amp;gt;
  &amp;lt;value&amp;gt;This is a sample&amp;lt;/value&amp;gt;
  &amp;lt;comment&amp;gt;&lt;span class=&quot;style1&quot;&gt;MaxChars=20&lt;/span&gt;&amp;lt;/comment&amp;gt;
&amp;lt;/data&amp;gt;</source>
          <target>&amp;lt;data name=&amp;quot;String3&amp;quot; xml:space=&amp;quot;preserve&amp;quot;&amp;gt; &amp;lt;value&amp;gt;这是一个示例&amp;lt;/value&amp;gt; &amp;lt;comment&amp;gt; &lt;span class=&quot;style1&quot;&gt;MaxChars=20&lt;/span&gt; &amp;lt;/comment&amp;gt; &amp;lt;/data&amp;gt;</target>
        </trans-unit>
        <trans-unit>
          <source>Hint messages are shown</source>
          <target>显示提示消息</target>
        </trans-unit>
        <trans-unit>
          <source>Exclude empty strings</source>
          <target>排除空字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Add settings</source>
          <target>添加设置</target>
        </trans-unit>
        <trans-unit>
          <source>Prompted when saving the project</source>
          <target>保存项目时提示</target>
        </trans-unit>
        <trans-unit>
          <source>Set the culture in the Main function (Program.cs).</source>
          <target>在 Main 函数 (Program.cs) 中设置区域性。</target>
        </trans-unit>
        <trans-unit>
          <source>Import translated project file</source>
          <target>导入翻译的项目文件</target>
        </trans-unit>
        <trans-unit>
          <source>Include only those rows that have not been marked &lt;em&gt;Do not translate&lt;/em&gt;.</source>
          <target>只包括那些没有被标记为&lt;em&gt;Do not translate 的行&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Update only project empty translations</source>
          <target>仅更新项目空翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Select the field that contains the original strings. If you import to the translation memory select also the original language.</source>
          <target>选择包含原始字符串的字段。如果您导入到翻译记忆库，还要选择原始语言。</target>
        </trans-unit>
        <trans-unit>
          <source>File | Recent file</source>
          <target>档案 |最近的文件</target>
        </trans-unit>
        <trans-unit>
          <source>Right click the Visual Studio project file (.csproj or vsproj) in Sisulizer&#x27;s project tree and choose Properties. Select Options sheet and uncheck &lt;em&gt;Compile resource files&lt;/em&gt; check box. This will disable compiling of localized .resx file into .resources files and also disables linking of the satellite assembly file.</source>
          <target>右键单击 Sisulizer 项目树中的 Visual Studio 项目文件（.csproj 或 vsproj），然后选择“属性”。选择选项表并取消选中&lt;em&gt;编译资源文件&lt;/em&gt;复选框。这将禁止将本地化 .resx 文件编译为 .resources 文件，并禁止链接附属程序集文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Header files</source>
          <target>头文件</target>
        </trans-unit>
        <trans-unit>
          <source>Info lines are shown</source>
          <target>显示信息行</target>
        </trans-unit>
        <trans-unit>
          <source>In addition of header and record a binary definition specifies some common options of the file.</source>
          <target>除了标头和记录之外，一个二进制定义指定了文件的一些常见选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Contains a list of validation types that can be automatically fixed. Check those validations from the list you want to fix automatically.  Press &lt;em&gt;Select All&lt;/em&gt; to check all validations. Press &lt;em&gt;Deselect All&lt;/em&gt; to uncheck all validations.</source>
          <target>包含可以自动修复的验证类型列表。从要自动修复的列表中检查这些验证。按&lt;em&gt;全选&lt;/em&gt;以检查所有验证。按&lt;em&gt;取消全选&lt;/em&gt;以取消选中所有验证。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to customize how the toolbar of the XML editor looks like.</source>
          <target>使用此表可自定义 XML 编辑器工具栏的外观。</target>
        </trans-unit>
        <trans-unit>
          <source>MsBuild tool can be found from .NET framework directory (e.g. C:\Windows\Microsoft.NET\Framework\v3.5\MsBuild.exe)</source>
          <target>MsBuild工具可以在.NET框架目录中找到（例如C:\Windows\Microsoft.NET\Framework\v3.5\MsBuild.exe）</target>
        </trans-unit>
        <trans-unit>
          <source>ja</source>
          <target>和</target>
        </trans-unit>
        <trans-unit>
          <source>You should  use these specific string types only in the case where single file used two or more different string encoding. It all strings are encoded in the same way use the generic string type and specify string encoding at the definition level.</source>
          <target>只有在单个文件使用两个或多个不同的字符串编码的情况下，才应该使用这些特定的字符串类型。所有字符串都以相同的方式编码，使用通用字符串类型并在定义级别指定字符串编码。</target>
        </trans-unit>
        <trans-unit>
          <source>Project file name</source>
          <target>项目文件名</target>
        </trans-unit>
        <trans-unit>
          <source>Use the default font</source>
          <target>使用默认字体</target>
        </trans-unit>
        <trans-unit>
          <source>Item contains binary data as a hexadecimal encoded string.</source>
          <target>项目包含作为十六进制编码字符串的二进制数据。</target>
        </trans-unit>
        <trans-unit>
          <source>If you check Show all data types check the following types will also be shown:</source>
          <target>如果您选中 Show all data types 检查以下类型也将显示：</target>
        </trans-unit>
        <trans-unit>
          <source>Duplicate translations</source>
          <target>重复翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Show features that are not licensed</source>
          <target>显示未获得许可的功能</target>
        </trans-unit>
        <trans-unit>
          <source>Copy images</source>
          <target>复制图像</target>
        </trans-unit>
        <trans-unit>
          <source>The above example contains only original (English) column. Sisulizer escaping doubles the quote character inside quotes. C/C++ escaping escapes it.</source>
          <target>上面的例子只包含原始（英文）列。 Sisulizer 转义使引号内的引号字符加倍。 C/C++ 转义逃脱了它。</target>
        </trans-unit>
        <trans-unit>
          <source>Reopens the project from the last opened projects list.</source>
          <target>从上次打开的项目列表中重新打开项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Combined strings</source>
          <target>组合字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Shows a sample TMX file based in the above settings.</source>
          <target>显示基于上述设置的示例 TMX 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>64-bit resource DLL filename</source>
          <target>64 位资源 DLL 文件名</target>
        </trans-unit>
        <trans-unit>
          <source>Column menu</source>
          <target>列菜单</target>
        </trans-unit>
        <trans-unit>
          <source>Both horizontal and vertical scroll bars</source>
          <target>水平和垂直滚动条</target>
        </trans-unit>
        <trans-unit>
          <source>If that is not found then VCL look for country neutral resource (e.g. Finnish) in our case. if Project1.FI is found VCL uses that.</source>
          <target>如果没有找到，那么在我们的案例中，VCL 会寻找国家中立资源（例如芬兰语）。如果找到 Project1.FI，VCL 使用它。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the following attribute is set when creating Middle Eastern HTML files:&lt;br&gt;
    &lt;code&gt;&amp;lt;body &lt;strong&gt;dir=&quot;rtl&quot;&lt;/strong&gt;&amp;gt;&lt;/code&gt;&lt;br&gt;
    If the attribute already exists Sisulizer just updates the value of the attribute.</source>
          <target>如果选中，则在创建中东 HTML 文件时设置以下属性：&lt;br&gt; &lt;code&gt;&amp;lt;body &lt;strong&gt;dir=&amp;quot;rtl&amp;quot;&lt;/strong&gt; &amp;gt;&lt;/code&gt;&lt;br&gt;如果该属性已经存在，Sisulizer 只更新该属性的值。</target>
        </trans-unit>
        <trans-unit>
          <source>If you set the resource id file name Sisulizer uses symbolic names instead of integer values on every possible id. This also makes it possible to import translations from localized .rc files.</source>
          <target>如果您设置资源 id 文件名，Sisulizer 将在每个可能的 id 上使用符号名称而不是整数值。这也使得从本地化的 .rc 文件导入翻译成为可能。</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks        if the both original string and its translation include the same amount of 
symbol characters. Those symbols are defined in Project | Options dialog.</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查原始字符串及其翻译是否包含相同数量的符号字符。这些符号在 Project | 中定义。选项对话框。</target>
        </trans-unit>
        <trans-unit>
          <source>Platform files</source>
          <target>平台文件</target>
        </trans-unit>
        <trans-unit>
          <source>Import also those items where the translated value equals to the original value</source>
          <target>还导入那些翻译值等于原始值的项目</target>
        </trans-unit>
        <trans-unit>
          <source>The panes are:</source>
          <target>窗格是：</target>
        </trans-unit>
        <trans-unit>
          <source>You can filter items based on their &lt;a href=&quot;WorkingWithTranslationSheet.htm#Marked&quot;&gt;Marked state&lt;/a&gt;. Possible values are:</source>
          <target>您可以根据项目的&lt;a href=&quot;WorkingWithTranslationSheet.htm#Marked&quot;&gt;标记状态&lt;/a&gt;过滤项目。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>To change the output file location right click the source name on the project tree and choose Properties. Then choose a value from the combo box below &lt;em&gt;Resource DLL files&lt;/em&gt;. If the file pattern starts with &amp;lt;sl&amp;gt;\* then the pattern is a directory pattern and created resource files are placed on a sub directories.. It is starts with &amp;lt;body&amp;gt;* then it is a root pattern and created resource files are placed in the same directory where the original file is.</source>
          <target>要更改输出文件位置，请右键单击项目树上的源名称并选择“属性”。然后从&lt;em&gt;资源 DLL 文件&lt;/em&gt;下方的组合框中选择一个值。如果文件模式以 &amp;lt;sl&amp;gt;\* 开头，则该模式是一个目录模式，创建的资源文件放置在子目录中。它以 &amp;lt;body&amp;gt;* 开头，则它是一个根模式，创建的资源文件放置在在原始文件所在的同一目录中。</target>
        </trans-unit>
        <trans-unit>
          <source>Set BiDiMode property</source>
          <target>设置 BiDiMode 属性</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to select the sections and/or keys you want to localize. You can select individual keys by double-clicking them, or you can double-click entire section. If you check the entire section all keys belonging to that section will be localized.</source>
          <target>使用此表选择要本地化的部分和/或键。您可以通过双击来选择单个键，也可以双击整个部分。如果您检查整个部分，属于该部分的所有键都将被本地化。</target>
        </trans-unit>
        <trans-unit>
          <source>These values are the initial values of new projects. Once you have created a project you can change the settings per language by choosing &lt;a href=&quot;LanguageDialog.htm&quot;&gt;Column | Language Properties&lt;/a&gt;.</source>
          <target>这些值是新项目的初始值。创建项目后，您可以通过选择&lt;a href=&quot;LanguageDialog.htm&quot;&gt;Column |&lt;/a&gt;更改每种语言的设置&lt;a href=&quot;LanguageDialog.htm&quot;&gt;。语言属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Application file localization</source>
          <target>应用文件本地化</target>
        </trans-unit>
        <trans-unit>
          <source>You are about to add a directory source that may contain several matching files (e.g. *.xml). All files must have similar data structure. They do not have to be identical but they must contain the same kind of elements.</source>
          <target>您将要添加可能包含多个匹配文件（例如 *.xml）的目录源。所有文件必须具有相似的数据结构。它们不必相同，但必须包含相同类型的元素。</target>
        </trans-unit>
        <trans-unit>
          <source>Escaped characters are marked with bold typeface. Now output is different when using Sisulizer and C/C++ escapes. In Sisulizer escaping the actual new line characters (CR and LF) are only to the original column. The Finnish column contains only #n at the place of new line characters. This makes translation of the file easier and less error prone.</source>
          <target>转义字符用粗体字体标记。现在使用 Sisulizer 和 C/C++ 转义时输出不同。在 Sisulizer 中，转义实际的换行符（CR 和 LF）仅到原始列。芬兰语列仅在换行符处包含 #n。这使得文件的翻译更容易并且更不容易出错。</target>
        </trans-unit>
        <trans-unit>
          <source>Draws texts with bold and colored font if status is other than &lt;em&gt;in use&lt;/em&gt;.</source>
          <target>如果状态不是&lt;em&gt;in use ，则使用&lt;/em&gt;粗体和彩色字体绘制文本。</target>
        </trans-unit>
        <trans-unit>
          <source>Right click the column header of the language that you want to import to and choose Import to open the &lt;a href=&quot;ImportWizard.htm&quot;&gt;Import Wizard&lt;/a&gt;. Browse the localized file name and complete the wizard.</source>
          <target>右键单击要导入到的语言的列标题，然后选择“导入”以打开“&lt;a href=&quot;ImportWizard.htm&quot;&gt;导入向导”&lt;/a&gt; 。浏览本地化的文件名并完成向导。</target>
        </trans-unit>
        <trans-unit>
          <source>As you can see only the string have been replaced. Everything else (e.g. code and comments) are left unchanged.</source>
          <target>如您所见，只有字符串已被替换。其他所有内容（例如代码和注释）保持不变。</target>
        </trans-unit>
        <trans-unit>
          <source>The localized TMX file contains the original tuv and localized tuv(s).</source>
          <target>本地化的 TMX 文件包含原始 tuv 和本地化 tuv。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the Sisulizer application user interface language. Default sets the default language that is the language matching the current locale settings of the computer. If no match is found English is used. The language change will be active next time you start Sisulizer</source>
          <target>指定 Sisulizer 应用程序用户界面语言。默认设置默认语言，即与计算机的当前区域设置相匹配的语言。如果未找到匹配项，则使用英语。下次启动 Sisulizer 时将激活语言更改</target>
        </trans-unit>
        <trans-unit>
          <source>nRes language file (.mlng, .lng)</source>
          <target>nRes 语言文件（.mlng、.lng）</target>
        </trans-unit>
        <trans-unit>
          <source>EBCDIC code page</source>
          <target>EBCDIC 代码页</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer supports both kinds of text files:</source>
          <target>Sisulizer 支持两种文本文件：</target>
        </trans-unit>
        <trans-unit>
          <source>Show statistics in characters</source>
          <target>以字符显示统计信息</target>
        </trans-unit>
        <trans-unit>
          <source>You add a .pro file to Sisulizer project. When scanning Sisulizer scans all the .ts and .ui files that the .pro file contains. Sisulizer creates localized .ts and .ui files.&lt;br&gt;
      sample.pro 
      -&amp;gt; &lt;br&gt;
sample_fi.ts (Finnish)&lt;br&gt;
sample_de.ts (German)&lt;br&gt;
fi\sample.ui (Finnish)&lt;br&gt;
de\sample.ts (German)</source>
          <target>您将 .pro 文件添加到 Sisulizer 项目。扫描 Sisulizer 时会扫描 .pro 文件包含的所有 .ts 和 .ui 文件。 Sisulizer 创建本地化的 .ts 和 .ui 文件。&lt;br&gt; sample.pro -&amp;gt;&lt;br&gt; sample_fi.ts（芬兰语）&lt;br&gt; sample_de.ts（德语）&lt;br&gt; fi\sample.ui（芬兰语）&lt;br&gt; de\sample.ts（德语）</target>
        </trans-unit>
        <trans-unit>
          <source>Check Use &lt;em&gt;Oracle language codes&lt;/em&gt; if your database is Oracle and you wan to use Oracle language codes instead of ISO language codes.</source>
          <target>如果您的数据库是 Oracle 并且您想使用 Oracle 语言代码而不是 ISO 语言代码，请选中使用&lt;em&gt;Oracle&lt;/em&gt;语言代码。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the translation progress of each node will be show as percentages right after the node captions.</source>
          <target>如果选中，每个节点的翻译进度将在节点标题后显示为百分比。</target>
        </trans-unit>
        <trans-unit>
          <source>Right to left layout and Set reading order property</source>
          <target>从右到左布局和设置阅读顺序属性</target>
        </trans-unit>
        <trans-unit>
          <source>Do not import</source>
          <target>不进口</target>
        </trans-unit>
        <trans-unit>
          <source>Select the dictionary file that you want to extract. Typically an OpenOffice dictionary package contains only one dictionary. However some packages contains several dictionaries. In that case select which one you want to use.</source>
          <target>选择要提取的字典文件。通常，一个 OpenOffice 词典包只包含一个词典。然而，一些包包含几个字典。在这种情况下，请选择您要使用的那个。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the properties of selected menu item is shown on the bottom of editor.</source>
          <target>如果选中，所选菜单项的属性将显示在编辑器的底部。</target>
        </trans-unit>
        <trans-unit>
          <source>Key field</source>
          <target>关键字段</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify how to maintain project during the scan process and how to update the localized databases during the build process.</source>
          <target>使用此表指定如何在扫描过程中维护项目以及如何在构建过程中更新本地化数据库。</target>
        </trans-unit>
        <trans-unit>
          <source>For example if we have the following XML data as property value:</source>
          <target>例如，如果我们有以下 XML 数据作为属性值：</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the syntax of HTML-code will be cleaned during the build process. For example if you have an attribute without quotes, Sisulizer add those marks.&lt;br&gt;For example &lt;code&gt;&amp;lt;h2 align=left&amp;gt;&lt;/code&gt; becomes to &lt;code&gt;&amp;lt;h2 align=&quot;left&quot;&amp;gt;&lt;/code&gt;</source>
          <target>如果选中，将在构建过程中清除 HTML 代码的语法。例如，如果您有一个没有引号的属性，Sisulizer 会添加这些标记。&lt;br&gt;例如&lt;code&gt;&amp;lt;h2 align=left&amp;gt;&lt;/code&gt;变成&lt;code&gt;&amp;lt;h2 align=&amp;quot;left&amp;quot;&amp;gt;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit>
          <source>Select the database table where you want to import from</source>
          <target>选择要从中导入的数据库表</target>
        </trans-unit>
        <trans-unit>
          <source>First lines of the selected file</source>
          <target>所选文件的第一行</target>
        </trans-unit>
        <trans-unit>
          <source>This contain the icon of the application.</source>
          <target>这包含应用程序的图标。</target>
        </trans-unit>
        <trans-unit>
          <source>Enter the &lt;a href=&quot;Segmentation.htm&quot;&gt;regular expression&lt;/a&gt; specifying the string after the break or exception.</source>
          <target>输入指定中断或异常后的字符串的&lt;a href=&quot;Segmentation.htm&quot;&gt;正则表达式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>You can turn pseudo translations on by selecting a column and choosing &lt;a href=&quot;PseudoTranslationDialog.htm&quot;&gt;Column | Fill Pseudo Translation&lt;/a&gt;. You can remove generated pseudo translations by selecting the column and choosing Column | Remove Pseudo Translation.</source>
          <target>您可以通过选择列并选择&lt;a href=&quot;PseudoTranslationDialog.htm&quot;&gt;列 |&lt;/a&gt;来打开伪翻译。&lt;a href=&quot;PseudoTranslationDialog.htm&quot;&gt;填写伪翻译&lt;/a&gt;。您可以通过选择列并选择 Column | 来删除生成的伪翻译。删除伪翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>.NET uses uses satellite assembly files for localization. Each satellite assembly file contains resources of the original assembly (e.g. application) but no code. For example if we have C:\Files\NetSample.exe application Sisulizer creates German satellite assembly file C:\Files\de\NetSample.resources.dll. Note that files extension is .dll and the file contains only resource data. You have to deploy both original assembly files and  satellite assembly files of your language(s).</source>
          <target>.NET 使用附属程序集文件进行本地化。每个附属程序集文件包含原始程序集（例如应用程序）的资源但没有代码。例如，如果我们有 C:\Files\NetSample.exe 应用程序，Sisulizer 将创建德国卫星程序集文件 C:\Files\de\NetSample.resources.dll。请注意，文件扩展名为 .dll 并且该文件仅包含资源数据。您必须部署您的语言的原始程序集文件和附属程序集文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Click the right arrow to add the selected system language or locale to the default language list.</source>
          <target>单击右箭头将选定的系统语言或区域设置添加到默认语言列表中。</target>
        </trans-unit>
        <trans-unit>
          <source>Use full ids</source>
          <target>使用完整 ID</target>
        </trans-unit>
        <trans-unit>
          <source>Virtual devices</source>
          <target>虚拟设备</target>
        </trans-unit>
        <trans-unit>
          <source>There is a newer Sisulizer version available. You can download it from Sisulizer&#x27;s web page. Click &lt;em&gt;Yes&lt;/em&gt; to go to the download page. Click &lt;em&gt;No&lt;/em&gt; to ignore the message. Check &lt;em&gt;Do not show this next time&lt;/em&gt; to disable this message in the future.</source>
          <target>有更新的 Sisulizer 版本可用。您可以从 Sisulizer 的网页下载它。单击&lt;em&gt;是&lt;/em&gt;转到下载页面。单击“&lt;em&gt;否”&lt;/em&gt;忽略该消息。选中&lt;em&gt;下次不再显示&lt;/em&gt;以在将来禁用此消息。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked row that are read only are visually marked.</source>
          <target>如果选中的行是只读的，则进行视觉标记。</target>
        </trans-unit>
        <trans-unit>
          <source>Locally within the row&#x27;s node</source>
          <target>本地在行的节点内</target>
        </trans-unit>
        <trans-unit>
          <source>Text to find</source>
          <target>要查找的文本</target>
        </trans-unit>
        <trans-unit>
          <source>Default configuration</source>
          <target>默认配置</target>
        </trans-unit>
        <trans-unit>
          <source># character</source>
          <target>＃ 特点</target>
        </trans-unit>
        <trans-unit>
          <source>You can edit the default file mappings by choosing &lt;a href=&quot;GeneralSettingsDialogFileMappingSheet.htm&quot;&gt;Tools | General -&amp;gt; File Mappings&lt;/a&gt;. If you use a custom file extension often it is recommended that you will map it. This will make creating a new project little bit faster.</source>
          <target>您可以通过选择&lt;a href=&quot;GeneralSettingsDialogFileMappingSheet.htm&quot;&gt;工具 |&lt;/a&gt;来编辑默认文件映射&lt;a href=&quot;GeneralSettingsDialogFileMappingSheet.htm&quot;&gt;。常规 -&amp;gt; 文件映射&lt;/a&gt;。如果您经常使用自定义文件扩展名，建议您将其映射。这将使创建新项目的速度稍快一些。</target>
        </trans-unit>
        <trans-unit>
          <source>Only strings that have same context and same original value are treated as duplicate strings.</source>
          <target>只有具有相同上下文和相同原始值的字符串才被视为重复字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows a sample component using the selected component type.</source>
          <target>显示使用所选组件类型的示例组件。</target>
        </trans-unit>
        <trans-unit>
          <source>To restore the default mappings press the Set default button.</source>
          <target>要恢复默认映射，请按设置默认值按钮。</target>
        </trans-unit>
        <trans-unit>
          <source>A filename can not contain any of the following charcters: &amp;quot;/&amp;quot;, &amp;quot;:&amp;quot;, &amp;quot;*&amp;quot;, &amp;quot;?&amp;quot;, &#x27; &amp;quot;&#x27;, &amp;quot;&amp;lt;&amp;quot;, &amp;quot;&amp;gt;&amp;quot;, &amp;quot;|&amp;quot;</source>
          <target>文件名不能包含以下任何字符：&amp;quot;/&amp;quot;、&amp;quot;:&amp;quot;、&amp;quot;*&amp;quot;、&amp;quot;?&amp;quot;、&amp;#39;&amp;quot;&amp;#39;、&amp;quot;&amp;lt;&amp;quot;、&amp;quot;&amp;gt;&amp;quot;、&amp;quot;|&amp;quot;</target>
        </trans-unit>
        <trans-unit>
          <source>Disable projects with no resources</source>
          <target>禁用没有资源的项目</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks    if a hotkey is before a valid character (e.g. not to before ideographic character).</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查热键是否在有效字符之前（例如不在表意字符之前）。</target>
        </trans-unit>
        <trans-unit>
          <source>A null terminated UTF-16 string</source>
          <target>一个空终止的 UTF-16 字符串</target>
        </trans-unit>
        <trans-unit>
          <source>To map the component click the Click to map text and choose the component type. Mapping is not mandatory but it makes Sisulizer to show visual items better.</source>
          <target>要映射组件，请单击单击以映射文本并选择组件类型。映射不是强制性的，但它使 Sisulizer 更好地显示视觉项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Missing symbol</source>
          <target>缺少符号</target>
        </trans-unit>
        <trans-unit>
          <source>Length in pixels</source>
          <target>以像素为单位的长度</target>
        </trans-unit>
        <trans-unit>
          <source>Add localized tuv elements</source>
          <target>添加本地化的 tuv 元素</target>
        </trans-unit>
        <trans-unit>
          <source>Download files from the web server to a local directory.</source>
          <target>将文件从 Web 服务器下载到本地目录。</target>
        </trans-unit>
        <trans-unit>
          <source>All the features that are not in Professional edition</source>
          <target>专业版中没有的所有功能</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer always uses the default directory specified on this edit field.&lt;br&gt;The current value is shown in the combo box below. You can change the value by pressing ... on the right side of the radio box.</source>
          <target>Sisulizer 始终使用在此编辑字段中指定的默认目录。&lt;br&gt;当前值显示在下面的组合框中。您可以通过按单选框右侧的 ... 来更改值。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can localize Salesforce translation files (.stf).</source>
          <target>Sisulizer 可以本地化 Salesforce 翻译文件 (.stf)。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the log items.</source>
          <target>显示日志项目。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer creates an output files that contains all the resource DLL files &lt;a href=&quot;EmbeddedResourceDllFiles.htm&quot;&gt;embedded&lt;/a&gt; into the original file. Such an EXE can support several language in one file and the user can even change the language of the application on run time.&lt;br&gt;The output directory for the embedded file is &amp;quot;emb&amp;quot;.</source>
          <target>如果选中 Sisulizer，则会创建一个输出文件，其中包含&lt;a href=&quot;EmbeddedResourceDllFiles.htm&quot;&gt;嵌入&lt;/a&gt;到原始文件中的所有资源 DLL 文件。这样的 EXE 可以在一个文件中支持多种语言，用户甚至可以在运行时更改应用程序的语言。&lt;br&gt;嵌入文件的输出目录是“emb”。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer removes empty translations when opening a project (same effect as the Project | Trim Translations menu command).</source>
          <target>如果选中 Sisulizer 在打开项目时删除空翻译（效果与 Project | Trim Translations 菜单命令相同）。</target>
        </trans-unit>
        <trans-unit>
          <source>Scan client scripts</source>
          <target>扫描客户端脚本</target>
        </trans-unit>
        <trans-unit>
          <source>The extended table contains extended data blocks. The following sample contains two blocks for United States and one block for Japan. There is no extended block for Germany.</source>
          <target>扩展表包含扩展数据块。以下示例包含两个用于美国的块和一个用于日本的块。德国没有扩展块。</target>
        </trans-unit>
        <trans-unit>
          <source>Final and most powerful tool for working with sheet is the filter. On the right side of the sheet there is filter pane. It contains several check box that you can check and uncheck to modify the active filter. Press Filter button to get &lt;a href=&quot;SheetFilterEditDialog.htm&quot;&gt;Filter dialog&lt;/a&gt; that lets you to modify every detail of the active filter. Press Refresh button to refresh the sheet (most often it is done automatically). Press Default to restore the active filter to the default value.</source>
          <target>处理工作表的最后一个也是最强大的工具是过滤器。在工作表的右侧有过滤器窗格。它包含多个复选框，您可以选中和取消选中以修改活动过滤器。按“过滤器”按钮打开“&lt;a href=&quot;SheetFilterEditDialog.htm&quot;&gt;过滤器”对话框&lt;/a&gt;，可让您修改活动过滤器的每个细节。按刷新按钮刷新工作表（通常是自动完成的）。按 Default 将活动过滤器恢复为默认值。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the language.</source>
          <target>显示语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the root directory of the files on the FTP server.</source>
          <target>指定FTP服务器上文件的根目录。</target>
        </trans-unit>
        <trans-unit>
          <source>Item has been automatically translated using &lt;a href=&quot;TranslationEngines.htm&quot;&gt;translation engines&lt;/a&gt; and fuzzy matching. You should check the translation.</source>
          <target>项目已使用&lt;a href=&quot;TranslationEngines.htm&quot;&gt;翻译引擎&lt;/a&gt;和模糊匹配自动翻译。你应该检查一下翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>The system&#x27;s default UI language, without any specific sublanguage.</source>
          <target>系统默认的 UI 语言，没有任何特定的子语言。</target>
        </trans-unit>
        <trans-unit>
          <source>webBrowser1_DocumentCompleted that is called after document is loaded sets the caption again, sets the panel and finally enabled the language menu.</source>
          <target>加载文档后调用的 webBrowser1_DocumentCompleted 再次设置标题，设置面板并最终启用语言菜单。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked puts the form editor to Read Only state. You can&#x27;t move or resize any component.</source>
          <target>如果选中，则将表单编辑器置于只读状态。您不能移动或调整任何组件的大小。</target>
        </trans-unit>
        <trans-unit>
          <source>It is simple like that!</source>
          <target>就是这么简单！</target>
        </trans-unit>
        <trans-unit>
          <source>When translating European languages on Japanese computer it sometimes happens  that translator by mistake uses full with alphabet instead of half width characters.</source>
          <target>在日本计算机上翻译欧洲语言时，有时会发生翻译者错误地使用完整字母而不是半角字符的情况。</target>
        </trans-unit>
        <trans-unit>
          <source>Equal as original</source>
          <target>与原版相同</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies when the selected rule definition is used. Possible values are:</source>
          <target>指定何时使用选定的规则定义。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Replace every character with the following character</source>
          <target>用以下字符替换每个字符</target>
        </trans-unit>
        <trans-unit>
          <source>Suppose that a row has been translated automatically and translation status is auto translated. After a while the original value of that row might change. After that the automatically translated value doesn&#x27;t match with the new original value. Normally Sisulizer keeps track of these rows, but if the project has been created by earlier version of Sisulizer some of those row might have left hanging. Use this command to retranslate those rows.</source>
          <target>假设一行已自动翻译，翻译状态为自动翻译。一段时间后，该行的原始值可能会改变。之后自动转换的值与新的原始值不匹配。通常 Sisulizer 会跟踪这些行，但如果项目是由早期版本的 Sisulizer 创建的，其中一些行可能会挂起。使用此命令重新翻译这些行。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer automatically updates the statuses of all duplicate strings.</source>
          <target>Sisulizer 自动更新所有重复字符串的状态。</target>
        </trans-unit>
        <trans-unit>
          <source>Multiple users</source>
          <target>多个用户</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;JavaLocalization.htm&quot;&gt;JBuilder project is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;JavaLocalization.htm&quot;&gt;JBuilder 项目的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Shows list of available toolbars. You can edit the properties of the selected toolbar.</source>
          <target>显示可用工具栏的列表。您可以编辑所选工具栏的属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;OnlineHelpLocalization.htm&quot;&gt;online help file is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;OnlineHelpLocalization.htm&quot;&gt;联机帮助文件的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Use Project Wizard to create a Sisulizer project containing the database. After you have selected the database on the Database sheet you have to set the field properties.&lt;!-- #EndLibraryItem --&gt;Remember to check Clone original database check box in the Database sheet. Check those fields that you want to localize.</source>
          <target>使用项目向导创建包含数据库的 Sisulizer 项目。在数据库表上选择数据库后，您必须设置字段属性。&lt;!-- #EndLibraryItem --&gt;请记住选中数据库表中的克隆原始数据库复选框。检查您要本地化的字段。</target>
        </trans-unit>
        <trans-unit>
          <source>Support for &lt;a href=&quot;iOSLocalization.htm&quot;&gt;iOS and OS X&lt;/a&gt;</source>
          <target>支持&lt;a href=&quot;iOSLocalization.htm&quot;&gt;iOS 和 OS X&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit>
          <source>Use empty string</source>
          <target>使用空字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Every time there is a font data in a resource data Sisulizer adds a font row into the project. To localize that specific font data just enter localized font name and/or font size. When creating the localized files Sisulizer replaces the original font data with the localized font data. This method makes it possible to fully control what font is used in each case. The disadvantage is that there might be dozens or even hundreds of font items in a project making the font localization quite laborious.</source>
          <target>每当资源数据中有字体数据时，Sisulizer 都会在项目中添加一个字体行。要本地化特定的字体数据，只需输入本地化的字体名称和/或字体大小。创建本地化文件时，Sisulizer 用本地化字体数据替换原始字体数据。这种方法可以完全控制每种情况下使用的字体。缺点是一个项目中可能有几十个甚至上百个字体项，使得字体本地化相当费力。</target>
        </trans-unit>
        <trans-unit>
          <source>Find translations. Once found you can edit or remove translations. You can also add new translations into the translation memory.</source>
          <target>查找翻译。找到后，您可以编辑或删除翻译。您还可以将新翻译添加到翻译记忆库中。</target>
        </trans-unit>
        <trans-unit>
          <source>Show or hide application statusbar.</source>
          <target>显示或隐藏应用程序状态栏。</target>
        </trans-unit>
        <trans-unit>
          <source>Show statistics in words</source>
          <target>用文字显示统计数据</target>
        </trans-unit>
        <trans-unit>
          <source>Translations are saved manually by command (File | Save To Translation Memory)</source>
          <target>通过命令手动保存翻译（文件 | 保存到翻译记忆库）</target>
        </trans-unit>
        <trans-unit>
          <source>It give IDS_ABOUTBOX symbolic name and integer id 101. resources.rc contains the following lines:</source>
          <target>它给出了 IDS_ABOUTBOX 符号名称和整数 ID 101。resources.rc 包含以下几行：</target>
        </trans-unit>
        <trans-unit>
          <source>FireMonkey is a new cross platform component library for Delphi. It has lots of similarities to VCL but is designed to supports several targets including WIN32, WIN64, OSX and iOS. Localization of a FireMonkey application is similar to localization of a VCL application. You add the original WIN32 application (.exe) or library (.dll) file into a Sisulizer project. Sisulizer scans the resources of the file and finally creates localized files or localzied resource files.</source>
          <target>FireMonkey 是一个新的 Delphi 跨平台组件库。它与 VCL 有很多相似之处，但旨在支持多种目标，包括 WIN32、WIN64、OSX 和 iOS。 FireMonkey 应用程序的本地化类似于 VCL 应用程序的本地化。您将原始 WIN32 应用程序 (.exe) 或库 (.dll) 文件添加到 Sisulizer 项目中。 Sisulizer 扫描文件的资源并最终创建本地化文件或本地化资源文件。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked also those rows where translation contains only white spaces are shown.</source>
          <target>如果选中，还显示翻译仅包含空格的那些行。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can access and localize Access databases</source>
          <target>Sisulizer 可以访问和本地化 Access 数据库</target>
        </trans-unit>
        <trans-unit>
          <source>SlMake writes messages to standard output (stdout) and error messages to standard error output (strerr). By default output is written in UTF-8. If you specify -a options the output is written in Ansi.</source>
          <target>SlMake 将消息写入标准输出 (stdout) 并将错误消息写入标准错误输出 (strerr)。默认情况下，输出是用 UTF-8 编写的。如果您指定 -a 选项，则输出将以 Ansi 格式写入。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the importing options. Possible values are:</source>
          <target>指定导入选项。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer localizes report data embedded to the form.</source>
          <target>Sisulizer 本地化嵌入到表单中的报告数据。</target>
        </trans-unit>
        <trans-unit>
          <source>If the user default locale is Finnish (Finland) VCL is going to look for Project1.FIN.</source>
          <target>如果用户默认语言环境是芬兰语（芬兰），VCL 将查找 Project1.FIN。</target>
        </trans-unit>
        <trans-unit>
          <source>Validation is a feature that helps you to track mistakes in your translations and also in original items. Use &lt;a href=&quot;ValidationMenu.htm&quot;&gt;Validation menu&lt;/a&gt; of main menu to access validation feature of Sisulizer.</source>
          <target>验证是一项功能，可帮助您跟踪翻译和原始项目中的错误。使用主菜单的&lt;a href=&quot;ValidationMenu.htm&quot;&gt;验证菜单&lt;/a&gt;访问 Sisulizer 的验证功能。</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be an &lt;a href=&quot;NetLocalization.htm#Resource&quot;&gt;XAML file&lt;/a&gt; (e.g. C:\Samples\Sample.xaml) or &lt;a href=&quot;NetLocalization.htm#Resource&quot;&gt;BAML file&lt;/a&gt; (e.g. C:\Samples\Sample.baml).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是&lt;a href=&quot;NetLocalization.htm#Resource&quot;&gt;XAML 文件&lt;/a&gt;（例如 C:\Samples\Sample.xaml）或&lt;a href=&quot;NetLocalization.htm#Resource&quot;&gt;BAML 文件&lt;/a&gt;（例如 C:\Samples\Sample.baml）。</target>
        </trans-unit>
        <trans-unit>
          <source>Click arrow up button to move the selected translation engine one step up. Click Add button (+) to add a new translation engine to the list. Click Remove button (X) to remove the selected translation engine from the list. Click arrow down button to move the selected translation engine one step down.</source>
          <target>单击向上箭头按钮将选定的翻译引擎向上移动一级。单击添加按钮 (+) 将新的翻译引擎添加到列表中。单击删除按钮 (X) 从列表中删除选定的翻译引擎。单击向下箭头按钮将选定的翻译引擎向下移动一级。</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file can be any  &lt;a href=&quot;SourceCodeLocalization.htm&quot;&gt;source code file&lt;/a&gt; name (e.g. C:\Samples\Sample.cpp).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件可以是&lt;a href=&quot;SourceCodeLocalization.htm&quot;&gt;任何源代码文件&lt;/a&gt;名（例如 C:\Samples\Sample.cpp）。</target>
        </trans-unit>
        <trans-unit>
          <source>If you want to show only certain kind of files use the file type combo box to select the file type. You can also type a wild card filter to show only one type of file.</source>
          <target>如果您只想显示某些类型的文件，请使用文件类型组合框来选择文件类型。您还可以键入通配符过滤器以仅显示一种类型的文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Add this unit to your project to translate properties whose type is TTntStrings or derived.</source>
          <target>将此单元添加到您的项目以翻译类型为 TTntStrings 或派生的属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Yes if data is valid XML that contains XML header</source>
          <target>是，如果数据是包含 XML 标头的有效 XML</target>
        </trans-unit>
        <trans-unit>
          <source>Do not Translate</source>
          <target>不要翻译</target>
        </trans-unit>
        <trans-unit>
          <source>This English translation uses half-width alphabets that is correct.</source>
          <target>这个英文翻译使用了正确的半角字母。</target>
        </trans-unit>
        <trans-unit>
          <source>Excluded strings types</source>
          <target>排除的字符串类型</target>
        </trans-unit>
        <trans-unit>
          <source>There is not way to disable VCL&#x27;s build resource loading. If there is a matching resource DLL, VCL will load it. Fortunately there is a way to unload the loaded resource DLL. This makes is possible to disable using of resource DLL (if you want to do that). To disable use of resource DLL call DisableResourceDllUse function. The function must be called before applications creates any forms. A good place for that is the initialization part of main unit.</source>
          <target>没有办法禁用 VCL 的构建资源加载。如果有匹配的资源 DLL，VCL 将加载它。幸运的是，有一种方法可以卸载加载的资源 DLL。这使得可以禁用资源 DLL 的使用（如果你想这样做）。要禁用资源 DLL 的使用，请调用 DisableResourceDllUse 函数。必须在应用程序创建任何表单之前调用该函数。一个很好的地方是主单元的初始化部分。</target>
        </trans-unit>
        <trans-unit>
          <source>This sets the default values to the excluded data types. You can override them source by source.</source>
          <target>这将默认值设置为排除的数据类型。您可以逐个源覆盖它们。</target>
        </trans-unit>
        <trans-unit>
          <source>Selecting the scanner to be used</source>
          <target>选择要使用的扫描仪</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the selected line is not highlighted when the pane does not have focus.</source>
          <target>如果选中，则在窗格没有焦点时不会突出显示所选行。</target>
        </trans-unit>
        <trans-unit>
          <source>Resource files</source>
          <target>资源文件</target>
        </trans-unit>
        <trans-unit>
          <source>Status column tells the status of the property. Possible values are:</source>
          <target>状态列告诉属性的状态。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Machine translator that uses &lt;a href=&quot;MicrosoftTranslator.htm&quot;&gt;Microsoft Translator&lt;/a&gt; service to translate strings.</source>
          <target>使用&lt;a href=&quot;MicrosoftTranslator.htm&quot;&gt;Microsoft Translator&lt;/a&gt;服务翻译字符串的机器翻译器。</target>
        </trans-unit>
        <trans-unit>
          <source>Custom languages, countries and variants</source>
          <target>自定义语言、国家和变体</target>
        </trans-unit>
        <trans-unit>
          <source>remove</source>
          <target>消除</target>
        </trans-unit>
        <trans-unit>
          <source>Add context column as the first column.</source>
          <target>添加上下文列作为第一列。</target>
        </trans-unit>
        <trans-unit>
          <source>Strings in VCL</source>
          <target>VCL 中的字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be a &lt;a href=&quot;NetLocalization.htm#Resource&quot;&gt;.NET resource file&lt;/a&gt; (e.g. C:\Samples\Test.resx).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是&lt;a href=&quot;NetLocalization.htm#Resource&quot;&gt;.NET 资源文件&lt;/a&gt;（例如 C:\Samples\Test.resx）。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;a href=&quot;http://en.wikipedia.org/wiki/ISO-3166&quot; target=&quot;_blank&quot;&gt;ISO-3166&lt;/a&gt; country code. This is two characters.</source>
          <target>&lt;a href=&quot;http://en.wikipedia.org/wiki/ISO-3166&quot; target=&quot;_blank&quot;&gt;ISO-3166&lt;/a&gt;国家代码。这是两个字符。</target>
        </trans-unit>
        <trans-unit>
          <source>When Delphi compiler compiles a resourcestring it stores the string is a standard Windows string resource and assigns an id for the string. If you add new resourcestrings into the application or delete existing ones, the compiler will give most resourcestrings new ids. This will most likely cause loss of translations or a existing translations to be replaced with wrong translations. To prevent this give a DRC file name so Sisulizer can use it to link resource string variable names and resource string ids (e.g. SSampleString equals 4567). The resource string variable name will change only if the programmer will intentionally change the resourcestring variable name. DRC files use .drc file extension (e.g. C:\Samples\Project1.drc).</source>
          <target>当 Delphi 编译器编译资源字符串时，它存储的字符串是标准的 Windows 字符串资源，并为该字符串分配一个 id。如果您向应用程序添加新的资源字符串或删除现有的资源字符串，编译器将为大多数资源字符串提供新的 id。这很可能会导致翻译丢失或现有翻译被错误翻译替换。为了防止这种情况，请提供 DRC 文件名，以便 Sisulizer 可以使用它来链接资​​源字符串变量名称和资源字符串 ID（例如 SSampleString 等于 4567）。仅当程序员有意更改资源字符串变量名称时，资源字符串变量名称才会更改。 DRC 文件使用 .drc 文件扩展名（例如 C:\Samples\Project1.drc）。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;QtLocalization.htm&quot;&gt;Qt user Interface file is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;QtLocalization.htm&quot;&gt;Qt 用户界面文件的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Test for | Clipped Text</source>
          <target>测试 |剪切文本</target>
        </trans-unit>
        <trans-unit>
          <source>Confirm the clearing of cell by message box.</source>
          <target>通过消息框确认清除单元格。</target>
        </trans-unit>
        <trans-unit>
          <source>Check this and click Next to receive project from translator.&lt;br&gt;Use this when you want to import the project you got back from the translator.</source>
          <target>选中此项并单击下一步以从翻译器接收项目。&lt;br&gt;当您想导入从翻译器返回的项目时使用此选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Starts &lt;a href=&quot;NewSourceWizard.htm&quot;&gt;New Source Wizard&lt;/a&gt; that adds a new source to the current Sisulizer project.</source>
          <target>启动&lt;a href=&quot;NewSourceWizard.htm&quot;&gt;新源向导&lt;/a&gt;，将新源添加到当前 Sisulizer 项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Adds a new property.</source>
          <target>添加新属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this menu to find a row that the current control has inherited from its parent control. Shows a dialog that constains a list of row that have been inherited from the parent control. Select the row that you want to edit and press OK. Sisulizer select the items where the row belongs and selects the row in the translation sheet.</source>
          <target>使用此菜单查找当前控件从其父控件继承的行。显示一个对话框，其中包含从父控件继承的行列表。选择要编辑的行，然后按 OK。 Sisulizer 选择该行所属的项目并选择翻译表中的行。</target>
        </trans-unit>
        <trans-unit>
          <source>All sub elements of TextBlock are scanned individually using one row per each part. There is no logical connection between each sub elements and you cannot change the order of the elements.</source>
          <target>每个部分使用一行单独扫描 TextBlock 的所有子元素。每个子元素之间没有逻辑联系，您不能更改元素的顺序。</target>
        </trans-unit>
        <trans-unit>
          <source>String resources can contain structured strings</source>
          <target>字符串资源可以包含结构化字符串</target>
        </trans-unit>
        <trans-unit>
          <source>String resources</source>
          <target>字符串资源</target>
        </trans-unit>
        <trans-unit>
          <source>Using Sisulizer as a translation tool</source>
          <target>使用 Sisulizer 作为翻译工具</target>
        </trans-unit>
        <trans-unit>
          <source>Yes if the binary format contains signature field in the header and user has registered the binary format.</source>
          <target>如果二进制格式在标头中包含签名字段并且用户已注册二进制格式，则为是。</target>
        </trans-unit>
        <trans-unit>
          <source>Set the value to the second or third value if you have manually modified the localized values in the database and you want to get the modified values from the database to the project.</source>
          <target>如果您手动修改了数据库中的本地化值，并且希望将修改后的值从数据库获取到项目中，请将值设置为第二个或第三个值。</target>
        </trans-unit>
        <trans-unit>
          <source>Pseudo translation is a feature that automatically generates translations that emulates the target language. Pseudo translations are not real strings and most often they are complete gibberish. However pseudo translations use the same characters as the real translations and they also emulate the average length of the translations in the specific language. This will help you to test how your user interface works on target language before you actually do any translations. Pseudo translations can also be use to visual find hard coded strings.</source>
          <target>伪翻译是一种自动生成模拟目标语言的翻译的功能。伪翻译不是真正的字符串，而且大多数情况下它们完全是胡言乱语。然而，伪翻译使用与真实翻译相同的字符，它们还模拟特定语言翻译的平均长度。这将帮助您在实际进行任何翻译之前测试您的用户界面如何在目标语言上工作。伪翻译也可用于视觉查找硬编码字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>UTF-16 string with preceding length word</source>
          <target>带有前面长度字的 UTF-16 字符串</target>
        </trans-unit>
        <trans-unit>
          <source>If either engine file or a dictionary file that you need is not installed on Sisulizer directory you need to run Sisulizer setup again. Uninstall your current Sisulizer, remove the directory and run setup again. Make sure that you do not uncheck any languages that you might need.</source>
          <target>如果您需要的引擎文件或字典文件没有安装在 Sisulizer 目录中，您需要再次运行 Sisulizer 安装程序。卸载当前的 Sisulizer，删除目录并再次运行安装程序。确保您没有取消选中您可能需要的任何语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Check &lt;em&gt;Localize all similar files in a directory&lt;/em&gt; and click &lt;em&gt;Next&lt;/em&gt; to localize all the &lt;a href=&quot;SupportedFiles.htm&quot;&gt;files&lt;/a&gt; in the selected directory that has the selected file extension. Use this when you have a group of files locating in a same directory or its sub directories and you want to localize them all.</source>
          <target>检查&lt;em&gt;本地化所有类似文件的目录&lt;/em&gt;，然后单击&lt;em&gt;下一步&lt;/em&gt;本地化的所有&lt;a href=&quot;SupportedFiles.htm&quot;&gt;文件&lt;/a&gt;中有选择的文件扩展名选定的目录。当您有一组位于同一目录或其子目录中的文件并且您希望将它们全部本地化时，请使用此选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify how comments and empty lines are handled.</source>
          <target>使用此表指定如何处理注释和空行。</target>
        </trans-unit>
        <trans-unit>
          <source>Following &lt;a href=&quot;Sources.htm&quot;&gt;sources&lt;/a&gt; can contain structured strings:</source>
          <target>以下&lt;a href=&quot;Sources.htm&quot;&gt;来源&lt;/a&gt;可以包含结构化字符串：</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the &lt;a href=&quot;SpellChecking.htm&quot;&gt;spell checker&lt;/a&gt; that is used. Each language can use only one spell checker. If you select &lt;em&gt;Use default&lt;/em&gt; Sisulizer always uses the first spell checker in the spell checker list that supports the current language. Press &lt;em&gt;Add&lt;/em&gt; button to add a new spell checker. Press &lt;em&gt;Edit&lt;/em&gt; button to view/edit the selected spell checker.</source>
          <target>指定使用的&lt;a href=&quot;SpellChecking.htm&quot;&gt;拼写检查器&lt;/a&gt;。每种语言只能使用一个拼写检查器。如果您选择&lt;em&gt;使用默认&lt;/em&gt;Sisulizer 总是使用拼写检查器列表中支持当前语言的第一个拼写检查器。按&lt;em&gt;添加&lt;/em&gt;按钮添加一个新的拼写检查器。按&lt;em&gt;编辑&lt;/em&gt;按钮查看/编辑选定的拼写检查器。</target>
        </trans-unit>
        <trans-unit>
          <source>Ignore Internet and file addresses</source>
          <target>忽略 Internet 和文件地址</target>
        </trans-unit>
        <trans-unit>
          <source>// This is a comment
</source>
          <target>// 这是一条评论</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies how &lt;a href=&quot;DuplicateString.htm&quot;&gt;duplicated strings&lt;/a&gt; are shown. Strings are duplicate is their original values equal. Possible values are:</source>
          <target>指定如何显示&lt;a href=&quot;DuplicateString.htm&quot;&gt;重复的字符串&lt;/a&gt;。字符串是重复的，它们的原始值相等。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Source file is older than in the previous scan</source>
          <target>源文件比上一次扫描更旧</target>
        </trans-unit>
        <trans-unit>
          <source>If you keep the default value, Translated, Sisulizer can greatly optimize the size of the resource files. This also will fully enable the build-in  language fallback of the platform where you application runs. If you choose All no runtime language fallback is done but  fallback is done by Sisulizer on build process. We recommend to use either Translated of Different to enabled optimization and language fallback of the platform. When localizing XAML this options is only used with resource dictionaries. All other XAML resources will always contain all items.</source>
          <target>如果保留默认值 Translated，Sisulizer 可以大大优化资源文件的大小。这也将完全启用应用程序运行平台的内置语言回退。如果您选择全部，则不会执行运行时语言回退，但回退由 Sisulizer 在构建过程中完成。我们建议使用 Translated of Different 来启用平台的优化和语言回退。本地化 XAML 时，此选项仅用于资源字典。所有其他 XAML 资源将始终包含所有项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Most often one translator works only with one language and enters translation in that language only. It is very likely that his or her computer has been configure to enter characters used by the language. However on some cases more than one languages are entered from one computer, even be one person. In such case the user might have more that one keyboard layout installed on the computer. You can change the keyboard from the task bar. The following picture shows a situation when a Vista computer has both Finnish and Japanese keyboards installed.</source>
          <target>大多数情况下，一名翻译人员只使用一种语言并只输入该语言的翻译。他或她的计算机很可能已配置为输入该语言使用的字符。然而，在某些情况下，从一台计算机输入不止一种语言，甚至是一个人。在这种情况下，用户可能在计算机上安装了不止一种键盘布局。您可以从任务栏更改键盘。下图显示了 Vista 计算机同时安装了芬兰语和日语键盘的情况。</target>
        </trans-unit>
        <trans-unit>
          <source>Do not localize the item.</source>
          <target>不要本地化项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Include only those rows that have not been marked &lt;em&gt;Marked&lt;/em&gt;.</source>
          <target>仅包括那些尚未标记为&lt;em&gt;Marked 的行&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Delphi compiler creates a Mach-O file. However this is not the file you deploy. The file you deploy is actually a directory &amp;lt;name&amp;gt;.app. It contains the Mach-O file, library files, resource files and other files. When Sisulizer builds the output files it creates the following files:</source>
          <target>Delphi 编译器创建一个 Mach-O 文件。但是，这不是您部署的文件。您部署的文件实际上是一个目录 &amp;lt;name&amp;gt;.app。它包含 Mach-O 文件、库文件、资源文件和其他文件。当 Sisulizer 构建输出文件时，它会创建以下文件：</target>
        </trans-unit>
        <trans-unit>
          <source>Item data is extracted as it is.</source>
          <target>项目数据按原样提取。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the table that contains extended data.</source>
          <target>指定包含扩展数据的表。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows a dialog that contains the child form of the selected form. Select the child that you want to edit and click OK.</source>
          <target>显示一个对话框，其中包含所选表单的子表单。选择要编辑的子项，然后单击“确定”。</target>
        </trans-unit>
        <trans-unit>
          <source>This edit field specifies the parameters passed to assembly linker application (AL.exe). AL is used to create the localized satellite assembly files. Type the parameter values that you want to pass to the assembly linker, or right click to choose parameter template from a popup menu. The menu contains following templates:</source>
          <target>此编辑字段指定传递给程序集链接器应用程序 (AL.exe) 的参数。 AL 用于创建本地化的附属程序集文件。键入要传递给程序集链接器的参数值，或右键单击以从弹出菜单中选择参数模板。该菜单包含以下模板：</target>
        </trans-unit>
        <trans-unit>
          <source>Wizard creates several package files that each contains only one language.</source>
          <target>向导会创建多个包文件，每个文件只包含一种语言。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Export data from the selected translation memory&lt;/em&gt; exports data from the selected translation memory to a file such as TMX file.</source>
          <target>&lt;em&gt;从选定翻译记忆库导出数据将选定翻译记忆库中的&lt;/em&gt;数据&lt;em&gt;导出&lt;/em&gt;到 TMX 文件等文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows a dialog box that lets you edit the properties of an editor.</source>
          <target>显示一个对话框，可让您编辑编辑器的属性。</target>
        </trans-unit>
        <trans-unit>
          <source>sr</source>
          <target>sr</target>
        </trans-unit>
        <trans-unit>
          <source>Support wide strings</source>
          <target>支持宽字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Context is Forms.TFORM1.Label1.Caption, original value is &amp;quot;One&amp;quot;, Finnish translation is &amp;quot;Yksi&amp;quot; and translation status is &lt;em&gt;Complete&lt;/em&gt;. If the developer now changes the Caption value from &amp;quot;One&amp;quot; to &amp;quot;Two&amp;quot; and we rescan the project the context remains the same but original value changes.</source>
          <target>上下文为 Forms.TFORM1.Label1.Caption，原始值为“One”，芬兰语翻译为“Yksi”，翻译状态为&lt;em&gt;Complete&lt;/em&gt; 。如果开发人员现在将 Caption 值从“一”更改为“二”，并且我们重新扫描项目，则上下文保持不变，但原始值发生变化。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked only those rows where translation are empty (e.g. contains no characters) are shown.&lt;br&gt;
      &lt;strong&gt;Note!&lt;/strong&gt;    Empty character is not same as null value. Null value is a value that has no value but in the case of empty string there is a value but it is empty (&amp;quot;&amp;quot;). Sisulizer shows (Empty) in the case of empty string. 
    This option is for old Sisulizer projects where empty strings were possible. Starting with Sisulizer version 3 empty strings are automatically converted into null values.</source>
          <target>如果选中，则仅显示翻译为空（例如不包含字符）的行。&lt;br&gt;&lt;strong&gt;笔记！&lt;/strong&gt;空字符与空值不同。空值是一个没有值的值，但在空字符串的情况下有一个值但它是空的（“”）。 Sisulizer 在空字符串的情况下显示 (Empty)。此选项适用于可能存在空字符串的旧 Sisulizer 项目。从 Sisulizer 版本 3 开始，空字符串会自动转换为空值。</target>
        </trans-unit>
        <trans-unit>
          <source>Big endian UTF-16 text file.</source>
          <target>大端 UTF-16 文本文件。</target>
        </trans-unit>
        <trans-unit>
          <source>xml:lang usage</source>
          <target>xml:lang usage</target>
        </trans-unit>
        <trans-unit>
          <source>Admin language</source>
          <target>管理语言</target>
        </trans-unit>
        <trans-unit>
          <source>Use &lt;a href=&quot;ExportWizard.htm&quot;&gt;Export Wizard&lt;/a&gt; to export the project data to another file format such as Excel, Text or TMX file. Send the exported file to the translator. Use this if the translator does not use Sisulizer but some other translation tool.</source>
          <target>使用&lt;a href=&quot;ExportWizard.htm&quot;&gt;导出向导&lt;/a&gt;将项目数据导出为另一种文件格式，例如 Excel、文本或 TMX 文件。将导出的文件发送给翻译人员。如果翻译人员不使用 Sisulizer 而是使用其他一些翻译工具，请使用此选项。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the height of the editor is adjusted automatically to fit the XML tree.</source>
          <target>如果选中，编辑器的高度会自动调整以适应 XML 树。</target>
        </trans-unit>
        <trans-unit>
          <source>To change the setting if to keep or remove existing resources right click the source name on the project tree and choose Properties. Then either check or uncheck &lt;em&gt;Keep original resources&lt;/em&gt; check box.</source>
          <target>要更改设置是保留还是删除现有资源，请右键单击项目树上的源名称并选择属性。然后选中或取消选中&lt;em&gt;保留原始资源&lt;/em&gt;复选框。</target>
        </trans-unit>
        <trans-unit>
          <source>ReportBuilder report file (.rtm)</source>
          <target>ReportBuilder 报告文件 (.rtm)</target>
        </trans-unit>
        <trans-unit>
          <source>Do not add context column.</source>
          <target>不要添加上下文列。</target>
        </trans-unit>
        <trans-unit>
          <source>You have an English Windows application C:\MyFiles\MyApplication.exe. You have used your current localization tool to create German and Japanese files C:\MyFiles\de\MyApplications.exe and C:\MyFiles\ja\MyApplications.exe.</source>
          <target>您有一个英文的 Windows 应用程序 C:\MyFiles\MyApplication.exe。您已使用当前的本地化工具创建了德语和日语文件 C:\MyFiles\de\MyApplications.exe 和 C:\MyFiles\ja\MyApplications.exe。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer reads data as HTML</source>
          <target>Sisulizer 将数据读取为 HTML</target>
        </trans-unit>
        <trans-unit>
          <source>You don&#x27;t now have to use translation statuses. Sisulizer can perfectly localize your projects without using translation status values at all. However in most cases they add valuable information to the project. If you want to automatically change status of a translation for example when selecting a cell open Tools | General Settings. Choose &lt;a href=&quot;GeneralSettingsDialogTranslationsSheet.htm&quot;&gt;Translations sheet&lt;/a&gt; and change values in Change translation status group box.</source>
          <target>您现在不必使用翻译状态。 Sisulizer 可以完美地本地化您的项目，而无需使用翻译状态值。然而，在大多数情况下，它们为项目添加了有价值的信息。例如，如果您想在选择单元格时自动更改翻译状态，请打开工具 |常规设置。在更改翻译状态组框中选择&lt;a href=&quot;GeneralSettingsDialogTranslationsSheet.htm&quot;&gt;翻译表&lt;/a&gt;并更改值。</target>
        </trans-unit>
        <trans-unit>
          <source>A break occurs when there is one or more period, question mark, or exclamation mark following one or more white space (space, tab or new line). For example:&lt;br&gt;Skiing is fun. Swimming is fun tool.&lt;br&gt;Underline shows the break pattern.</source>
          <target>当一个或多个空格（空格、制表符或换行符）后有一个或多个句点、问号或感叹号时，会发生中断。例如：&lt;br&gt;滑雪很有趣。游泳是一种有趣的工具。&lt;br&gt;下划线显示突破形态。</target>
        </trans-unit>
        <trans-unit>
          <source>When importing</source>
          <target>导入时</target>
        </trans-unit>
        <trans-unit>
          <source>Resource contains plain binary data. It is not parsed at any way.</source>
          <target>资源包含纯二进制数据。它不会以任何方式解析。</target>
        </trans-unit>
        <trans-unit>
          <source>Set the import options</source>
          <target>设置导入选项</target>
        </trans-unit>
        <trans-unit>
          <source>Country makes script unique</source>
          <target>国家让剧本独一无二</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the multilingual localized file contains the original resources. If not checked the original resources are removed and replaced with localized resources.</source>
          <target>如果选中，则多语言本地化文件包含原始资源。如果未选中，则原始资源将被删除并替换为本地化资源。</target>
        </trans-unit>
        <trans-unit>
          <source>.NET binary file</source>
          <target>.NET 二进制文件</target>
        </trans-unit>
        <trans-unit>
          <source>If checked translation defect statuses column is added as after a a translation column.</source>
          <target>如果检查的翻译缺陷状态列被添加为翻译列之后。</target>
        </trans-unit>
        <trans-unit>
          <source>Property options specify the state of the whole project. Possible options are:</source>
          <target>属性选项指定整个项目的状态。可能的选项是：</target>
        </trans-unit>
        <trans-unit>
          <source>Table localization</source>
          <target>表本地化</target>
        </trans-unit>
        <trans-unit>
          <source>Let&#x27;s have an example. You have Country table that contains data that you use in your report. When the table contains only one language (e.g. English) your SQL query is simple.</source>
          <target>让我们举个例子。您有 Country 表，其中包含您在报告中使用的数据。当表只包含一种语言（例如英语）时，您的 SQL 查询很简单。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the exported resxfile will contain start comment, schema and header items.</source>
          <target>如果选中，导出的 resxfile 将包含开始注释、架构和标题项。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to configure how the status values are changed when project is edited.</source>
          <target>使用此表配置编辑项目时状态值的更改方式。</target>
        </trans-unit>
        <trans-unit>
          <source>Contains functions to hide localized database fileds that do not belong to active language.&lt;br&gt;
      Main functions are HideField and
    SetFieldDisplayLabel</source>
          <target>包含隐藏不属于活动语言的本地化数据库文件的功能。&lt;br&gt;主要功能是 HideField 和 SetFieldDisplayLabel</target>
        </trans-unit>
        <trans-unit>
          <source>Platforms that use XLIFF</source>
          <target>使用 XLIFF 的平台</target>
        </trans-unit>
        <trans-unit>
          <source>Restores the string(s) of the selected control.</source>
          <target>恢复所选控件的字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Add Visual Studio project file (.csproj or .vbproj) or Visual Studio solution file (.sln) into Sisulizer project.</source>
          <target>将 Visual Studio 项目文件（.csproj 或 .vbproj）或 Visual Studio 解决方案文件（.sln）添加到 Sisulizer 项目中。</target>
        </trans-unit>
        <trans-unit>
          <source>To add a new spell checker configuration click Add button and browse the dictionary file. You can add following dictionary files into Sisulizer:</source>
          <target>要添加新的拼写检查器配置，请单击“添加”按钮并浏览词典文件。您可以将以下字典文件添加到 Sisulizer：</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies .h files that contains the symbolic names of the resource id. If you specify file(s) Sisulizer uses the symbolic names of the file instead of the resource ids that are integers. Let&#x27;s have an example. We have two files: resources.rc that contains the resources and resources.h that contains names and ids. resources.h contains the following line:</source>
          <target>指定包含资源 ID 符号名称的 .h 文件。如果您指定 file(s) Sisulizer 使用文件的符号名称而不是整数的资源 ID。让我们举个例子。我们有两个文件：包含资源的 resources.rc 和包含名称和 ID 的 resources.h。 resources.h 包含以下行：</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to set the editor options. Possible values are:</source>
          <target>使用此表设置编辑器选项。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>After that whenever you select a cell in the sheet Sisulizer check if there is a matching keyboard and/or IME installed. If there is Sisulizer turns it automatically on.</source>
          <target>之后，每当您在工作表 Sisulizer 中选择一个单元格时，请检查是否安装了匹配的键盘和/或 IME。如果有 Sisulizer，它会自动打开。</target>
        </trans-unit>
        <trans-unit>
          <source>Can be auto detected</source>
          <target>可自动检测</target>
        </trans-unit>
        <trans-unit>
          <source>The three character script code that is included only if the script is different than the default script of the language.</source>
          <target>仅当脚本与语言的默认脚本不同时才包含的三字符脚本代码。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked only those rows where original strings are empty (e.g. contains no characters) are shown.</source>
          <target>如果选中，则只显示原始字符串为空（例如不包含字符）的那些行。</target>
        </trans-unit>
        <trans-unit>
          <source>No scroll bars</source>
          <target>没有滚动条</target>
        </trans-unit>
        <trans-unit>
          <source>You can filter items based on other properties.</source>
          <target>您可以根据其他属性过滤项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure Windows settings.</source>
          <target>使用此对话框配置 Windows 设置。</target>
        </trans-unit>
        <trans-unit>
          <source>Normalize white spaces</source>
          <target>规范化空白</target>
        </trans-unit>
        <trans-unit>
          <source>Set the full path name of Qt&#x27;s lrelease commmand line tool.</source>
          <target>设置Qt的lrelease命令行工具的全路径名。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;BinaryLocalization.htm&quot;&gt;binary file is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;BinaryLocalization.htm&quot;&gt;二进制文件的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Use generic font</source>
          <target>使用通用字体</target>
        </trans-unit>
        <trans-unit>
          <source>Let&#x27;s have few rule examples:</source>
          <target>让我们举几个规则示例：</target>
        </trans-unit>
        <trans-unit>
          <source>Build excluded resources</source>
          <target>构建排除的资源</target>
        </trans-unit>
        <trans-unit>
          <source>Contains lines that specify the structure of data. Sisulizer can scan the following structured data:</source>
          <target>包含指定数据结构的行。 Sisulizer 可以扫描以下结构化数据：</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the expand percentage when the length of the original string is between 11 and 20 characters.</source>
          <target>指定原始字符串长度在 11 到 20 个字符之间时的扩展百分比。</target>
        </trans-unit>
        <trans-unit>
          <source>Select &lt;a href=&quot;WizardFileFrame.htm&quot;&gt;file(s)&lt;/a&gt; or &lt;a href=&quot;ProjectWizardDatabaseFrame.htm&quot;&gt;database&lt;/a&gt; to be localized</source>
          <target>选择要本地化的&lt;a href=&quot;WizardFileFrame.htm&quot;&gt;文件&lt;/a&gt;或&lt;a href=&quot;ProjectWizardDatabaseFrame.htm&quot;&gt;数据库&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit>
          <source>Plain text</source>
          <target>纯文本</target>
        </trans-unit>
        <trans-unit>
          <source>Select the original language of the source</source>
          <target>选择源的原始语言</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer scales the width and height of the form. This scaling is done properly for every form no matter what are the property settings. Unfortunately the build-in VCL scaling is always based runtime fonts of the OS where the application is running. When Sisulizer does the scaling on the developers computer this might be different than the actual runtime scaling.</source>
          <target>如果选中 Sisulizer 将缩放表单的宽度和高度。无论属性设置如何，这种缩放都会对每个表单正确完成。不幸的是，内置的 VCL 缩放始终基于应用程序运行所在操作系统的运行时字体。当 Sisulizer 在开发人员计算机上进行缩放时，这可能与实际运行时缩放不同。</target>
        </trans-unit>
        <trans-unit>
          <source>Some XLIFF files contains user interface elements such as dialogs and menus. Sisulizer can read the visual information from such XLIFF files and lets you localize the elements visually. Sisulizer recognizes coord and font attributes in the &amp;lt;group&amp;gt; and &amp;lt;trans-unit&amp;gt; tags.</source>
          <target>某些 XLIFF 文件包含用户界面元素，例如对话框和菜单。 Sisulizer 可以从此类 XLIFF 文件中读取视觉信息，并让您直观地本地化元素。 Sisulizer 识别 &amp;lt;group&amp;gt; 和 &amp;lt;trans-unit&amp;gt; 标签中的坐标和字体属性。</target>
        </trans-unit>
        <trans-unit>
          <source>If unchecked Sisulizer does not remove temporal files. Use this feature together with detailed output log if you want to figure out why an compilation (e.g. XAML or CHM) fails.</source>
          <target>如果未选中 Sisulizer 不会删除临时文件。如果您想找出编译（例如 XAML 或 CHM）失败的原因，请将此功能与详细的输出日志一起使用。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer add images files in the Files section of the project file (.hhp) of the localized CHM file. Check this if the localized CHM files do not include all images files.</source>
          <target>如果选中 Sisulizer，则在本地化 CHM 文件的项目文件 (.hhp) 的 Files 部分中添加图像文件。如果本地化的 CHM 文件不包括所有图像文件，请检查此项。</target>
        </trans-unit>
        <trans-unit>
          <source>Script code is added after language code.</source>
          <target>脚本代码添加在语言代码之后。</target>
        </trans-unit>
        <trans-unit>
          <source>Item contains a comment value.</source>
          <target>项目包含注释值。</target>
        </trans-unit>
        <trans-unit>
          <source>The build process if Sisulizer creates the localize XML files. For example if you added en\Sample_en.xml to the Sisulizer project the output files would be en\&amp;lt;langcode&amp;gt;\Sample_en.xml</source>
          <target>如果 Sisulizer 创建本地化 XML 文件，则构建过程。例如，如果您将 en\Sample_en.xml 添加到 Sisulizer 项目，则输出文件将为 en\&amp;lt;langcode&amp;gt;\Sample_en.xml</target>
        </trans-unit>
        <trans-unit>
          <source>Ansi strings are written always as Unicode strings. Use this if you use Unicode enabled VCL (Delphi 2009 or later, C++Builder 2009 or later) or Unicode enabled components such as TNT or ElPack.</source>
          <target>Ansi 字符串总是写成 Unicode 字符串。如果您使用支持 Unicode 的 VCL（Delphi 2009 或更高版本、C++Builder 2009 或更高版本）或支持 Unicode 的组件（如 TNT 或 ElPack），请使用此选项。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;a href=&quot;Validation.htm&quot;&gt;Validate&lt;/a&gt; original items in the form.</source>
          <target>&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;表单中的原始项目。</target>
        </trans-unit>
        <trans-unit>
          <source>.NET user interface culture</source>
          <target>.NET 用户界面文化</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;a href=&quot;Segmentation.htm&quot;&gt;Segmentation rules&lt;/a&gt; makes is possible to break long section of text to multiple sentences.</source>
          <target>&lt;a href=&quot;Segmentation.htm&quot;&gt;分词规则&lt;/a&gt;可以将长文本片段分成多个句子。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer parses string as HTML</source>
          <target>Sisulizer 将字符串解析为 HTML</target>
        </trans-unit>
        <trans-unit>
          <source>After you have translated the project it is time to create &lt;a href=&quot;OutputFiles.htm&quot;&gt;localized files&lt;/a&gt;. Choose &lt;a href=&quot;ProjectBuildMenu.htm&quot;&gt;Project | Build Item&lt;/a&gt; or &lt;a href=&quot;ProjectBuildAllMenu.htm&quot;&gt;Project | Build All&lt;/a&gt; menu to create localized files. &lt;em&gt;Build Item&lt;/em&gt; creates only the localized files for the active language. &lt;em&gt;Build All&lt;/em&gt; creates files for all languages in the project. Choose &lt;a href=&quot;ProjectRunLocalizedMenu.htm&quot;&gt;Project | Run Localized&lt;/a&gt; to quickly build localized file and then run/view it.</source>
          <target>翻译项​​目后，就可以创建&lt;a href=&quot;OutputFiles.htm&quot;&gt;本地化文件了&lt;/a&gt;。选择&lt;a href=&quot;ProjectBuildMenu.htm&quot;&gt;项目 |构建项目&lt;/a&gt;或&lt;a href=&quot;ProjectBuildAllMenu.htm&quot;&gt;项目 | Build All&lt;/a&gt;菜单以创建本地化文件。&lt;em&gt;构建项&lt;/em&gt;仅为活动语言创建本地化文件。 &lt;em&gt;Build All&lt;/em&gt;为项目中的所有语言创建文件。选择&lt;a href=&quot;ProjectRunLocalizedMenu.htm&quot;&gt;项目 |运行本地化&lt;/a&gt;以快速构建本地化文件，然后运行/查看它。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies how HTML data is localized. Possible values are:</source>
          <target>指定 HTML 数据的本地化方式。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Add and remove document to the translation memory.</source>
          <target>在翻译记忆库中添加和删除文档。</target>
        </trans-unit>
        <trans-unit>
          <source>Edits the selected rule.</source>
          <target>编辑选定的规则。</target>
        </trans-unit>
        <trans-unit>
          <source>Translate strings using translation engines</source>
          <target>使用翻译引擎翻译字符串</target>
        </trans-unit>
        <trans-unit>
          <source>First rows of the selected range</source>
          <target>所选范围的第一行</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer&#x27;s Text\PO directory contains PO samples</source>
          <target>Sisulizer 的 Text\PO 目录包含 PO 示例</target>
        </trans-unit>
        <trans-unit>
          <source>If you switch from Multilizer you can easily convert existing Multilizer project file (.mpr or .m7p) into Sisulizer project file. Complete the following steps:</source>
          <target>如果您从 Multilizer 切换，您可以轻松地将现有的 Multilizer 项目文件（.mpr 或 .m7p）转换为 Sisulizer 项目文件。完成以下步骤：</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify variant codes.</source>
          <target>使用此表指定变体代码。</target>
        </trans-unit>
        <trans-unit>
          <source>Check this if you want Sisulizer to update LANGUAGE and  #pragma code_page part in the localized RC-files it creates</source>
          <target>如果您希望 Sisulizer 在它创建的本地化 RC 文件中更新 LANGUAGE 和 #pragma code_page 部分，请选中此项</target>
        </trans-unit>
        <trans-unit>
          <source>Long threshold</source>
          <target>长门槛</target>
        </trans-unit>
        <trans-unit>
          <source>A higher Sisulizer edition is required</source>
          <target>需要更高的 Sisulizer 版本</target>
        </trans-unit>
        <trans-unit>
          <source>Use spell checker</source>
          <target>使用拼写检查器</target>
        </trans-unit>
        <trans-unit>
          <source>Works with Visual C++ applications</source>
          <target>适用于 Visual C++ 应用程序</target>
        </trans-unit>
        <trans-unit>
          <source>Contains a list of available languages and sub languages. Add a language by dragging it to the Selected languages list,  by double clicking the language, or by selecting the language and pressing the right arrow (-&amp;gt;) button.</source>
          <target>包含可用语言和子语言的列表。添加一种语言，方法是将其拖到已选择的语言列表中、双击语言或选择语言并按向右箭头 (-&amp;gt;) 按钮。</target>
        </trans-unit>
        <trans-unit>
          <source>In Windows resource files strings are stored into string tables. There can be many string tables in a single EXE-file. By default a separate tree node for each string tables will be created. You can however to choose to combine every string rows into a single string node by checking Single string table</source>
          <target>在 Windows 资源文件中，字符串存储在字符串表中。单个 EXE 文件中可以有多个字符串表。默认情况下，将为每个字符串表创建一个单独的树节点。但是，您可以通过检查 Single string table 来选择将每个字符串行合并为一个字符串节点</target>
        </trans-unit>
        <trans-unit>
          <source>Importing project file of other localization tools</source>
          <target>导入其他本地化工具的项目文件</target>
        </trans-unit>
        <trans-unit>
          <source>Email address of the author. Sisulizer uses this when sending information to the author. For example if the translator founds an spelling error on the original value Sisulizer can automatically generate report email for the author.</source>
          <target>作者的电子邮件地址。 Sisulizer 在向作者发送信息时使用它。例如，如果翻译人员发现原始值有拼写错误，Sisulizer 可以自动为作者生成报告电子邮件。</target>
        </trans-unit>
        <trans-unit>
          <source>Language Codes and Translation Fallback</source>
          <target>语言代码和翻译后备</target>
        </trans-unit>
        <trans-unit>
          <source>SQL Server Compact database.&lt;br&gt;
      Type a database file name  (.sdf) in the edit field or press ... to select a file.</source>
          <target>SQL Server Compact 数据库。&lt;br&gt;在编辑字段中键入数据库文件名 (.sdf) 或按 ... 选择文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Check the resource types that you want to localize</source>
          <target>检查要本地化的资源类型</target>
        </trans-unit>
        <trans-unit>
          <source>Set the culture in the constructor of the main form.</source>
          <target>在主窗体的构造函数中设置文化。</target>
        </trans-unit>
        <trans-unit>
          <source>Ansi string with no length restriction. Reference counted.</source>
          <target>Ansi 字符串，没有长度限制。引用计数。</target>
        </trans-unit>
        <trans-unit>
          <source>Pass the application class</source>
          <target>传递应用类</target>
        </trans-unit>
        <trans-unit>
          <source>Check &lt;em&gt;WIN32 resources&lt;/em&gt; and check &lt;em&gt;Version number&lt;/em&gt; in Version types. Next time you scan the source code version rows will be added. &amp;quot;Versions.1.Assembly Version&amp;quot; specifies the assembly version and you can set it to any value.</source>
          <target>检查&lt;em&gt;WIN32 资源&lt;/em&gt;并检查版本类型中的&lt;em&gt;版本号&lt;/em&gt;。下次扫描源代码时会添加版本行。 “Versions.1.Assembly Version”指定程序集版本，您可以将其设置为任何值。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;strong&gt;procedure&lt;/strong&gt; BeforeTranslate(
 host: TComponent;
 obj: TObject;
 propertyInfo: PPropInfo;
 const currentValue: Variant;
 &lt;strong&gt;var&lt;/strong&gt; newValue: Variant;
 &lt;strong&gt;var&lt;/strong&gt; cancel: Boolean);
&lt;strong&gt;begin&lt;/strong&gt;
  cancel := obj = Form1.Label2;&lt;br&gt;&lt;strong&gt;end&lt;/strong&gt;;</source>
          <target>&lt;strong&gt;程序&lt;/strong&gt;BeforeTranslate（主机：TComponent；obj：TObject；propertyInfo：PPropInfo；const currentValue：Variant； &lt;strong&gt;var&lt;/strong&gt; newValue：Variant； &lt;strong&gt;var&lt;/strong&gt; cancel：Boolean）；&lt;strong&gt;开始&lt;/strong&gt;取消：= obj = Form1.Label2;&lt;br&gt;&lt;strong&gt;结束&lt;/strong&gt;;</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the database. The database list contains available database types. Select the database type that you want to use. Possible values are:</source>
          <target>指定数据库。数据库列表包含可用的数据库类型。选择要使用的数据库类型。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>User interface component properties or string resource items can contain XML data instead of plain text. In most cases this XML data has elements that contain string data. Only the string data need to be localized. The rest of the XML element need to be left at it is. Without embedded XML data feature a single row will contains all raw XML data. This may be very hard to translate and it is also likely that the translated XML data will become invalid. In order to make translation of embedded XML data easy and safe Sisulizer can handle string data as XML. User selects the element that should belocalized and Sisulizer breaks the XML data into several different part. Each part will be on its own row and each part contains plain text that is easy to translate.</source>
          <target>用户界面组件属性或字符串资源项可以包含 XML 数据而不是纯文本。在大多数情况下，此 XML 数据具有包含字符串数据的元素。只有字符串数据需要本地化。 XML 元素的其余部分需要保留。如果没有嵌入的 XML 数据功能，一行将包含所有原始 XML 数据。这可能很难翻译，而且翻译后的 XML 数据也很可能无效。为了使嵌入的 XML 数据的翻译变得容易和安全，Sisulizer 可以将字符串数据作为 XML 处理。用户选择应该本地化的元素，Sisulizer 将 XML 数据分成几个不同的部分。每个部分都在自己的行上，每个部分都包含易于翻译的纯文本。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the both original and localized resource data of selected node in a text format.</source>
          <target>以文本格式显示选定节点的原始和本地化资源数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Variable is replaced with the original file name without extension.&lt;br&gt;&lt;code&gt;C:\MyFiles\&lt;span class=&quot;style2&quot;&gt;Sample&lt;/span&gt;.exe -&amp;gt; Sample&lt;/code&gt;</source>
          <target>变量被替换为没有扩展名的原始文件名。&lt;br&gt; &lt;code&gt;C:\MyFiles\ &lt;span class=&quot;style2&quot;&gt;Sample&lt;/span&gt; .exe -&amp;gt; Sample&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer does not change the Scaled, Width or Height properties.</source>
          <target>如果选中 Sisulizer，则不会更改 Scaled、Width 或 Height 属性。</target>
        </trans-unit>
        <trans-unit>
          <source>.NET resource file (.resx)&lt;br&gt;.NET project file (.csproj or .vbproj)&lt;br&gt;.NET solution file (.sln)</source>
          <target>.NET 资源文件 (.resx)&lt;br&gt; .NET 项目文件（.csproj 或 .vbproj）&lt;br&gt; .NET 解决方案文件 (.sln)</target>
        </trans-unit>
        <trans-unit>
          <source>Select the additional items that will be added to the package</source>
          <target>选择将添加到包中的其他项目</target>
        </trans-unit>
        <trans-unit>
          <source>Updates charset fields to match the localized language in VERSIONINFO resource</source>
          <target>更新字符集字段以匹配 VERSIONINFO 资源中的本地化语言</target>
        </trans-unit>
        <trans-unit>
          <source>Check &lt;em&gt;Mirror forms&lt;/em&gt; radio box to make Sisulizer to mirror container components during the build process.</source>
          <target>选中&lt;em&gt;Mirror forms&lt;/em&gt;单选框以使 Sisulizer 在构建过程中镜像容器组件。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;WindowsLocalization.htm&quot;&gt;C++Builder application or library is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;WindowsLocalization.htm&quot;&gt;C++Builder 应用程序或库的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>In order to localize a .NET application each form or user control of the application has to have Localizable property set true. This makes the IDE to store the properties of the form in the .resx file instead hard coding them to the source code. Having the resources in the .resx file makes localization possible.</source>
          <target>为了本地化 .NET 应用程序，应用程序的每个窗体或用户控件都必须将 Localizable 属性设置为 true。这使得 IDE 将表单的属性存储在 .resx 文件中，而不是将它们硬编码到源代码中。 .resx 文件中的资源使本地化成为可能。</target>
        </trans-unit>
        <trans-unit>
          <source>Hunspell spell checker</source>
          <target>Hunspell 拼写检查器</target>
        </trans-unit>
        <trans-unit>
          <source>If the primary id field is an auto increment field this group is disabled because database will assing a new id for each row.</source>
          <target>如果主 id 字段是自动递增字段，则禁用该组，因为数据库将为每一行分配一个新 id。</target>
        </trans-unit>
        <trans-unit>
          <source>This grid shows the first two lines of the selected range.</source>
          <target>此网格显示所选范围的前两行。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Threshold&lt;/em&gt; specifies then length exceed after that color marking is used. The exceed is given in percentage to the length of the original string.</source>
          <target>&lt;em&gt;阈值&lt;/em&gt;指定使用颜色标记后长度超过。超出以原始字符串长度的百分比给出。</target>
        </trans-unit>
        <trans-unit>
          <source>JPEG, PNG, GIF, BMP, ICO and CUR images</source>
          <target>JPEG、PNG、GIF、BMP、ICO 和 CUR 图像</target>
        </trans-unit>
        <trans-unit>
          <source>HTML Source | Copy extensions</source>
          <target>HTML 源 |复制扩展</target>
        </trans-unit>
        <trans-unit>
          <source>Segmentation is a feature that breaks paragraphs to sentences to help the translation work. This means that a single paragraph that is a continuous text will be splitted into several sentences. Segmentation rules decide how the breaking is done. Sisulizer uses Segmentation Rules Exchange (SRX) standard to specify the segmentation rules. Choose Tools | General menu and select Segmentation sheet to view and edit segmentation rules.</source>
          <target>分割是一种将段落分成句子以帮助翻译工作的功能。这意味着作为连续文本的单个段落将被拆分为多个句子。分段规则决定了如何进行拆分。 Sisulizer 使用分段规则交换 (SRX) 标准来指定分段规则。选择工具 | General 菜单并选择 Segmentation sheet 以查看和编辑分割规则。</target>
        </trans-unit>
        <trans-unit>
          <source>When Sisulizer builds the localized files it uses the following values:</source>
          <target>当 Sisulizer 构建本地化文件时，它使用以下值：</target>
        </trans-unit>
        <trans-unit>
          <source>Integer entity</source>
          <target>整数实体</target>
        </trans-unit>
        <trans-unit>
          <source>Add a new source and create a new project if needed</source>
          <target>如果需要，添加新源并创建新项目</target>
        </trans-unit>
        <trans-unit>
          <source>Additional files</source>
          <target>附加文件</target>
        </trans-unit>
        <trans-unit>
          <source>All Android applications must be signed. If an application is not signed Android OS will not install it. In order to sing an application you need to have a key. You can do your key yourself. There is no need to get it from a certified key provided. There are two kind of keys in Android. One is the debug key. This is a temporal key that works only on emulator. You can not deploy applications signed with debug key. The password of the debug key is always the same so there is no need to store password or ask password them. If you use Eclipse it automatically debug signs application before installing in to the emulator. Sisulizer can also sign the application package files it creates. Use the &lt;a href=&quot;AndroidSourceDialogSignSheet.htm&quot;&gt;Signing&lt;/a&gt; sheet of the source dialog to configure sign settings. Read more about signing from &lt;a href=&quot;http://developer.android.com/guide/publishing/app-signing.html&quot; target=&quot;_blank&quot;&gt;Android documentation&lt;/a&gt;</source>
          <target>所有 Android 应用程序都必须签名。如果应用程序未签名，Android 操作系统将不会安装它。为了唱一个应用程序，你需要有一个键。你可以自己做你的钥匙。无需从提供的认证密钥中获取它。 Android中有两种键。一是调试键。这是一个仅适用于模拟器的临时密钥。您不能部署使用调试密钥签名的应用程序。调试密钥的密码始终相同，因此无需存储密码或询问密码。如果您使用 Eclipse，它会在安装到模拟器之前自动调试签名应用程序。 Sisulizer 还可以对其创建的应用程序包文件进行签名。使用源对话框的&lt;a href=&quot;AndroidSourceDialogSignSheet.htm&quot;&gt;签名&lt;/a&gt;表来配置签名设置。阅读有关从&lt;a href=&quot;http://developer.android.com/guide/publishing/app-signing.html&quot; target=&quot;_blank&quot;&gt;Android 文档&lt;/a&gt;签名的更多信息</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer&#x27;s NET directory contains  Windows Forms, WPF, WEC and Silverlight samples.</source>
          <target>Sisulizer 的 NET 目录包含 Windows Forms、WPF、WEC 和 Silverlight 示例。</target>
        </trans-unit>
        <trans-unit>
          <source>There are several files in the directory that will not be scanned (e.g. .txt and .css files). In order to make the localized files to work properly those files must exist on the localized directory. You can specify the file extensions of the files that will be copied to the localizer directory.</source>
          <target>目录中有几个文件不会被扫描（例如.txt 和.css 文件）。为了使本地化文件正常工作，这些文件必须存在于本地化目录中。您可以指定将复制到 localizer 目录的文件的文件扩展名。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;strong&gt;Note!&lt;/strong&gt; If you are importing from other source as Sisulizer project file the following group box is shown instead.</source>
          <target>&lt;strong&gt;笔记！&lt;/strong&gt;如果您从其他来源作为 Sisulizer 项目文件导入，则会显示以下组框。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer parses string as XML</source>
          <target>Sisulizer 将字符串解析为 XML</target>
        </trans-unit>
        <trans-unit>
          <source>Press Import to import keyword from a keyword file. Press Export to export current keywords to a keyword file.</source>
          <target>按导入从关键字文件中导入关键字。按导出将当前关键字导出到关键字文件。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Variant&lt;/em&gt; specifies a variant code. This can cointain any ASCII chracters.</source>
          <target>&lt;em&gt;Variant&lt;/em&gt;指定一个变体代码。这可以包含任何 ASCII 字符。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this source type when you have a single file or few files that you want to locale. To create a project containing a single file source, start &lt;a href=&quot;ProjectWizard.htm&quot;&gt;Project Wizard&lt;/a&gt;, check &lt;em&gt;Localize a file or files&lt;/em&gt; and go through Project Wizard.</source>
          <target>当您有一个或几个要进行区域设置的文件时，请使用此源类型。要创建包含单个文件源的&lt;a href=&quot;ProjectWizard.htm&quot;&gt;项目&lt;/a&gt;，请启动&lt;a href=&quot;ProjectWizard.htm&quot;&gt;Project Wizard&lt;/a&gt; ，选中&lt;em&gt;Localize a file or files&lt;/em&gt;并通过 Project Wizard。</target>
        </trans-unit>
        <trans-unit>
          <source>To purchase WorldLingo account go to &lt;a href=&quot;http://www.worldlingo.com/en/products/api_pricing.html&quot; target=&quot;_blank&quot;&gt;account page&lt;/a&gt;.</source>
          <target>要购买 WorldLingo 帐户，请转到&lt;a href=&quot;http://www.worldlingo.com/en/products/api_pricing.html&quot; target=&quot;_blank&quot;&gt;帐户页面&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the font script name.</source>
          <target>指定字体脚本名称。</target>
        </trans-unit>
        <trans-unit>
          <source>Show as Binary | Original</source>
          <target>显示为二进制 |原来的</target>
        </trans-unit>
        <trans-unit>
          <source>Plain string</source>
          <target>普通字符串</target>
        </trans-unit>
        <trans-unit>
          <source>This contains the original and translated value of the selected row. Use this if the length of the item is so large that it is hard to edit it on the grid.</source>
          <target>这包含所选行的原始值和翻译值。如果项目的长度太大以至于难以在网格上对其进行编辑，请使用此选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Key type</source>
          <target>钥匙类型</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer supports several spell and grammar checking engines. Instructions how to install dictionary and possible spell checker engine depend on the spell checker engine:</source>
          <target>Sisulizer 支持多种拼写和语法检查引擎。如何安装字典和可能的拼写检查引擎的说明取决于拼写检查引擎：</target>
        </trans-unit>
        <trans-unit>
          <source>Translation engines</source>
          <target>翻译引擎</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the type of the item. Possible values are:</source>
          <target>指定项目的类型。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Set the translation status of imported items to the value specified in the right side combo box.</source>
          <target>将导入项目的翻译状态设置为右侧组合框中指定的值。</target>
        </trans-unit>
        <trans-unit>
          <source>If you check &lt;em&gt;Localize only those elements that have enabled localize attribute&lt;/em&gt; check box Sisulizer localizes only those elements that have positive localize attribute. This means that even if you check an element in the tags tree but if an element has not a positive localize attribute Sisulizer does not localize it.</source>
          <target>如果您选中&lt;em&gt;仅本地化那些启用了本地化属性&lt;/em&gt;复选框的元素，Sisulizer 将仅本地化那些具有正本地化属性的元素。这意味着即使您检查标签树中的元素，但如果元素没有正本地化属性，Sisulizer 也不会对其进行本地化。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked translation defect comments column is added as after a a translation column.</source>
          <target>如果检查的翻译缺陷评论栏被添加为一个翻译栏之后。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Language&lt;/em&gt; specifies the ISO-639 language code.</source>
          <target>&lt;em&gt;语言&lt;/em&gt;指定 ISO-639 语言代码。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the &lt;a href=&quot;TextLocalization.htm&quot;&gt;format of the text file&lt;/a&gt;.</source>
          <target>使用此表指定&lt;a href=&quot;TextLocalization.htm&quot;&gt;文本文件&lt;/a&gt;的&lt;a href=&quot;TextLocalization.htm&quot;&gt;格式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the main class name (e.g. project1.Application).</source>
          <target>指定主类名（例如 project1.Application）。</target>
        </trans-unit>
        <trans-unit>
          <source>If you localize a project or solution file (e.g. .csproj or .sln) save your application project and &lt;a href=&quot;ProjectScanMenu.htm&quot;&gt;rescan&lt;/a&gt; your Sisulizer project. If you localize an assembly file (e.g. .exe) recompile your application and then rescan your Sisulizer project.</source>
          <target>如果您本地化项目或解决方案文件（例如 .csproj 或 .sln），请保存您的应用程序项目并&lt;a href=&quot;ProjectScanMenu.htm&quot;&gt;重新扫描&lt;/a&gt;您的 Sisulizer 项目。如果您本地化了一个程序集文件（例如 .exe），请重新编译您的应用程序，然后重新扫描您的 Sisulizer 项目。</target>
        </trans-unit>
        <trans-unit>
          <source>File contains UTF-8 data.</source>
          <target>文件包含 UTF-8 数据。</target>
        </trans-unit>
        <trans-unit>
          <source>We could use expression to include comments but that would make expression much more complicated. This is why text definitions have build in support for comments. You can give two kinds of comments.</source>
          <target>我们可以使用表达式来包含注释，但这会使表达式变得更加复杂。这就是文本定义支持注释的原因。你可以给出两种评论。</target>
        </trans-unit>
        <trans-unit>
          <source>Missing colon</source>
          <target>缺少冒号</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the current project file (.slp) will be renamed to .~slp before overwriting the file. The .~slp contains the previous project data.</source>
          <target>如果选中，当前项目文件 (.slp) 将在覆盖文件之前重命名为 .~slp。 .~slp 包含以前的项目数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the localizable tables and fields. Use the mouse to drag and drop the tables and fields and/or right click the mouse button to set the field types. The tree contains several different items. The following table contains the possible items:</source>
          <target>指定可本地化的表和字段。使用鼠标拖放表格和字段和/或右键单击鼠标按钮设置字段类型。该树包含几个不同的项目。下表包含可能的项目：</target>
        </trans-unit>
        <trans-unit>
          <source>Shows both the original and localized HTML documents.</source>
          <target>显示原始和本地化的 HTML 文档。</target>
        </trans-unit>
        <trans-unit>
          <source>Id field</source>
          <target>标识字段</target>
        </trans-unit>
        <trans-unit>
          <source>Look at &amp;lt;sldir&amp;gt;\VCL\ DelphiWin\Embedded sample. When you build the Sisulizer project emb\Embedded.exe file will be created. It contains the embedded Finnish (Embedded.FI), German (Embedded.DE) and Japanese (Embedded.JP) resource files. When the application is run first time it extracts the resource files.</source>
          <target>查看 &amp;lt;sldir&amp;gt;\VCL\DelphiWin\Embedded 示例。当您构建 Sisulizer 项目时，将创建 emb\Embedded.exe 文件。它包含嵌入式芬兰语 (Embedded.FI)、德语 (Embedded.DE) 和日语 (Embedded.JP) 资源文件。当应用程序第一次运行时，它会提取资源文件。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Script&lt;/em&gt; specifies the script that the language uses. The script list contains all the scripts currently supported by Windows. Languages such as Azeri, Chinese, Serbo-Croatian and Uzbek can be written using two different scripts. In these cases there exits two code that have the same language code but but different script.</source>
          <target>&lt;em&gt;脚本&lt;/em&gt;指定语言使用的脚本。脚本列表包含 Windows 当前支持的所有脚本。阿塞拜疆语、中文、塞尔维亚-克罗地亚语和乌兹别克语等语言可以使用两种不同的文字书写。在这些情况下，存在两个具有相同语言代码但不同脚本的代码。</target>
        </trans-unit>
        <trans-unit>
          <source>Row | Copy Original to Translation</source>
          <target>行 |将原文复制到翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Free Edition setup and project file</source>
          <target>免费版设置和项目文件</target>
        </trans-unit>
        <trans-unit>
          <source>Adding x:Uid attributes</source>
          <target>添加 x:Uid 属性</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the format of the text file.</source>
          <target>使用此表指定文本文件的格式。</target>
        </trans-unit>
        <trans-unit>
          <source>You select a part of data structure that always contains combined strings.
      If you localize an XML file you can select what XML elements contain combined data.
If you localize a database you can select what  database fields contain combined data.</source>
          <target>您选择始终包含组合字符串的数据结构的一部分。如果您本地化一个 XML 文件，您可以选择哪些 XML 元素包含组合数据。如果您本地化一个数据库，您可以选择哪些数据库字段包含组合数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Custom and string resources</source>
          <target>自定义和字符串资源</target>
        </trans-unit>
        <trans-unit>
          <source>Each row has a status. Possible values are:</source>
          <target>每行都有一个状态。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>se</source>
          <target>我知道</target>
        </trans-unit>
        <trans-unit>
          <source>when the current language is German.</source>
          <target>当前语言为德语时。</target>
        </trans-unit>
        <trans-unit>
          <source>.NET language code.</source>
          <target>.NET 语言代码。</target>
        </trans-unit>
        <trans-unit>
          <source>The case of every character is changed from lower to upper or from upper to lower.&lt;br&gt;For example &lt;samp&gt;&amp;quot;Hello world&amp;quot;&lt;/samp&gt; becomes &lt;samp&gt;&amp;quot;HeLlO WoRlD&amp;quot;&lt;/samp&gt;.</source>
          <target>每个字符的大小写由低变高或由高变低。&lt;br&gt;例如， &lt;samp&gt;&amp;quot;Hello world&amp;quot;&lt;/samp&gt;变为&lt;samp&gt;&amp;quot;HeL1O WoRlD&amp;quot;&lt;/samp&gt; 。</target>
        </trans-unit>
        <trans-unit>
          <source>Refresh the content of the pane.</source>
          <target>刷新窗格的内容。</target>
        </trans-unit>
        <trans-unit>
          <source>Text item</source>
          <target>文本项</target>
        </trans-unit>
        <trans-unit>
          <source>Always overwrite the current value.</source>
          <target>始终覆盖当前值。</target>
        </trans-unit>
        <trans-unit>
          <source>As you can see the HTML contains three elements that need to be localized. If we set the row using HTML and mark caption attribute, header and footer elements Sisulizer will replace the original row with three different rows.</source>
          <target>如您所见，HTML 包含三个需要本地化的元素。如果我们使用 HTML 设置行并标记标题属性，则页眉和页脚元素 Sisulizer 将用三个不同的行替换原始行。</target>
        </trans-unit>
        <trans-unit>
          <source>Form translating requires more explanation. Sisulizer.SelectLanguage.Select calls Sisulizer.Resources.SetUILanguage function that performs the resource loading and calls Sisulizer.Translator.Translate function that translates existing forms. It is very important to understand what happens here. Sisulizer reads the localized form data from satellite assembly file. This means that all the component and properties of the form that exist in the localized form data will be assigned. However if you changed any property value from code, for example in Load or Show events, the property values &lt;strong&gt;do not&lt;/strong&gt; change. If these so called dynamic property values need to be localized you have to set them again after language change. Let&#x27;s have an example.</source>
          <target>表格翻译需要更多的解释。 Sisulizer.SelectLanguage.Select 调用执行资源加载的 Sisulizer.Resources.SetUILanguage 函数并调用转换现有表单的 Sisulizer.Translator.Translate 函数。了解这里发生的事情非常重要。 Sisulizer 从附属程序集文件中读取本地化的表单数据。这意味着将分配本地化表单数据中存在的所有表单组件和属性。但是，如果您从代码中更改了任何属性值，例如在 Load 或 Show 事件中，则属性值&lt;strong&gt;不会&lt;/strong&gt;更改。如果这些所谓的动态属性值需要本地化，则必须在语言更改后再次设置它们。让我们举个例子。</target>
        </trans-unit>
        <trans-unit>
          <source>Use sub language when a language has only one sub language</source>
          <target>当一种语言只有一种子语言时使用子语言</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be a &lt;a href=&quot;NetLocalization.htm#Project&quot;&gt;CodeGear/Borland project group file&lt;/a&gt; (e.g. C:\Samples\Project.bdsgroup).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是&lt;a href=&quot;NetLocalization.htm#Project&quot;&gt;CodeGear/Borland 项目组文件&lt;/a&gt;（例如 C:\Samples\Project.bdsgroup）。</target>
        </trans-unit>
        <trans-unit>
          <source>Check &lt;em&gt;Exact match&lt;/em&gt; check box if you want to use an exact match when finding  strings. In this case the translation memory must contain exactly the same string as you typed in order to find it. If unchecked a partial match is used. In this case all strings that contain the typed string as a part of a string will be shown in the result list.</source>
          <target>如果您想在查找字符串时使用完全匹配，请选中“&lt;em&gt;完全匹配”&lt;/em&gt;复选框。在这种情况下，翻译记忆库必须包含与您键入的字符串完全相同的字符串才能找到它。如果未选中，则使用部分匹配。在这种情况下，所有包含键入字符串作为字符串一部分的字符串都将显示在结果列表中。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify a file or files to be localized and the location and naming of the localized files that Sisulizer creates.</source>
          <target>使用此表指定要本地化的一个或多个文件以及 Sisulizer 创建的本地化文件的位置和命名。</target>
        </trans-unit>
        <trans-unit>
          <source>UTF-8 string with preceding length word</source>
          <target>带有前面长度字的 UTF-8 字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Update file version field</source>
          <target>更新文件版本字段</target>
        </trans-unit>
        <trans-unit>
          <source>Currently XLIFF is not that widely used. Very few tool can export to XLIFF and import it back. However there are few such tools. The following table lists the XLIFF enabled development or authoring tools:</source>
          <target>目前 XLIFF 没有被广泛使用。很少有工具可以导出到 XLIFF 并重新导入。但是这样的工具很少。下表列出了支持 XLIFF 的开发或创作工具：</target>
        </trans-unit>
        <trans-unit>
          <source>Lock all components</source>
          <target>锁定所有组件</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Value of the first block number&lt;/em&gt; specifies the number of the first blcok if the strings is devided into several rows.</source>
          <target>如果字符串被分成几行&lt;em&gt;，第一个块号的值&lt;/em&gt;指定&lt;em&gt;第一个块的编号&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the options of the source that contains  source code.</source>
          <target>使用此表指定包含源代码的源的选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Change it to</source>
          <target>将其更改为</target>
        </trans-unit>
        <trans-unit>
          <source>To make mapping easier the Log will contains an entry for each unmapped component type. Select a line and Sisulizer selects an instance of the component. Click the component to map it.</source>
          <target>为了使映射更容易，日志将包含每个未映射组件类型的条目。选择一条线，Sisulizer 选择组件的一个实例。单击组件以对其进行映射。</target>
        </trans-unit>
        <trans-unit>
          <source>This group lets you include and exclude items based on their row status. Strings having a row status belonging to those statuses that have been checked will be exported to the file. All other will not be exported.</source>
          <target>此组允许您根据行状态包括和排除项目。具有属于已检查状态的行状态的字符串将导出到文件中。所有其他将不会被导出。</target>
        </trans-unit>
        <trans-unit>
          <source>Type the character that is used with the replace pseudo translation type when replacing characters.</source>
          <target>键入替换字符时与替换伪翻译类型一起使用的字符。</target>
        </trans-unit>
        <trans-unit>
          <source>Making your own Sisulizer installation is extremely easy. Just copy Sisulizer.exe and run it. Sisulizer does not need any registry settings or COM registrations. It does not even need any DLL files to work. It can &lt;a href=&quot;AddOns.htm&quot;&gt;use several DLL files and COM objects&lt;/a&gt; but they are not necessary needed. Everything that is needed is linked inside the Sisulizer application, Sisulizer.exe. This makes it possible to just copy Sisulizer.exe into a directory and run. Such an installation starts as &lt;a href=&quot;Licenses.htm&quot;&gt;Sisulizer Free Edition&lt;/a&gt; but if you enter a valid license key it turns into a full Sisulizer version. If you run the copied Sisulizer.exe in XP for first time it will create the settings and translation memory files in the same directory when you copied Sisulizer.exe. If you start Sisulizer on Vista or later those files will be created on your personal directory.</source>
          <target>安装您自己的 Sisulizer 非常容易。只需复制 Sisulizer.exe 并运行它。 Sisulizer 不需要任何注册表设置或 COM 注册。它甚至不需要任何 DLL 文件即可工作。它可以&lt;a href=&quot;AddOns.htm&quot;&gt;使用多个 DLL 文件和 COM 对象，&lt;/a&gt;但它们不是必需的。所需的一切都链接在 Sisulizer 应用程序 Sisulizer.exe 中。这使得只需将 Sisulizer.exe 复制到目录中并运行即可。这样的安装以&lt;a href=&quot;Licenses.htm&quot;&gt;Sisulizer 免费版&lt;/a&gt;开始，但如果您输入有效的许可证密钥，它就会变成完整的 Sisulizer 版本。如果您首次在 XP 中运行复制的 Sisulizer.exe，它会在复制 Sisulizer.exe 时在同一目录中创建设置和翻译记忆库文件。如果您在 Vista 或更高版本上启动 Sisulizer，这些文件将创建在您的个人目录中。</target>
        </trans-unit>
        <trans-unit>
          <source>Sometimes a translation engine can provide two or more translations for the same string. In that case the user must select the right one. &lt;a href=&quot;SelectTranslationDialog.htm&quot;&gt;Select Translation dialog box&lt;/a&gt; is used for this.</source>
          <target>有时，翻译引擎可以为同一个字符串提供两个或多个翻译。在这种情况下，用户必须选择正确的。&lt;a href=&quot;SelectTranslationDialog.htm&quot;&gt;选择翻译对话框&lt;/a&gt;用于此目的。</target>
        </trans-unit>
        <trans-unit>
          <source>Definition is used when localizing files. In this case the definition must contain a context item and text items do not contain language attributes.</source>
          <target>本地化文件时使用定义。在这种情况下，定义必须包含上下文项，文本项不包含语言属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Table of contents is not sorted</source>
          <target>目录未排序</target>
        </trans-unit>
        <trans-unit>
          <source>Includes only those rows where the text exactly matches the case of the text you have entered above.</source>
          <target>仅包括文本与您在上面输入的文本的大小写完全匹配的那些行。</target>
        </trans-unit>
        <trans-unit>
          <source>Not translated</source>
          <target>未翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Change original tuv elements</source>
          <target>更改原始 tuv 元素</target>
        </trans-unit>
        <trans-unit>
          <source>For example Sisulizer can use high quality &lt;a href=&quot;InstallHunspell.htm&quot;&gt;Hunspell&lt;/a&gt; spell checker used by OpenOffice. If you are using Nordic languages you can also use &lt;a href=&quot;InstallLingsoft.htm&quot;&gt;Lingsoft&lt;/a&gt; spell checker.</source>
          <target>例如 Sisulizer 可以使用 OpenOffice 使用的高质量&lt;a href=&quot;InstallHunspell.htm&quot;&gt;Hunspell&lt;/a&gt;拼写检查器。如果您使用北欧语言，您还可以使用&lt;a href=&quot;InstallLingsoft.htm&quot;&gt;Lingsoft&lt;/a&gt;拼写检查器。</target>
        </trans-unit>
        <trans-unit>
          <source>Check &lt;em&gt;Set reading order property&lt;/em&gt; check box to make Sisulizer to add FlowDirection attribute to bi-directional XAML resources. This sets the reading order and to mirrors the user interface.     If you uncheck &lt;em&gt;Set reading order  property&lt;/em&gt; check box you should to set the FlowDirection property of all forms on runtime if the active language is a bi-directional languages.</source>
          <target>选中&lt;em&gt;设置阅读顺序属性&lt;/em&gt;复选框以使 Sisulizer 将 FlowDirection 属性添加到双向 XAML 资源。这将设置阅读顺序并镜像用户界面。如果取消选中&lt;em&gt;设置阅读顺序属性&lt;/em&gt;复选框，如果活动语言是双向语言，您应该在运行时设置所有表单的 FlowDirection 属性。</target>
        </trans-unit>
        <trans-unit>
          <source>To modify a font data select the script that you want to modify and press Edit.</source>
          <target>要修改字体数据，请选择要修改的脚本并按“编辑”。</target>
        </trans-unit>
        <trans-unit>
          <source>The clear advantage of multilingual .exe is that you can deploy the same file everywhere. There is no need to choose between different .exe or resource DLLs. This makes setup and deployment much easier.</source>
          <target>多语言 .exe 的明显优势是您可以在任何地方部署相同的文件。无需在不同的 .exe 或资源 DLL 之间进行选择。这使得设置和部署更加容易。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer shows menu items that are not currently licensed.</source>
          <target>如果选中 Sisulizer，则显示当前未获得许可的菜单项。</target>
        </trans-unit>
        <trans-unit>
          <source>Once you have mapped a component Sisulizer remembers the mapping and you do not have to map the same component again in this project or in new projects.</source>
          <target>一旦您映射了一个组件，Sisulizer 就会记住该映射，您不必在此项目或新项目中再次映射相同的组件。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the screen tips are shown. Tips contain extra information about the user interface elements. When hovering above an user interface item Sisulizer shows the tip (if any) in a popup window.</source>
          <target>如果选中，则会显示屏幕提示。提示包含有关用户界面元素的额外信息。将鼠标悬停在用户界面项上方时，Sisulizer 会在弹出窗口中显示提示（如果有）。</target>
        </trans-unit>
        <trans-unit>
          <source>There are two SCaption resource strings in Sample unit. Those strings can&#x27;t be separated in DRC-file. The right solution is to have unique name for each resource string.</source>
          <target>Sample 单元中有两个 SCaption 资源字符串。这些字符串不能在 DRC 文件中分开。正确的解决方案是为每个资源字符串使用唯一的名称。</target>
        </trans-unit>
        <trans-unit>
          <source>The easiest and fastest way to translate a Sisulizer project is to use Sisulizer. Exchanging is very easy. You just need to send Sisulizer project file (.slp) to the translator. If translator does not have Sisulizer installed he or she can &lt;a href=&quot;http://www.sisulizer.com/downloads.shtml&quot;&gt;download free Sisulizer Free Edition&lt;/a&gt;.</source>
          <target>翻译 Sisulizer 项目最简单、最快捷的方法是使用 Sisulizer。交换非常容易。您只需要将 Sisulizer 项目文件 (.slp) 发送给翻译人员。如果翻译者没有安装 Sisulizer，他或她可以&lt;a href=&quot;http://www.sisulizer.com/downloads.shtml&quot;&gt;下载免费的 Sisulizer 免费版&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Sets a custom height for the selected components. To use this option, you must set Vertical to Enter Value.</source>
          <target>为所选组件设置自定义高度。要使用此选项，您必须将垂直设置为输入值。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify what rows are included visible in the exchanage package. A visible row is shown in the editing sheet and the translator can change it&#x27;s values. A hidden row is included to the project but it is not shown in the editing sheet and that why the translator can not change it.</source>
          <target>使用此表指定哪些行包含在交换包中可见。编辑表中会显示一个可见行，翻译人员可以更改其值。隐藏行包含在项目中，但未显示在编辑表中，这也是翻译人员无法更改的原因。</target>
        </trans-unit>
        <trans-unit>
          <source>.NET assemby file</source>
          <target>.NET 程序集文件</target>
        </trans-unit>
        <trans-unit>
          <source>You can use the same regular expression rules as with other text file when importing CSV files but first two of the above file formats are quite complex and it is difficult to set the regular expressions correctly. This is why Sisulizer contains a dedicated import scanner for them. For other CSV files and all TXT files use &lt;em&gt;Regular expression defined text file&lt;/em&gt; scanner.</source>
          <target>导入 CSV 文件时，您可以使用与其他文本文件相同的正则表达式规则，但上述文件格式中的前两种非常复杂，并且很难正确设置正则表达式。这就是为什么 Sisulizer 包含一个专门的导入扫描器。对于其他 CSV 文件和所有 TXT 文件，使用&lt;em&gt;正则表达式定义的文本文件&lt;/em&gt;扫描器。</target>
        </trans-unit>
        <trans-unit>
          <source>Framework directory is the directory where .NET framework has been installed. It contains the basic tools and library files. Every computer that runs .NET applications must contain runtime directory. Normally it is installed to C:\Windows\Microsoft.NET\Framework\&amp;lt;version&amp;gt; directory where &amp;lt;version&amp;gt; is the .NET version number. For example C:\WINDOWS\Microsoft.NET\Framework\v2.0.50727 contains .NET 2.0. &lt;br&gt;
.NET 3.0 and 3.5 contains their own directories but they also use the directory of .NET 2.0.</source>
          <target>Framework目录是.NET框架的安装目录。它包含基本工具和库文件。每台运行 .NET 应用程序的计算机都必须包含运行时目录。通常它安装到 C:\Windows\Microsoft.NET\Framework\&amp;lt;version&amp;gt; 目录，其中 &amp;lt;version&amp;gt; 是 .NET 版本号。例如 C:\WINDOWS\Microsoft.NET\Framework\v2.0.50727 包含 .NET 2.0。&lt;br&gt; .NET 3.0 和 3.5 包含它们自己的目录，但它们也使用 .NET 2.0 的目录。</target>
        </trans-unit>
        <trans-unit>
          <source>Context ids</source>
          <target>上下文 ID</target>
        </trans-unit>
        <trans-unit>
          <source>Item index</source>
          <target>项目索引</target>
        </trans-unit>
        <trans-unit>
          <source>TLaTranslator calls LaAfterTranslate event every time after it has assigned a value to a property. Because these events are called before and after every property the events are called several even thousands of items. This is why it is important to keep the event functions as fast as possible to prevent runtime language change to slow down too much. Of course if you do not use events at all (e.g. do not assign the event variables) there is no speed penalty.</source>
          <target>TLaTranslator 每次为属性赋值后都会调用 LaAfterTranslate 事件。因为这些事件在每个属性之前和之后被调用，所以事件被调用了几个甚至数千个项目。这就是为什么保持事件函数尽可能快以防止运行时语言更改太慢很重要的原因。当然，如果您根本不使用事件（例如，不分配事件变量），则不会有速度损失。</target>
        </trans-unit>
        <trans-unit>
          <source>Resx  file pair</source>
          <target>Resx 文件对</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies how rows are included as visible based on their translation status. Those strings that have one of selected translation statuses will be included as visible to the package. By default all statuses are selected. Uncheck those statuses that you do not want to include. Possible values are:</source>
          <target>指定如何根据行的翻译状态将行包含为可见。具有选定翻译状态之一的那些字符串将作为对包可见的方式包含在内。默认情况下选择所有状态。取消选中您不想包括的那些状态。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Now Sisulizer can&#x27;t find for sure the right place to split. That&#x27;s why it&#x27;s better not use &amp;quot;_&amp;quot;-characters in unit names.</source>
          <target>现在 Sisulizer 无法确定正确的拆分位置。这就是为什么最好不要在单位名称中使用“_”字符。</target>
        </trans-unit>
        <trans-unit>
          <source>The least significant byte value is stored at the memory location with the lowest address, the previous byte value in significance is stored at the following memory location and so on.</source>
          <target>最低有效字节值存储在具有最低地址的内存位置，前一个有效字节值存储在随后的内存位置，依此类推。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer also supports several &lt;a href=&quot;SupportedFiles.htm&quot;&gt;file formats&lt;/a&gt;.</source>
          <target>Sisulizer 还支持多种&lt;a href=&quot;SupportedFiles.htm&quot;&gt;文件格式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>void TForm1::FormCreate(TObject *Sender)
{
  Caption = &amp;quot;&lt;strong&gt;Hello&lt;/strong&gt;&amp;quot;; // Form caption
  Label1-&amp;gt;Caption = &amp;quot;&lt;strong&gt;How are you?&lt;/strong&gt;&amp;quot;;
}</source>
          <target>void TForm1::FormCreate(TObject *Sender) { Caption = &amp;quot; &lt;strong&gt;Hello&lt;/strong&gt; &amp;quot;; // 表单标题 Label1-&amp;gt;Caption = &amp;quot;&lt;strong&gt;你好吗？&lt;/strong&gt; &amp;quot;; }</target>
        </trans-unit>
        <trans-unit>
          <source>Special American English used in Engineering</source>
          <target>工程中使用的特殊美式英语</target>
        </trans-unit>
        <trans-unit>
          <source>Add  assembly file (.exe or .dll) into Sisulizer project.</source>
          <target>将程序集文件（.exe 或 .dll）添加到 Sisulizer 项目中。</target>
        </trans-unit>
        <trans-unit>
          <source>Localizes one single file.</source>
          <target>本地化单个文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;AndroidLocalization.htm&quot;&gt;Android application  file is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;AndroidLocalization.htm&quot;&gt;Android 应用程序文件的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the script the language uses.</source>
          <target>显示语言使用的脚本。</target>
        </trans-unit>
        <trans-unit>
          <source>Suggest words only from the main dictionary that is attached to the spell checker. If you select this option, words from your custom dictionaries are not included in the list of suggested words when you check the spelling of a document.&lt;br&gt;
    &lt;strong&gt;Note!&lt;/strong&gt; This feature is  supported only by Polar  spell checking engine. Hunspell and Lingsoft spell checkers always suggest from main and custom dictionaries.</source>
          <target>仅从附加到拼写检查器的主词典中建议单词。如果选择此选项，则在检查文档拼写时，来自自定义词典的单词将不会包含在建议单词列表中。&lt;br&gt;&lt;strong&gt;笔记！&lt;/strong&gt;此功能仅由 Polar 拼写检查引擎支持。 Hunspell 和 Lingsoft 拼写检查器总是从主词典和自定义词典中给出建议。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;strong&gt;Note!&lt;/strong&gt; Even Sisulizer can localize your application properly it can not run (Project | Run Localized) it in desired language if you do not set the user interface culture to match the default culture.</source>
          <target>&lt;strong&gt;笔记！&lt;/strong&gt;即使 Sisulizer 可以正确本地化您的应用程序，如果您未将用户界面文化设置为与默认文化相匹配，它也无法以所需语言运行 (Project | Run Localized)。</target>
        </trans-unit>
        <trans-unit>
          <source>String is cut from the left side and cut part is replaced with ...&lt;br&gt;&lt;samp&gt;This is a long string -&amp;gt; ... long string&lt;/samp&gt;</source>
          <target>从左侧切割字符串，切割部分替换为 ...&lt;br&gt;&lt;samp&gt;这是一个长字符串 -&amp;gt; ... 长字符串&lt;/samp&gt;</target>
        </trans-unit>
        <trans-unit>
          <source>This dialog shows log history.</source>
          <target>此对话框显示日志历史记录。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify how the application is run.</source>
          <target>使用此表指定应用程序的运行方式。</target>
        </trans-unit>
        <trans-unit>
          <source>The first sport element will have &lt;em&gt;sports.sport[0]&lt;/em&gt; context, the second will have &lt;em&gt;sports.sport[1]&lt;/em&gt; context, etc. Now if we add a new element in the beginning of the sports element the existing context values will be changed: &lt;em&gt;sports.sport[0]&lt;/em&gt;  becomes &lt;em&gt;sports.sport[1]&lt;/em&gt;, second &lt;em&gt;sports.sport[1]&lt;/em&gt; to second &lt;em&gt;sports.sport[2]&lt;/em&gt;, etc.</source>
          <target>第一个运动元素将有&lt;em&gt;sports.sport[0]&lt;/em&gt;上下文，第二个将有&lt;em&gt;sports.sport[1]&lt;/em&gt;上下文等等。现在如果我们在sports 元素的开头添加一个新元素，现有的上下文值将被更改： &lt;em&gt;sports.sport[0]&lt;/em&gt;变成&lt;em&gt;sports.sport[1]&lt;/em&gt; ，第二个&lt;em&gt;sports.sport[1]&lt;/em&gt;变成第二个&lt;em&gt;sports.sport[2]&lt;/em&gt; ，&lt;em&gt;依此类推&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>In many case the developer uses a build process that compiles the release version of the application, creates the setup applications, etc. In such process the interactive Sisulizer application can not be used. Sisulizer Enterprise edition includes a make tool called SlMake (&amp;lt;sisulizerdir&amp;gt;/SlMake.exe). It is a command line tool and  provides an interface for most Sisulizer features including scanning, translation, building, exchanging, importing and exporting. You can use SlMake in traditional make files and in modern build automation servers.</source>
          <target>在许多情况下，开发人员使用编译应用程序的发布版本、创建安装应用程序等的构建过程。在这样的过程中，无法使用交互式 Sisulizer 应用程序。 Sisulizer 企业版包含一个名为 SlMake (&amp;lt;sisulizerdir&amp;gt;/SlMake.exe) 的制作工具。它是一个命令行工具，为大多数 Sisulizer 功能提供了一个界面，包括扫描、翻译、构建、交换、导入和导出。您可以在传统的 make 文件和现代构建自动化服务器中使用 SlMake。</target>
        </trans-unit>
        <trans-unit>
          <source>No characters</source>
          <target>没有字符</target>
        </trans-unit>
        <trans-unit>
          <source>Only visual editor is shown. Sheet is hidden.</source>
          <target>仅显示可视化编辑器。工作表被隐藏。</target>
        </trans-unit>
        <trans-unit>
          <source>Include only those rows that have been marked &lt;em&gt;Do not translate&lt;/em&gt;.</source>
          <target>只包括那些被标记为&lt;em&gt;不翻译的行&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Do not merge duplicates strings</source>
          <target>不要合并重复的字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer user dictionary file (.sld) is a text file that contains custom spell checking dictionary.</source>
          <target>Sisulizer 用户词典文件 (.sld) 是一个包含自定义拼写检查词典的文本文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Compressed or encrypted application and library files</source>
          <target>压缩或加密的应用程序和库文件</target>
        </trans-unit>
        <trans-unit>
          <source>Create satellite assemblies</source>
          <target>创建附属程序集</target>
        </trans-unit>
        <trans-unit>
          <source>Realeases the linking to an external translation file.</source>
          <target>实现与外部翻译文件的链接。</target>
        </trans-unit>
        <trans-unit>
          <source>32-bit OSX resource library filename</source>
          <target>32 位 OSX 资源库文件名</target>
        </trans-unit>
        <trans-unit>
          <source>Configured spell checkers</source>
          <target>配置的拼写检查器</target>
        </trans-unit>
        <trans-unit>
          <source>If selected toolbar uses large icons.</source>
          <target>如果选择的工具栏使用大图标。</target>
        </trans-unit>
        <trans-unit>
          <source>Translation sheet is located on the lower right side of the main view. The sheet is used to enter translations.</source>
          <target>翻译表位于主视图的右下方。该表用于输入翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>There can be thousands of different formats. In most cases the formats are proprietary file formats used by a single company or application only. This is why Sisulizer can not contain build-in support for them all. Fortunately Sisulizer has a powerful method to define text file formats. It is called Text definitions. Each text definition defines a format of a text file. The definition specifies the item rules, purpose of the file and character encoding.</source>
          <target>可以有数千种不同的格式。在大多数情况下，这些格式是仅由单个公司或应用程序使用的专有文件格式。这就是为什么 Sisulizer 不能包含对所有这些的内置支持。幸运的是 Sisulizer 有一个强大的方法来定义文本文件格式。它被称为文本定义。每个文本定义定义了文本文件的格式。该定义指定了项目规则、文件的用途和字符编码。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer does not require any DLL files or COM objects. All code is linked into Sisulizer application: Sisulizer.exe. However Sisulizer can use several DLL files and COM objects. These are typically interface libraries for third party services such as &lt;a href=&quot;SpellChecking.htm#Engines&quot;&gt;spell check engines&lt;/a&gt;, &lt;a href=&quot;TranslationEngines.htm#TranslationMemory&quot;&gt;translation memories&lt;/a&gt; and &lt;a href=&quot;TranslationEngines.htm#MachineTranslator&quot;&gt;machine translators.&lt;/a&gt; If it is technically possible to access third party service without DLL or COM Sisulizer always uses it. Unfortunately sometimes DLL or COM is the only interface to the service. In that case Sisulizer uses them but they are always dynamically loaded when needed. This means that Sisulizer uses them if they are present. If not it only disables that feature of Sisulizer, not whole Sisulizer application.</source>
          <target>Sisulizer 不需要任何 DLL 文件或 COM 对象。所有代码都链接到 Sisulizer 应用程序：Sisulizer.exe。但是 Sisulizer 可以使用多个 DLL 文件和 COM 对象。这些通常是第三方服务的接口库，例如&lt;a href=&quot;SpellChecking.htm#Engines&quot;&gt;拼写检查引擎&lt;/a&gt;、&lt;a href=&quot;TranslationEngines.htm#TranslationMemory&quot;&gt;翻译记忆库&lt;/a&gt;和&lt;a href=&quot;TranslationEngines.htm#MachineTranslator&quot;&gt;机器翻译器。&lt;/a&gt;如果技术上可以在没有 DLL 或 COM 的情况下访问第三方服务，则 Sisulizer 始终使用它。不幸的是，有时 DLL 或 COM 是服务的唯一接口。在这种情况下，Sisulizer 使用它们，但它们总是在需要时动态加载。这意味着如果它们存在，Sisulizer 会使用它们。如果不是，它只会禁用 Sisulizer 的该功能，而不是整个 Sisulizer 应用程序。</target>
        </trans-unit>
        <trans-unit>
          <source>Mark completed nodes</source>
          <target>标记完成的节点</target>
        </trans-unit>
        <trans-unit>
          <source>Confirm clear row status</source>
          <target>确认清除行状态</target>
        </trans-unit>
        <trans-unit>
          <source>In above &amp;quot; /* First line Second line */ is skipped when scanning.</source>
          <target>在上面&amp;quot; /* First line Second line */ 扫描时跳过。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer automatically turns on the keyboard layout of the editing language (if installed)</source>
          <target>如果选中 Sisulizer 会自动打开编辑语言的键盘布局（如果已安装）</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to export data to an Excel file.</source>
          <target>使用此工作表将数据导出到 Excel 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Runtime language change on other platforms</source>
          <target>其他平台上的运行时语言更改</target>
        </trans-unit>
        <trans-unit>
          <source>&#x27;This is a sample string&amp;quot;&amp;lt;tab&amp;gt;&amp;quot;T&amp;auml;m&amp;auml; on esimerkkimerkkijono&#x27;</source>
          <target>&amp;#39;这是一个示例字符串&amp;quot;&amp;lt;tab&amp;gt;&amp;quot;Tämä on esimerkkimerkkijono&amp;#39;</target>
        </trans-unit>
        <trans-unit>
          <source>Shows only duplicate rows.</source>
          <target>仅显示重复的行。</target>
        </trans-unit>
        <trans-unit>
          <source>Select the language of the of the text.</source>
          <target>选择文本的语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Row localization where id and language id are are not part of primary key</source>
          <target>id 和 language id 不是主键的一部分的行本地化</target>
        </trans-unit>
        <trans-unit>
          <source>If you do no specify a DRC file then you have to select what context method is used with resource strings. Possible values are:</source>
          <target>如果您没有指定 DRC 文件，那么您必须选择与资源字符串一起使用的上下文方法。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>.NET resource file</source>
          <target>.NET 资源文件</target>
        </trans-unit>
        <trans-unit>
          <source>The file .NET runtime looks for depends on the user interface language of your operating system. If you have an English (US) OS the runtime will look satellite assembly file from en-US or en. On Finnish OS the runtime looks for fi-FI or fi. This method to select is a bit limited because the user has not control over the initial language except installing a multilingual OS or reinstall OS with different language. This seems way too heavy to just select different initial language for your application. Fortunately there is easier way. By adding just one line of code to your applciation you can the initial language selection smarter.</source>
          <target>.NET 运行时查找的文件取决于操作系统的用户界面语言。如果您有英语（美国）操作系统，则运行时将查看 en-US 或 en 中的附属程序集文件。在芬兰操作系统上，运行时会查找 fi-FI 或 fi。这种选择方法有一些限制，因为用户除了安装多语言操作系统或重新安装不同语言的操作系统外，无法控制初始语言。这似乎太重了，无法为您的应用程序选择不同的初始语言。幸运的是，有更简单的方法。通过向您的应用程序添加一行代码，您可以更智能地进行初始语言选择。</target>
        </trans-unit>
        <trans-unit>
          <source>Country neutral language and script</source>
          <target>国家中立的语言和脚本</target>
        </trans-unit>
        <trans-unit>
          <source>Use this groups to specify how the target item of the imported item is found. Possible options are:</source>
          <target>使用此组指定如何找到导入项目的目标项目。可能的选项是：</target>
        </trans-unit>
        <trans-unit>
          <source>Max translation</source>
          <target>最大翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Guiliani file (.lng)</source>
          <target>Guiliani 文件 (.lng)</target>
        </trans-unit>
        <trans-unit>
          <source>Binary file localization can be very challenging. This is because the internal format of a binary file can be almost anything. Most binary files contain a header following one or more records that contains the data. The actual format and size of header and records blocks depend on the file format. Usually they contain number, strings and binary data. There are dozens of ways to write a number into a file. There are several different number types such as integers, floating point numbers and fixed point decimal numbers. Integers can be stored in 1, 2 or 4 bytes with or without sign. Some formats uses little-endian byte order. Some other uses big-endian byte order. There are several ways to encoding other number types as well. Strings also bring dozens of different ways. The length of the string might be before the characters or the characters might contain terminating null character. There are several string encoding such as code pages, UTF-8 and UTF-16. All together there can be almost unlimited amount of different binary formats. In order to cope this Sisulizer lets you define the binary format by specifying the structure of the file.</source>
          <target>二进制文件本地化可能非常具有挑战性。这是因为二进制文件的内部格式几乎可以是任何格式。大多数二进制文件在包含数据的一个或多个记录之后包含一个标题。标题和记录块的实际格式和大小取决于文件格式。通常它们包含数字、字符串和二进制数据。有多种方法可以将数字写入文件。有几种不同的数字类型，例如整数、浮点数和定点十进制数。整数可以存储在 1、2 或 4 个字节中，带符号或不带符号。某些格式使用小端字节序。其他一些使用大端字节序。还有几种方法可以对其他数字类型进行编码。字符串也带来了几十种不同的方式。字符串的长度可能在字符之前，或者字符可能包含终止空字符。有几种字符串编码，例如代码页、UTF-8 和 UTF-16。总之，几乎可以有无限数量的不同二进制格式。为了处理这个 Sisulizer，您可以通过指定文件的结构来定义二进制格式。</target>
        </trans-unit>
        <trans-unit>
          <source>.NET assemblies contains two kind of resources: managed and unmanaged. Unmanaged are the standard WIN32 resources. .NET applications usually use only icon and version typed WIN32 resources. Managed resources are the resource data that is linked inside the assembly as a managed resource data. Most .NET applications use only one type of managed resource: .resources files. They can contain form data, string data, images, etc. In addition of that it is possible to add any file as a resource to an assembly file. Some applications add XML, HTML or image data such way. Sisulizer can visually localize .resources, XML, HTML or image data. In addition of that any custom file that have been added as a resource can be localized as binary value.</source>
          <target>.NET 程序集包含两种资源：托管和非托管。非托管是标准的 WIN32 资源。 .NET 应用程序通常只使用图标和版本类型的 WIN32 资源。托管资源是在程序集中作为托管资源数据链接的资源数据。大多数 .NET 应用程序仅使用一种类型的托管资源：.resources 文件。它们可以包含表单数据、字符串数据、图像等。除此之外，还可以将任何文件作为资源添加到程序集文件中。一些应用程序以这种方式添加 XML、HTML 或图像数据。 Sisulizer 可以直观地本地化 .resources、XML、HTML 或图像数据。此外，作为资源添加的任何自定义文件都可以本地化为二进制值。</target>
        </trans-unit>
        <trans-unit>
          <source>The Country table in the German database will look like this after Sisulizer has created the database:</source>
          <target>在 Sisulizer 创建数据库后，德国数据库中的 Country 表将如下所示：</target>
        </trans-unit>
        <trans-unit>
          <source>Windows Forms supports different reading order. Starting from .NET 2.0 automatic  mirroring is also supported. Support is done with two properties: &lt;em&gt;RightToLeft&lt;/em&gt; and &lt;em&gt;RightToLeftLayout&lt;/em&gt; (.NET 2.0 and later).</source>
          <target>Windows 窗体支持不同的阅读顺序。从 .NET 2.0 开始也支持自动镜像。支持通过两个属性完成： &lt;em&gt;RightToLeft&lt;/em&gt;和&lt;em&gt;RightToLeftLayout&lt;/em&gt; （.NET 2.0 及更高版本）。</target>
        </trans-unit>
        <trans-unit>
          <source>WPF library contains some predefined commands. They are defined in ApplicationCommands class. These command contain some user interface strings such as command&#x27;s label. These are the strings to be show in the menu items. If you use command&#x27;s of ApplicationCommands the strings won&#x27;t stored anywhere in your project or assembly file but are stored in the frameworks assembly files. This is why the strings do not appear to Sisulizer project either.</source>
          <target>WPF 库包含一些预定义的命令。它们在 ApplicationCommands 类中定义。这些命令包含一些用户界面字符串，例如命令的标签。这些是要在菜单项中显示的字符串。如果您使用 ApplicationCommands 的命令，则字符串不会存储在您的项目或程序集文件中的任何位置，而是存储在框架程序集文件中。这就是为什么字符串也不会出现在 Sisulizer 项目中的原因。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies if DTD is written to the TMX file and how. This is used with TMX version up to 1.4. Possible values are:</source>
          <target>指定是否将 DTD 写入 TMX 文件以及如何写入。这与最高 1.4 的 TMX 版本一起使用。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Click &lt;em&gt;Buy now&lt;/em&gt; to go to Sisulizer&#x27;s online store where you can buy a license key.</source>
          <target>单击&lt;em&gt;立即购买&lt;/em&gt;转到 Sisulizer 的在线商店，您可以在那里购买许可证密钥。</target>
        </trans-unit>
        <trans-unit>
          <source>Duplicate string group is a collaction of duplicate strings that have the same original value and the same translations.</source>
          <target>重复字符串组是具有相同原始值和相同翻译的重复字符串的集合。</target>
        </trans-unit>
        <trans-unit>
          <source>Import translations</source>
          <target>导入翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Invalid script</source>
          <target>无效的脚本</target>
        </trans-unit>
        <trans-unit>
          <source>How does Sisulizer localize XLIFF files?</source>
          <target>Sisulizer 如何本地化 XLIFF 文件？</target>
        </trans-unit>
        <trans-unit>
          <source>Control Out of Client Validation</source>
          <target>控制客户端验证</target>
        </trans-unit>
        <trans-unit>
          <source>Check repeated words</source>
          <target>检查重复的单词</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the text preserves spaces and line breaks. Otherwise all extra spaces and all line breaks will be removed on scanned rows.</source>
          <target>如果选中，文本会保留空格和换行符。否则所有多余的空格和所有换行符都将在扫描的行上被删除。</target>
        </trans-unit>
        <trans-unit>
          <source>Use values in the comment element as context ids. If there is no comment element then use value in the original element.</source>
          <target>将评论元素中的值用作上下文 ID。如果没有注释元素，则使用原始元素中的值。</target>
        </trans-unit>
        <trans-unit>
          <source>Set &lt;a href=&quot;WorkingWithTranslationSheet.htm#Filter&quot;&gt;filter&lt;/a&gt; to show all rows that use the selected world.</source>
          <target>设置&lt;a href=&quot;WorkingWithTranslationSheet.htm#Filter&quot;&gt;过滤器&lt;/a&gt;以显示使用所选世界的所有行。</target>
        </trans-unit>
        <trans-unit>
          <source>Restores all properties to the default values defined in the global settings.</source>
          <target>将所有属性恢复为全局设置中定义的默认值。</target>
        </trans-unit>
        <trans-unit>
          <source>Each method has it advantages and disadvantages. You must choose the method that best suits your needs.</source>
          <target>每种方法都有其优点和缺点。您必须选择最适合您需要的方法。</target>
        </trans-unit>
        <trans-unit>
          <source>Makes the first (forward direction) or last (backward direction) row in the sheet to be the origin.</source>
          <target>使工作表中的第一行（向前方向）或最后一行（向后方向）作为原点。</target>
        </trans-unit>
        <trans-unit>
          <source>They might support bidirectional languages but we haven&#x27;t tested them yet. Please contact Sisulizer to get more information.</source>
          <target>它们可能支持双向语言，但我们尚未对其进行测试。请联系 Sisulizer 以获取更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Translates only items that belong to the  current view.</source>
          <target>仅翻译属于当前视图的项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Table that contains extended data</source>
          <target>包含扩展数据的表</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog for translating long strings instead of the editing in the grid.</source>
          <target>使用此对话框翻译长字符串，而不是在网格中进行编辑。</target>
        </trans-unit>
        <trans-unit>
          <source>Select the appropriate .NET version and press Edit to change the directory. .NET 3.x and .NET 2.0 use the same SDK tools.</source>
          <target>选择适当的 .NET 版本并按 Edit 更改目录。 .NET 3.x 和 .NET 2.0 使用相同的 SDK 工具。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;TextLocalization.htm&quot;&gt;text file is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;TextLocalization.htm&quot;&gt;文本文件的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the existing translation will be replaced with the values in the database when scanning the database. Possible options are:</source>
          <target>指定扫描数据库时将用数据库中的值替换现有翻译。可能的选项是：</target>
        </trans-unit>
        <trans-unit>
          <source>Tip of the day</source>
          <target>每日提示</target>
        </trans-unit>
        <trans-unit>
          <source>In order to resource files the application or library and the resource file must be localized on the same directory. By default Sisulizer creates the resource files on the same directory with the original file. This might however cause problems if the you recompile and run the original file but do not rebuild the resource files. In that case the resource files might be out of date and your application might crash when it loads an out of date resource file. When you are developing application you constantly rebuild your application. In order to prevent constant need for rebuilding resource file that you can make Sisulizer to create resource file to a sub directories where the application can not automatically load them.</source>
          <target>为了资源文件，应用程序或库和资源文件必须本地化在同一目录中。默认情况下，Sisulizer 在与原始文件相同的目录中创建资源文件。但是，如果您重新编译并运行原始文件但不重建资源文件，这可能会导致问题。在这种情况下，资源文件可能已过期，并且您的应用程序在加载过期资源文件时可能会崩溃。当您开发应用程序时，您会不断地重建您的应用程序。为了防止不断需要重建资源文件，您可以使 Sisulizer 将资源文件创建到应用程序无法自动加载它们的子目录中。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies if xml:lang attribute is either set or added into the windows. Possible values are:</source>
          <target>指定 xml:lang 属性是设置还是添加到窗口中。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>The combo box below the directory tree shows the files that Sisulizer can localize. Select the file extension of that file type that you want to localize. You can also write your own filter (e.g. Data*.html). If you select *.* Sisulizer adds all known file type found in the selected directory.</source>
          <target>目录树下方的组合框显示了 Sisulizer 可以本地化的文件。选择要本地化的该文件类型的文件扩展名。您也可以编写自己的过滤器（例如 Data*.html）。如果您选择 *.* Sisulizer 将添加在所选目录中找到的所有已知文件类型。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to manage &lt;a href=&quot;TranslationEngines.htm&quot;&gt;translation engines&lt;/a&gt;.</source>
          <target>使用此对话框来管理&lt;a href=&quot;TranslationEngines.htm&quot;&gt;翻译引擎&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>No action is done.</source>
          <target>不执行任何操作。</target>
        </trans-unit>
        <trans-unit>
          <source>.NET&#x27;s Localizable property</source>
          <target>.NET 的 Localizable 属性</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;nbsp;This is the extension for Japan description.</source>
          <target>这是日本描述的扩展。</target>
        </trans-unit>
        <trans-unit>
          <source>Hunspell dictionary. For every .dic file there is an additional .aff file that is also needed.  You can &lt;a href=&quot;InstallHunspell.htm&quot;&gt;download&lt;/a&gt; dictionary files for free.</source>
          <target>Hunspell 词典。对于每个 .dic 文件，还需要一个额外的 .aff 文件。您可以&lt;a href=&quot;InstallHunspell.htm&quot;&gt;免费下载&lt;/a&gt;字典文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the maximum string length. If a string in the XML file is longer than this limit it is not extracted. If the limit is 0 all strings are extracted no matter the length of the string.</source>
          <target>指定最大字符串长度。如果 XML 文件中的字符串长度超过此限制，则不会提取该字符串。如果限制为 0，则无论字符串的长度如何，都会提取所有字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Add localized fields to those databases that you want to localize. This requires you to change the table structure.</source>
          <target>将本地化的字段添加到要本地化的那些数据库中。这需要您更改表结构。</target>
        </trans-unit>
        <trans-unit>
          <source>//beginnoslz&lt;br&gt;str1 = &amp;quot;Do not localize this&amp;quot;; &lt;br&gt;str2 = &amp;quot;Do not localize this either&amp;quot;;&lt;br&gt;//endnoslz
</source>
          <target>//beginnoslz&lt;br&gt; str1 = &amp;quot;不要本地化这个&amp;quot;;&lt;br&gt; str2 = &amp;quot;也不要本地化&amp;quot;;&lt;br&gt; //endnoslz</target>
        </trans-unit>
        <trans-unit>
          <source>Import Wizard - .NET resource file</source>
          <target>导入向导 - .NET 资源文件</target>
        </trans-unit>
        <trans-unit>
          <source>Translation comment column. Specifies the comment of the text column just before this column.</source>
          <target>翻译评论栏。指定此列之前的文本列的注释。</target>
        </trans-unit>
        <trans-unit>
          <source>Press Delete to remove the selected translation from the translation memory.</source>
          <target>按 Delete 从翻译记忆库中删除选定的翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the default input method mode of the controls when creating Japanese application files. This is enabled if the project contains Japanese.</source>
          <target>创建日语应用程序文件时指定控件的默认输入法模式。如果项目包含日语，则启用此功能。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;a href=&quot;http://en.wikipedia.org/wiki/ISO-639&quot; target=&quot;_blank&quot;&gt;ISO-639&lt;/a&gt; language code</source>
          <target>&lt;a href=&quot;http://en.wikipedia.org/wiki/ISO-639&quot; target=&quot;_blank&quot;&gt;ISO-639&lt;/a&gt;语言代码</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;strong&gt;Imports System.Globalization&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;Imports System.Threading&lt;/strong&gt;

Public Class Form1
  ...
  Public Sub New()
    &#x27; Add this line of code
    &lt;strong&gt;Thread.CurrentThread.CurrentUICulture = CultureInfo.CurrentCulture&lt;/strong&gt;
   
    &#x27; This call is required by the Windows Form Designer.
    InitializeComponent()
  End Sub
  ...
End Class</source>
          <target>&lt;strong&gt;进口系统.全球化&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;Imports System.Threading&lt;/strong&gt; Public Class Form1 ... Public Sub New() &amp;#39; 添加这行代码&lt;strong&gt;Thread.CurrentThread.CurrentUICulture = CultureInfo.CurrentCulture&lt;/strong&gt; &amp;#39; Windows 窗体设计器需要此调用。 InitializeComponent() End Sub ... End Class</target>
        </trans-unit>
        <trans-unit>
          <source>The following item contains a comment value and maximum length of the string in pixels.</source>
          <target>以下项目包含注释值和字符串的最大长度（以像素为单位）。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked invalidated translations are written to the file.</source>
          <target>如果选中，则将无效翻译写入文件。</target>
        </trans-unit>
        <trans-unit>
          <source>If you want to localize the above add a new primary id filed, RowId, and change primary key into that. Add a resource id field, ResourceId, that contains the resource id of the row. Add a language field, Language, that contains the language id.</source>
          <target>如果您想本地化上述内容，请添加一个新的主 id 字段，RowId，并将主键更改为该主键。添加包含行的资源 ID 的资源 ID 字段 ResourceId。添加包含语言 ID 的语言字段 Language。</target>
        </trans-unit>
        <trans-unit>
          <source>Property is included when scanning.</source>
          <target>扫描时包括属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer supports three different methods to localize .NET applications. The methods are:</source>
          <target>Sisulizer 支持三种不同的方法来本地化 .NET 应用程序。方法是：</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies filter based on data types</source>
          <target>根据数据类型指定过滤器</target>
        </trans-unit>
        <trans-unit>
          <source>If you add a .NET assembly file (.exe or .dll) to a Sisulizer project, Project Wizard can import translations from localized satellite assembly files. For example if you have selected MyApplication.exe and there is de\MyApplications.resources.dll file Project Wizard will add German to the project and imports translations from de\MyApplication.resources.dll. Localized satellite assembly files must locate on a country depend sub directory of the directory where the assembly file is located.</source>
          <target>如果将 .NET 程序集文件（.exe 或 .dll）添加到 Sisulizer 项目，项目向导可以从本地化的附属程序集文件导入翻译。例如，如果您选择了 MyApplication.exe 并且有 de\MyApplications.resources.dll 文件，项目向导会将德语添加到项目中并从 de\MyApplication.resources.dll 导入翻译。本地化的附属程序集文件必须位于程序集文件所在目录的国家/地区相关子目录中。</target>
        </trans-unit>
        <trans-unit>
          <source>Each method has it advantages and disadvantages. You must choose the method that best suits your needs. No matter what method you use Sisulizer does never not change the table structure. It only updates the values in the localized fields, tables or rows, or creates and updates the localized database copies. You have to modify the database structure to prepare it for localization.</source>
          <target>每种方法都有其优点和缺点。您必须选择最适合您需要的方法。无论您使用哪种方法，Sisulizer 都不会改变表结构。它只更新本地化字段、表或行中的值，或者创建和更新本地化数据库副本。您必须修改数据库结构以准备进行本地化。</target>
        </trans-unit>
        <trans-unit>
          <source>User name</source>
          <target>用户名</target>
        </trans-unit>
        <trans-unit>
          <source>Sheet Filter | Translation statuses</source>
          <target>片式过滤器 |翻译状态</target>
        </trans-unit>
        <trans-unit>
          <source>The list contains selected languages of the project. You have to add at least one language. You can remove a language from the project by selecting and pressing the Remove (x) button or the Del key. You can reorder the selected languages by dragging and dropping or by pressing Up and Down buttons.</source>
          <target>该列表包含项目的选定语言。您必须添加至少一种语言。您可以通过选择并按下删除 (x) 按钮或 Del 键从项目中删除语言。您可以通过拖放或按向上和向下按钮对所选语言重新排序。</target>
        </trans-unit>
        <trans-unit>
          <source>Create an exchange package</source>
          <target>创建交换包</target>
        </trans-unit>
        <trans-unit>
          <source>Far Eastern languages such as Japanese, Chinese and Korean use input method editors (IME) to enter ideographs. IME is a comprex software that converts phonetic or other text to ideographs using dictionaries and choice lists. Component based platforms such as .NET and VCL has a build in support for IMEs. These controls contain ImeMode property that controls what is the IME mode when the control has input focus. By default Sisulizer scan the values of these property values but does not change them. You can change them in two ways. The first one is to set a value of a scanned IME property in the project grid. This only affects to that specific control. The second one is to use the automatic input method localization. The following combo boxes let you turn it on. Automatic input method localization is used only if there is no translation value given for the IME property in the project grid.</source>
          <target>日文、中文和韩文等远东语言使用输入法编辑器 (IME) 输入表意文字。 IME 是一种复合软件，它使用字典和选择列表将语音或其他文本转换为表意文字。基于组件的平台（如 .NET 和 VCL）内置了对 IME 的支持。这些控件包含 ImeMode 属性，该属性控制控件具有输入焦点时的 IME 模式。默认情况下，Sisulizer 会扫描这些属性值的值，但不会更改它们。您可以通过两种方式更改它们。第一个是在项目网格中设置扫描 IME 属性的值。这仅影响该特定控件。二是使用自动输入法本地化。以下组合框可让您将其打开。仅当项目网格中的 IME 属性没有指定翻译值时，才使用自动输入法本地化。</target>
        </trans-unit>
        <trans-unit>
          <source>You can import font data from a font file by pressing the Import button and browsing the font file.</source>
          <target>您可以通过按“导入”按钮并浏览字体文件来从字体文件中导入字体数据。</target>
        </trans-unit>
        <trans-unit>
          <source>All Delphi and C++Builder versions.</source>
          <target>所有 Delphi 和 C++Builder 版本。</target>
        </trans-unit>
        <trans-unit>
          <source>Overwrite if the translation status of imported item is equal or greater than the status in project. This option is enabled when importing Sisulizer projects.</source>
          <target>如果导入项目的翻译状态等于或大于项目中的状态，则覆盖。导入 Sisulizer 项目时启用此选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Strings are quoted using single quotion marks.&lt;br&gt;For example &lt;code&gt;Hello World&lt;/code&gt; becomes to &lt;code&gt;&#x27;Hello World&#x27;&lt;/code&gt;.</source>
          <target>字符串使用单引号引起来。&lt;br&gt;例如&lt;code&gt;Hello World&lt;/code&gt;变成&lt;code&gt;&amp;#39;Hello World&amp;#39;&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies if rows are filtered because empty translations or translations having only white spaces.</source>
          <target>指定是否因为空翻译或只有空格的翻译而过滤行。</target>
        </trans-unit>
        <trans-unit>
          <source>Context method specifies how context value of formed. Possible values are:</source>
          <target>Context 方法指定了上下文值如何形成。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the font size.</source>
          <target>指定字体大小。</target>
        </trans-unit>
        <trans-unit>
          <source>SQLite database.&lt;br&gt;
      Type a database file name  (.db) in the edit field or press ... to select a file.</source>
          <target>SQLite 数据库。&lt;br&gt;在编辑字段中键入数据库文件名 (.db) 或按 ... 选择文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify J2SE settings.</source>
          <target>使用此表指定 J2SE 设置。</target>
        </trans-unit>
        <trans-unit>
          <source>If you uncheck &lt;em&gt;Set reading order  property&lt;/em&gt; check box you have to set the RightToLeft property of all forms on runtime if the active language is a bi-directional languages.</source>
          <target>如果取消选中&lt;em&gt;设置阅读顺序属性&lt;/em&gt;复选框，则如果活动语言是双向语言，则必须在运行时设置所有表单的 RightToLeft 属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows a dialog that contains all forms in in a tree view in a hierarchial way. You can easily see the inheritance path and select the right form.</source>
          <target>在树视图中以分层方式显示包含所有表单的对话框。您可以轻松查看继承路径并选择正确的表单。</target>
        </trans-unit>
        <trans-unit>
          <source>Choose the &lt;a href=&quot;ExchangeWizardFileSheet.htm&quot;&gt;exchange file&lt;/a&gt;</source>
          <target>选择&lt;a href=&quot;ExchangeWizardFileSheet.htm&quot;&gt;交换文件&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit>
          <source>No pseudo translation is used.</source>
          <target>没有使用伪翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Redraws the selected component.</source>
          <target>重绘选定的组件。</target>
        </trans-unit>
        <trans-unit>
          <source>Strings are encoded with  &lt;a href=&quot;http://en.wikipedia.org/wiki/Category:Windows_code_pages&quot; target=&quot;_blank&quot;&gt;Windows (ANSI) code pages&lt;/a&gt;.</source>
          <target>字符串使用&lt;a href=&quot;http://en.wikipedia.org/wiki/Category:Windows_code_pages&quot; target=&quot;_blank&quot;&gt;Windows (ANSI) 代码页&lt;/a&gt;进行编码。</target>
        </trans-unit>
        <trans-unit>
          <source>Show row info</source>
          <target>显示行信息</target>
        </trans-unit>
        <trans-unit>
          <source>Firebird database.&lt;br&gt;
      Server group specifies the server type. Select Local server if your Firebird server running on this computer. Select Remote server if your Firebird server is running on some other computer.&lt;br&gt;
      SQL dialect specifies the SQL dialect that your Firebird server uses.</source>
          <target>火鸟数据库。&lt;br&gt;服务器组指定服务器类型。如果您的 Firebird 服务器在这台计算机上运行，​​请选择本地服务器。如果您的 Firebird 服务器正在其他计算机上运行，​​请选择远程服务器。&lt;br&gt; SQL 方言指定 Firebird 服务器使用的 SQL 方言。</target>
        </trans-unit>
        <trans-unit>
          <source>Trim translations automatically</source>
          <target>自动修剪翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to select what &lt;a href=&quot;Validation.htm&quot;&gt;validations&lt;/a&gt; are used when validating the original values of the project.</source>
          <target>使用此对话框可以选择在验证项目的原始值时使用哪些&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>If you want to localize a Mac application you should do it together with Windows application. Create a Sisulizer project that contains a WIN32  EXE. Once the project is created add the Mac file as platform file. Right click the EXE file in the project three and choose Properties. Then choose Platform files sheet and click Add button to add files. Add the Mach-O file created by Delphi. It is a file without not extension on OSX32\Debug or OSX32\Release directory. If you have created 64-bit EXE add it too.</source>
          <target>如果您想本地化 Mac 应用程序，您应该与 Windows 应用程序一起进行。创建一个包含 WIN32 EXE 的 Sisulizer 项目。创建项目后，将 Mac 文件添加为平台文件。右击项目三中的EXE文件，选择Properties。然后选择平台文件表并单击添加按钮添加文件。添加 Delphi 创建的 Mach-O 文件。它是 OSX32\Debug 或 OSX32\Release 目录下没有扩展名的文件。如果您创建了 64 位 EXE，也添加它。</target>
        </trans-unit>
        <trans-unit>
          <source>If any assembly is signed also  the localized satellite assembly files must be signed with the same key. If they are not .NET runtime does not load the satelliote assembly file(s). If your have signed your assembly file with SNK file Sisulizer will automatically sign the satellite assembly files it creates. However this automatic signing work only if you use &lt;a href=&quot;#Project&quot;&gt;project file localization&lt;/a&gt;. If you use &lt;a href=&quot;#Assembly&quot;&gt;assembly file localization&lt;/a&gt; you have to make Sisulizer to sign satellite assembly files. To do that add key file parameter to the assembly linker parameter list.</source>
          <target>如果对任何程序集进行签名，则本地化的附属程序集文件也必须使用相同的密钥进行签名。如果它们不是 .NET 运行时不会加载卫星程序集文件。如果您已使用 SNK 文件对您的程序集文件进行签名，Sisulizer 将自动对其创建的附属程序集文件进行签名。但是，这种自动签名仅在您使用&lt;a href=&quot;#Project&quot;&gt;项目文件本地化&lt;/a&gt;时才起作用。如果您使用&lt;a href=&quot;#Assembly&quot;&gt;程序集文件本地化&lt;/a&gt;，则必须使 Sisulizer 对附属程序集文件进行签名。为此，将关键文件参数添加到程序集链接器参数列表中。</target>
        </trans-unit>
        <trans-unit>
          <source>Alternative original</source>
          <target>另类原创</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer contains hotkey &lt;a href=&quot;Validation.htm&quot;&gt;validations&lt;/a&gt;. They can be applies both to the original and translated files.</source>
          <target>Sisulizer 包含热键&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;。它们可以同时应用于原始文件和翻译文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Checking this you can use the images on original RC-file. You don&#x27;t need to copy them to the localized directories.</source>
          <target>检查这一点，您可以使用原始 RC 文件上的图像。您不需要将它们复制到本地化目录。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked items of strings list (e.g. TMemo.Lines) will use index context instead of value index.&lt;br&gt;
      For example  we have three items in a list box: One, Two and Three.
      If this check box is unchecked (default) each value will have following context values: &lt;em&gt;ListBox1.Items.Strings.One&lt;/em&gt;, &lt;em&gt;ListBox1.Items.Strings.Two&lt;/em&gt; and &lt;em&gt;ListBox1.Items.Strings.Three&lt;/em&gt;.
      If this check box is checked the context values will be &lt;em&gt;ListBox1.Items.Strings[0]&lt;/em&gt;, &lt;em&gt;ListBox1.Items.Strings[1]&lt;/em&gt; and &lt;em&gt;ListBox1.Items.Strings[2]&lt;/em&gt;.</source>
          <target>如果字符串列表的选中项（例如 TMemo.Lines）将使用索引上下文而不是值索引。&lt;br&gt;例如，我们在一个列表框中有三个项目：一、二和三。如果未选中此复选框（默认），则每个值将具有以下上下文值： &lt;em&gt;ListBox1.Items.Strings.One&lt;/em&gt; 、 &lt;em&gt;ListBox1.Items.Strings.Two&lt;/em&gt;和&lt;em&gt;ListBox1.Items.Strings.Three&lt;/em&gt; 。如果选中此复选框，则上下文值将为&lt;em&gt;ListBox1.Items.Strings[0]&lt;/em&gt; 、 &lt;em&gt;ListBox1.Items.Strings[1]&lt;/em&gt;和&lt;em&gt;ListBox1.Items.Strings[2]&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit>
          <source>String is enclosed. The default enclode characters are braces ({ and }). This can be used to test that both the beginning and the end of the string are visible.&lt;br&gt;For example &lt;samp&gt;&amp;quot;Hello World&amp;quot;&lt;/samp&gt; becomes &lt;samp&gt;&amp;quot;{Hello World}&amp;quot;&lt;/samp&gt;.</source>
          <target>字符串被包围。默认的 enclode 字符是大括号（{ 和 }）。这可用于测试字符串的开头和结尾是否可见。&lt;br&gt;例如&lt;samp&gt;&amp;quot;Hello World&amp;quot;&lt;/samp&gt;变成&lt;samp&gt;&amp;quot;{Hello World}&amp;quot;&lt;/samp&gt; 。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked limits the search to text that matches complete strings.</source>
          <target>如果选中，则将搜索限制为匹配完整字符串的文本。</target>
        </trans-unit>
        <trans-unit>
          <source>Unicode encoded as UTF-8. This is a recommended file format.</source>
          <target>Unicode 编码为 UTF-8。这是推荐的文件格式。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure VCL settings.</source>
          <target>使用此对话框配置 VCL 设置。</target>
        </trans-unit>
        <trans-unit>
          <source>Check this if you do not want Sisulizer to write excluded resources to the localized RC-files.</source>
          <target>如果您不希望 Sisulizer 将排除的资源写入本地化的 RC 文件，请选中此项。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to customize how the toolbar of the sheet looks like.</source>
          <target>使用此工作表可自定义工作表工具栏的外观。</target>
        </trans-unit>
        <trans-unit>
          <source>Product version</source>
          <target>产品版本</target>
        </trans-unit>
        <trans-unit>
          <source>Translation is a pseudo translation</source>
          <target>翻译是伪翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Import field</source>
          <target>导入字段</target>
        </trans-unit>
        <trans-unit>
          <source>Let&#x27;s have an example. Country  table  contains</source>
          <target>让我们举个例子。国家/地区表包含</target>
        </trans-unit>
        <trans-unit>
          <source>Update charset</source>
          <target>更新字符集</target>
        </trans-unit>
        <trans-unit>
          <source>PO file</source>
          <target>采购文件</target>
        </trans-unit>
        <trans-unit>
          <source>If checked  Sisulizer  ignores special characters such as period and hot key (&amp;amp;) when importing data.&lt;br&gt;
      Checking this will make import process slower but on the other side it can import more strings.</source>
          <target>如果选中，Sisulizer 在导入数据时会忽略特殊字符，例如句点和热键 (&amp;amp;)。&lt;br&gt;检查这将使导入过程变慢，但另一方面它可以导入更多字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;strong&gt;Note!&lt;/strong&gt; You need to have Sisulizer Enterprise edition to use 3rd party translation memories or machine translators. Professional edition can use Sisulizer translation memory on local database (Access and DBISAM) but if you need to use server database (Firebird, Interbase, MySQL and SQL Server) Enterprise edition is needed.</source>
          <target>&lt;strong&gt;笔记！&lt;/strong&gt;您需要有 Sisulizer 企业版才能使用 3rd 方翻译记忆库或机器翻译器。专业版可以在本地数据库（Access 和 DBISAM）上使用 Sisulizer 翻译记忆库，但如果您需要使用服务器数据库（Firebird、Interbase、MySQL 和 SQL Server），则需要企业版。</target>
        </trans-unit>
        <trans-unit>
          <source>Use Project Wizard to create a Sisulizer project containing the database. After you have selected the database on the Database sheet you have to set the field properties.</source>
          <target>使用项目向导创建包含数据库的 Sisulizer 项目。在数据库表上选择数据库后，您必须设置字段属性。</target>
        </trans-unit>
        <trans-unit>
          <source>XAML resources</source>
          <target>XAML 资源</target>
        </trans-unit>
        <trans-unit>
          <source>Project Wizard - .NET resource file</source>
          <target>项目向导 - .NET 资源文件</target>
        </trans-unit>
        <trans-unit>
          <source>Structured data</source>
          <target>结构化数据</target>
        </trans-unit>
        <trans-unit>
          <source>.NET framework uses satellite assemblies to make applications multilingual. Satellite assembly is an assembly file that contains only resources, no code. It contains the same resources as the main assembly file but in different language. Each satellite assembly file support one language and the file must locate on a language specific sub directory of the directory where the main assembly file locate.</source>
          <target>.NET 框架使用附属程序集使应用程序多语言。附属程序集是一个只包含资源，不包含代码的程序集文件。它包含与主程序集文件相同的资源，但使用不同的语言。每个附属程序集文件支持一种语言，并且该文件必须位于主程序集文件所在目录的特定语言子目录中。</target>
        </trans-unit>
        <trans-unit>
          <source>Include those items that has &lt;em&gt;Translated&lt;/em&gt; status.</source>
          <target>包括那些具有已&lt;em&gt;翻译&lt;/em&gt;状态的项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can localize all kind of resource data of .NET assembly files. The following table tells how each resource type is handled.</source>
          <target>Sisulizer 可以本地化.NET 程序集文件的各种资源数据。下表说明了如何处理每种资源类型。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer&#x27;s own translation memory that stores translations to Access, DBISAM, Firebird, Interbase, MySQL,  PostgreSQL or SQL Server database.</source>
          <target>Sisulizer 自己的翻译记忆库，可存储对 Access、DBISAM、Firebird、Interbase、MySQL、PostgreSQL 或 SQL Server 数据库的翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Sending files to translators (Exchanging)</source>
          <target>将文件发送给翻译人员（交换）</target>
        </trans-unit>
        <trans-unit>
          <source>This is enabled only on Enterprise edition.</source>
          <target>这仅在企业版上启用。</target>
        </trans-unit>
        <trans-unit>
          <source>In some case several XML tags should be translated as a single entiry. For example you might have text data that contains formatting tags. The following tag contains a plain text:</source>
          <target>在某些情况下，应将多个 XML 标记翻译为一个条目。例如，您可能有包含格式标签的文本数据。以下标签包含纯文本：</target>
        </trans-unit>
        <trans-unit>
          <source>Support for Delphi 10.2 Tokyo and C++Builder 10.2 Tokyo</source>
          <target>支持 Delphi 10.2 Tokyo 和 C++Builder 10.2 Tokyo</target>
        </trans-unit>
        <trans-unit>
          <source>Support for Delphi XE6 and C++Builder XE6</source>
          <target>支持 Delphi XE6 和 C++Builder XE6</target>
        </trans-unit>
        <trans-unit>
          <source>In traditional localization method all strings, even those from .ui files, are placed to .ts files. Developer uses lupdate.exe command line utility to scan source code and create .ts file. The you add the .ts files or Qt project file (.pro) that contains .ts file to Sisulizer. Sisulizer scans the file(s), translators translate them and Sisulizer creates localized .ts file. Finally developer use lrelease.exe command line utility to compile .ts files to binary .qm files that can be linked into application. When you compile the application next time the translated resources are included as resources inside the application and the application can choose what language to turn on when starting.</source>
          <target>在传统的本地化方法中，所有字符串，甚至来自 .ui 文件的字符串，都被放置到 .ts 文件中。开发人员使用 lupdate.exe 命令行实用程序扫描源代码并创建 .ts 文件。您将包含 .ts 文件的 .ts 文件或 Qt 项目文件 (.pro) 添加到 Sisulizer。 Sisulizer 扫描文件，翻译人员翻译它们，Sisulizer 创建本地化的 .ts 文件。最后，开发人员使用 lrelease.exe 命令行实用程序将 .ts 文件编译为可以链接到应用程序的二进制 .qm 文件。下次编译应用程序时，翻译的资源作为资源包含在应用程序内部，应用程序可以选择启动时打开的语言。</target>
        </trans-unit>
        <trans-unit>
          <source>This specifies the table that contains the fields where you import data from. Select the table from the list.</source>
          <target>这指定包含您从中导入数据的字段的表。从列表中选择表。</target>
        </trans-unit>
        <trans-unit>
          <source>Encode all predefined characters</source>
          <target>编码所有预定义字符</target>
        </trans-unit>
        <trans-unit>
          <source>In the above file Name, Capital and Description value need to be localized. When building the Finnish files Sisulizer creates the following ini file:</source>
          <target>在上面的文件 Name、Capital 和 Description 值中需要本地化。在构建芬兰文件时，Sisulizer 创建以下 ini 文件：</target>
        </trans-unit>
        <trans-unit>
          <source>When you type a translation Sisulizer automatically translates the duplicate strings.</source>
          <target>当您输入翻译时，Sisulizer 会自动翻译重复的字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>JSON file</source>
          <target>JSON 文件</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Password&lt;/em&gt; indicates the Password used when logging in to the FTP server.</source>
          <target>&lt;em&gt;密码&lt;/em&gt;表示登录FTP服务器时使用的密码。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the translation memory removes leading and trailing white spaces from the string before storing them. It is recommended to leave this check box checked. Sisulizer can automatically add leading and trailing spaces to the translations if the original string contains them.&lt;br&gt;
    This feature is not supported in some databases and with those database it is not possible to change this value.</source>
          <target>如果选中，翻译记忆库会在存储之前从字符串中删除前导和尾随空格。建议选中此复选框。如果原始字符串包含它们，Sisulizer 可以自动将前导和尾随空格添加到翻译中。&lt;br&gt;某些数据库不支持此功能，并且这些数据库无法更改此值。</target>
        </trans-unit>
        <trans-unit>
          <source>Java property resource file (.properties)</source>
          <target>Java 属性资源文件 (.properties)</target>
        </trans-unit>
        <trans-unit>
          <source>To take module in use just add its unit to the uses clause somewhere in the application. The following piece of code implements runtime language switch and adds module for TTreeView component.</source>
          <target>要使用模块，只需将其单元添加到应用程序某处的 uses 子句中。下面这段代码实现了运行时语言切换并为 TTreeView 组件添加了模块。</target>
        </trans-unit>
        <trans-unit>
          <source>If the source file is a library file such as DLL or OCX you can define a host application that is used to load the library. Enter the application name or click ... to browse the file.</source>
          <target>如果源文件是库文件，例如 DLL 或 OCX，您可以定义用于加载库的主机应用程序。输入应用程序名称或单击 ... 浏览文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Exclude those strings that should not be localized</source>
          <target>排除那些不应本地化的字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can also ignore certain amount of lines in the beginning of the file. By default no lines are ignored. However some files contain fixed header data in the beginning of the file. In such case you can set ignored lines count to match the header size and to make Sisulizer to skip those lines.</source>
          <target>Sisulizer 还可以忽略文件开头的某些行。默认情况下，不会忽略任何行。然而，有些文件在文件的开头包含固定的头数据。在这种情况下，您可以设置忽略的行数以匹配标题大小并使 Sisulizer 跳过这些行。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked every component that has been set to Read Only will be marked by a small icon.</source>
          <target>如果选中，每个已设置为只读的组件将用小图标标记。</target>
        </trans-unit>
        <trans-unit>
          <source>If selected Sisulizer includes the project file in the exchange package.&lt;br&gt;With this option Exchange Wizard will create a Sisulizer Package file .slp). This is a ZIP compressed file that contains the project file (.slp) and any other file that has been included to the package.</source>
          <target>如果选择 Sisulizer，则在交换包中包含项目文件。&lt;br&gt;使用此选项，Exchange Wizard 将创建一个 Sisulizer 包文件 .slp)。这是一个 ZIP 压缩文件，其中包含项目文件 (.slp) 和已包含在包中的任何其他文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Access database.&lt;br&gt;
      Type a database file name  (.mdb or .accdb) in the edit field or press ... to select a file.&lt;br&gt;
      If you use Access 2007 make sure that you have installed &lt;em&gt;2007 Office System Driver: Data Connectivity Components&lt;/em&gt; in your computer. If not you can download it from Microsoft web site.</source>
          <target>访问数据库。&lt;br&gt;在编辑字段中键入数据库文件名（.mdb 或 .accdb）或按 ... 选择文件。&lt;br&gt;如果您使用 Access 2007，请确保您已在计算机中安装&lt;em&gt;2007 Office System Driver: Data Connectivity Components&lt;/em&gt; 。如果没有，您可以从 Microsoft 网站下载它。</target>
        </trans-unit>
        <trans-unit>
          <source>Item contains Basic or VB Script source code. Sisulizer extracts strings from the source code.</source>
          <target>项目包含基本或 VB 脚本源代码。 Sisulizer 从源代码中提取字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer has an option for this issue. If you check &lt;em&gt;Use compatible language id whenever possible&lt;/em&gt; check box in &lt;a href=&quot;ChmSourceDialogOptionsSheet.htm&quot;&gt;CHM&#x27;s Options sheet&lt;/a&gt;  Sisulizer will set the language id of the localized CHM file to English (United States) if the target language is not English and it uses Western code page 1252. This makes the title of CHMs for Western European languages showing correctly.</source>
          <target>Sisulizer 有一个选项可以解决这个问题。如果您选中&lt;a href=&quot;ChmSourceDialogOptionsSheet.htm&quot;&gt;CHM 选项表中的&lt;/a&gt;&lt;em&gt;尽可能使用兼容的语言 ID&lt;/em&gt;复选框，如果目标语言不是英语并且它使用西方代码页 1252，Sisulizer 会将本地化 CHM 文件的语言 ID 设置为英语（美国）。这使得正确显示西欧语言 CHM 的标题。</target>
        </trans-unit>
        <trans-unit>
          <source>No change</source>
          <target>没变化</target>
        </trans-unit>
        <trans-unit>
          <source>iOS and OS X Localization</source>
          <target>iOS 和 OS X 本地化</target>
        </trans-unit>
        <trans-unit>
          <source>Do not import comments.</source>
          <target>不要导入注释。</target>
        </trans-unit>
        <trans-unit>
          <source>By default Sisulizer does not scan Style and ExStyle properties of Windows C++ controls and dialogs. You can turn scanning on for each components. After that you can modify the styles of localized controls and dialogs. For example to hide a control or to change its layout.</source>
          <target>默认情况下，Sisulizer 不扫描 Windows C++ 控件和对话框的 Style 和 ExStyle 属性。您可以为每个组件打开扫描。之后，您可以修改本地化控件和对话框的样式。例如隐藏控件或更改其布局。</target>
        </trans-unit>
        <trans-unit>
          <source>Disables a break whenever there is Mr. abbreviation either in the beginning of the sentence or following white space, parenthesis, or bracket. For example:&lt;br&gt;The British Prime Minister is &lt;u&gt;Mr.&lt;/u&gt; Blair.&lt;br&gt;
    Underline shows the pattern that is not a break even some break rule would indicate so.</source>
          <target>只要在句子开头或空格、括号或括号后面有 Mr. 缩写，就禁用中断。例如：&lt;br&gt;英国首相是布莱尔&lt;u&gt;先生&lt;/u&gt;。&lt;br&gt;下划线显示的模式不是盈亏，即使某些盈亏规则表明如此。</target>
        </trans-unit>
        <trans-unit>
          <source>Check this if you want Sisulizer to scan the Visible property of dialog elements. This makes it possible to hide some elements in the localized dialogs.</source>
          <target>如果您希望 Sisulizer 扫描对话框元素的 Visible 属性，请选中此项。这使得隐藏本地化对话框中的某些元素成为可能。</target>
        </trans-unit>
        <trans-unit>
          <source>Form scaling</source>
          <target>表格缩放</target>
        </trans-unit>
        <trans-unit>
          <source>If the translation text of control is too wide to fit inside the original bounds, this will stretch the width of control to fit the translation.</source>
          <target>如果控件的翻译文本太宽而无法容纳在原始边界内，这将拉伸控件的宽度以适合翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>PO files</source>
          <target>采购文件</target>
        </trans-unit>
        <trans-unit>
          <source>Use exclude characters</source>
          <target>使用排除字符</target>
        </trans-unit>
        <trans-unit>
          <source>Read more about &lt;a href=&quot;ImportExistingTranslations.htm&quot;&gt;importing existing translations&lt;/a&gt;.</source>
          <target>阅读有关&lt;a href=&quot;ImportExistingTranslations.htm&quot;&gt;导入现有翻译的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>If you have &quot;Stretch controls automatically by text&quot; option on in the form editor the controls will be resized to match to the translated texts. For example if the width of new translation if too wide, the width of the control will be streched to match the new text. That auto autostretching may make some control to overlap each others. You can press the &quot;Auto layout&quot; button the move those controls.</source>
          <target>如果您在表单编辑器中有“按文本自动拉伸控件”选项，则控件将调整大小以匹配翻译的文本。例如，如果新翻译的宽度太宽，控件的宽度将被拉伸以匹配新文本。自动拉伸可能会使一些控制相互重叠。您可以按“自动布局”按钮移动这些控件。</target>
        </trans-unit>
        <trans-unit>
          <source>Clean temporal files</source>
          <target>清理临时文件</target>
        </trans-unit>
        <trans-unit>
          <source>Jump to previous untranslated item in the translation grid.</source>
          <target>跳转到翻译网格中上一个未翻译的项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Both language and country parts are written in lower case.&lt;br&gt;For example en-us</source>
          <target>语言部分和国家部分都是小写的。&lt;br&gt;例如 en-us</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies what kind of output file(s) are created. Possible choices are:</source>
          <target>指定创建的输出文件类型。可能的选择是：</target>
        </trans-unit>
        <trans-unit>
          <source>No escape characters are used.</source>
          <target>不使用转义字符。</target>
        </trans-unit>
        <trans-unit>
          <source>Use compatible index</source>
          <target>使用兼容索引</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to edit the system languages and the default languages.</source>
          <target>使用此表编辑系统语言和默认语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Globally within the whole project</source>
          <target>整个项目中的全局</target>
        </trans-unit>
        <trans-unit>
          <source>If checked a byte order mark (BOM) is written to the begining of a file. This is available only when exporting to a Unicode file.</source>
          <target>如果选中，则将字节顺序标记 (BOM) 写入文件的开头。这仅在导出到 Unicode 文件时可用。</target>
        </trans-unit>
        <trans-unit>
          <source>Export data to a file</source>
          <target>将数据导出到文件</target>
        </trans-unit>
        <trans-unit>
          <source>Block exclude tags</source>
          <target>阻止排除标签</target>
        </trans-unit>
        <trans-unit>
          <source>Working with Translation Sheet</source>
          <target>使用翻译表</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer asks user to select key file name if it is need but not specified. This option is used with &lt;a href=&quot;NetLocalization.htm#Signing&quot;&gt;binary .NET localization&lt;/a&gt;.</source>
          <target>如果选中，Sisulizer 会要求用户选择需要但未指定的密钥文件名。此选项与&lt;a href=&quot;NetLocalization.htm#Signing&quot;&gt;二进制 .NET 本地化一起使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Performs validations for the project.</source>
          <target>对项目执行验证。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Primary&lt;/em&gt; show the NLS primary language id that the language uses.</source>
          <target>&lt;em&gt;Primary&lt;/em&gt;显示该语言使用的 NLS 主要语言 ID。</target>
        </trans-unit>
        <trans-unit>
          <source>Yes if binary format contains signature field</source>
          <target>是，如果二进制格式包含签名字段</target>
        </trans-unit>
        <trans-unit>
          <source>Enter a text to be segmented.</source>
          <target>输入要分段的文本。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify import options of a .NET resource file.</source>
          <target>使用此表指定 .NET 资源文件的导入选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Right click the assembly linker parameter edit and choose &lt;em&gt;Add key container&lt;/em&gt; menu. Sisulizer adds a key name parameter template: /keyn:&amp;quot;text&amp;quot;</source>
          <target>右键单击程序集链接器参数编辑并选择&lt;em&gt;添加密钥容器&lt;/em&gt;菜单。 Sisulizer 增加了一个键名参数模板：/keyn:&amp;quot;text&amp;quot;</target>
        </trans-unit>
        <trans-unit>
          <source>Disabled the automatic updating of binary data.</source>
          <target>禁用二进制数据的自动更新。</target>
        </trans-unit>
        <trans-unit>
          <source>512 MB central memory</source>
          <target>512 MB 中央内存</target>
        </trans-unit>
        <trans-unit>
          <source>If you have checked Comment check box then Sisulizer reads information tags from the comment fields. The syntax is</source>
          <target>如果您选中了评论复选框，则 Sisulizer 从评论字段中读取信息标签。语法是</target>
        </trans-unit>
        <trans-unit>
          <source>Translates all items in the column.</source>
          <target>翻译列中的所有项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Each output file types contains a combo box that is used to specify the name of the output file. You can select a pattern from the combo box list or you can type your own pattern. Each pattern can contain file and language parameters.</source>
          <target>每个输出文件类型都包含一个组合框，用于指定输出文件的名称。您可以从组合框列表中选择一种模式，也可以键入自己的模式。每个模式都可以包含文件和语言参数。</target>
        </trans-unit>
        <trans-unit>
          <source>The United States of America is a federal republic of 50 states, located primary on central North America. Germany or the Federal&lt;br&gt;Republic of Germany is one of the world&#x27;s leading industrialized countries, located in the heart of Europe. Japan is a country on&lt;br&gt;the western edge of the Pacific Ocean.</source>
          <target>美利坚合众国是一个由 50 个州组成的联邦共和国，主要位于北美洲中部。德国或联邦&lt;br&gt;德意志共和国是世界领先的工业化国家之一，位于欧洲的心脏地带。日本是一个国家&lt;br&gt;太平洋的西部边缘。</target>
        </trans-unit>
        <trans-unit>
          <source>Remove all from the list</source>
          <target>从列表中删除所有</target>
        </trans-unit>
        <trans-unit>
          <source>Source language</source>
          <target>源语言</target>
        </trans-unit>
        <trans-unit>
          <source>When using the assembly localization user selects an assembly file (.exe or .dll) to be localized. Sisulizer scans all the resource data from the application including XAML, form, string, icons, image and version data. On the build process Sisulizer creates the localized &lt;a href=&quot;SatelliteAssembly.htm&quot;&gt;satellite assembly&lt;/a&gt; files containing localized resources.</source>
          <target>使用程序集本地化时，用户选择要本地化的程序集文件（.exe 或 .dll）。 Sisulizer 扫描来自应用程序的所有资源数据，包括 XAML、表单、字符串、图标、图像和版本数据。在构建过程中，Sisulizer 创建包含本地化资源的本地化&lt;a href=&quot;SatelliteAssembly.htm&quot;&gt;附属程序集&lt;/a&gt;文件。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked limits the search to text that matches one or more complete words.</source>
          <target>如果选中，则将搜索限制为与一个或多个完整单词匹配的文本。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies what  expand character are used. This is enabled when the &lt;em&gt; Expand&lt;/em&gt; check box in the &lt;em&gt;Methods&lt;/em&gt; group is checked. Possible characters are:</source>
          <target>指定使用什么扩展字符。选中“&lt;em&gt;方法”&lt;/em&gt;组中的“&lt;em&gt;展开”&lt;/em&gt;复选框时，启用了这一点。可能的字符有：</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer uses Office kind of tool bars.</source>
          <target>如果选中 Sisulizer 使用 Office 类工具栏。</target>
        </trans-unit>
        <trans-unit>
          <source>Exchange to Translator</source>
          <target>与翻译人员交流</target>
        </trans-unit>
        <trans-unit>
          <source>Assembly directory</source>
          <target>程序集目录</target>
        </trans-unit>
        <trans-unit>
          <source>Gray translated strings that are identical to the original values</source>
          <target>与原始值相同的灰色翻译字符串</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks     if a hotkey position is valid (e.g. hotkey is not at the end of string).</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查热键位置是否有效（例如，热键不在字符串末尾）。</target>
        </trans-unit>
        <trans-unit>
          <source>Assembly linker parameters</source>
          <target>汇编链接器参数</target>
        </trans-unit>
        <trans-unit>
          <source>In most cases it is enough to add only main languages (e.g. French) to the project. A main language can usually support all the countries where the language is spoken. For example a localized French file will suffice for France, Canada, Belgium, Luxembourg and Switzerland. However, sometimes words or at least the spelling of words differs between two countries. For example, United States spell some words in a different way. In such case you can add a main language and a sub language for the same language. For example add English language first and then the English (United States ) sub language.</source>
          <target>在大多数情况下，只将主要语言（例如法语）添加到项目中就足够了。一种主要语言通常可以支持使用该语言的所有国家/地区。例如，本地化的法语文件对于法国、加拿大、比利时、卢森堡和瑞士就足够了。然而，有时两个国家之间的单词或至少单词的拼写不同。例如，美国以不同的方式拼写一些单词。在这种情况下，您可以为同一语言添加主语言和子语言。例如，先添加英语，然后添加英语（美国）子语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Click &lt;em&gt;Read more&lt;/em&gt; (if any) to get more information about the topic. This either opens a help topic or web page describing more about the topic. Click &lt;em&gt;Next Tip&lt;/em&gt; to show the next tip. Click &lt;em&gt;Previous Tip&lt;/em&gt; to show the previous tip.</source>
          <target>单击&lt;em&gt;阅读更多&lt;/em&gt;（如果有）以获取有关该主题的更多信息。这将打开一个帮助主题或描述有关该主题的更多信息的网页。单击&lt;em&gt;下一个提示&lt;/em&gt;以显示下一个提示。单击&lt;em&gt;上一个提示&lt;/em&gt;以显示上一个提示。</target>
        </trans-unit>
        <trans-unit>
          <source>NewTool will extract the value as &amp;quot;This is a sample text.&amp;quot; instead of &amp;quot;This&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;is&amp;nbsp;&amp;nbsp;&amp;nbsp;    a&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;sample text.&amp;quot;.</source>
          <target>NewTool 会将值提取为“这是一个示例文本”。而不是“这是一个示例文本。”。</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;lt;sl&amp;gt;\XML\vehicles.xml contains a sample XML file that contains image data.</source>
          <target>&amp;lt;sl&amp;gt;\XML\vehicles.xml 包含一个包含图像数据的示例 XML 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Context change will cause some troubles. Fortunately Sisulizer automatically copies the existing translations from the old item to the new item but the coping is done based on the native value. When having duplicate string that have been translated in a different way this my cause loss of translation data. In the case like this it is safe to add new items only as the end of the block. To be able to add duplicate new items safely everywhere you should use a context attribute. The context attribute specifies the context data. To mark an attribute to be a context, select the attribute, right click and choose Context value. After rescanning the project the context of the first element is sport.0, the second sport.1, etc. You can freely insert new items to any location without changing existing context ids. If you mark more that one attribute as context attribute the context value will be the combined value of them all where each attribute value is separated with &amp;quot;.&amp;quot; character.</source>
          <target>上下文的改变会带来一些麻烦。幸运的是，Sisulizer 会自动将现有翻译从旧项目复制到新项目，但复制是基于本地值完成的。当具有以不同方式翻译的重复字符串时，这会导致翻译数据丢失。在这种情况下，只在块的末尾添加新项目是安全的。为了能够在任何地方安全地添加重复的新项目，您应该使用上下文属性。上下文属性指定上下文数据。要将属性标记为上下文，请选择该属性，右键单击并选择上下文值。重新扫描项目后，第一个元素的上下文是sport.0、第二个sport.1 等。您可以在不更改现有上下文ID 的情况下自由地将新项目插入到任何位置。如果您将多个属性标记为上下文属性，则上下文值将是它们的组合值，其中每个属性值都用“。”分隔。特点。</target>
        </trans-unit>
        <trans-unit>
          <source>OpenOffice 3.0  dictionaries are deployed as single .oxt file. This file contains dictionary, hyphenation and thesaurus files of one language. The file is actually a ZIP file. You can either extract the files manually and add .dic file into Sisulizer, or you can just add .oxt file and let Sisulizer  to extract the dictionary files for you. &lt;a href=&quot;http://extensions.services.openoffice.org/dictionary&quot; target=&quot;_blank&quot;&gt;Download&lt;/a&gt; a dictionary file.  Choose &lt;a href=&quot;GeneralSettingsDialog.htm&quot;&gt;Tools | General&lt;/a&gt; menu, select &lt;a href=&quot;GeneralSettingsDialogSpellingSheet.htm&quot;&gt;Spelling &amp;amp; Grammar sheet&lt;/a&gt;, and click Add button.</source>
          <target>OpenOffice 3.0 词典部署为单个 .oxt 文件。该文件包含一种语言的词典、连字符和同义词库文件。该文件实际上是一个 ZIP 文件。您可以手动提取文件并将 .dic 文件添加到 Sisulizer，或者您可以只添加 .oxt 文件并让 Sisulizer 为您提取字典文件。&lt;a href=&quot;http://extensions.services.openoffice.org/dictionary&quot; target=&quot;_blank&quot;&gt;下载&lt;/a&gt;字典文件。选择&lt;a href=&quot;GeneralSettingsDialog.htm&quot;&gt;工具 | General&lt;/a&gt;菜单，选择&lt;a href=&quot;GeneralSettingsDialogSpellingSheet.htm&quot;&gt;Spelling &amp;amp; Grammar sheet&lt;/a&gt; ，然后单击 Add 按钮。</target>
        </trans-unit>
        <trans-unit>
          <source>Select the Windows resource types that you want to localize</source>
          <target>选择要本地化的 Windows 资源类型</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected  &lt;a href=&quot;WindowsLocalization.htm&quot;&gt;Embedded Visual Basic project is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定选定的&lt;a href=&quot;WindowsLocalization.htm&quot;&gt;Embedded Visual Basic 项目的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer tries to detect the original language automatically from the source file.</source>
          <target>如果选中 Sisulizer 会尝试从源文件中自动检测原始语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Samples string in different context methods</source>
          <target>不同上下文方法中的示例字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Edit current row Max Pixels value. If the value is specified or is greater than zero, you can&#x27;t enter a value for the translation that is greater than the value specified. The length of the translation is calculated based on the font setting specified for each script in Options dialog [Tools | Platforms | &amp;lt;platform&amp;gt;] -&amp;gt; Font.</source>
          <target>编辑当前行最大像素值。如果该值已指定或大于零，则不能为翻译输入大于指定值的值。翻译的长度是根据在选项对话框 [工具 | ] 中为每个脚本指定的字体设置计算的。平台 | &amp;lt;平台&amp;gt;] -&amp;gt; 字体。</target>
        </trans-unit>
        <trans-unit>
          <source>Comment dialog allows adding and modifying of translation-specific comments. If there is a translation comment, the translation cell has a small red triangle on the upper right corner. You can turn on the comment column by right clicking the grid and choosing Columns menu item.</source>
          <target>评论对话框允许添加和修改翻译特定的评论。如果有翻译注释，翻译单元格右上角会有一个红色的小三角。您可以通过右键单击网格并选择“列”菜单项来打开评论列。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer supports large amount of &lt;a href=&quot;SupportedFiles.htm&quot;&gt;file formats&lt;/a&gt; and &lt;a href=&quot;SupportedDatabases.htm&quot;&gt;databases&lt;/a&gt;. Whenever you have modified your original files rescan the project by choosing &lt;a href=&quot;ProjectScanMenu.htm&quot;&gt;Project | Scan for Changes&lt;/a&gt; menu. Sisulizer  scans attached files and updates the project to match the new files. No existing translations are lost in this process.</source>
          <target>Sisulizer 支持大量的&lt;a href=&quot;SupportedFiles.htm&quot;&gt;文件格式&lt;/a&gt;和&lt;a href=&quot;SupportedDatabases.htm&quot;&gt;数据库&lt;/a&gt;。只要您修改了原始文件，就可以通过选择&lt;a href=&quot;ProjectScanMenu.htm&quot;&gt;Project |&lt;/a&gt;重新扫描&lt;a href=&quot;ProjectScanMenu.htm&quot;&gt;项目。扫描更改&lt;/a&gt;菜单。 Sisulizer 扫描附加文件并更新项目以匹配新文件。在此过程中不会丢失现有的翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>For review</source>
          <target>供审查</target>
        </trans-unit>
        <trans-unit>
          <source>Let&#x27;s look at typical Windows application. Our example is a Delphi compiled applications. It has several resource types such as strings, forms, icons. The original language of the sample is English but Delphi compiler does not give resources English language id but give neutral id instead. A neutral language id is 0. The sample contains one form (TFORM1) that has neutral language id.</source>
          <target>让我们看看典型的 Windows 应用程序。我们的例子是一个 Delphi 编译的应用程序。它有多种资源类型，例如字符串、表单、图标。示例的原始语言是英语，但 Delphi 编译器不给资源英语语言 id 而是给中性 id。中性语言 id 为 0。样本包含一个具有中性语言 id 的表单 (TFORM1)。</target>
        </trans-unit>
        <trans-unit>
          <source>Each row is a separate translation entity and it is translated independently. The advantage of combined string is that in most cases the string format must be exactly right. For example if must contain the specific separator characters. If the string is shows on the translation sheet as it is, it is possible that translator will enter string in invalid format. To prevent that you can split combined strings into plain part using expressions.</source>
          <target>每一行都是一个单独的翻译实体，它是独立翻译的。组合字符串的优点是在大多数情况下字符串格式必须完全正确。例如 if 必须包含特定的分隔符。如果字符串按原样显示在翻译表上，翻译人员可能会以无效格式输入字符串。为了防止这种情况，您可以使用表达式将组合字符串拆分为普通部分。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer&#x27;s Text\TMX directory contains TMX samples.</source>
          <target>Sisulizer 的 Text\TMX 目录包含 TMX 示例。</target>
        </trans-unit>
        <trans-unit>
          <source>If you switch from other localization you can easily import existing translations from the localized files. Complete the following steps:</source>
          <target>如果您从其他本地化切换，您可以轻松地从本地化文件中导入现有翻译。完成以下步骤：</target>
        </trans-unit>
        <trans-unit>
          <source>The file contains skiing two times. If our Finnish translations are:</source>
          <target>该文件包含两次滑雪。如果我们的芬兰语翻译是：</target>
        </trans-unit>
        <trans-unit>
          <source>Width and Height</source>
          <target>宽度和高度</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the package contains localized Sisulizer application. This is enabled only if you included at least one localized Sisulizer  when you installed Sisulizer.</source>
          <target>如果选中，则该软件包包含本地化的 Sisulizer 应用程序。仅当您在安装 Sisulizer 时包含至少一个本地化的 Sisulizer 时才启用此功能。</target>
        </trans-unit>
        <trans-unit>
          <source>Overwrite current strings</source>
          <target>覆盖当前字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Shows &lt;a href=&quot;ToolBarsDialog.htm&quot;&gt;Customize Toolbars&lt;/a&gt; that lets you edit the properties of toolbars.</source>
          <target>显示&lt;a href=&quot;ToolBarsDialog.htm&quot;&gt;可&lt;/a&gt;让您编辑工具栏属性的&lt;a href=&quot;ToolBarsDialog.htm&quot;&gt;自定义工具&lt;/a&gt;栏。</target>
        </trans-unit>
        <trans-unit>
          <source>Delphi resource string file (.drc) is used by Sisulizer to get the complete resource string context of the items.</source>
          <target>Sisulizer 使用 Delphi 资源字符串文件 (.drc) 来获取项目的完整资源字符串上下文。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the selected toolbar is visible.</source>
          <target>如果选中，则所选工具栏可见。</target>
        </trans-unit>
        <trans-unit>
          <source>Horizontal and Vertical</source>
          <target>水平和垂直</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer shows a message dialog before excluding row by context.</source>
          <target>如果选中 Sisulizer 在按上下文排除行之前显示消息对话框。</target>
        </trans-unit>
        <trans-unit>
          <source>If the output directory has been set in the solution dialog then this edit is disabled and it only shows the value given in solution dialog.</source>
          <target>如果在解决方案对话框中设置了输出目录，则此编辑将被禁用，它仅显示解决方案对话框中给定的值。</target>
        </trans-unit>
        <trans-unit>
          <source>Check this if you want to scan texts of owner draw controls.</source>
          <target>如果要扫描所有者绘制控件的文本，请选中此项。</target>
        </trans-unit>
        <trans-unit>
          <source>Line feed</source>
          <target>换行</target>
        </trans-unit>
        <trans-unit>
          <source>Prompt for excluding binary items</source>
          <target>提示排除二进制项</target>
        </trans-unit>
        <trans-unit>
          <source>Default value</source>
          <target>默认值</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the localized HTML document.</source>
          <target>显示本地化的 HTML 文档。</target>
        </trans-unit>
        <trans-unit>
          <source>Import Wizard - Excel file</source>
          <target>导入向导 - Excel 文件</target>
        </trans-unit>
        <trans-unit>
          <source>Key file</source>
          <target>密钥文件</target>
        </trans-unit>
        <trans-unit>
          <source>It is highly recommend to specify project file. However Sisulizer can localize VCL applications without project files.</source>
          <target>强烈建议指定项目文件。然而，Sisulizer 可以在没有项目文件的情况下本地化 VCL 应用程序。</target>
        </trans-unit>
        <trans-unit>
          <source>Click &lt;em&gt;Test&lt;/em&gt; to test if Sisulizer can access Google Translate.</source>
          <target>单击&lt;em&gt;测试&lt;/em&gt;以测试 Sisulizer 是否可以访问谷歌翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>ファイル</source>
          <target>文件</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks if the string length in pixels exceeds the maximum length set by the user.</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查以像素为单位的字符串长度是否超过用户设置的最大长度。</target>
        </trans-unit>
        <trans-unit>
          <source>The original value is always written even if there is a translation value.</source>
          <target>即使有翻译值，也始终写入原始值。</target>
        </trans-unit>
        <trans-unit>
          <source>Saves changes made to the project.</source>
          <target>保存对项目所做的更改。</target>
        </trans-unit>
        <trans-unit>
          <source>Create localized copies from selected database.</source>
          <target>从选定的数据库创建本地化副本。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure general settings of Sisulizer. The dialog contains the following sheets:</source>
          <target>使用此对话框配置 Sisulizer 的常规设置。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Enter your license key in the &lt;em&gt;License key&lt;/em&gt; field and click &lt;em&gt;Start&lt;/em&gt;. Click &lt;em&gt;Quit&lt;/em&gt; to close Sisulizer.</source>
          <target>在&lt;em&gt;许可证密钥&lt;/em&gt;字段中输入您的许可证密钥，然后单击&lt;em&gt;开始&lt;/em&gt;。单击&lt;em&gt;退出&lt;/em&gt;以关闭 Sisulizer。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked  Sisulizer imports the maximum length value of the string.</source>
          <target>如果选中 Sisulizer 导入字符串的最大长度值。</target>
        </trans-unit>
        <trans-unit>
          <source>Unicode enceded as little endian UTF-16.</source>
          <target>Unicode 被定义为小端 UTF-16。</target>
        </trans-unit>
        <trans-unit>
          <source>Clear all statuses (New, Changed, Unused) of every row in the project. This also removed all unused items.</source>
          <target>清除项目中每一行的所有状态（新建、更改、未使用）。这也删除了所有未使用的项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Using some other translation tool</source>
          <target>使用其他一些翻译工具</target>
        </trans-unit>
        <trans-unit>
          <source>Item contains a value that is ignored.</source>
          <target>项目包含一个被忽略的值。</target>
        </trans-unit>
        <trans-unit>
          <source>Include white spaces</source>
          <target>包括空格</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet configure how help file is localized.</source>
          <target>使用此表配置帮助文件的本地化方式。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Ignored lines in the begining of file&lt;/em&gt; specifies how many lines in the beginning of the file are ignored.</source>
          <target>&lt;em&gt;文件&lt;/em&gt;开头的&lt;em&gt;忽略行&lt;/em&gt;指定&lt;em&gt;文件&lt;/em&gt;开头有多少行被忽略。</target>
        </trans-unit>
        <trans-unit>
          <source>WebHelp uses the same files as HTML Help. The difference is that in HTML Help all files (.htm, .html, .hhk, .hhc and image files) are compressed and stored into single help file: CHM file. In WebHelp all help files are stored in a single directory and its sub directories.</source>
          <target>WebHelp 使用与 HTML 帮助相同的文件。不同之处在于，在 HTML 帮助中，所有文件（.htm、.html、.hhk、.hhc 和图像文件）都被压缩并存储为单个帮助文件：CHM 文件。在 WebHelp 中，所有帮助文件都存储在单个目录及其子目录中。</target>
        </trans-unit>
        <trans-unit>
          <source>Delphi 2 and later. All C++Builder versions.</source>
          <target>德尔福 2 及更高版本。所有 C++Builder 版本。</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks if the same formatting string parameters are present both in original string and its translation.</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查原始字符串及其翻译中是否存在相同的格式化字符串参数。</target>
        </trans-unit>
        <trans-unit>
          <source>Row localization where id and language id are not part of primary key</source>
          <target>id 和 language id 不是主键的一部分的行本地化</target>
        </trans-unit>
        <trans-unit>
          <source>Both methods can be used with any file. The difference is how duplicates strings are handled. &lt;em&gt;Item index&lt;/em&gt; creates as many rows as there are duplicate strings. &lt;em&gt;String value&lt;/em&gt; method always only one row for each string.</source>
          <target>这两种方法都可以用于任何文件。不同之处在于重复字符串的处理方式。&lt;em&gt;项目索引&lt;/em&gt;创建与重复字符串一样多的行。&lt;em&gt;字符串值&lt;/em&gt;方法对于每个字符串总是只有一行。</target>
        </trans-unit>
        <trans-unit>
          <source>You can disable localization of a entire source code block by using begin and end exclude tags. These will disable all lines between these two tags. The syntax is</source>
          <target>您可以使用开始和结束排除标记禁用整个源代码块的本地化。这些将禁用这两个标签之间的所有行。语法是</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer changes the BiDiMode property when creating Middle Eastern forms. If the original value is bdLeftToRight, Sisulizer changes this to bdRightToLeft. This is applied only if ParentBiDiMode property of the same component is False.</source>
          <target>如果选中 Sisulizer，则在创建中东表单时会更改 BiDiMode 属性。如果原始值是 bdLeftToRight，Sisulizer 会将其更改为 bdRightToLeft。仅当同一组件的 ParentBiDiMode 属性为 False 时才应用。</target>
        </trans-unit>
        <trans-unit>
          <source>Click &lt;em&gt;Clear&lt;/em&gt; button to clear the current proxy settings. You can test your proxy settings by clicking &lt;em&gt;Test&lt;/em&gt; button. If the test fails check the address and port values, make sure that you have entered the right user name and password (if needed). If this does not help try to change the type value.</source>
          <target>单击&lt;em&gt;清除&lt;/em&gt;按钮清除当前的代理设置。您可以通过单击“&lt;em&gt;测试”&lt;/em&gt;按钮来测试您的代理设置。如果测试失败，请检查地址和端口值，确保您输入了正确的用户名和密码（如果需要）。如果这没有帮助，请尝试更改类型值。</target>
        </trans-unit>
        <trans-unit>
          <source>How to set the user interface culture</source>
          <target>如何设置用户界面文化</target>
        </trans-unit>
        <trans-unit>
          <source>HTML Help file</source>
          <target>HTML 帮助文件</target>
        </trans-unit>
        <trans-unit>
          <source>Visual Basic localization</source>
          <target>Visual Basic 本地化</target>
        </trans-unit>
        <trans-unit>
          <source>Creates a log report.</source>
          <target>创建日志报告。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure HTML settings.</source>
          <target>使用此对话框配置 HTML 设置。</target>
        </trans-unit>
        <trans-unit>
          <source>Normally you should not use extended fields because it make maintaining and using database much more difficult. However some databases have 32 kbytes or 64 kbytes limit for a string field. If you have longer strings (e.g. HTML or XML) you do not have any other choice but split the data. If you use the above method Sisulizer can combine  data from multiple blocks and localize strings as single entity when localizing the data.</source>
          <target>通常您不应该使用扩展字段，因为它会使维护和使用数据库变得更加困难。但是，某些数据库对字符串字段有 32 KB 或 64 KB 的限制。如果您有更长的字符串（例如 HTML 或 XML），您别无选择，只能拆分数据。如果使用上述方法，Sisulizer 可以在本地化数据时组合来自多个块的数据并将字符串本地化为单个实体。</target>
        </trans-unit>
        <trans-unit>
          <source>The rows are sorted in descending order based on the values of the current column.</source>
          <target>行根据当前列的值按降序排序。</target>
        </trans-unit>
        <trans-unit>
          <source>Language Codes and Translation fallback</source>
          <target>语言代码和翻译后备</target>
        </trans-unit>
        <trans-unit>
          <source>Only in debug build.</source>
          <target>仅在调试版本中。</target>
        </trans-unit>
        <trans-unit>
          <source>For example Windows binary file scanner is used for the following file extensions:</source>
          <target>例如，Windows 二进制文件扫描程序用于以下文件扩展名：</target>
        </trans-unit>
        <trans-unit>
          <source>You can use your own resource type and resource naming. In that case you have change the resource type and resource name in the above dialog box and you have to write our own code that extracts the data from resource and creates the resource DLLs with proper names.</source>
          <target>您可以使用自己的资源类型和资源命名。在这种情况下，您已经在上面的对话框中更改了资源类型和资源名称，并且您必须编写我们自己的代码来从资源中提取数据并创建具有适当名称的资源 DLL。</target>
        </trans-unit>
        <trans-unit>
          <source>Sometimes HTML files contain scripts. A script is either a client side (e.g. JavaScript) or a server side (e.g. JSP, ASP) script. Whenever there is a script Sisulizer can use its source code scanner to extract only strings from the code. Translating strings of the source code is much easier and safer than translating the whole source code.</source>
          <target>有时 HTML 文件包含脚本。脚本是客户端（例如 JavaScript）或服务器端（例如 JSP、ASP）脚本。只要有脚本，Sisulizer 就可以使用其源代码扫描器仅从代码中提取字符串。翻译源代码的字符串比翻译整个源代码更容易、更安全。</target>
        </trans-unit>
        <trans-unit>
          <source>Duplicate resource string</source>
          <target>重复的资源字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Some XML files also contain embedded script data. You can turn script parsing on from &lt;a href=&quot;XmlSourceDialogTagsSheet.htm&quot;&gt;Tags sheet&lt;/a&gt; of XML source dialog.</source>
          <target>一些 XML 文件还包含嵌入的脚本数据。您可以从 XML 源对话框的&lt;a href=&quot;XmlSourceDialogTagsSheet.htm&quot;&gt;标签表&lt;/a&gt;中打开脚本解析。</target>
        </trans-unit>
        <trans-unit>
          <source>2 GHz CPU or higher</source>
          <target>2 GHz CPU 或更高</target>
        </trans-unit>
        <trans-unit>
          <source>Some of the localized files do not exists or are out of date. When converting projects made with other localization tool, Sisulizer imports existing translations from localized files. This makes it possible to import everything (strings, layout, images, etc) in a context sensitive way. Without localized file Sisulizer can only import string data from the current project file in a non context sensitive way. This makes importing less accurate.</source>
          <target>某些本地化文件不存在或已过期。转换使用其他本地化工具制作的项目时，Sisulizer 会从本地化文件中导入现有翻译。这使得以上下文敏感的方式导入所有内容（字符串、布局、图像等）成为可能。如果没有本地化文件，Sisulizer 只能以非上下文敏感的方式从当前项目文件中导入字符串数据。这使得导入不太准确。</target>
        </trans-unit>
        <trans-unit>
          <source>Press First for All to always use the first translations. After pressing First for All this dialog is not snow any more in this translation process but the first translation is always used.</source>
          <target>按 First for All 始终使用第一个翻译。按 First for All 后，此对话框在此翻译过程中不再下雪，但始终使用第一个翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to set the language properties.</source>
          <target>使用此表设置语言属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Other issues considering binary localization:</source>
          <target>考虑二进制本地化的其他问题：</target>
        </trans-unit>
        <trans-unit>
          <source>One byte integer value</source>
          <target>一字节整数值</target>
        </trans-unit>
        <trans-unit>
          <source>Hunspell spell checker library</source>
          <target>Hunspell 拼写检查器库</target>
        </trans-unit>
        <trans-unit>
          <source>Translation statuses</source>
          <target>翻译状态</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies when Sisulizer saves the translations to the translation memory. Possible options are:</source>
          <target>指定 Sisulizer 何时将翻译保存到翻译记忆库。可能的选项是：</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be an &lt;a href=&quot;WindowsLocalization.htm#VisualBasic&quot;&gt;Embedded Visual Basic project file&lt;/a&gt; (e.g. C:\Samples\Sample.ebp).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是&lt;a href=&quot;WindowsLocalization.htm#VisualBasic&quot;&gt;嵌入式 Visual Basic 项目文件&lt;/a&gt;（例如 C:\Samples\Sample.ebp）。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the language is visible on the edit sheet.</source>
          <target>如果选中，则语言在编辑表上可见。</target>
        </trans-unit>
        <trans-unit>
          <source>Specified the default localized fonts to be used in Win32 VCL applications.</source>
          <target>指定要在 Win32 VCL 应用程序中使用的默认本地化字体。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies if Sisulizer sets the language of a resource that has no language specified (e.g. neutral resource). Possible values are:</source>
          <target>指定 Sisulizer 是否设置没有指定语言的资源（例如中性资源）的语言。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Translation Engines dialog box</source>
          <target>翻译引擎对话框</target>
        </trans-unit>
        <trans-unit>
          <source>Automatic translations</source>
          <target>自动翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Adds a new rule to the list.</source>
          <target>将新规则添加到列表中。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;strong&gt;procedure&lt;/strong&gt; Close;
&lt;strong&gt;resourcestring&lt;/strong&gt;
  SClose = &#x27;Close&#x27;;
begin
  ...
&lt;strong&gt;end&lt;/strong&gt;;

&lt;!-- #BeginLibraryItem &quot;/Library/TurnLogWarningOff.lbi&quot; --&gt;You can turn this warning off. Choose &amp;quot;Tools | General...&amp;quot; and select &amp;quot;Output Messages&amp;quot; sheet.</source>
          <target>&lt;strong&gt;程序&lt;/strong&gt;关闭；&lt;strong&gt;资源&lt;/strong&gt;字符串 SClose = &amp;#39;关闭&amp;#39;;开始……&lt;strong&gt;结束&lt;/strong&gt;；&lt;!-- #BeginLibraryItem &quot;/Library/TurnLogWarningOff.lbi&quot; --&gt;您可以关闭此警告。选择“工具|常规...”并选择“输出消息”表。</target>
        </trans-unit>
        <trans-unit>
          <source>Mark read only nodes</source>
          <target>标记只读节点</target>
        </trans-unit>
        <trans-unit>
          <source>Add index, contents and glossary files to the project. Choose Project | Add source to start Project Wizard again. Browse the same directory and set the file type to Sample.*. When Project Wizard ask about the format of the file choose &lt;em&gt;Online Help file&lt;/em&gt;.</source>
          <target>向项目添加索引、内容和词汇表文件。选择项目 |添加源以再次启动项目向导。浏览同一目录并将文件类型设置为 Sample.*。当 Project Wizard 询问文件格式时，选择&lt;em&gt;Online Help file&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit>
          <source>Select German as an active language. Right click on the German column header. Import Wizard appers. Select C:\MyFiles\de\MyApplications.exe. Sisulizer imports German translations to the project.</source>
          <target>选择德语作为活动语言。右键单击德语列标题。导入向导应用程序。选择 C:\MyFiles\de\MyApplications.exe。 Sisulizer 将德语翻译导入到项目中。</target>
        </trans-unit>
        <trans-unit>
          <source>Structured strings</source>
          <target>结构化字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Ansi string with preceding length byte</source>
          <target>带有前面长度字节的 Ansi 字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Yes if data starts with  &amp;lt; character but there is not  XML header.</source>
          <target>如果数据以 &amp;lt; 字符开头但没有 XML 标头，则是。</target>
        </trans-unit>
        <trans-unit>
          <source>Places an exact copy of the selected item on the clipboard and leave the original untouched. Copy replaces the current clipboard contents with the selected item.</source>
          <target>将所选项目的精确副本放置在剪贴板上，并保持原件不变。复制用所选项目替换当前剪贴板内容。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies if text file contains plain text or structured data. Check &lt;em&gt;Plain text file&lt;/em&gt; if you want to scan the file as plain text file. Check &lt;em&gt;User defined text file&lt;/em&gt; if you want to parse text file using format definition you specify. The following parts are used to define the format.</source>
          <target>指定文本文件是包含纯文本还是结构化数据。查看&lt;em&gt;纯文本文件&lt;/em&gt;，如果你要扫描的文件作为纯文本文件。如果要使用指定的格式定义解析文本文件，请选中&lt;em&gt;用户定义的文本文件&lt;/em&gt;。以下部分用于定义格式。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Replace the current content of the selected translation memory with a backup&lt;/em&gt; file restores a translation memory from a file. Restoring a backup will erase all existing data in the translation memory.</source>
          <target>&lt;em&gt;用备份&lt;/em&gt;文件&lt;em&gt;替换所选翻译记忆库的当前内容可&lt;/em&gt;从文件中恢复翻译记忆库。恢复备份将删除翻译记忆库中的所有现有数据。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Code page&lt;/em&gt; specifies the Windows code page that the language uses. Windows might contain several code pages for one script. In such case the code page contains several code pages.</source>
          <target>&lt;em&gt;代码页&lt;/em&gt;指定语言使用的 Windows 代码页。 Windows 可能包含一个脚本的多个代码页。在这种情况下，代码页包含多个代码页。</target>
        </trans-unit>
        <trans-unit>
          <source>Images and binary data</source>
          <target>图像和二进制数据</target>
        </trans-unit>
        <trans-unit>
          <source>Test for duplicate hotkeys</source>
          <target>测试重复的热键</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer extends VCL&#x27;s resource DLLs by providing classes to perform runtime language change. This makes it possible to start the application in one language and later change the language on run time as many times as possible. Sisulizer&#x27;s runtime language change is very fast and flicker free. It does not require you to add any components on forms. You only have to use Sisulizer to create resource DLLs and include one or two Sisulizer units to your project.</source>
          <target>Sisulizer 通过提供执行运行时语言更改的类来扩展 VCL 的资源 DLL。这使得可以以一种语言启动应用程序，然后在运行时尽可能多地更改语言。 Sisulizer 的运行时语言更改非常快且无闪烁。它不需要您在表单上添加任何组件。您只需使用 Sisulizer 来创建资源 DLL 并将一两个 Sisulizer 单元包含到您的项目中。</target>
        </trans-unit>
        <trans-unit>
          <source>When using the application file localization user selects an application file (.apk) to be localized. Sisulizer scans all the resource data from the application including string, layout and image data. On the build process Sisulizer creates the localized application files containing localized resources.</source>
          <target>使用应用程序文件本地化时，用户选择要本地化的应用程序文件 (.apk)。 Sisulizer 扫描来自应用程序的所有资源数据，包括字符串、布局和图像数据。在构建过程中，Sisulizer 创建包含本地化资源的本地化应用程序文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Excludes type</source>
          <target>排除类型</target>
        </trans-unit>
        <trans-unit>
          <source>removepseudo</source>
          <target>去除伪</target>
        </trans-unit>
        <trans-unit>
          <source>Existing translations are always overwritten.</source>
          <target>现有的翻译总是被覆盖。</target>
        </trans-unit>
        <trans-unit>
          <source>Scan scripts</source>
          <target>扫描脚本</target>
        </trans-unit>
        <trans-unit>
          <source>A locked flag row also disables the row, but the translation will be used during the building process. This flags can be used to protect the rows against accidental keyboard press etc. that would alter the checked translations.</source>
          <target>锁定标志行也会禁用该行，但将在构建过程中使用翻译。此标志可用于保护行免受意外键盘按下等会改变已检查翻译的影响。</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks  if the same numbers of new line characters are both in original string and its translation.</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查原始字符串及其翻译中是否有相同数量的换行符。</target>
        </trans-unit>
        <trans-unit>
          <source>Repaint windows when user is holding down an arrow key</source>
          <target>当用户按住箭头键时重新绘制窗口</target>
        </trans-unit>
        <trans-unit>
          <source>From cursor</source>
          <target>从光标</target>
        </trans-unit>
        <trans-unit>
          <source>Show id first</source>
          <target>先显示id</target>
        </trans-unit>
        <trans-unit>
          <source>Version number of the assembly</source>
          <target>程序集的版本号</target>
        </trans-unit>
        <trans-unit>
          <source>Sets grid spacing in pixels along the y-axis. Specify a higher number to increase grid spacing.</source>
          <target>设置沿 y 轴的网格间距（以像素为单位）。指定更大的数字以增加网格间距。</target>
        </trans-unit>
        <trans-unit>
          <source>Exclude current row from the project by the native value. If the project contains several rows having the same native value this excludes them all from the project.</source>
          <target>按本机值从项目中排除当前行。如果项目包含多个具有相同本机值的行，这会将它们全部从项目中排除。</target>
        </trans-unit>
        <trans-unit>
          <source>Sometimes there more than one similar files that you want to localized. The easiest way to do that is to add all such files to a directory and add the directory to the Sisulizer project. However it may be that your similar files are in several different directories and they can not be moved to a single directory. In that case you can add them into this list. All the files in this list are localized in the same way and on same settings as the main file.</source>
          <target>有时需要本地化的类似文件不止一个。最简单的方法是将所有此类文件添加到一个目录中，并将该目录添加到 Sisulizer 项目中。但是，您的类似文件可能位于几个不同的目录中，并且无法将它们移动到单个目录中。在这种情况下，您可以将它们添加到此列表中。此列表中的所有文件都以与主文件相同的方式和相同的设置进行本地化。</target>
        </trans-unit>
        <trans-unit>
          <source>Scan script</source>
          <target>扫描脚本</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies what part of column is translated. Possible values are:</source>
          <target>指定要翻译列的哪一部分。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>If there is a row comment, the cell with native string has a small red triangle.</source>
          <target>如果有一行注释，带有原生字符串的单元格会有一个红色的小三角形。</target>
        </trans-unit>
        <trans-unit>
          <source>The above XML file contains two value elements. How Sisulizer handles depends of the settings in the &lt;a href=&quot;XmlSourceDialogTagsSheet.htm&quot;&gt;XML tags sheet&lt;/a&gt;. If you right click &lt;em&gt;localize attribute &lt;/em&gt;and choose &lt;em&gt;Localize value&lt;/em&gt; Sisulizer marks the attribute to be a localize attribute. If the name of the attribute is localize Sisulizer automatically marks the attribute as localize attribute. Normally you check the element name in order to localize it. However once attribute is marked as localize attribute the value of the attribute specifies if the element is localized or not. If the attribute contains any positive value then Sisulizer localizes the element no matter if you have checked or unchecked the element in the tags tree. If the localize attribute is set then Sisulizer localizes first value element but ignores the second because it has localize attribute set to false. See the following picture to see the right settings.</source>
          <target>上面的 XML 文件包含两个值元素。 Sisulizer 如何处理取决于&lt;a href=&quot;XmlSourceDialogTagsSheet.htm&quot;&gt;XML 标签表&lt;/a&gt;中的设置。如果右键单击&lt;em&gt;本地化属性&lt;/em&gt;并选择&lt;em&gt;本地化值，&lt;/em&gt; Sisulizer 将该属性标记为本地化属性。如果属性的名称是 localize Sisulizer 会自动将该属性标记为 localize 属性。通常您会检查元素名称以对其进行本地化。但是，一旦属性被标记为 localize 属性，则该属性的值指定元素是否已本地化。如果该属性包含任何正值，则无论您是否选中或取消选中标签树中的元素，Sisulizer 都会本地化该元素。如果设置了 localize 属性，则 Sisulizer 将本地化第一个 value 元素但忽略第二个，因为它的 localize 属性设置为 false。请参阅下图以查看正确的设置。</target>
        </trans-unit>
        <trans-unit>
          <source>On the other hand there can be text files that do not contain any structured data but only plain text. For example:</source>
          <target>另一方面，可以存在不包含任何结构化数据而仅包含纯文本的文本文件。例如：</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the expand percentage when the length of the original string is between 6 and 10 characters.</source>
          <target>指定原始字符串长度在 6 到 10 个字符之间时的扩展百分比。</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be a Delphi or C++Builder form file created by Delphi IDE compiler (e.g. C:\Samples\Unit1.dfm).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是由 Delphi IDE 编译器创建的 Delphi 或 C++Builder 表单文件（例如 C:\Samples\Unit1.dfm）。</target>
        </trans-unit>
        <trans-unit>
          <source>Enabled translation engines</source>
          <target>启用翻译引擎</target>
        </trans-unit>
        <trans-unit>
          <source>Moved component</source>
          <target>移动组件</target>
        </trans-unit>
        <trans-unit>
          <source>Sort pages and sub folders together</source>
          <target>将页面和子文件夹排序在一起</target>
        </trans-unit>
        <trans-unit>
          <source>Spelling errors on translations</source>
          <target>翻译拼写错误</target>
        </trans-unit>
        <trans-unit>
          <source>If &lt;em&gt;String entities&lt;/em&gt; is checked Sisulizer decodes custom string entities when reading the XML file and encodes them when writing the XML file. A custom string entity is a entity defined either in DOCTYPE element or in the DTD file.</source>
          <target>如果&lt;em&gt;字符串实体&lt;/em&gt;被选中读取XML文件时的Sisulizer解码自定义字符串实体和编写XML文件时对它们进行编码。自定义字符串实体是在 DOCTYPE 元素或 DTD 文件中定义的实体。</target>
        </trans-unit>
        <trans-unit>
          <source>This methods has two drawbacks. The first is that when Qt tools compile the application they copy the date from .ui files to header files (.h) that are linked inside the application. Tool resource string data of .ui files but nothing else. This means that you can translate only string data from your .ui files. There is not way to localize size, position or font data of form even in many cases it is required. The second problem is that when Qt tools extracts string from .ui file and place them inside TR function the strings loose context information. The translator no longer see the form visually as developer that uses Designer. This makes translation job harder and more error prone. This is why Sisulizer has developer visual localization method for Qt that enables you to localize .ui files directory with full context and visual information.</source>
          <target>这种方法有两个缺点。第一个是当 Qt 工具编译应用程序时，它们会将日期从 .ui 文件复制到应用程序内部链接的头文件 (.h)。 .ui 文件的工具资源字符串数据，仅此而已。这意味着您只能翻译 .ui 文件中的字符串数据。即使在许多情况下需要，也没有办法本地化表单的大小、位置或字体数据。第二个问题是，当 Qt 工具从 .ui 文件中提取字符串并将它们放入 TR 函数时，字符串会丢失上下文信息。翻译人员不再像使用 Designer 的开发人员那样直观地看到表单。这使得翻译工作更难，更容易出错。这就是为什么 Sisulizer 为 Qt 提供开发人员视觉本地化方法的原因，该方法使您能够使用完整的上下文和视觉信息本地化 .ui 文件目录。</target>
        </trans-unit>
        <trans-unit>
          <source>Visual Basic form file</source>
          <target>Visual Basic 表单文件</target>
        </trans-unit>
        <trans-unit>
          <source>Windows Binary Source| Platform files</source>
          <target>Windows 二进制源|平台文件</target>
        </trans-unit>
        <trans-unit>
          <source>Set the same status as the translation&lt;br&gt;
    in the translation memory</source>
          <target>设置与翻译相同的状态&lt;br&gt;在翻译记忆库中</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the original encoding (i.e. character set) that is used in the original file or database.</source>
          <target>指定在原始文件或数据库中使用的原始编码（即字符集）。</target>
        </trans-unit>
        <trans-unit>
          <source>Support for Delphi XE8 and C++Builder XE8</source>
          <target>支持 Delphi XE8 和 C++Builder XE8</target>
        </trans-unit>
        <trans-unit>
          <source>You can import data from glossaries such as TMX, text, Excel files or from database tables. Choose File | Import or Column | Import to start &lt;a href=&quot;ImportWizard.htm&quot;&gt;Import Wizard&lt;/a&gt;. Sisulizer can import data from following file formats and databases.</source>
          <target>您可以从术语表（例如 TMX、文本、Excel 文件）或数据库表中导入数据。选择文件 |导入或列 |导入以启动&lt;a href=&quot;ImportWizard.htm&quot;&gt;导入向导&lt;/a&gt;。 Sisulizer 可以从以下文件格式和数据库导入数据。</target>
        </trans-unit>
        <trans-unit>
          <source>For example the English word &lt;samp&gt;&amp;quot;red&amp;quot;&lt;/samp&gt; is only three characters but its Finnish translation &lt;samp&gt;&amp;quot;punainen&amp;quot;&lt;/samp&gt; is eight characters!</source>
          <target>例如英文单词&lt;samp&gt;“red”&lt;/samp&gt;只有三个字符，但它的芬兰语翻译&lt;samp&gt;“punainen”&lt;/samp&gt;却是八个字符！</target>
        </trans-unit>
        <trans-unit>
          <source>Property is ignored when scanning.</source>
          <target>扫描时忽略属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Refresh the statistics to show the most recent statistics information.</source>
          <target>刷新统计信息以显示最新的统计信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Resource file localization can be used if you have the original resource files (.xaml, .baml, .resx or .txt).</source>
          <target>如果您拥有原始资源文件（.xaml、.baml、.resx 或 .txt），则可以使用资源文件本地化。</target>
        </trans-unit>
        <trans-unit>
          <source>If &lt;em&gt;File entities&lt;/em&gt; is checked Sisulizer decodes custom file entities when reading the XML file and encodes them when writing the XML file. A custom file entity is a file based entity defined either in DOCTYPE element or in the DTD file.</source>
          <target>如果&lt;em&gt;文件实体&lt;/em&gt;被选中读取XML文件时的Sisulizer解码自定义文件的实体和编写XML文件时对它们进行编码。自定义文件实体是在 DOCTYPE 元素或 DTD 文件中定义的基于文件的实体。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the country is enabled. If unchecked the country will not be added to language list.</source>
          <target>如果选中，则国家/地区已启用。如果取消选中该国家/地区将不会添加到语言列表中。</target>
        </trans-unit>
        <trans-unit>
          <source>Visual Studio using .NET</source>
          <target>使用 .NET 的 Visual Studio</target>
        </trans-unit>
        <trans-unit>
          <source>Database table</source>
          <target>数据库表</target>
        </trans-unit>
        <trans-unit>
          <source>Importing files</source>
          <target>导入文件</target>
        </trans-unit>
        <trans-unit>
          <source>Show list of visual components that Sisulizer&#x27;s visual editors can use. &lt;a href=&quot;ComponentMapping.htm&quot;&gt;Component mapping&lt;/a&gt; is used to bind a platform component to Sisulizer visual component. For example VCL&#x27;s label control, TLabel, is mapped to TVisLabel.</source>
          <target>显示 Sisulizer 的可视化编辑器可以使用的可视化组件列表。&lt;a href=&quot;ComponentMapping.htm&quot;&gt;组件映射&lt;/a&gt;用于将平台组件绑定到 Sisulizer 可视化组件。例如，VCL 的标签控件 TLabel 被映射到 TVisLabel。</target>
        </trans-unit>
        <trans-unit>
          <source>This will break the sentence in three different parts: &amp;quot;Finland is the &amp;quot;, &amp;quot;most&amp;quot; and &amp;quot; country in the world&amp;quot;. To translate them separately is impossible or at least very hard. This is why Sisulizer embeds the formatting tags inside a translation unit (e.g. row). When editing the translation Sisulizer shows visually the inline tags. This makes it easy to produce similarly formatted translations.</source>
          <target>这将把句子分成三个不同的部分：“芬兰是”、“最多”和“世界上的国家”。分别翻译它们是不可能的，或者至少非常困难。这就是 Sisulizer 将格式化标签嵌入翻译单元（例如行）的原因。编辑翻译时，Sisulizer 会直观地显示内联标签。这使得生成类似格式的翻译变得容易。</target>
        </trans-unit>
        <trans-unit>
          <source>Exclude tags</source>
          <target>排除标签</target>
        </trans-unit>
        <trans-unit>
          <source>Exlporers the structure of the PE file to show the code, data and resource segements of the file.</source>
          <target>解析 PE 文件的结构以显示文件的代码、数据和资源段。</target>
        </trans-unit>
        <trans-unit>
          <source>Imports data from a database table.</source>
          <target>从数据库表中导入数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Highlight text by row status</source>
          <target>按行状态突出显示文本</target>
        </trans-unit>
        <trans-unit>
          <source>Regular expression defined text file</source>
          <target>正则表达式定义的文本文件</target>
        </trans-unit>
        <trans-unit>
          <source>Shows available languages and let the user to change</source>
          <target>显示可用语言并让用户更改</target>
        </trans-unit>
        <trans-unit>
          <source>Result list</source>
          <target>结果列表</target>
        </trans-unit>
        <trans-unit>
          <source>This option is not enabled if either database cloning is used or segmentation is turned on.</source>
          <target>如果使用数据库克隆或打开分段，则不会启用此选项。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;strong&gt;Note:&lt;/strong&gt; File associations is  visible only when run on XP.</source>
          <target>&lt;strong&gt;注意：&lt;/strong&gt;文件关联仅在 XP 上运行时可见。</target>
        </trans-unit>
        <trans-unit>
          <source>By default .NET runtime uses a &lt;a href=&quot;SatelliteAssembly.htm&quot;&gt;satellite assembly&lt;/a&gt;  matching the language of the operating system itself. This means that on English operating system the runtime uses English assembly file. In most cases this is the right thing to do. However a better choice is to use the satellite assembly matching the default culture of the operating system. Many users use English operating system but their default localize is not English but some other. To use the default culture instead of language of the operating system itself you have to add one line of code. Set &lt;em&gt;Thread.CurrentThread.CurrentUiCulture&lt;/em&gt; property to change the user interface culture. The &lt;em&gt;CultureInfo.CurrentCulture&lt;/em&gt; property contains the default culture of your system. This setting is specified in &lt;em&gt;Regional and Language Options&lt;/em&gt; of &lt;em&gt;Control Panel&lt;/em&gt;.</source>
          <target>默认情况下，.NET 运行时使用与操作系统本身的语言相匹配的&lt;a href=&quot;SatelliteAssembly.htm&quot;&gt;附属程序集&lt;/a&gt;。这意味着在英文操作系统上运行时使用英文程序集文件。在大多数情况下，这是正确的做法。然而，更好的选择是使用与操作系统的默认文化匹配的附属程序集。许多用户使用英文操作系统，但他们的默认本地化不是英文而是其他一些。要使用默认文化而不是操作系统本身的语言，您必须添加一行代码。设置&lt;em&gt;Thread.CurrentThread.CurrentUiCulture&lt;/em&gt;属性以更改用户界面文化。 &lt;em&gt;CultureInfo.CurrentCulture&lt;/em&gt;属性包含系统的默认文化。此设置在&lt;em&gt;控制面板的&lt;/em&gt;&lt;em&gt;区域和语言选项&lt;/em&gt;中指定。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer&#x27;s iOS\Simple directory contains a sample that shows how to localize an iOS application.</source>
          <target>Sisulizer 的 iOS\Simple 目录包含一个展示如何本地化 iOS 应用程序的示例。</target>
        </trans-unit>
        <trans-unit>
          <source>Contains a list of enabled engines. If engine is enabled it is used for this source. To enable an engine select an disabled engine in the left side list and press the right arrow button or drag the engine to the right side list. The order of the engines specifies the order where they are used. The topmost engine is applied first. If that engine can translate the password string that translation is used and the process ends. If the engine can not provide a translation the second engine in the list is used and so on. To change the order of engines select an engine and press up or down button.</source>
          <target>包含已启用引擎的列表。如果引擎已启用，则用于此源。要启用引擎，请在左侧列表中选择一个已禁用的引擎，然后按向右箭头按钮或将引擎拖到右侧列表中。引擎的顺序指定了使用它们的顺序。首先应用最上面的引擎。如果该引擎可以翻译密码字符串，则使用该翻译并结束该过程。如果引擎无法提供翻译，则使用列表中的第二个引擎，依此类推。要更改引擎的顺序，请选择一个引擎并按下向上或向下按钮。</target>
        </trans-unit>
        <trans-unit>
          <source>Arabic, Hebrew and Persian are bidirectional languages. These languages has two special characteristics. They are right to left reading order and mirrored user interface.</source>
          <target>阿拉伯语、希伯来语和波斯语是双向语言。这些语言有两个特点。它们是从右到左的阅读顺序和镜像用户界面。</target>
        </trans-unit>
        <trans-unit>
          <source>Every time you change your original source code your should run the build process to automatically update the localized projects(s). If you have the Sisulizer Enterprise edition you can automate this even further by using the &lt;a href=&quot;SlMake.htm&quot;&gt;SlMake&lt;/a&gt; command line tool in your make file.</source>
          <target>每次更改原始源代码时，都应运行构建过程以自动更新本地化项目。如果您有 Sisulizer 企业版，您可以通过在您的 make 文件中使用&lt;a href=&quot;SlMake.htm&quot;&gt;SlMake&lt;/a&gt;命令行工具进一步自动化。</target>
        </trans-unit>
        <trans-unit>
          <source>Ignore hotkey character</source>
          <target>忽略热键字符</target>
        </trans-unit>
        <trans-unit>
          <source>Only the first string and all the other strings having customized properties (e.g. maximum lenght or notes) are visible.</source>
          <target>只有第一个字符串和所有其他具有自定义属性（例如最大长度或音符）的字符串可见。</target>
        </trans-unit>
        <trans-unit>
          <source>When you localize a source code file you can choose between two context methods.</source>
          <target>本地化源代码文件时，您可以在两种上下文方法之间进行选择。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet configure how an &lt;a href=&quot;AndroidLocalization.htm&quot;&gt;Android application is localized&lt;/a&gt;.</source>
          <target>使用此表配置&lt;a href=&quot;AndroidLocalization.htm&quot;&gt;Android 应用程序的本地化方式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>The following table contains the recommended localization methods.</source>
          <target>下表包含推荐的本地化方法。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies a &lt;a href=&quot;DrcFile.htm&quot;&gt;DRC file&lt;/a&gt; that contains tables of all string constants declared by the resourcestring keywords.</source>
          <target>指定一个&lt;a href=&quot;DrcFile.htm&quot;&gt;DRC 文件&lt;/a&gt;，该&lt;a href=&quot;DrcFile.htm&quot;&gt;文件&lt;/a&gt;包含由 resourcestring 关键字声明的所有字符串常量的表。</target>
        </trans-unit>
        <trans-unit>
          <source>This localizes the glossary file.</source>
          <target>这将本地化词汇表文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Show this Sisulizer documentation.</source>
          <target>显示此 Sisulizer 文档。</target>
        </trans-unit>
        <trans-unit>
          <source>Fonts to be used</source>
          <target>要使用的字体</target>
        </trans-unit>
        <trans-unit>
          <source>Import method</source>
          <target>导入方式</target>
        </trans-unit>
        <trans-unit>
          <source>String value</source>
          <target>字符串值</target>
        </trans-unit>
        <trans-unit>
          <source>Scan comments</source>
          <target>扫描评论</target>
        </trans-unit>
        <trans-unit>
          <source>Choose between file and database sources</source>
          <target>在文件和数据库源之间进行选择</target>
        </trans-unit>
        <trans-unit>
          <source>You can add more languages later by choosing Project | Languages.</source>
          <target>您可以稍后通过选择 Project | 添加更多语言。语言。</target>
        </trans-unit>
        <trans-unit>
          <source>When saving translations to the translation engine the first writeable translation engine on the list is used.</source>
          <target>将翻译保存到翻译引擎时，将使用列表中的第一个可写翻译引擎。</target>
        </trans-unit>
        <trans-unit>
          <source>&#x27;This is a sample string&#x27;&amp;lt;tab&amp;gt;&#x27;T&amp;auml;m&amp;auml; on esimerkkimerkkijono&#x27;</source>
          <target>&amp;#39;这是一个示例字符串&amp;#39; &amp;lt;tab&amp;gt; &amp;#39;这是一个示例字符串&amp;#39;</target>
        </trans-unit>
        <trans-unit>
          <source>t</source>
          <target>吨</target>
        </trans-unit>
        <trans-unit>
          <source>A root directory contains a Bin subdirectory.</source>
          <target>一个根目录包含一个 Bin 子目录。</target>
        </trans-unit>
        <trans-unit>
          <source>Unix and Unix-like systems, Linux, AIX, Xenix, Mac OS X, BeOS, Amiga, RISC OS</source>
          <target>Unix 和类 Unix 系统、Linux、AIX、Xenix、Mac OS X、BeOS、Amiga、RISC OS</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Original encoding&lt;/em&gt; specifies the original encoding (i.e. character set) that is used in the  database.</source>
          <target>&lt;em&gt;原始编码&lt;/em&gt;指定数据库中使用的原始编码（即字符集）。</target>
        </trans-unit>
        <trans-unit>
          <source>Include those rows that has &lt;em&gt;New&lt;/em&gt; status.</source>
          <target>包括具有“&lt;em&gt;新建”&lt;/em&gt;状态的那些行。</target>
        </trans-unit>
        <trans-unit>
          <source>Set view options.</source>
          <target>设置视图选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Context is the  value of tuid attribute of tu element. If there is no tuid attribute or its value is empty then string value is used.</source>
          <target>上下文是 tu 元素的 tuid 属性值。如果没有 tuid 属性或其值为空，则使用字符串值。</target>
        </trans-unit>
        <trans-unit>
          <source>Runtime language change enabled application</source>
          <target>运行时语言更改启用的应用程序</target>
        </trans-unit>
        <trans-unit>
          <source>If this is checked the global setting will be copied into the project before 
  scanning process.</source>
          <target>如果选中此项，则全局设置将在扫描过程之前复制到项目中。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked locked flags are written to the file.</source>
          <target>如果选中，则将锁定标志写入文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Click this to break the sample string into the pieces.</source>
          <target>单击此按钮可将示例字符串分成几部分。</target>
        </trans-unit>
        <trans-unit>
          <source>Applied sources</source>
          <target>应用来源</target>
        </trans-unit>
        <trans-unit>
          <source>Select those languages that you want to be included to the exported file.</source>
          <target>选择要包含在导出文件中的语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Signing assembly with PFX</source>
          <target>使用 PFX 签名程序集</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;NetLocalization.htm&quot;&gt;.NET assembly file is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;NetLocalization.htm&quot;&gt;.NET 程序集文件的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Use the &lt;a href=&quot;XmlSourceDialogTagsSheet.htm&quot;&gt;Tags sheet&lt;/a&gt; of &lt;a href=&quot;XmlSourceDialog.htm&quot;&gt;XML Source Dialog&lt;/a&gt; to select what tags you want to translate and how to translate them. The following paragraphs describe more about your choices to configure how to interpret and localize certain kinds of XML elements.</source>
          <target>使用&lt;a href=&quot;XmlSourceDialog.htm&quot;&gt;XML 源对话框&lt;/a&gt;的&lt;a href=&quot;XmlSourceDialogTagsSheet.htm&quot;&gt;标签表&lt;/a&gt;来选择要翻译的标签以及如何翻译它们。以下段落将详细介绍您选择配置如何解释和本地化某些类型的 XML 元素。</target>
        </trans-unit>
        <trans-unit>
          <source>Some languages can be written using two or more different scripts. For example Serbian language is mostly written in   Cyrillic script but it can also be written using Latin script. Chinese is written in two scripts: Simplified and Traditional Chinese. Because there are more than two scripts the language code itself does not uniquely specify the language. This script neutral language code can be used with both scripts. The following table show different language, script and country combinations on three different languages:</source>
          <target>某些语言可以使用两个或多个不同的脚本编写。例如，塞尔维亚语主要用西里尔字母书写，但也可以用拉丁字母书写。中文用两种文字书写：简体中文和繁体中文。因为有两个以上的脚本，语言代码本身并不唯一指定语言。此脚本中性语言代码可用于两种脚本。下表显示了三种不同语言的不同语言、文字和国家/地区组合：</target>
        </trans-unit>
        <trans-unit>
          <source>Accept regular expressions</source>
          <target>接受正则表达式</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to set the import options for translated project.</source>
          <target>使用此表设置已翻译项目的导入选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies characters that are ignored when finding match for an imported value. Possible options  are:</source>
          <target>指定在查找导入值的匹配项时忽略的字符。可能的选项是：</target>
        </trans-unit>
        <trans-unit>
          <source>Inconsistent dialog filter string</source>
          <target>不一致的对话框过滤器字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Separate values by a comma.</source>
          <target>用逗号分隔值。</target>
        </trans-unit>
        <trans-unit>
          <source>Visual Basic (Win32) form file</source>
          <target>Visual Basic (Win32) 表单文件</target>
        </trans-unit>
        <trans-unit>
          <source>You can later include &lt;a href=&quot;ExcludeResourceTypes.htm&quot;&gt;binary resources&lt;/a&gt; and &lt;a href=&quot;ExcludeDataTypes.htm&quot;&gt;binary data types&lt;/a&gt;.</source>
          <target>您可以稍后包含&lt;a href=&quot;ExcludeResourceTypes.htm&quot;&gt;二进制资源&lt;/a&gt;和&lt;a href=&quot;ExcludeDataTypes.htm&quot;&gt;二进制数据类型&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Context file name</source>
          <target>上下文文件名</target>
        </trans-unit>
        <trans-unit>
          <source>The following code changes the language and translates dynamic properties.</source>
          <target>以下代码更改语言并翻译动态属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Works with Delphi applications</source>
          <target>适用于 Delphi 应用程序</target>
        </trans-unit>
        <trans-unit>
          <source>Merges two Sisulizer projects</source>
          <target>合并两个 Sisulizer 项目</target>
        </trans-unit>
        <trans-unit>
          <source>If you have a .pro file we recommend to add it to Sisulizer project. If you do not have it you have to add each .ts and .ui files that you want to localize.</source>
          <target>如果您有 .pro 文件，我们建议将其添加到 Sisulizer 项目中。如果没有，则必须添加要本地化的每个 .ts 和 .ui 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer creates one &lt;a href=&quot;MultilingualPeFiles.htm&quot;&gt;multilingual file&lt;/a&gt; containing all the languages of the project.&lt;br&gt;For example if the original file is MySample.exe, Sisulizer creates all\MySample.exe that contains resources in each language of the project.</source>
          <target>如果选中 Sisulizer，则会创建一个包含项目所有语言的&lt;a href=&quot;MultilingualPeFiles.htm&quot;&gt;多语言文件&lt;/a&gt;。&lt;br&gt;例如，如果原始文件是 MySample.exe，Sisulizer 会创建 all\MySample.exe，其中包含项目的每种语言的资源。</target>
        </trans-unit>
        <trans-unit>
          <source>Replace with</source>
          <target>用。。。来代替</target>
        </trans-unit>
        <trans-unit>
          <source>When you run &lt;a href=&quot;ProjectWizard.htm&quot;&gt;Project Wizard&lt;/a&gt; and there are more that one scanner or no scanner attached to the file extension of your file, Project Wizard shows &lt;a href=&quot;WizardFormatFrame.htm&quot;&gt;Select File Format&lt;/a&gt; sheet that lets you select the scanner to be used. If there are no attached scanners, Sisulizer will show all available scanners. Select the one that you want to use. If the file extension of your file has been attached to more that one scanners Sisulizer shows only those scanner. If you want Sisulizer to show all scanners check &lt;em&gt;Show all file types&lt;/em&gt;.</source>
          <target>当您运行&lt;a href=&quot;ProjectWizard.htm&quot;&gt;Project Wizard&lt;/a&gt;并且文件的文件扩展名附加了多个扫描仪或没有附加扫描仪时，Project Wizard 会显示“&lt;a href=&quot;WizardFormatFrame.htm&quot;&gt;选择文件格式”&lt;/a&gt;表，让您选择要使用的扫描仪。如果没有连接的扫描仪，Sisulizer 将显示所有可用的扫描仪。选择您要使用的那个。如果您的文件的文件扩展名已附加到多个扫描仪，则 Sisulizer 仅显示那些扫描仪。如果您希望 Sisulizer 显示所有扫描仪，请选中&lt;em&gt;Show all file types&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit>
          <source>Use compatible language id whenever possible</source>
          <target>尽可能使用兼容的语言 ID</target>
        </trans-unit>
        <trans-unit>
          <source>Read more about &lt;a href=&quot;ImportExistingTranslations.htm&quot;&gt;importing existing translations&lt;/a&gt;</source>
          <target>阅读有关&lt;a href=&quot;ImportExistingTranslations.htm&quot;&gt;导入现有翻译的&lt;/a&gt;更多信息</target>
        </trans-unit>
        <trans-unit>
          <source>Add country</source>
          <target>添加国家</target>
        </trans-unit>
        <trans-unit>
          <source>If you select this Sisulizer localizes a text file.</source>
          <target>如果您选择此 Sisulizer 本地化文本文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Workplace is splitted horizontically. Visual editor (if any) is show on the left side. Sheet on the right side.</source>
          <target>工作场所被水平分割。可视化编辑器（如果有）显示在左侧。右侧的表。</target>
        </trans-unit>
        <trans-unit>
          <source>Values of the localize attribute that disable localization</source>
          <target>禁用本地化的 localize 属性值</target>
        </trans-unit>
        <trans-unit>
          <source>Header and Record</source>
          <target>标题和记录</target>
        </trans-unit>
        <trans-unit>
          <source>The second sample row contains two lines &amp;quot;First line&amp;lt;cr&amp;gt;&amp;lt;lf&amp;gt;Second line&amp;quot;. Exported lines will be</source>
          <target>第二个示例行包含两行“第一行&amp;lt;cr&amp;gt;&amp;lt;lf&amp;gt;第二行”。导出的行将是</target>
        </trans-unit>
        <trans-unit>
          <source>For example the string in the following two lines are not localized.</source>
          <target>例如以下两行中的字符串未本地化。</target>
        </trans-unit>
        <trans-unit>
          <source>OTHER RESTRICTIONS&lt;br&gt;
  You may not modify, reverse engineer, decompile or disassemble this software in any way, including changing or removing any messages or windows.</source>
          <target>其他限制&lt;br&gt;您不得以任何方式修改、反向工程、反编译或反汇编本软件，包括更改或删除任何消息或窗口。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer supports several operating systems, compilers, file formats and data storages. The following table contains the supported file formats:</source>
          <target>Sisulizer 支持多种操作系统、编译器、文件格式和数据存储。下表包含支持的文件格式：</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the source dialog that lets you edits the propertis of the selected source.</source>
          <target>显示允许您编辑所选源的属性的源对话框。</target>
        </trans-unit>
        <trans-unit>
          <source>Saves the current text from the log pane to a text file.</source>
          <target>将日志窗格中的当前文本保存到文本文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Sets the default segmentation rules. This removes all custom rules from the list.</source>
          <target>设置默认分段规则。这将从列表中删除所有自定义规则。</target>
        </trans-unit>
        <trans-unit>
          <source>Table of contents is sorted such way that it first contains pages and then sub folders.</source>
          <target>目录的排序方式是，它首先包含页面，然后是子文件夹。</target>
        </trans-unit>
        <trans-unit>
          <source>This is the validation result list. It contains the validation results.</source>
          <target>这是验证结果列表。它包含验证结果。</target>
        </trans-unit>
        <trans-unit>
          <source>When using the project localization user selects a project file (.csproj, vbproj, .bdsproj) or solution file (.sln) of the application to be localized. Sisulizer reads the project file(s) to find out the resource files (.xaml, .resx or .txt) that need to be localized. On the build process Sisulizer creates the localized resource files. Sisulizer can automatically compile the created localized resource files into compiled resource files (.resources) and finally link the compiled resource files to &lt;a href=&quot;SatelliteAssembly.htm&quot;&gt;satellite assembly&lt;/a&gt; files (.dll).</source>
          <target>使用项目本地化时，用户选择要本地化的应用程序的项目文件（.csproj、vbproj、.bdsproj）或解决方案文件（.sln）。 Sisulizer 读取项目文件以找出需要本地化的资源文件（.xaml、.resx 或 .txt）。在构建过程中，Sisulizer 创建本地化的资源文件。 Sisulizer 可以自动将创建的本地化资源文件编译为已编译的资源文件（.resources），并最终将已编译的资源文件链接到&lt;a href=&quot;SatelliteAssembly.htm&quot;&gt;卫星程序集&lt;/a&gt;文件（.dll）。</target>
        </trans-unit>
        <trans-unit>
          <source>ResX resource data. ResX is the standard resource format of all .NET projects. WinForms projects uses it to store both user interface and resource items. WPF and Silverlight use it to store resource items.</source>
          <target>ResX 资源数据。 ResX 是所有 .NET 项目的标准资源格式。 WinForms 项目使用它来存储用户界面和资源项。 WPF 和 Silverlight 使用它来存储资源项。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure Visual Basic settings.</source>
          <target>使用此对话框配置 Visual Basic 设置。</target>
        </trans-unit>
        <trans-unit>
          <source>When you localize PO file with Sisulizer add the original .pot file into Sisulizer project. If you do not use .pot files select the original .po file. When &lt;a href=&quot;Introduction.htm#Build&quot;&gt;building&lt;/a&gt; the project Sisulizer creates the localized PO file. Sisulizer also compiles the created PO files into binary MO files.</source>
          <target>当您使用 Sisulizer 本地化 PO 文件时，将原始 .pot 文件添加到 Sisulizer 项目中。如果您不使用 .pot 文件，请选择原始 .po 文件。&lt;a href=&quot;Introduction.htm#Build&quot;&gt;构建&lt;/a&gt;项目时，Sisulizer 会创建本地化的 PO 文件。 Sisulizer 还将创建的 PO 文件编译为二进制 MO 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows only those duplicate rows that have  translations.</source>
          <target>只显示那些有翻译的重复行。</target>
        </trans-unit>
        <trans-unit>
          <source>Block field specifies what is the order of the block in the data sequence. The first extended data block has block number 0 or 1 depending on the logic of your application. Each bock after that increase the block number by one. For example if the maximum field size is 64K and your data is 200 kbytes then the main field contains first 64 kbytes, the first exteneded block next 64 kbytes, the second block next 64 kbytes and third block the last 2 kbytes.</source>
          <target>块字段指定块在数据序列中的顺序。第一个扩展数据块的块号为 0 或 1，具体取决于应用程序的逻辑。之后的每个块都将块号增加一。例如，如果最大字段大小为 64K 并且您的数据为 200 KB，则主字段包含前 64 KB，第一个扩展块接下来 64 KB，第二个块接下来 64 KB 和第三个块最后 2 KB。</target>
        </trans-unit>
        <trans-unit>
          <source>The tree contains both standard items and custom items. Standard items are the items known by Sisulizer and/or your operating system. Custom items are items that you have added.</source>
          <target>该树包含标准项目和自定义项目。标准项目是 Sisulizer 和/或您的操作系统已知的项目。自定义项目是您添加的项目。</target>
        </trans-unit>
        <trans-unit>
          <source>This does not need .tra because in Taiwan only Traditional Chinese is used</source>
          <target>这不需要 .tra 因为在台湾只使用繁体中文</target>
        </trans-unit>
        <trans-unit>
          <source>These contain data of embedded XML files.</source>
          <target>这些包含嵌入的 XML 文件的数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to customize how the toolbar of the form editor looks like.</source>
          <target>使用此工作表自定义表单编辑器工具栏的外观。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows a list of excluded validaitons. You can remove the selected one by clicking the Remove button or remove all excludes by clicking the Remove All button.</source>
          <target>显示排除的验证列表。您可以通过单击“删除”按钮删除选定的一项，或通过单击“全部删除”按钮删除所有排除项。</target>
        </trans-unit>
        <trans-unit>
          <source>Translate the selected column using &lt;a href=&quot;TranslationEnginesDialogInternalTranslationMemory.htm&quot;&gt;translation engines&lt;/a&gt;.</source>
          <target>使用&lt;a href=&quot;TranslationEnginesDialogInternalTranslationMemory.htm&quot;&gt;翻译引擎&lt;/a&gt;翻译选定的列。</target>
        </trans-unit>
        <trans-unit>
          <source>Specified a command line string that is run to add a digital signature. You can include a %s as a placeholder for the file to be signed. If no placeholder is included then the file name is appended to the command line.</source>
          <target>指定运行以添加数字签名的命令行字符串。您可以包含一个 %s 作为要签名的文件的占位符。如果未包含占位符，则将文件名附加到命令行。</target>
        </trans-unit>
        <trans-unit>
          <source>The user has changed component mapping values from the default values.</source>
          <target>用户已从默认值更改了组件映射值。</target>
        </trans-unit>
        <trans-unit>
          <source>Restores all  modified rules to the default value.</source>
          <target>将所有修改的规则恢复为默认值。</target>
        </trans-unit>
        <trans-unit>
          <source>Do not add context or id part into the pseudo translated value.</source>
          <target>不要将上下文或 id 部分添加到伪翻译值中。</target>
        </trans-unit>
        <trans-unit>
          <source>Compares the original and localized resource data of selected node in a binary format.</source>
          <target>以二进制格式比较所选节点的原始和本地化资源数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies where the tag is read from. Possible values are any combination of following values:</source>
          <target>指定从何处读取标记。可能的值是以下值的任意组合：</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer project file</source>
          <target>Sisulizer 项目文件</target>
        </trans-unit>
        <trans-unit>
          <source>Component has been automatically mapped based on the name of the component class.</source>
          <target>组件已根据组件类的名称自动映射。</target>
        </trans-unit>
        <trans-unit>
          <source>Unfortunately some tools can not cope that well with country netural language codes (e.g. &amp;quot;en&amp;quot; vs. &amp;quot;en-US&amp;quot;). If the other tool that you use requires country part you can change the language code to be used by right clicking the Language list box and choosing Edit. The dialog lets you to define a language that is used when writing tuv elements of the TMX file. For example if you select English in our sample,  right click and change the language to English (United States), Sisulizer will write your previous tuv element as</source>
          <target>不幸的是，一些工具不能很好地处理国家网络语言代码（例如“en”与“en-US”）。如果您使用的其他工具需要国家/地区部分，您可以通过右键单击语言列表框并选择编辑来更改要使用的语言代码。该对话框允许您定义在编写 TMX 文件的 tuv 元素时使用的语言。例如，如果您在我们的示例中选择英语，右键单击并将语言更改为英语（美国），Sisulizer 会将您之前的 tuv 元素写为</target>
        </trans-unit>
        <trans-unit>
          <source>Parser to be used</source>
          <target>要使用的解析器</target>
        </trans-unit>
        <trans-unit>
          <source>Item has been translated but not verified yet.</source>
          <target>项目已翻译但尚未验证。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the available Android virtual devices.</source>
          <target>显示可用的 Android 虚拟设备。</target>
        </trans-unit>
        <trans-unit>
          <source>Import files do not exist or are out of date</source>
          <target>导入文件不存在或已过期</target>
        </trans-unit>
        <trans-unit>
          <source>Missing tab</source>
          <target>缺少标签</target>
        </trans-unit>
        <trans-unit>
          <source>Build relative paths to files</source>
          <target>构建文件的相对路径</target>
        </trans-unit>
        <trans-unit>
          <source>Help menu</source>
          <target>帮助菜单</target>
        </trans-unit>
        <trans-unit>
          <source>Tip of the Day</source>
          <target>每日提示</target>
        </trans-unit>
        <trans-unit>
          <source>Change fonts</source>
          <target>更改字体</target>
        </trans-unit>
        <trans-unit>
          <source>By default Sisulizer reads  string resources as plain strings. In most cases this is what you want. However some strings might contain structured data such as XML, HTML or combined strings. You can make Sisulizer to parse string data in more detailed. Possible  string formats are:</source>
          <target>默认情况下，Sisulizer 将字符串资源作为普通字符串读取。在大多数情况下，这就是您想要的。但是，某些字符串可能包含结构化数据，例如 XML、HTML 或组合字符串。您可以让 Sisulizer 更详细地解析字符串数据。可能的字符串格式有：</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to export data to Resx files.</source>
          <target>使用此表将数据导出到 Resx 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Create one multilingual file containing all the languages of the project.</source>
          <target>创建一个包含项目所有语言的多语言文件。</target>
        </trans-unit>
        <trans-unit>
          <source>A string is duplicate if the same string exists on more that one location in the project. If one of those rows has a value, it is copied to the other rows. If the string has been translated in two or more different way the &lt;a href=&quot;SelectTranslationDialog.htm&quot;&gt;Select Translation dialog box&lt;/a&gt; is shown. It lets you select the translation that is used.</source>
          <target>如果相同的字符串存在于项目中的多个位置，则该字符串是重复的。如果这些行之一具有值，则将其复制到其他行。如果字符串以两种或多种不同的方式进行了&lt;a href=&quot;SelectTranslationDialog.htm&quot;&gt;翻译，则会&lt;/a&gt;显示“&lt;a href=&quot;SelectTranslationDialog.htm&quot;&gt;选择翻译”对话框&lt;/a&gt;。它允许您选择使用的翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies when Sisulizer overwrites the existing translation in the translation engine. Possible options are:</source>
          <target>指定 Sisulizer 何时覆盖翻译引擎中的现有翻译。可能的选项是：</target>
        </trans-unit>
        <trans-unit>
          <source>For example if we have the following ini file:</source>
          <target>例如，如果我们有以下 ini 文件：</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer&#x27;s Text\JSON directory contains JSON samples.</source>
          <target>Sisulizer 的 Text\JSON 目录包含 JSON 示例。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;RightToLeft&lt;/em&gt; property specifies the reading order. If the value is Yes the reading order of the control is right to left. If the value is No the reading order is left to right. Inherited value means that the control use the reading order of its parent control. Default value is Inherited. Leave this to Inherited. Sisulizer will change the value if needed.</source>
          <target>&lt;em&gt;RightToLeft&lt;/em&gt;属性指定阅读顺序。如果值为 Yes，则控件的读取顺序为从右到左。如果值为否，则阅读顺序是从左到右。继承值意味着控件使用其父控件的读取顺序。默认值为继承。将此留给继承。如果需要，Sisulizer 将更改该值。</target>
        </trans-unit>
        <trans-unit>
          <source>Quiet mode. Only errors are shown.</source>
          <target>静音模式。只显示错误。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the localization options.</source>
          <target>指定本地化选项。</target>
        </trans-unit>
        <trans-unit>
          <source>SlMake syntax is:</source>
          <target>SlMake 语法是：</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies how the localized resource should be named. Possible values are:</source>
          <target>指定应如何命名本地化资源。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Engineering variant of English (United States)</source>
          <target>英语的工程变体（美国）</target>
        </trans-unit>
        <trans-unit>
          <source>Support for TypeScript</source>
          <target>支持打字稿</target>
        </trans-unit>
        <trans-unit>
          <source>JBuilder project file (.jpx, .jpr)</source>
          <target>JBuilder 项目文件（.jpx、.jpr）</target>
        </trans-unit>
        <trans-unit>
          <source>To all strings in the line</source>
          <target>行中的所有字符串</target>
        </trans-unit>
        <trans-unit>
          <source>.NET&#x27;s satellite assemblies and runtime language change</source>
          <target>.NET 的附属程序集和运行时语言更改</target>
        </trans-unit>
        <trans-unit>
          <source>Ignore special characters</source>
          <target>忽略特殊字符</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the mode of the property rule. Possible choices are:</source>
          <target>指定属性规则的模式。可能的选择是：</target>
        </trans-unit>
        <trans-unit>
          <source>If checked clears the status in the visual components.</source>
          <target>如果选中，则清除可视组件中的状态。</target>
        </trans-unit>
        <trans-unit>
          <source>no</source>
          <target>不</target>
        </trans-unit>
        <trans-unit>
          <source>First line&lt;strong&gt;#c#l&lt;/strong&gt;Second line&amp;lt;tab&amp;gt;Ensimm&amp;auml;inen rivi&lt;strong&gt;#n&lt;/strong&gt;Toinen rivi</source>
          <target>第一行&lt;strong&gt;# c # l&lt;/strong&gt;第二行 &amp;lt;tab&amp;gt; 第一行&lt;strong&gt;#n&lt;/strong&gt;第二行</target>
        </trans-unit>
        <trans-unit>
          <source>This group lets you include and exclude items based on other properties.</source>
          <target>该组允许您根据其他属性包括和排除项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer localizes all strings except those that have an exclude tag. You can also use information/include tags to give some properties such as comments and maximum lengths.</source>
          <target>Sisulizer 本地化所有字符串，除了那些带有 exclude 标签的字符串。您还可以使用信息/包含标签来提供一些属性，例如注释和最大长度。</target>
        </trans-unit>
        <trans-unit>
          <source>String is a &lt;a href=&quot;CombinedStrings.htm&quot;&gt;combined string&lt;/a&gt; that is split into several part using a &lt;a href=&quot;RegularExpressions.htm&quot;&gt;regular expression&lt;/a&gt;.</source>
          <target>字符串是使用&lt;a href=&quot;RegularExpressions.htm&quot;&gt;正则表达式&lt;/a&gt;拆分成几个部分的&lt;a href=&quot;CombinedStrings.htm&quot;&gt;组合字符串&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Original is all spaces</source>
          <target>原始是所有空格</target>
        </trans-unit>
        <trans-unit>
          <source>Use Project Wizard to create a Sisulizer project containing the database. After you have selected the database on the Database sheet you have to set the field properties.&lt;!-- #EndLibraryItem --&gt;If you use the standard field name convention for localized fields Sisulizer will automatically detect the fields to be localized ones. The standard localized field name is a combination of the original field name and the language code (e.g. German field name of Name field would be Name&lt;strong&gt;_de&lt;/strong&gt; or Name&lt;strong&gt;De&lt;/strong&gt;). Instead of language code you can also use Windows language or locale number (e.g. German field name of Name would be Name&lt;strong&gt;_7&lt;/strong&gt; or Name&lt;strong&gt;7&lt;/strong&gt;). If you do not use the standard localized field name convention you must drag localized fields as a child fields of the original fields and set the language of the field by right clicking and choosing the language from the Languages menu.</source>
          <target>使用项目向导创建包含数据库的 Sisulizer 项目。在数据库表上选择数据库后，您必须设置字段属性。&lt;!-- #EndLibraryItem --&gt;如果您对本地化字段使用标准字段名称约定，Sisulizer 将自动检测要本地化的字段。标准的本地化字段名称是原始字段名称和语言代码的组合（例如 Name 字段的德语字段名称将是 Name &lt;strong&gt;_de&lt;/strong&gt;或 Name &lt;strong&gt;De&lt;/strong&gt; ）。除了语言代码，您还可以使用 Windows 语言或区域设置编号（例如 Name 的德语字段名称将是 Name &lt;strong&gt;_7&lt;/strong&gt;或 Name &lt;strong&gt;7&lt;/strong&gt; ）。如果您不使用标准的本地化字段名称约定，您必须将本地化字段作为原始字段的子字段拖动，并通过右键单击并从语言菜单中选择语言来设置字段的语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to set a file mapping properties.</source>
          <target>使用此对话框设置文件映射属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Show row status</source>
          <target>显示行状态</target>
        </trans-unit>
        <trans-unit>
          <source>If a string contains only characters listed in the edit box Sisulizer excluded the string. The exclude characters are specifies by the following options:</source>
          <target>如果一个字符串只包含编辑框中列出的字符，则 Sisulizer 排除该字符串。排除字符由以下选项指定：</target>
        </trans-unit>
        <trans-unit>
          <source>Set the priority of the node. Possible values are:</source>
          <target>设置节点的优先级。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>All items are shown no matter what is their state.</source>
          <target>无论项目处于何种状态，都会显示所有项目。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked a row status column is added after all translation columns.</source>
          <target>如果选中，则在所有翻译列之后添加行状态列。</target>
        </trans-unit>
        <trans-unit>
          <source>Version numbers</source>
          <target>版本号</target>
        </trans-unit>
        <trans-unit>
          <source>Test for | Duplicate Hotkeys</source>
          <target>测试 |重复热键</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to enter package information such as name and author. All information data is optional.</source>
          <target>使用此表输入包信息，例如名称和作者。所有信息数据都是可选的。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the height of the editor is adjusted automatically to fit the form.</source>
          <target>如果选中，编辑器的高度会自动调整以适应表单。</target>
        </trans-unit>
        <trans-unit>
          <source>Skip row</source>
          <target>跳过行</target>
        </trans-unit>
        <trans-unit>
          <source>Support for Delphi 10.1 Berlin and C++Builder 10.1 Berlin</source>
          <target>支持 Delphi 10.1 Berlin 和 C++Builder 10.1 Berlin</target>
        </trans-unit>
        <trans-unit>
          <source>The United States of America is a federal republic of 50 states, located primary on central North America. This is the first extension for US description. This is the second extension for US description.</source>
          <target>美利坚合众国是一个由 50 个州组成的联邦共和国，主要位于北美洲中部。这是美国描述的第一个扩展。这是美国描述的第二个扩展。</target>
        </trans-unit>
        <trans-unit>
          <source>Use localized items</source>
          <target>使用本地化项目</target>
        </trans-unit>
        <trans-unit>
          <source>Do not use duplicate state when filtering rows.</source>
          <target>过滤行时不要使用重复状态。</target>
        </trans-unit>
        <trans-unit>
          <source>Write context</source>
          <target>写上下文</target>
        </trans-unit>
        <trans-unit>
          <source>Shows both the original and localized RC files.</source>
          <target>显示原始和本地化的 RC 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>If your &lt;a href=&quot;CustomData.htm&quot;&gt;custom binary resource data&lt;/a&gt; is not picture, text, HTML or XML it is most likely in proprietary format. If this is the case Sisulizer can not automatically parse the data because it does not know the format. However you can tech Sisulizer the format by specifying a syntax string. After that Sisulizer can read and write the custom resource data.</source>
          <target>如果您的&lt;a href=&quot;CustomData.htm&quot;&gt;自定义二进制资源数据&lt;/a&gt;不是图片、文本、HTML 或 XML，它很可能是专有格式。如果是这种情况，Sisulizer 无法自动解析数据，因为它不知道格式。但是，您可以通过指定语法字符串来技术 Sisulizer 格式。之后 Sisulizer 就可以读写自定义资源数据了。</target>
        </trans-unit>
        <trans-unit>
          <source>Perl source code</source>
          <target>Perl 源代码</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to select the database that you want to localize.</source>
          <target>使用此表选择要本地化的数据库。</target>
        </trans-unit>
        <trans-unit>
          <source>Add context column as the last column.</source>
          <target>添加上下文列作为最后一列。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer&#x27;s FireMonkey\Converter directory contains a sample that shows how to localize a FireMonkey application with multiple targets.</source>
          <target>Sisulizer 的 FireMonkey\Converter 目录包含一个示例，该示例展示了如何本地化具有多个目标的 FireMonkey 应用程序。</target>
        </trans-unit>
        <trans-unit>
          <source>implementation


uses
  &lt;strong&gt;System.Threading,&lt;/strong&gt;
  &lt;strong&gt;System.Globalization;&lt;/strong&gt;

initialization
  // Add this line of code
  &lt;strong&gt;Thread.CurrentThread.CurrentUICulture := CultureInfo.CurrentCulture;&lt;/strong&gt;
end</source>
          <target>实现使用&lt;strong&gt;System.Threading,&lt;/strong&gt; &lt;strong&gt;System.Globalization;&lt;/strong&gt;初始化 // 添加这行代码&lt;strong&gt;Thread.CurrentThread.CurrentUICulture := CultureInfo.CurrentCulture;&lt;/strong&gt;结尾</target>
        </trans-unit>
        <trans-unit>
          <source>Hide all the excluded rows</source>
          <target>隐藏所有排除的行</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;strong&gt;Note!&lt;/strong&gt; Library files are not  used by all spell checker engines.</source>
          <target>&lt;strong&gt;笔记！&lt;/strong&gt;并非所有拼写检查引擎都使用库文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Sample that demonstrates how to use combined strings</source>
          <target>演示如何使用组合字符串的示例</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer introduces much easier and more extensive localization method that allows you to directly localize Designer files (.ui). You only have to use TR function and .ts file on those strings that are used in source code such as message format strings. Your user interface is in .ui files. Sisulizer scans the original .ui file and shows the items visually on Sisulizer project. In the traditional way you could only localize string of the .ui files and without context. Using Sisulizer you can localize also position, size, color and font data of your user interface. All visually.</source>
          <target>Sisulizer 引入了更简单、更广泛的本地化方法，允许您直接本地化 Designer 文件 (.ui)。您只需对源代码中使用的那些字符串（例如消息格式字符串）使用 TR 函数和 .ts 文件。您的用户界面位于 .ui 文件中。 Sisulizer 扫描原始 .ui 文件并在 Sisulizer 项目上直观地显示项目。在传统方式中，您只能本地化 .ui 文件的字符串而没有上下文。使用 Sisulizer，您还可以本地化用户界面的位置、大小、颜色和字体数据。都是视觉上的。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked only form data is scanned from RcData resources.</source>
          <target>如果选中，则仅从 RcData 资源扫描表单数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Do not use&lt;em&gt; Invalidated&lt;/em&gt;&lt;em&gt; &lt;/em&gt;state when filtering rows.</source>
          <target>不要使用&lt;em&gt;无效&lt;/em&gt;&lt;em&gt; &lt;/em&gt;过滤行时的状态。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify a project file to be localized and the location and naming of the localized files that Sisulizer creates.</source>
          <target>使用此表指定要本地化的项目文件以及 Sisulizer 创建的本地化文件的位置和命名。</target>
        </trans-unit>
        <trans-unit>
          <source>Main class</source>
          <target>主班</target>
        </trans-unit>
        <trans-unit>
          <source>Your can edit only custom languages (e.g. language that you have added). All other are read only so you can only view them.</source>
          <target>您只能编辑自定义语言（例如您添加的语言）。所有其他都是只读的，因此您只能查看它们。</target>
        </trans-unit>
        <trans-unit>
          <source>Library file</source>
          <target>库文件</target>
        </trans-unit>
        <trans-unit>
          <source>The following dialog boxes are used to configure and use translation engines.</source>
          <target>以下对话框用于配置和使用翻译引擎。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;a href=&quot;ImportingData.htm&quot;&gt;Importing&lt;/a&gt; and &lt;a href=&quot;ExportWizard.htm&quot;&gt;exporting&lt;/a&gt;</source>
          <target>&lt;a href=&quot;ImportingData.htm&quot;&gt;导入&lt;/a&gt;和&lt;a href=&quot;ExportWizard.htm&quot;&gt;导出&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit>
          <source>As above but also those paragraphs that contain sub tags are segmented.</source>
          <target>如上所述，但那些包含子标签的段落也被分段。</target>
        </trans-unit>
        <trans-unit>
          <source>Paste original value to the selected language cell.</source>
          <target>将原始值粘贴到选定的语言单元格。</target>
        </trans-unit>
        <trans-unit>
          <source>Click &lt;em&gt;Buy/Get account&lt;/em&gt; button to go to the online store of the machine translator. Get the account and then enter user name and password that you received. Finally click OK to install the machine translator.</source>
          <target>单击&lt;em&gt;购买/获取帐户&lt;/em&gt;按钮转到机器翻译的在线商店。获取帐户，然后输入您收到的用户名和密码。最后点击确定安装机器翻译器。</target>
        </trans-unit>
        <trans-unit>
          <source>Windows binary file compiled by Delphi</source>
          <target>Delphi 编译的 Windows 二进制文件</target>
        </trans-unit>
        <trans-unit>
          <source>Clone original database</source>
          <target>克隆原始数据库</target>
        </trans-unit>
        <trans-unit>
          <source>Use this menu to change the &lt;a href=&quot;WorkingWithTranslationSheet.htm#TranslationStatus&quot;&gt;status of the translation&lt;/a&gt;.</source>
          <target>使用此菜单更改&lt;a href=&quot;WorkingWithTranslationSheet.htm#TranslationStatus&quot;&gt;翻译状态&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>There must be one context value and at least one text value in a record. Optionally it can contain any number of ignored values and one comment value. For each value you add a rule into text definitions. Each rule can have before and/or after expression that defines the characters that start or end the value. Each rule can have either both, either one or no expression. A before expression is not needed if the rule is the first rule or the previous rule contains an after expression. An after expression is not needed if the next rule contains a before expression.</source>
          <target>记录中必须有一个上下文值和至少一个文本值。可选地，它可以包含任意数量的忽略值和一个注释值。对于每个值，您将规则添加到文本定义中。每个规则都可以具有定义开始或结束值的字符的 before 和/或 after 表达式。每条规则都可以有两个表达式，一个表达式或没有表达式。如果规则是第一条规则或前一条规则包含 after 表达式，则不需要 before 表达式。如果下一条规则包含 before 表达式，则不需要 after 表达式。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Scroll Bars&lt;/em&gt; specifies if the project tree uses scroll bars. Possible values are:</source>
          <target>&lt;em&gt;滚动条&lt;/em&gt;指定项目树是否使用滚动条。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to purchase and install a &lt;a href=&quot;TranslationEngines.htm#MachineTranslator&quot;&gt;machine translator&lt;/a&gt; account and to install the machine translator into Sisulizer.</source>
          <target>使用此对话框购买和安装&lt;a href=&quot;TranslationEngines.htm#MachineTranslator&quot;&gt;机器翻译器&lt;/a&gt;帐户并将机器翻译器安装到 Sisulizer。</target>
        </trans-unit>
        <trans-unit>
          <source>Contains a list of available main languages and sub languages. Add a language by dragging it to the Selected languages list, by double clicking the language, or by selecting the language and pressing the right arrow (-&amp;gt;) button.</source>
          <target>包含可用的主要语言和子语言的列表。添加一种语言，方法是将其拖到已选择的语言列表中、双击语言或选择语言并按向右箭头 (-&amp;gt;) 按钮。</target>
        </trans-unit>
        <trans-unit>
          <source>If there is only one configure spell checker for the language Sisulizer will always use it. If there are more than one the rules to choose are:</source>
          <target>如果语言只有一个配置拼写检查器，Sisulizer 将始终使用它。如果有多个规则可供选择：</target>
        </trans-unit>
        <trans-unit>
          <source>CSV files</source>
          <target>CSV 文件</target>
        </trans-unit>
        <trans-unit>
          <source>Specifes the information need to login to a FTP server.</source>
          <target>指定登录 FTP 服务器所需的信息。</target>
        </trans-unit>
        <trans-unit>
          <source>The legacy coding is always used,  even with .NET 4.0 or later.</source>
          <target>即使使用 .NET 4.0 或更高版本，也始终使用旧编码。</target>
        </trans-unit>
        <trans-unit>
          <source>How Sisulizer selects what checker to use</source>
          <target>Sisulizer 如何选择要使用的检查器</target>
        </trans-unit>
        <trans-unit>
          <source>Importing Text and CSV Files</source>
          <target>导入文本和 CSV 文件</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the language pair that is imported.</source>
          <target>显示导入的语言对。</target>
        </trans-unit>
        <trans-unit>
          <source>Some string or binary fields may contain structured data (e.g. HTML, XML, binary data). In that case Sisulizer tried to detect the format. In most cases it succeed to detect it. However some data formats can not be detected (e.g. &lt;a href=&quot;CombinedStrings.htm&quot;&gt;combined strings&lt;/a&gt;). In that case you have to specify the format. After initial scan select the node of the database field in the project tree, right click it and choose Properties. A Database Field dialog appears. Uncheck Automatic format check box and specify the format.</source>
          <target>某些字符串或二进制字段可能包含结构化数据（例如 HTML、XML、二进制数据）。在这种情况下，Sisulizer 试图检测格式。在大多数情况下，它会成功检测到它。但是，无法检测某些数据格式（例如&lt;a href=&quot;CombinedStrings.htm&quot;&gt;组合字符串&lt;/a&gt;）。在这种情况下，您必须指定格式。初始扫描后在项目树中选择数据库字段的节点，右键单击它并选择属性。出现数据库字段对话框。取消选中自动格式复选框并指定格式。</target>
        </trans-unit>
        <trans-unit>
          <source>String size</source>
          <target>字符串大小</target>
        </trans-unit>
        <trans-unit>
          <source>Binds this comment item to a text item. This is visible only if the Type is set to &lt;em&gt;comment&lt;/em&gt; and purpose of the definition is localize or import a file.</source>
          <target>将此注释项绑定到文本项。仅当 Type 设置为&lt;em&gt;comment&lt;/em&gt;并且定义的目的是本地化或导入文件时，这才可见。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer&#x27;s Tutorial directory contains some tutorial files. Each sub directory contains one tutorial.</source>
          <target>Sisulizer 的教程目录包含一些教程文件。每个子目录包含一个教程。</target>
        </trans-unit>
        <trans-unit>
          <source>Comment encoding</source>
          <target>评论编码</target>
        </trans-unit>
        <trans-unit>
          <source>Send project to translator using Exchange Wizard</source>
          <target>使用 Exchange 向导将项目发送给翻译人员</target>
        </trans-unit>
        <trans-unit>
          <source>XLIFF is a standard format to store data that needs to be localized.</source>
          <target>XLIFF 是一种标准格式，用于存储需要本地化的数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Java resource file (.properties or .java) or files</source>
          <target>Java 资源文件（.properties 或 .java）或文件</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;XmlLocalization.htm&quot;&gt;XML file is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;XmlLocalization.htm&quot;&gt;XML 文件的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer localizes browse sequence data (.brs file). Some help authoring tools can add browse sequence elements into CHM file.</source>
          <target>如果选中 Sisulizer 本地化浏览序列数据（.brs 文件）。一些帮助创作工具可以将浏览序列元素添加到 CHM 文件中。</target>
        </trans-unit>
        <trans-unit>
          <source>Select the language where the rule is applied to.</source>
          <target>选择应用规则的语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Ansi strings are written as Unicode strings if the original application was compiled with Unicode enabled VCL (Delphi 6 or later, C++Builder 6 or later) and it contains at least one Unicode string in its form(s).</source>
          <target>如果原始应用程序是使用支持 Unicode 的 VCL（Delphi 6 或更高版本、C++Builder 6 或更高版本）编译的，并且其形式中至少包含一个 Unicode 字符串，则 Ansi 字符串将被编写为 Unicode 字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Add database to the project</source>
          <target>将数据库添加到项目中</target>
        </trans-unit>
        <trans-unit>
          <source>Property contains a string that contains a &lt;a href=&quot;CombinedStrings.htm&quot;&gt;combined string&lt;/a&gt;. Enter the &lt;a href=&quot;RegularExpressions.htm&quot;&gt;regular expression&lt;/a&gt; describing the data in the line(s).</source>
          <target>属性包含一个包含&lt;a href=&quot;CombinedStrings.htm&quot;&gt;组合字符串的字符串&lt;/a&gt;。输入描述行中数据的&lt;a href=&quot;RegularExpressions.htm&quot;&gt;正则表达式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>A reference to a web based DTD file is added to the file.</source>
          <target>对基于 Web 的 DTD 文件的引用被添加到文件中。</target>
        </trans-unit>
        <trans-unit>
          <source>Item contains context value.</source>
          <target>项目包含上下文值。</target>
        </trans-unit>
        <trans-unit>
          <source>Exports items from current project view.</source>
          <target>从当前项目视图导出项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Determines whether the control displays a Help Hint when the mouse pointer rests momentarily on the control.</source>
          <target>确定当鼠标指针暂时停留在控件上时控件是否显示帮助提示。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;WindowsLocalization.htm&quot;&gt;Visual Basic binary file is localized&lt;/a&gt;. 
The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;WindowsLocalization.htm&quot;&gt;Visual Basic 二进制文件的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;SourceCodeLocalization.htm&quot;&gt;source code&lt;/a&gt; file is localized. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;SourceCodeLocalization.htm&quot;&gt;源代码&lt;/a&gt;文件的本地化方式。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the maximum character count that are shown in a cell of a translation grid. If the value is longer than this limit only the first characters up to this limit is shown.</source>
          <target>指定翻译网格的单元格中显示的最大字符数。如果该值超过此限制，则仅显示达到此限制的前几个字符。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows a sample row based on current settings.</source>
          <target>显示基于当前设置的示例行。</target>
        </trans-unit>
        <trans-unit>
          <source>Project Wizard - Source code file</source>
          <target>项目向导 - 源代码文件</target>
        </trans-unit>
        <trans-unit>
          <source>Delete .resources files after the build process</source>
          <target>在构建过程后删除 .resources 文件</target>
        </trans-unit>
        <trans-unit>
          <source>Other options</source>
          <target>其他选项</target>
        </trans-unit>
        <trans-unit>
          <source>For example if the original file is &lt;code&gt;C:\MyFiles\Sample.exe&lt;/code&gt; and the pattern is &lt;code&gt;&amp;lt;file&amp;gt;_&amp;lt;iso&amp;gt;.&amp;lt;ext&amp;gt;&lt;/code&gt; the German (Austria) file will be &lt;code&gt;C:\MyFiles\Sample_de_AT.exe&lt;/code&gt;.</source>
          <target>例如，如果原始文件是&lt;code&gt;C:\MyFiles\Sample.exe&lt;/code&gt;并且模式是&lt;code&gt;&amp;lt;file&amp;gt;_&amp;lt;iso&amp;gt;.&amp;lt;ext&amp;gt;&lt;/code&gt;德语（奥地利）文件将是&lt;code&gt;C:\MyFiles\Sample_de_AT.exe&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit>
          <source>Required value</source>
          <target>所需值</target>
        </trans-unit>
        <trans-unit>
          <source>You can turn this on and off by checking &lt;em&gt;Check grammar as you type&lt;/em&gt; check box on &lt;a href=&quot;GeneralSettingsDialogSpellingSheet.htm&quot;&gt;Spelling sheet&lt;/a&gt; of &lt;a href=&quot;GeneralSettingsDialog.htm&quot;&gt;Tools | General Settings&lt;/a&gt; dialog.</source>
          <target>您可以通过在“&lt;a href=&quot;GeneralSettingsDialog.htm&quot;&gt;工具&lt;/a&gt;”的“&lt;a href=&quot;GeneralSettingsDialogSpellingSheet.htm&quot;&gt;拼写&lt;/a&gt;检查表”上的“&lt;em&gt;键入时&lt;/em&gt;检查&lt;em&gt;语法”&lt;/em&gt;复选框中选中“&lt;em&gt;检查语法”&lt;/em&gt;来打开和关闭此功能&lt;a href=&quot;GeneralSettingsDialog.htm&quot;&gt;。常规设置&lt;/a&gt;对话框。</target>
        </trans-unit>
        <trans-unit>
          <source>If you use Resource localization do the same steps but instead of selecting a satellite assembly file select language related resources file (e.g. MainForm.de.resx for German).</source>
          <target>如果您使用资源本地化，请执行相同的步骤，但不要选择附属程序集文件，而是选择与语言相关的资源文件（例如德语的 MainForm.de.resx）。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;strong&gt;VCL&lt;/strong&gt;: If checked Sisulizer updates the Charset property values of TFont to match the target language. Property is only updated if the original value is set to DEFAULT_CHARSET. This is the default value of the Charset property.</source>
          <target>&lt;strong&gt;VCL&lt;/strong&gt; ：如果选中 Sisulizer 更新 TFont 的 Charset 属性值以匹配目标语言。仅当原始值设置为 DEFAULT_CHARSET 时才会更新属性。这是 Charset 属性的默认值。</target>
        </trans-unit>
        <trans-unit>
          <source>Scan all &lt;a href=&quot;Sources.htm&quot;&gt;sources&lt;/a&gt; to find new and changed items.</source>
          <target>扫描所有&lt;a href=&quot;Sources.htm&quot;&gt;来源&lt;/a&gt;以查找新的和更改的项目。</target>
        </trans-unit>
        <trans-unit>
          <source>add</source>
          <target>添加</target>
        </trans-unit>
        <trans-unit>
          <source>Use the original value in the field.</source>
          <target>使用字段中的原始值。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the range where tag is used. Possible values are:</source>
          <target>指定使用标记的范围。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>The following line has an resource string tag that contains a comment (&amp;quot;A message that is shown when the application starts&amp;quot;):</source>
          <target>以下行有一个包含注释的资源字符串标记（“应用程序启动时显示的消息”）：</target>
        </trans-unit>
        <trans-unit>
          <source>The easiest way to include localized .resx file is to go to Solution Explorer and open a form node. Every localized .resx file is visible there but as disabled (e.g. image is white empty document). Right click the node and choose Include In Project. Repeat this to all localized .resx files. If the file is not visible in the tree click &lt;em&gt;Show all Files&lt;/em&gt; button on Solution Explorer toolbar.</source>
          <target>包含本地化 .resx 文件的最简单方法是转到解决方案资源管理器并打开一个表单节点。每个本地化的 .resx 文件都在那里可见，但被禁用（例如，图像是白色的空文档）。右键单击节点并选择包含在项目中。对所有本地化的 .resx 文件重复此操作。如果文件在树中不可见，请单击解决方案资源管理器工具栏上的&lt;em&gt;显示所有文件&lt;/em&gt;按钮。</target>
        </trans-unit>
        <trans-unit>
          <source>Add this unit to your project to translate tree nodes of TTreeView control and derived.</source>
          <target>将此单元添加到您的项目以翻译 TTreeView 控件和派生的树节点。</target>
        </trans-unit>
        <trans-unit>
          <source>If the user has attached a spell checker for a column or source  Sisulizer uses that.</source>
          <target>如果用户为列附加了拼写检查器或源 Sisulizer 使用它。</target>
        </trans-unit>
        <trans-unit>
          <source>iOS string file (.strings)</source>
          <target>iOS 字符串文件 (.strings)</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies how the string is modified. Possible values are:</source>
          <target>指定如何修改字符串。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Plain text file contain plain text. Sisulizer can either read complete text as single string or it can break files into segments using &lt;a href=&quot;Segmentation.htm&quot;&gt;segmentation rules&lt;/a&gt;.</source>
          <target>纯文本文件包含纯文本。 Sisulizer 可以将完整文本作为单个字符串读取，也可以使用&lt;a href=&quot;Segmentation.htm&quot;&gt;分段规则&lt;/a&gt;将文件分成多个&lt;a href=&quot;Segmentation.htm&quot;&gt;段&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Imports data from a text file containing several columns.&lt;br&gt;&lt;strong&gt; Note!&lt;/strong&gt; Some text files are called as &lt;em&gt;Command Separated Value files&lt;/em&gt; and uses .csv file extension but do not have the same file format as Microsoft CSV files. Import those kind of files as &lt;em&gt;Regular expression defined text files&lt;/em&gt; instead of &lt;em&gt;Comma Separated Value files&lt;/em&gt;. Read more about &lt;a href=&quot;ImportingTextAndCsvFiles.htm&quot;&gt;importing text and CSV files&lt;/a&gt;.</source>
          <target>从包含多列的文本文件导入数据。&lt;br&gt;&lt;strong&gt;笔记！&lt;/strong&gt;某些文本文件称为&lt;em&gt;命令分隔值文件&lt;/em&gt;并使用 .csv 文件扩展名，但与 Microsoft CSV 文件的文件格式不同。将这些文件作为&lt;em&gt;正则表达式定义的文本文件&lt;/em&gt;而不是&lt;em&gt;逗号分隔值文件导入&lt;/em&gt;。阅读有关&lt;a href=&quot;ImportingTextAndCsvFiles.htm&quot;&gt;导入文本和 CSV 文件的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>If &lt;em&gt;Sign only if the original file is signed&lt;/em&gt; check box is signed then assembly is signed only if the original assembly is signed.</source>
          <target>如果&lt;em&gt;仅在原始文件已签名时签名&lt;/em&gt;复选框已签名，则程序集仅在原始程序集已签名时签名。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify Guiliani file options.</source>
          <target>使用此表指定 Guiliani 文件选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Excluded files sheet</source>
          <target>排除的文件表</target>
        </trans-unit>
        <trans-unit>
          <source>Binary data in hexadecimal</source>
          <target>十六进制的二进制数据</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer translation memory on &amp;lt;DB&amp;gt; database</source>
          <target>&amp;lt;DB&amp;gt; 数据库上的 Sisulizer 翻译记忆库</target>
        </trans-unit>
        <trans-unit>
          <source>This is enabled if above Use exclude characters is checked. This lets you ignore exclude characters using with certain strings:</source>
          <target>如果选中上述使用排除字符，则启用此功能。这使您可以忽略与某些字符串一起使用的排除字符：</target>
        </trans-unit>
        <trans-unit>
          <source>Type the name of the database directory name where the database tables are located in the edit field, or press ... to select a directory.&lt;br&gt;When you have entered a valid dictionary value Sisulizer automatically connects to the database.</source>
          <target>在编辑字段中键入数据库表所在的数据库目录名称，或按 ... 选择一个目录。&lt;br&gt;当您输入有效的字典值时，Sisulizer 会自动连接到数据库。</target>
        </trans-unit>
        <trans-unit>
          <source>If VCL can not found any of above resource DLLs it will use the original resources in the application or library file. In our sample VCL will use resources of Project1.EXE.</source>
          <target>如果 VCL 找不到上述任何资源 DLL，它将使用应用程序或库文件中的原始资源。在我们的示例中，VCL 将使用 Project1.EXE 的资源。</target>
        </trans-unit>
        <trans-unit>
          <source>Project Wizard - Key/value text file</source>
          <target>项目向导 - 键/值文本文件</target>
        </trans-unit>
        <trans-unit>
          <source>XML file</source>
          <target>XML文件</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the segmented text.</source>
          <target>显示分段文本。</target>
        </trans-unit>
        <trans-unit>
          <source>Remove special characters</source>
          <target>删除特殊字符</target>
        </trans-unit>
        <trans-unit>
          <source>Set dir attribute for RTL languages (Arabic, Hebrew)</source>
          <target>为 RTL 语言（阿拉伯语、希伯来语）设置 dir 属性</target>
        </trans-unit>
        <trans-unit>
          <source>Filter panel is located on the right side of the translation sheet.</source>
          <target>过滤器面板位于翻译表的右侧。</target>
        </trans-unit>
        <trans-unit>
          <source>Ignores the spelling error of the selected word at this location.</source>
          <target>忽略此位置所选单词的拼写错误。</target>
        </trans-unit>
        <trans-unit>
          <source>Do not change</source>
          <target>不要换</target>
        </trans-unit>
        <trans-unit>
          <source>Press thsi button to break the text into segments.</source>
          <target>按 thsi 按钮将文本分成几段。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies how the case of the string is changed. Possible values are:</source>
          <target>指定如何更改字符串的大小写。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Jump to next untranslated item in the translation grid.</source>
          <target>跳转到翻译网格中的下一个未翻译项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Simplified Chinese input method</source>
          <target>简体中文输入法</target>
        </trans-unit>
        <trans-unit>
          <source>Lets you filter row byt timestaps. There are three kind of timestamps: creating, changed, and translation.</source>
          <target>允许您按行过滤时间戳。时间戳分为三种：创建、更改和翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer shows only those rows where original and translated values are different.</source>
          <target>如果选中 Sisulizer，则仅显示原始值和翻译值不同的那些行。</target>
        </trans-unit>
        <trans-unit>
          <source>Themes dialog lets you select the user inteface theme that is used. It specifies how the user element items looks like in the form/dialog editor.</source>
          <target>主题对话框让您选择使用的用户界面主题。它指定用户元素项目在表单/对话框编辑器中的外观。</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;quot;This is a sample string&amp;quot;&amp;lt;tab&amp;gt;&amp;quot;T&amp;auml;m&amp;auml; on esimerkkimerkkijono&amp;quot;</source>
          <target>&amp;quot;这是一个示例字符串&amp;quot;&amp;lt;tab&amp;gt;&amp;quot;Tämä on esimerkkimerkkijono&amp;quot;</target>
        </trans-unit>
        <trans-unit>
          <source>Select the character encoding that is used in the comment field.</source>
          <target>选择在注释字段中使用的字符编码。</target>
        </trans-unit>
        <trans-unit>
          <source>Selects the left cell of the currently selected cell.</source>
          <target>选择当前选定单元格的左侧单元格。</target>
        </trans-unit>
        <trans-unit>
          <source>Item contains C# source code.</source>
          <target>项目包含 C# 源代码。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies what &lt;a href=&quot;TranslationEngines.htm&quot;&gt;translation engines&lt;/a&gt; are used for this &lt;a href=&quot;Sources.htm&quot;&gt;source&lt;/a&gt; and the order where the engines are used.</source>
          <target>指定用于此&lt;a href=&quot;Sources.htm&quot;&gt;源的&lt;/a&gt;&lt;a href=&quot;TranslationEngines.htm&quot;&gt;翻译引擎&lt;/a&gt;以及使用引擎的顺序。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies filter based on text values</source>
          <target>根据文本值指定过滤器</target>
        </trans-unit>
        <trans-unit>
          <source>By default Sisulizer updates the &lt;em&gt;FlowDirection&lt;/em&gt; attributes in the localized XAML files to match reading order of the target language. You can turn this features off from source&#x27;s Options sheet.</source>
          <target>默认情况下，Sisulizer 更新本地化 XAML 文件中的&lt;em&gt;FlowDirection&lt;/em&gt;属性以匹配目标语言的阅读顺序。您可以从源的选项表中关闭此功能。</target>
        </trans-unit>
        <trans-unit>
          <source>Item contains C or C++ source code.</source>
          <target>项目包含 C 或 C++ 源代码。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the default input method mode of the controls when creating Korean application files. This is enabled if the project contains Korean.</source>
          <target>创建韩文应用程序文件时指定控件的默认输入法模式。如果项目包含韩语，则启用此功能。</target>
        </trans-unit>
        <trans-unit>
          <source>21:02:46 Hint fileName.MenuItem[2] component has no name. It is recommended to give a name using either Name, x:Name or x:Uid attribute.</source>
          <target>21:02:46 提示 fileName.MenuItem[2] 组件没有名称。建议使用 Name、x:Name 或 x:Uid 属性来命名。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to control what strings are scanned from the files and how they are scanned. &lt;a href=&quot;Tagging.htm&quot;&gt;Tags&lt;/a&gt; are used to control the scan process. They are single line comments that contain information for Sisulizer scanner.</source>
          <target>使用此表来控制从文件中扫描哪些字符串以及如何扫描它们。&lt;a href=&quot;Tagging.htm&quot;&gt;标签&lt;/a&gt;用于控制扫描过程。它们是包含 Sisulizer 扫描仪信息的单行注释。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer sets the language but only when write bi-directional (Arabic, Hebrew or Persian) resources.</source>
          <target>Sisulizer 设置语言，但仅当写入双向（阿拉伯语、希伯来语或波斯语）资源时。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the language where the translation in the file are written.</source>
          <target>指定在文件中写入翻译的语言。</target>
        </trans-unit>
        <trans-unit>
          <source>scan</source>
          <target>扫描</target>
        </trans-unit>
        <trans-unit>
          <source>Yes if data is complete HTML page that contains HTML header</source>
          <target>是，如果数据是包含 HTML 标头的完整 HTML 页面</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;lt;data name=&amp;quot;String3&amp;quot; xml:space=&amp;quot;preserve&amp;quot;&amp;gt;
  &amp;lt;value&amp;gt;This is a sample&amp;lt;/value&amp;gt;
  &amp;lt;comment&amp;gt;&lt;span class=&quot;style1&quot;&gt;MaxChars=20 This is a comment&lt;/span&gt;&amp;lt;/comment&amp;gt;
&amp;lt;/data&amp;gt; </source>
          <target>&amp;lt;data name=&amp;quot;String3&amp;quot; xml:space=&amp;quot;preserve&amp;quot;&amp;gt; &amp;lt;value&amp;gt;这是一个示例&amp;lt;/value&amp;gt; &amp;lt;comment&amp;gt; &lt;span class=&quot;style1&quot;&gt;MaxChars=20 这是一个评论&lt;/span&gt;&amp;lt;/comment&amp;gt; &amp;lt;/data&amp;gt;</target>
        </trans-unit>
        <trans-unit>
          <source>Do not sort</source>
          <target>不排序</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Line&lt;/em&gt; specifies if file uses single line comments. If a line comment string is given all chracters after comment to (and including) the line end are skipped. Also all white spaces before comment string on the same line are skipped. For example:</source>
          <target>&lt;em&gt;Line&lt;/em&gt;指定文件是否使用单行注释。如果行注释字符串在注释（并包括）之后给出所有字符，则跳过行尾。同一行注释字符串前的所有空格也将被跳过。例如：</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Write log&lt;/em&gt; if checked Sisulizer writes log an entry for each row it translates using exiting duplicates.</source>
          <target>&lt;em&gt;写日志&lt;/em&gt;如果选中的Sisulizer写日志把它转换使用退出副本的每一行的条目。</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;lt;text&amp;gt;Finland is the most northern country in the world&amp;lt;/text&amp;gt;</source>
          <target>&amp;lt;text&amp;gt;芬兰是世界上最北的国家&amp;lt;/text&amp;gt;</target>
        </trans-unit>
        <trans-unit>
          <source>Carriage return</source>
          <target>回车</target>
        </trans-unit>
        <trans-unit>
          <source>Assembly linker (AL)  parameters</source>
          <target>汇编链接器 (AL) 参数</target>
        </trans-unit>
        <trans-unit>
          <source>Check this  options if you want that the caption of popup menu is used instead of index. By default Sisulizer uses an index for menu objects without ID (Popup menus for example). This causes on problem when inserting a new popup menu between olds.</source>
          <target>如果您希望使用弹出菜单的标题而不是索引，请选中此选项。默认情况下，Sisulizer 对没有 ID 的菜单对象使用索引（例如弹出菜单）。在旧的之间插入新的弹出菜单时，这会导致问题。</target>
        </trans-unit>
        <trans-unit>
          <source>Show as Binary | Compare</source>
          <target>显示为二进制 |相比</target>
        </trans-unit>
        <trans-unit>
          <source>If data is XML Sisulizer initially scans all XML elements. If you want to disable scanning of one or more elements you must uncheck those in the  &lt;a href=&quot;FormatNodeDialogTagsSheet.htm&quot;&gt;XML Tags&lt;/a&gt; sheet.</source>
          <target>如果数据是 XML，Sisulizer 最初会扫描所有 XML 元素。如果您想禁用对一个或多个元素的扫描，您必须在&lt;a href=&quot;FormatNodeDialogTagsSheet.htm&quot;&gt;XML 标签&lt;/a&gt;表中取消选中这些元素。</target>
        </trans-unit>
        <trans-unit>
          <source>country</source>
          <target>国家</target>
        </trans-unit>
        <trans-unit>
          <source>This is a comment that start with start comment string and ends with end comment string. The comment can contain several new lines. For example:</source>
          <target>这是一个以开始注释字符串开始并以结束注释字符串结束的注释。注释可以包含多个新行。例如：</target>
        </trans-unit>
        <trans-unit>
          <source>Write start comment, schema and header</source>
          <target>编写开始注释、模式和标题</target>
        </trans-unit>
        <trans-unit>
          <source>Shows a dialog that displays the content of the selected HTML file in a tree structure.</source>
          <target>显示一个对话框，该对话框以树结构显示所选 HTML 文件的内容。</target>
        </trans-unit>
        <trans-unit>
          <source>Save  dictionary to a standalone file</source>
          <target>将字典保存到独立文件</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer use most recent MsBuild when compiling XAML files belonging to a projec tusing tools version 14 or later. Check this if the XAML compilation fails.</source>
          <target>如果选中 Sisulizer，则在使用工具版本 14 或更高版本编译属于项目的 XAML 文件时使用最新的 MsBuild。如果 XAML 编译失败，请检查此项。</target>
        </trans-unit>
        <trans-unit>
          <source>Export scope</source>
          <target>出口范围</target>
        </trans-unit>
        <trans-unit>
          <source>Write locked row</source>
          <target>写锁定行</target>
        </trans-unit>
        <trans-unit>
          <source>Translation memory</source>
          <target>翻译记忆库</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the format and options of the XLIFF file that is written.</source>
          <target>指定写入的 XLIFF 文件的格式和选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;WindowsLocalization.htm&quot;&gt;Windows resource file is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;WindowsLocalization.htm&quot;&gt;Windows 资源文件的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Each translation has a status. Possible values are:</source>
          <target>每个翻译都有一个状态。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies what kind of output files Sisulizer creates and what kind of file name it uses when creating those files. Combo box is used to specify the name of the output file. You can select a pattern from the combo box list or you can type your own pattern. Each pattern can contain file and language parameters.</source>
          <target>指定 Sisulizer 创建的输出文件类型以及创建这些文件时使用的文件名类型。组合框用于指定输出文件的名称。您可以从组合框列表中选择一种模式，也可以键入自己的模式。每个模式都可以包含文件和语言参数。</target>
        </trans-unit>
        <trans-unit>
          <source>The following image contain Finnish version of above table of contents.</source>
          <target>下图包含上述目录的芬兰语版本。</target>
        </trans-unit>
        <trans-unit>
          <source>File in the project: MainForm.resx&lt;br&gt;Import file: MainForm.&lt;strong&gt;de&lt;/strong&gt;.resx</source>
          <target>项目中的文件：MainForm.resx&lt;br&gt;导入文件：MainForm.&lt;strong&gt;德&lt;/strong&gt;的.resx</target>
        </trans-unit>
        <trans-unit>
          <source>Translation engine name</source>
          <target>翻译引擎名称</target>
        </trans-unit>
        <trans-unit>
          <source>Source item</source>
          <target>源项目</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies if Sisulizer stores the password to the project settings. Passwords are crypted when saving to project files and Sisulizer configuration files.</source>
          <target>指定 Sisulizer 是否将密码存储到项目设置中。保存到项目文件和 Sisulizer 配置文件时，密码会被加密。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked ignore hotkey character mark (e.g. &amp;amp; or _) when comparing strings.</source>
          <target>如果选中，则在比较字符串时忽略热键字符标记（例如 &amp;amp; 或 _）。</target>
        </trans-unit>
        <trans-unit>
          <source>Previews the printing.</source>
          <target>预览打印。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the operation settings</source>
          <target>指定操作设置</target>
        </trans-unit>
        <trans-unit>
          <source>If there is no attached spell checkers Sisulizer uses the first spell checker in the &lt;a href=&quot;GeneralSettingsDialogSpellingSheet.htm&quot;&gt;configured spell checker list&lt;/a&gt; where the language of the spell checker matches exactly for the language in the project. For example if you have German (Germany) column in the project and there are two German spell checker: German and German (Germany). Sisulizer will use the later, German (Germany), because it has exact language match.</source>
          <target>如果没有附加拼写检查器，Sisulizer 将使用&lt;a href=&quot;GeneralSettingsDialogSpellingSheet.htm&quot;&gt;配置的拼写检查器列表&lt;/a&gt;中的第一个拼写检查器，其中拼写检查器的语言与项目中的语言完全匹配。例如，如果项目中有德语（德国）列，并且有两个德语拼写检查器：德语和德语（德国）。 Sisulizer 将使用后者，德语（德国），因为它具有精确的语言匹配。</target>
        </trans-unit>
        <trans-unit>
          <source>Register COM objects</source>
          <target>注册 COM 对象</target>
        </trans-unit>
        <trans-unit>
          <source>Import and replace the current comment values.</source>
          <target>导入并替换当前注释值。</target>
        </trans-unit>
        <trans-unit>
          <source>Starting from version 8 it has been possible to export data to XLIFF and import it back. However Adobe&#x27;s XLIFF import implementation is not a proper one. The importer ignores the target elements and imports source elements instead. This is why you can not use XLIFF localization with Flash language files. You have to use XML localization. Read more about &lt;a href=&quot;FlashLocalization.htm&quot;&gt;Flash localization&lt;/a&gt;.</source>
          <target>从版本 8 开始，可以将数据导出到 XLIFF 并重新导入。然而，Adobe 的 XLIFF 导入实现并不是一个合适的实现。导入器会忽略目标元素并导入源元素。这就是不能对 Flash 语言文件使用 XLIFF 本地化的原因。您必须使用 XML 本地化。阅读有关&lt;a href=&quot;FlashLocalization.htm&quot;&gt;Flash 本地化的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>void TForm1::FormCreate(TObject *Sender)
{
  Caption = &amp;quot;&lt;strong&gt;Moi&lt;/strong&gt;&amp;quot;; // Form caption
  Label1-&amp;gt;Caption = &amp;quot;&lt;strong&gt;Mit&amp;auml; kuuluu?&lt;/strong&gt;&amp;quot;;
}</source>
          <target>void TForm1::FormCreate(TObject *Sender) { Caption = &amp;quot; &lt;strong&gt;Moi&lt;/strong&gt; &amp;quot;; // 表单标题 Label1-&amp;gt;Caption = &amp;quot; &lt;strong&gt;Mitä kuuluu?&lt;/strong&gt; &amp;quot;; }</target>
        </trans-unit>
        <trans-unit>
          <source>Tools needed</source>
          <target>所需工具</target>
        </trans-unit>
        <trans-unit>
          <source>Enter  here parameters that are passed to HTML browser command line after  the filename.</source>
          <target>在此处输入文件名后传递到 HTML 浏览器命令行的参数。</target>
        </trans-unit>
        <trans-unit>
          <source>This is a sample.</source>
          <target>这是一个样本。</target>
        </trans-unit>
        <trans-unit>
          <source>Press Import to import mappings from a mappings file. Press Export to export current mappings to a mappings file.</source>
          <target>按导入从映射文件导入映射。按导出将当前映射导出到映射文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Row status</source>
          <target>行状态</target>
        </trans-unit>
        <trans-unit>
          <source>Select Format sheet lets you select the file format. Sometimes it is necessary to further differentiate file than only based on the file extension. In these cases several file formats use the same file extension but the actual file data is different. This sheet shows a list of file formats that share the same file extension. Select the right file format from the list. Check &lt;em&gt;Show all file types&lt;/em&gt; to show all file formats in the list and not only those that use the same file extension as the selected file. Read more about &lt;a href=&quot;FileMappings.htm&quot;&gt;file mappings&lt;/a&gt;. If you are importing data you can read more about &lt;a href=&quot;ImportingData.htm&quot;&gt;importing data&lt;/a&gt;.</source>
          <target>选择格式表可让您选择文件格式。有时需要进一步区分文件而不仅仅是基于文件扩展名。在这些情况下，几种文件格式使用相同的文件扩展名，但实际文件数据不同。此工作表显示共享相同文件扩展名的文件格式列表。从列表中选择正确的文件格式。选中&lt;em&gt;显示所有文件类型&lt;/em&gt;以显示列表中的所有文件格式，而不仅仅是那些使用与所选文件相同的文件扩展名的文件格式。阅读有关&lt;a href=&quot;FileMappings.htm&quot;&gt;文件映射的&lt;/a&gt;更多信息。如果您要导入数据，您可以阅读有关&lt;a href=&quot;ImportingData.htm&quot;&gt;导入数据的&lt;/a&gt;更多&lt;a href=&quot;ImportingData.htm&quot;&gt;信息&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer is a 100% Windows application. Even it can localize several other platforms (including XML, HTML, .NET, Java,  etc.) it never requires any runtime code such as .NET common language runtime or Java virtual machine. This choice was made to make it sure that every single translator can use Sisulizer without installing dozens of runtimes or 3rd party libraries into his or her computer before starting the translation task. In fact Sisulizer application file, Sisulizer.exe is a single file that runs without any installation or registry settings and requires no DLL or ActiveX.</source>
          <target>Sisulizer 是一个 100% Windows 应用程序。即使它可以本地化多个其他平台（包括 XML、HTML、.NET、Java 等），它也不需要任何运行时代码，例如 .NET 公共语言运行时或 Java 虚拟机。做出此选择是为了确保每个翻译人员都可以使用 Sisulizer，而无需在开始翻译任务之前将数十个运行时或第 3 方库安装到他或她的计算机中。实际上 Sisulizer 应用程序文件 Sisulizer.exe 是一个单独的文件，无需任何安装或注册表设置即可运行，并且不需要 DLL 或 ActiveX。</target>
        </trans-unit>
        <trans-unit>
          <source>Windows locale id is used. It is a integer number containing the primary and sub language ids.</source>
          <target>使用 Windows 区域设置 ID。它是一个包含主要和子语言 ID 的整数。</target>
        </trans-unit>
        <trans-unit>
          <source>Set the selected row status to the next status value.</source>
          <target>将所选行状态设置为下一个状态值。</target>
        </trans-unit>
        <trans-unit>
          <source>Compatible to VCL applications</source>
          <target>与 VCL 应用程序兼容</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer setup (Sisu.exe) installs Polar spell checker engine (PolarSpellChecker.dll) into Sisulizer directory (e.g.&lt;!-- #BeginLibraryItem &quot;/Library/InstallDir.lbi&quot; --&gt;
C:\Program files (x86)\Sisulizer 4&lt;!-- #EndLibraryItem --&gt;). In addition of the engine file Polar needs a dictionary file as well. Dictionary file extension is .lex. Each language has its own dictionary file. For example SpellUS.lex contains English (US) dictionary. By default Sisulizer setup installs all 14 dictionary files. They are:</source>
          <target>Sisulizer 安装程序 (Sisu.exe) 将 Polar 拼写检查引擎 (PolarSpellChecker.dll) 安装到 Sisulizer 目录（例如&lt;!-- #BeginLibraryItem &quot;/Library/InstallDir.lbi&quot; --&gt;C:\程序文件 (x86)\Sisulizer 4&lt;!-- #EndLibraryItem --&gt; ）。除了引擎文件，Polar 还需要一个字典文件。字典文件扩展名为 .lex。每种语言都有自己的字典文件。例如 SpellUS.lex 包含英语（美国）词典。默认情况下，Sisulizer 安装程序安装所有 14 个字典文件。他们是：</target>
        </trans-unit>
        <trans-unit>
          <source>Create a Sisulizer project that contains a WIN32  EXE. Once the project is created add the additional files as platform files. Right click the EXE file in the project three and choose Properties. Then choose Platform files sheet and click Add button to add files. Add the 64-bit output file of the same project. If you have more than two output targets then add each platform file.</source>
          <target>创建一个包含 WIN32 EXE 的 Sisulizer 项目。创建项目后，将其他文件添加为平台文件。右击项目三中的EXE文件，选择Properties。然后选择平台文件表并单击添加按钮添加文件。添加同一个项目的 64 位输出文件。如果您有两个以上的输出目标，则添加每个平台文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Multilingual application and library files</source>
          <target>多语言应用程序和库文件</target>
        </trans-unit>
        <trans-unit>
          <source>This dialog lets you select a Sisulizer project that will be merged to the current  Sisulizer project.</source>
          <target>此对话框允许您选择将合并到当前 Sisulizer 项目的 Sisulizer 项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the expand percentage when the length of the original string is between 1 and 6 characters.</source>
          <target>指定原始字符串长度在 1 到 6 个字符之间时的扩展百分比。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can &lt;a href=&quot;ImportingData.htm&quot;&gt;import&lt;/a&gt; existing translations when creating a new project. The source of the imported translations depend on the &lt;a href=&quot;Sources.htm&quot;&gt;sources&lt;/a&gt;. The following sources are supported:</source>
          <target>Sisulizer 可以在创建新项目时&lt;a href=&quot;ImportingData.htm&quot;&gt;导入&lt;/a&gt;现有翻译。导入翻译的&lt;a href=&quot;Sources.htm&quot;&gt;来源&lt;/a&gt;取决于&lt;a href=&quot;Sources.htm&quot;&gt;来源&lt;/a&gt;。支持以下来源：</target>
        </trans-unit>
        <trans-unit>
          <source>During the evaluation period you can set the Sisulizer edition that you are evaluation at every time you start Sisulizer. Some editions do not contains all features. Anyway by default the features are visible and you can choose them. If you choose a feature that is not included to your current edition Sisulizer shows this message box. Click Elevate to change the evaluation edition to the level that is required. Click Cancel to abort to operation you started. The reason that those features that are not include to the edition are visible is that it will help you to understand and get familiar to different Sisulizer editions duing your evaluation period.</source>
          <target>在评估期间，您可以设置每次启动 Sisulizer 时评估的 Sisulizer 版本。某些版本不包含所有功能。无论如何，默认情况下功能是可见的，您可以选择它们。如果您选择的功能未包含在当前版本中，Sisulizer 将显示此消息框。单击“提升”将评估版本更改为所需的级别。单击取消以中止您开始的操作。版本中未包含的那些功能之所以可见，是因为它将帮助您在评估期间了解和熟悉不同的 Sisulizer 版本。</target>
        </trans-unit>
        <trans-unit>
          <source>Set the full path name of eMbedded Visual Basic application.</source>
          <target>设置嵌入式 Visual Basic 应用程序的完整路径名。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the segmentation settings</source>
          <target>指定分段设置</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the spell checking options. Possible values are:</source>
          <target>指定拼写检查选项。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Check &lt;em&gt;Delay sign&lt;/em&gt; if you want to just start signing process with your own key and complete it later using the real key.</source>
          <target>如果您只想使用自己的密钥开始签名过程并稍后使用真实密钥完成签名，请选中&lt;em&gt;延迟签名&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the original RC file.</source>
          <target>显示原始 RC 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure &lt;a href=&quot;TranslationEngines.htm&quot;&gt;translation engines&lt;/a&gt;. There are two kinds of translation engines. The following list contains the possible values:</source>
          <target>使用此对话框配置&lt;a href=&quot;TranslationEngines.htm&quot;&gt;翻译引擎&lt;/a&gt;。有两种翻译引擎。以下列表包含可能的值：</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer also supports several &lt;a href=&quot;SupportedDatabases.htm&quot;&gt;databases&lt;/a&gt;.</source>
          <target>Sisulizer 还支持多个&lt;a href=&quot;SupportedDatabases.htm&quot;&gt;数据库&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;NetLocalization.htm&quot;&gt;Borland/CodeGear .NET project is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;NetLocalization.htm&quot;&gt;Borland/CodeGear .NET 项目的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Add a name attribute.</source>
          <target>添加名称属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows validation report.</source>
          <target>显示验证报告。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the file you selected to import. The file contains the targets strings of the language pairs. Select the language of the target file if it is not already right.</source>
          <target>显示您选择导入的文件。该文件包含语言对的目标字符串。如果目标文件的语言不正确，请选择目标文件的语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Imports translations from existing localized files.</source>
          <target>从现有的本地化文件导入翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Check &lt;em&gt;Write overwritten values to the log&lt;/em&gt; to write the overwritten values to log.</source>
          <target>选中&lt;em&gt;将覆盖的值&lt;/em&gt;写入&lt;em&gt;日志&lt;/em&gt;以将覆盖的值写入日志。</target>
        </trans-unit>
        <trans-unit>
          <source>The current user&#x27;s default UI language, without any specific sublanguage (that is, ENC [Canadian English] becomes ENU [U.S. English]).  (Windows 2000 or later only)</source>
          <target>当前用户的默认 UI 语言，没有任何特定的子语言（即 ENC [加拿大英语] 变为 ENU [美国英语]）。 （仅限 Windows 2000 或更高版本）</target>
        </trans-unit>
        <trans-unit>
          <source>Type the display name of the package.</source>
          <target>键入包的显示名称。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer contains functions that let you change the language of VCL application on run time. &amp;lt;sldir&amp;gt;\VCL contains the Delphi units. LaResource.pas, LaTranslator.pas and LaDialog.pas are the main units. LaResource.pas contains the functions for accessing resource data LaTranslator.pas contains class that translates forms, and LaDialog.pas contains a dialog that shows possible resource DLL language. User can select the one he or she likes to turn on. Use LaDialog.SelectResourceLocale to show a language dialog and turn on the new language. The functions show a dialog where the user can select the language and after selection it turns on the new language by loading the new resource DLL and reloading existing forms. The functions work with any Delphi 5 and later. In addition there are several La*Module.pas units that complement TLaTranslator providing translation of complex and/or binary properties of certain components.</source>
          <target>Sisulizer 包含可让您在运行时更改 VCL 应用程序语言的功能。 &amp;lt;sldir&amp;gt;\VCL 包含 Delphi 单元。 LaResource.pas、LaTranslator.pas 和 LaDialog.pas 是主要单元。 LaResource.pas 包含用于访问资源数据的函数 LaTranslator.pas 包含转换表单的类，LaDialog.pas 包含一个对话框，显示可能的资源 DLL 语言。用户可以选择他或她喜欢打开的一个。使用 LaDialog.SelectResourceLocale 显示语言对话框并打开新语言。这些函数显示一个对话框，用户可以在其中选择语言，选择后通过加载新资源 DLL 和重新加载现有表单来打开新语言。这些函数适用于任何 Delphi 5 及更高版本。此外，还有几个 La*Module.pas 单元可以补充 TLaTranslator，提供某些组件的复杂和/或二进制属性的翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify how the pane should look like.</source>
          <target>使用此表指定窗格的外观。</target>
        </trans-unit>
        <trans-unit>
          <source>In some situations you want to let Visual Studio to compile &lt;a href=&quot;SatelliteAssembly.htm&quot;&gt;satellite assembly&lt;/a&gt; files. The following instructions describe how to do that.</source>
          <target>在某些情况下，您希望让 Visual Studio 编译&lt;a href=&quot;SatelliteAssembly.htm&quot;&gt;附属程序集&lt;/a&gt;文件。以下说明描述了如何做到这一点。</target>
        </trans-unit>
        <trans-unit>
          <source>Properties sheet contains source specific properties.</source>
          <target>属性表包含源特定的属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Information tags</source>
          <target>信息标签</target>
        </trans-unit>
        <trans-unit>
          <source>Read more about &lt;a href=&quot;XmlLocalization.htm&quot;&gt;XML localization&lt;/a&gt;.</source>
          <target>阅读有关&lt;a href=&quot;XmlLocalization.htm&quot;&gt;XML 本地化的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Missing vertical bar</source>
          <target>缺少竖线</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;NetLocalization.htm&quot;&gt;.NET resource file is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;NetLocalization.htm&quot;&gt;.NET 资源文件的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Function or property</source>
          <target>功能或属性</target>
        </trans-unit>
        <trans-unit>
          <source>Keystore type</source>
          <target>密钥库类型</target>
        </trans-unit>
        <trans-unit>
          <source>Source | Excluded files</source>
          <target>来源 |排除的文件</target>
        </trans-unit>
        <trans-unit>
          <source>You can import translations to the translation memory by choosing Tools | Translations Engines. Translation Engines dialog shows up. Select the translation memory where you want to import to. Select Documents sheet and click + button to start &lt;a href=&quot;ImportWizard.htm&quot;&gt;Import Wizard&lt;/a&gt;.</source>
          <target>您可以通过选择工具 | 将翻译导入翻译记忆库。翻译引擎。翻译引擎对话框出现。选择要导入到的翻译记忆库。选择文档表并单击 + 按钮启动&lt;a href=&quot;ImportWizard.htm&quot;&gt;导入向导&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Use these check boxes to specify if row status, comments and translations are automatically changed after certain actions.</source>
          <target>使用这些复选框来指定在执行某些操作后是否自动更改行状态、注释和翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Show inspector</source>
          <target>显示检查员</target>
        </trans-unit>
        <trans-unit>
          <source>Localize only included</source>
          <target>仅包含本地化</target>
        </trans-unit>
        <trans-unit>
          <source>These are libraries that Sisulizer can use if they have been installed on the same computer. Generally they are the products whose features Sisulizer uses. For example machine translators and 3rd party translation memories are such kind of add-ons. These add-ons are marked unavailable if you have not installed the product  on your computer. To enable the add-on install the product and start Sisulizer again.</source>
          <target>这些是 Sisulizer 可以使用的库，前提是它们已安装在同一台计算机上。一般都是Sisulizer使用的产品。例如，机器翻译器和第 3 方翻译记忆库就是此类附加组件。如果您尚未在计算机上安装该产品，这些附加组件将被标记为不可用。要启用附加组件，请安装产品并再次启动 Sisulizer。</target>
        </trans-unit>
        <trans-unit>
          <source>Maximum character count</source>
          <target>最大字符数</target>
        </trans-unit>
        <trans-unit>
          <source>Even if the component is unmapped or the mapped component does not look 100% right Sisulizer still finds &lt;u&gt;all&lt;/u&gt; strings belonging to it and makes it possible to &lt;u&gt;fully&lt;/u&gt; localize the component.</source>
          <target>即使组件未映射或映射的组件看起来不是 100% 正确，Sisulizer 仍会找到属于它的&lt;u&gt;所有&lt;/u&gt;字符串，并可以&lt;u&gt;完全&lt;/u&gt;本地化组件。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer writes also empty translations into MO files. If unchecked item having empty translations are skipped.</source>
          <target>如果选中 Sisulizer 也会将空翻译写入 MO 文件。如果具有空翻译的未选中项目被跳过。</target>
        </trans-unit>
        <trans-unit>
          <source>scr</source>
          <target>可控硅</target>
        </trans-unit>
        <trans-unit>
          <source>One  &amp;lt;projectname&amp;gt;.app directory for a language specific directory.</source>
          <target>一个用于特定语言目录的 &amp;lt;projectname&amp;gt;.app 目录。</target>
        </trans-unit>
        <trans-unit>
          <source>Enter the name of the item.</source>
          <target>输入项目的名称。</target>
        </trans-unit>
        <trans-unit>
          <source>VCL options</source>
          <target>VCL 选项</target>
        </trans-unit>
        <trans-unit>
          <source>There are several ways to turn combined string parsing on.</source>
          <target>有多种方法可以打开组合字符串解析。</target>
        </trans-unit>
        <trans-unit>
          <source>Can reduce</source>
          <target>可以减少</target>
        </trans-unit>
        <trans-unit>
          <source>Translation Engines - Add settings (Sisulizer Translation Memory)</source>
          <target>翻译引擎 - 添加设置（Sisulizer 翻译记忆库）</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the HTML localization options of the  HTML data.</source>
          <target>使用此表指定 HTML 数据的 HTML 本地化选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Project Wizard - Visual C++ binary file</source>
          <target>项目向导 - Visual C++ 二进制文件</target>
        </trans-unit>
        <trans-unit>
          <source>This is the find result list. It contains the find matches.</source>
          <target>这是查找结果列表。它包含查找匹配项。</target>
        </trans-unit>
        <trans-unit>
          <source>Add-ons that setup installs</source>
          <target>安装程序安装的附加组件</target>
        </trans-unit>
        <trans-unit>
          <source>Importing tutorial</source>
          <target>导入教程</target>
        </trans-unit>
        <trans-unit>
          <source>Salesforce translation file</source>
          <target>Salesforce 翻译文件</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the name of the file to be exported (e.g. C:\MyFiles\Export.xlf).</source>
          <target>指定要导出的文件的名称（例如 C:\MyFiles\Export.xlf）。</target>
        </trans-unit>
        <trans-unit>
          <source>Delphi and C++Builder support bidirectional languages. Support is done with two properties and one method: BiDiMode, ParentBidiMode and FlipChildren.</source>
          <target>Delphi 和 C++Builder 支持双向语言。支持通过两个属性和一种方法完成：BiDiMode、ParentBidiMode 和 FlipChildren。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify how frames will be shown.</source>
          <target>使用此表指定帧的显示方式。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the Qt project file options.</source>
          <target>使用此表指定 Qt 项目文件选项。</target>
        </trans-unit>
        <trans-unit>
          <source>When Sisulizer scans the Country table it combined that actual field data with the extended blocks.</source>
          <target>当 Sisulizer 扫描 Country 表时，它将实际字段数据与扩展块组合在一起。</target>
        </trans-unit>
        <trans-unit>
          <source>Works with C++Builder applications</source>
          <target>适用于 C++Builder 应用程序</target>
        </trans-unit>
        <trans-unit>
          <source>A language version of the table. Each original table can contains language specific tables that specify what table is used for each language.</source>
          <target>表格的语言版本。每个原始表都可以包含语言特定的表，这些表指定了每种语言使用什么表。</target>
        </trans-unit>
        <trans-unit>
          <source>Short string</source>
          <target>短字符串</target>
        </trans-unit>
        <trans-unit>
          <source>If you use any post linker tools such as compressor or encrypter do not apply the tool for original file but the localized output files created by Sisulizer. Compressors and encrypters change the file format and it is not valid PE any more. This is why Sisulizer can not read the file any more. Use compressor or encrypter only to the output files created by Sisulizer.</source>
          <target>如果您使用压缩器或加密器等任何后链接器工具，请不要将工具应用于原始文件，而是使用 Sisulizer 创建的本地化输出文件。压缩器和加密器更改文件格式，它不再是有效的 PE。这就是为什么 Sisulizer 无法再读取文件的原因。仅对 Sisulizer 创建的输出文件使用压缩器或加密器。</target>
        </trans-unit>
        <trans-unit>
          <source>translate</source>
          <target>翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Save all strings every time to the translation memory</source>
          <target>每次都将所有字符串保存到翻译记忆库</target>
        </trans-unit>
        <trans-unit>
          <source>A field that has been marked to be a comment field. This field contains comment data.</source>
          <target>已标记为注释字段的字段。该字段包含评论数据。</target>
        </trans-unit>
        <trans-unit>
          <source>A string that describes the author of the project.</source>
          <target>描述项目作者的字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>You can find a single item by using the find feature. To find an item choose Edit | File. A &lt;a href=&quot;DataSheetFindDialog.htm&quot;&gt;Find dialog&lt;/a&gt; appears that let you to enter the string to be found. You can also replace text by using the replace feature. Choose &lt;a href=&quot;DataSheetReplaceDialog.htm&quot;&gt;Edit | Replace&lt;/a&gt;.</source>
          <target>您可以使用查找功能查找单个项目。要查找项目，请选择编辑 |文件。出现一个&lt;a href=&quot;DataSheetFindDialog.htm&quot;&gt;查找对话框&lt;/a&gt;，让您输入要查找的字符串。您还可以使用替换功能替换文本。选择&lt;a href=&quot;DataSheetReplaceDialog.htm&quot;&gt;编辑 |替换&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>unmanaged</source>
          <target>不受管理的</target>
        </trans-unit>
        <trans-unit>
          <source>SDK directory is installed with .NET SDK. It contains build tools and libraries. Normally you must have SDK installed only on developers computer.</source>
          <target>SDK 目录与 .NET SDK 一起安装。它包含构建工具和库。通常，您必须仅在开发人员的计算机上安装 SDK。</target>
        </trans-unit>
        <trans-unit>
          <source>The above image contains case where an English Windows XP has Finnish as default culture (e.g. locale). Without modification a .NET application will start up in English. If you want it to start up using the default culture (in this case Finnish) follow the instructions below.</source>
          <target>上图包含英语 Windows XP 将芬兰语作为默认文化（例如语言环境）的情况。无需修改，.NET 应用程序将以英语启动。如果您希望它使用默认文化（在本例中为芬兰语）启动，请按照以下说明进行操作。</target>
        </trans-unit>
        <trans-unit>
          <source>Generates an error if the translation does not fit into the width and height of a dialog control.</source>
          <target>如果翻译不适合对话框控件的宽度和高度，则会生成错误。</target>
        </trans-unit>
        <trans-unit>
          <source>Runtime language change is a feature where the user can change the user interface language of the application on run time. Application starts on one language. Later on the user can select a new language from the available language list and make application to translate itself using the selected language. This is the most flexible localization method for applications. In general there are three different way to localize an application. They are:</source>
          <target>运行时语言更改是用户可以在运行时更改应用程序用户界面语言的功能。应用程序以一种语言开始。稍后，用户可以从可用语言列表中选择一种新语言，并使应用程序使用所选语言自行翻译。这是应用程序最灵活的本地化方法。一般来说，有三种不同的方式来本地化应用程序。他们是：</target>
        </trans-unit>
        <trans-unit>
          <source>Replace project translations with existing translations in file</source>
          <target>用文件中的现有翻译替换项目翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Binary data in base64</source>
          <target>base64 中的二进制数据</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Windows code&lt;/em&gt; specifies the Windows code of the locale. This is a three character code. It is used as a file extension when creating resource DLLs. Type the value.</source>
          <target>&lt;em&gt;Windows 代码&lt;/em&gt;指定语言环境的 Windows 代码。这是一个三字符代码。它在创建资源 DLL 时用作文件扩展名。键入值。</target>
        </trans-unit>
        <trans-unit>
          <source>Data type</source>
          <target>数据类型</target>
        </trans-unit>
        <trans-unit>
          <source>By default Sisulizer extracts all strings from the source code. You can exclude one or more strings by using &lt;a href=&quot;Tagging.htm&quot;&gt;tagging&lt;/a&gt;. You can also use tagging to make Sisulizer to extract only those strings that you mark.</source>
          <target>默认情况下，Sisulizer 从源代码中提取所有字符串。您可以使用&lt;a href=&quot;Tagging.htm&quot;&gt;tagging&lt;/a&gt;排除一个或多个字符串。您还可以使用标记使 Sisulizer 仅提取您标记的那些字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Exchange Wizard - Languages and Items</source>
          <target>交换向导 - 语言和项目</target>
        </trans-unit>
        <trans-unit>
          <source>Can export to &lt;a href=&quot;ExportWizardTmxSheet.htm&quot;&gt;TMX&lt;/a&gt;, &lt;a href=&quot;ExportWizardXliffSheet.htm&quot;&gt;XLIFF&lt;/a&gt;, &lt;a href=&quot;ExportWizardTextSheet.htm&quot;&gt;text&lt;/a&gt;, &lt;a href=&quot;ExportWizardExcelSheet.htm&quot;&gt;Excel&lt;/a&gt; and &lt;a href=&quot;ExportWizardResxSheet.htm&quot;&gt;Resx&lt;/a&gt; files</source>
          <target>可以导出为&lt;a href=&quot;ExportWizardTmxSheet.htm&quot;&gt;TMX&lt;/a&gt; 、 &lt;a href=&quot;ExportWizardXliffSheet.htm&quot;&gt;XLIFF&lt;/a&gt; 、&lt;a href=&quot;ExportWizardTextSheet.htm&quot;&gt;文本&lt;/a&gt;、 &lt;a href=&quot;ExportWizardExcelSheet.htm&quot;&gt;Excel&lt;/a&gt;和&lt;a href=&quot;ExportWizardResxSheet.htm&quot;&gt;Resx&lt;/a&gt;文件</target>
        </trans-unit>
        <trans-unit>
          <source>Together &lt;em&gt;Right to left layout&lt;/em&gt;  radio group and   &lt;em&gt;Set reading order property&lt;/em&gt; check boxes specify how user interface should be modified when localizing to  bi-directional languages such as Arabic, Hebrew and Persian. Depending on your platform you should set the check boxes in a different way.</source>
          <target>&lt;em&gt;从右到左布局&lt;/em&gt;单选&lt;em&gt;按钮&lt;/em&gt;组和&lt;em&gt;设置阅读顺序属性&lt;/em&gt;复选框一起指定在本地化为双向语言（如阿拉伯语、希伯来语和波斯语）时应如何修改用户界面。根据您的平台，您应该以不同的方式设置复选框。</target>
        </trans-unit>
        <trans-unit>
          <source>Clears the list by removing all items from the list.</source>
          <target>通过从列表中删除所有项目来清除列表。</target>
        </trans-unit>
        <trans-unit>
          <source>You can add new files to the list in two ways. The first one is to press +. This lets you browse the file. The second is to write the file name in the edit field and to press the Add button. You can replace the selected value by writing the new value of the edit field and pressing Replace.</source>
          <target>您可以通过两种方式将新文件添加到列表中。第一个是按+。这使您可以浏览文件。第二种是在编辑字段中写入文件名并按添加按钮。您可以通过写入编辑字段的新值并按替换来替换选定的值。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the HTML localization options such as images in the HTML file.</source>
          <target>使用此表指定 HTML 本地化选项，例如 HTML 文件中的图像。</target>
        </trans-unit>
        <trans-unit>
          <source>Search from</source>
          <target>搜索自</target>
        </trans-unit>
        <trans-unit>
          <source>Item contains custom source code. Set the delimiter and comment values in Delimiter and Comment group boxes to match the source code.</source>
          <target>项目包含自定义源代码。在分隔符和注释组框中设置分隔符和注释值以匹配源代码。</target>
        </trans-unit>
        <trans-unit>
          <source>Click &lt;em&gt;Add&lt;/em&gt; to add a new field. Click &lt;em&gt;Remove&lt;/em&gt; to remove the selected field. Click &lt;em&gt;Edit&lt;/em&gt; to edit the selected field. Click &lt;em&gt;Move Up&lt;/em&gt; to move selected field one step up in the list. Click &lt;em&gt;Move Down&lt;/em&gt; to move selected field one steop down in the list.</source>
          <target>单击&lt;em&gt;添加&lt;/em&gt;以添加新字段。单击&lt;em&gt;删除&lt;/em&gt;以删除所选字段。单击&lt;em&gt;编辑&lt;/em&gt;以编辑所选字段。单击“上&lt;em&gt;移”&lt;/em&gt;将所选字段在列表中&lt;em&gt;上&lt;/em&gt;移一级。单击“&lt;em&gt;下移”&lt;/em&gt;将所选字段在列表中&lt;em&gt;向下&lt;/em&gt;移动一级。</target>
        </trans-unit>
        <trans-unit>
          <source>You have to make a choice. If you want to localize user interface visually and you want to localize size, position and font data as well use the Sisulizer localization method. If your application must have support for multiple language in one file use the traditional localization method.</source>
          <target>你必须做出选择。如果您想在视觉上本地化用户界面，并且想本地化大小、位置和字体数据以及使用 Sisulizer 本地化方法。如果您的应用程序必须在一个文件中支持多种语言，请使用传统的本地化方法。</target>
        </trans-unit>
        <trans-unit>
          <source>Duplicate menu hotkey</source>
          <target>重复菜单热键</target>
        </trans-unit>
        <trans-unit>
          <source>A .NET project might have some default parameters that it requires. They are always passed to assembly linker. If any default parameters they are shown below the edit filed. For example if you have assigned a key file to the .NET project, Sisulizer will use the same key file for the localized satellite assembly files.</source>
          <target>.NET 项目可能有一些它需要的默认参数。它们总是传递给程序集链接器。如果有任何默认参数，它们将显示在编辑字段下方。例如，如果您已将密钥文件分配给 .NET 项目，Sisulizer 将对本地化的附属程序集文件使用相同的密钥文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can access and localize SQLite databases</source>
          <target>Sisulizer 可以访问和本地化 SQLite 数据库</target>
        </trans-unit>
        <trans-unit>
          <source>Single carriage return character (0D or 000D) are used to mark a new line</source>
          <target>单个回车符（0D 或 000D）用于标记新行</target>
        </trans-unit>
        <trans-unit>
          <source>Custom resources containing custom data such as images, HTML or XML</source>
          <target>包含自定义数据（如图像、HTML 或 XML）的自定义资源</target>
        </trans-unit>
        <trans-unit>
          <source>Click &lt;em&gt;Import&lt;/em&gt; to import language and locale information. The application can import data from the following file formats:</source>
          <target>单击&lt;em&gt;导入&lt;/em&gt;以导入语言和区域设置信息。该应用程序可以从以下文件格式导入数据：</target>
        </trans-unit>
        <trans-unit>
          <source>Property is a custom property added by the user.</source>
          <target>属性是用户添加的自定义属性。</target>
        </trans-unit>
        <trans-unit>
          <source>You add one or more .ui files into Sisulizer project.  Sisulizer creates localized .ui files&lt;br&gt;
sample.ui 
      -&amp;gt; &lt;br&gt;
fi\sample.ui (Finnish)&lt;br&gt;
de\sample.ts (German)</source>
          <target>您将一个或多个 .ui 文件添加到 Sisulizer 项目中。 Sisulizer 创建本地化的 .ui 文件&lt;br&gt;示例.ui -&amp;gt;&lt;br&gt; fi\sample.ui（芬兰语）&lt;br&gt; de\sample.ts（德语）</target>
        </trans-unit>
        <trans-unit>
          <source>You can save a configuration with a name and and quickly take that configuration in use. The combo box in the top of dialog contains list of saved configurations. To turn on a configuration select the appropriate configuration from the list. If you want to create and save a new configuration click &lt;em&gt;Save validation&lt;/em&gt; button. If you want to delete a configuration first select it and then click &lt;em&gt;Delete validation&lt;/em&gt; button. By default Sisulizer does not use any configuration but uses current settings (e.g. custom settings) only on this time. If you want not to use a selected configuration but a custom settings click &lt;em&gt;Clear selection&lt;/em&gt; button.</source>
          <target>您可以使用名称保存配置并快速使用该配置。对话框顶部的组合框包含已保存配置的列表。要打开配置，请从列表中选择适当的配置。如果要创建并保存新配置，请单击&lt;em&gt;保存验证&lt;/em&gt;按钮。如果要删除配置，请先选择它，然后单击&lt;em&gt;删除验证&lt;/em&gt;按钮。默认情况下，Sisulizer 不使用任何配置，而仅在此时使用当前设置（例如自定义设置）。如果您不想使用选定的配置而是使用自定义设置，请单击&lt;em&gt;清除选择&lt;/em&gt;按钮。</target>
        </trans-unit>
        <trans-unit>
          <source>Elements can contain picture data</source>
          <target>元素可以包含图片数据</target>
        </trans-unit>
        <trans-unit>
          <source>EVALUATION VERSION&lt;br&gt;
  This is not free software. You are hereby licensed to use this software for evaluation purposes without charge for a period of 30 days. Using this software after the evaluation period violates copyright laws and may result in severe civil and criminal penalties.</source>
          <target>评估版本&lt;br&gt;这不是免费软件。特此授权您在 30 天内免费使用本软件进行评估。在评估期后使用本软件违反版权法，并可能导致严厉的民事和刑事处罚。</target>
        </trans-unit>
        <trans-unit>
          <source>Learn more about &lt;a href=&quot;TranslationMemoryEditor.htm&quot;&gt;Translation Memory Editor&lt;/a&gt;.</source>
          <target>了解有关&lt;a href=&quot;TranslationMemoryEditor.htm&quot;&gt;翻译记忆库编辑器的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to select what &lt;a href=&quot;Validation.htm&quot;&gt;validations&lt;/a&gt; are used when validating the translations of the project.</source>
          <target>使用此对话框可以选择在验证项目翻译时使用哪些&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>In addition of the engine file Hunspell needs dictionary files as well. Dictionary file extensions are .dic and .aff. Each language has both .dic and .aff files. Sisulizer setup does &lt;strong&gt;not&lt;/strong&gt; install any dictionary files but you have to download and install them. You can have dictionaries for more than 50 different languages. You have two choices.</source>
          <target>除了引擎文件之外，Hunspell 还需要字典文件。字典文件扩展名是 .dic 和 .aff。每种语言都有 .dic 和 .aff 文件。 Sisulizer的安装&lt;strong&gt;不&lt;/strong&gt;安装任何字典文件，但是你必须下载并安装。您可以拥有 50 多种不同语言的词典。你有两个选择。</target>
        </trans-unit>
        <trans-unit>
          <source>variant</source>
          <target>变体</target>
        </trans-unit>
        <trans-unit>
          <source>Add or modify content language</source>
          <target>添加或修改内容语言</target>
        </trans-unit>
        <trans-unit>
          <source>Gets full menu structure information</source>
          <target>获取完整的菜单结构信息</target>
        </trans-unit>
        <trans-unit>
          <source>Translates properties whose type is TStrings or derived.</source>
          <target>翻译类型为 TStrings 或派生的属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer&#x27;s XML directory contains XML samples.</source>
          <target>Sisulizer 的 XML 目录包含 XML 示例。</target>
        </trans-unit>
        <trans-unit>
          <source>Formatting validation</source>
          <target>格式验证</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the type of the property. Some resource formats such as VCL contain type information so Sisulizer can figure out the type of the property even it it belongs to a 3rd party component. However XAML (WPF) resource files, .xaml, do not contain type information. If you map a 3rd party WPF component and it contains a custom property that is not a string type, select the type of the property from the combo box.</source>
          <target>指定属性的类型。一些资源格式（如 VCL）包含类型信息，因此 Sisulizer 可以确定属性的类型，即使它属于第 3 方组件。但是，XAML (WPF) 资源文件 .xaml 不包含类型信息。如果映射第 3 方 WPF 组件并且它包含不是字符串类型的自定义属性，请从组合框中选择该属性的类型。</target>
        </trans-unit>
        <trans-unit>
          <source>A byte value that specifies the size of the record in bytes. This can only be as the first field of the record.</source>
          <target>一个字节值，以字节为单位指定记录的大小。这只能作为记录的第一个字段。</target>
        </trans-unit>
        <trans-unit>
          <source>Use translations of the same language but different country</source>
          <target>使用相同语言但不同国家的翻译</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;ParentBidiMode&lt;/em&gt; property specifies if the value of the BiDiMode property of the control should be ignored and to use the BiDiMode of the parent control. The default value is True. Leave this to True.</source>
          <target>&lt;em&gt;ParentBidiMode&lt;/em&gt;属性指定是否应忽略控件的 BiDiMode 属性值并使用父控件的 BiDiMode。默认值是true。将此保留为 True。</target>
        </trans-unit>
        <trans-unit>
          <source>Null terminated Ansi string</source>
          <target>空终止 Ansi 字符串</target>
        </trans-unit>
        <trans-unit>
          <source>You can see that there are now four sub folders instead of original three. This is because in Finnish all three vehicles start with different letter. In English both bike and bicycle start with b.</source>
          <target>您可以看到现在有四个子文件夹，而不是原来的三个。这是因为在芬兰语中，所有三种车辆都以不同的字母开头。在英语中，自行车和自行车都以 b 开头。</target>
        </trans-unit>
        <trans-unit>
          <source>This list contains the list of attribute values that means &lt;em&gt;Do not localize&lt;/em&gt; if used as a value of a &lt;a href=&quot;XmlLocalizeAttribute.htm&quot;&gt;Localize attribute&lt;/a&gt;.</source>
          <target>此列表包含属性值列表，这意味着如果用作&lt;a href=&quot;XmlLocalizeAttribute.htm&quot;&gt;Localize 属性的&lt;/a&gt;值，则&lt;em&gt;不要&lt;/em&gt;&lt;a href=&quot;XmlLocalizeAttribute.htm&quot;&gt;本地化&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Only editable rows are visible.</source>
          <target>只有可编辑的行是可见的。</target>
        </trans-unit>
        <trans-unit>
          <source>Case is not changed</source>
          <target>案例未更改</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog box to line up selected components in relation to each other or to the form. The Horizontal alignment options align components along their right edges, left edges, or center. The Vertical alignment options align components along their top edges, bottom edges, or center.</source>
          <target>使用此对话框可以将选定的组件相互对齐或与表单相关联。水平对齐选项沿组件的右边缘、左边缘或中心对齐组件。垂直对齐选项沿组件的顶边、底边或中心对齐。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to view the available add-ons. They are libraries (either DLL or COM objects) that Sisulizer uses. There are two kind of add-ons.</source>
          <target>使用此表查看可用的附加组件。它们是 Sisulizer 使用的库（DLL 或 COM 对象）。有两种附加组件。</target>
        </trans-unit>
        <trans-unit>
          <source>Any data. Sisulizer does not interpret the data but lets the translator to assign translated binary data file. When Sisulizer build the localized file it uses data from the give translated binary data file.</source>
          <target>任何数据。 Sisulizer 不解释数据，而是让翻译器分配已翻译的二进制数据文件。当 Sisulizer 构建本地化文件时，它使用来自给定已翻译二进制数据文件的数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Android is a mobile operating system from Google. Each Android application can contain several resources such as user interface, strings, images, animation and XML. Sisulizer can localize all Android resource types including HTML, XML and text files stored as raw resources.</source>
          <target>Android 是谷歌的移动操作系统。每个 Android 应用程序都可以包含多种资源，例如用户界面、字符串、图像、动画和 XML。 Sisulizer 可以本地化所有 Android 资源类型，包括 HTML、XML 和存储为原始资源的文本文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Choose the Version sheet of &lt;a href=&quot;NetSettingsDialog.htm&quot;&gt;Tools | Platforms | .NET dialog&lt;/a&gt; to configure SDK directories.</source>
          <target>选择&lt;a href=&quot;NetSettingsDialog.htm&quot;&gt;工具&lt;/a&gt;的版本表&lt;a href=&quot;NetSettingsDialog.htm&quot;&gt;|平台 | .NET 对话框&lt;/a&gt;来配置 SDK 目录。</target>
        </trans-unit>
        <trans-unit>
          <source>The United States of America is a federal republic of 50 states, located primary on central North America.</source>
          <target>美利坚合众国是一个由 50 个州组成的联邦共和国，主要位于北美洲中部。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the font name.</source>
          <target>指定字体名称。</target>
        </trans-unit>
        <trans-unit>
          <source>import</source>
          <target>进口</target>
        </trans-unit>
        <trans-unit>
          <source>If your application is a Unicode application your can ignore this message. If you try to run a non-Unicode (e.g. Ansi) program on a language that is incompatible to the current language for non-Unicode programs of the system, some of the string may not be displayed correctly. In order to run the application correctly you have to change the lanugage for non-Unicode programs of the system to match the language. Use the Regional and Language Options in Control Panel to change the settings.</source>
          <target>如果您的应用程序是 Unicode 应用程序，您可以忽略此消息。如果您尝试在与系统的非 Unicode 程序的当前语言不兼容的语言上运行非 Unicode（例如 Ansi）程序，则某些字符串可能无法正确显示。为了正确运行应用程序，您必须更改系统非 Unicode 程序的语言以匹配该语言。使用控制面板中的区域和语言选项来更改设置。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the original language of the source. This tells what language is used in the original file or database. If the original item contains two or more languages mixed together set the language that is most widely used.</source>
          <target>指定源的原始语言。这将说明原始文件或数据库中使用的语言。如果原始项目包含混合在一起的两种或多种语言，请设置使用最广泛的语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Original table</source>
          <target>原表</target>
        </trans-unit>
        <trans-unit>
          <source>Use source value</source>
          <target>使用源值</target>
        </trans-unit>
        <trans-unit>
          <source>Add variant</source>
          <target>添加变体</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file can be any  &lt;a href=&quot;AndroidLocalization.htm&quot;&gt;Android resource  file&lt;/a&gt;  (e.g. C:\Samples\res\values\strings.xml).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件可以是任何&lt;a href=&quot;AndroidLocalization.htm&quot;&gt;Android 资源文件&lt;/a&gt;（例如 C:\Samples\res\values\strings.xml）。</target>
        </trans-unit>
        <trans-unit>
          <source>Windows binary files</source>
          <target>Windows 二进制文件</target>
        </trans-unit>
        <trans-unit>
          <source>If checked editor shows colored boundaries around components if size and/or position properties have been changed. Boundary colors are applied with the following cases:</source>
          <target>如果大小和/或位置属性已更改，则选中的编辑器在组件周围显示彩色边界。边界颜色适用于以下情况：</target>
        </trans-unit>
        <trans-unit>
          <source>Add  assembly file (.exe or .dll) into Sisulizer project. You can not use project localization.</source>
          <target>将程序集文件（.exe 或 .dll）添加到 Sisulizer 项目中。您不能使用项目本地化。</target>
        </trans-unit>
        <trans-unit>
          <source>You can exclude files and directories not to download.</source>
          <target>您可以排除不下载的文件和目录。</target>
        </trans-unit>
        <trans-unit>
          <source>When creating localized items Sisulizer uses sub language/main language chain to get the correct translation. Then if there is a translation in the sub language (e.g. English (United States)) that value will be used, otherwise the translation in the main language (e.g. English) translation value.</source>
          <target>创建本地化项目时，Sisulizer 使用子语言/主语言链来获得正确的翻译。然后，如果有子语言（例如英语（美国））的翻译，则将使用该值，否则将使用主语言（例如英语）的翻译值。</target>
        </trans-unit>
        <trans-unit>
          <source>3rd party controls</source>
          <target>第三方控制</target>
        </trans-unit>
        <trans-unit>
          <source>Sends an email to the author of the original file. If you find an spelling error in the original file it should be corrected as soon as possible. If you are the developer or the author of the file you can fix it yourself. if you are a localization engineer or translator you might not have access to the original file. In that case choose this menu to send an spelling error email to the author of the file so he or she can fix it.</source>
          <target>向原始文件的作者发送电子邮件。如果您在原始文件中发现拼写错误，应尽快更正。如果您是文件的开发者或作者，您可以自行修复。如果您是本地化工程师或翻译人员，您可能无法访问原始文件。在这种情况下，选择此菜单向文件作者发送拼写错误电子邮件，以便他或她可以修复它。</target>
        </trans-unit>
        <trans-unit>
          <source>Company name</source>
          <target>公司名</target>
        </trans-unit>
        <trans-unit>
          <source>Edit menu</source>
          <target>编辑菜单</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the translated picture (if any). Press &lt;em&gt;Load&lt;/em&gt; to browse a picture file to be used as translation.</source>
          <target>显示翻译后的图片（如果有）。按&lt;em&gt;加载&lt;/em&gt;浏览要用作翻译的图片文件。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked component uses WideString instead of Sting to store string properties. For example TNT and ElPack components use wide strings.</source>
          <target>如果选中的组件使用 WideString 而不是 Sting 来存储字符串属性。例如，TNT 和 ElPack 组件使用宽字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Required strings dialog allows you to edit list of &lt;a href=&quot;RequiredStringsValidation.htm&quot;&gt;required strings&lt;/a&gt;.</source>
          <target>所需字符串对话框允许您编辑&lt;a href=&quot;RequiredStringsValidation.htm&quot;&gt;所需字符串&lt;/a&gt;列表。</target>
        </trans-unit>
        <trans-unit>
          <source>As you can see the string contains three sub strings separated by semi colon. If we set the row using combined string and &lt;code&gt;#;#;#&lt;/code&gt; &lt;a href=&quot;RegularExpressions.htm&quot;&gt;regular expression&lt;/a&gt; Sisulizer will replace the original row with three different rows.</source>
          <target>如您所见，该字符串包含由分号分隔的三个子字符串。如果我们使用组合字符串和&lt;code&gt;#;#;#&lt;/code&gt;&lt;a href=&quot;RegularExpressions.htm&quot;&gt;正则表达式&lt;/a&gt;设置行，Sisulizer 将用三个不同的行替换原始行。</target>
        </trans-unit>
        <trans-unit>
          <source>No matter what your .NET version is Sisulizer can fully create localized files for bidirectional languages. Leave RightToLeft and RightToLeftLayout properties to their default values. When building localized files Sisulizer will change the values of these properties to match the target language.</source>
          <target>无论您的 .NET 版本是什么，Sisulizer 都可以为双向语言完全创建本地化文件。将 RightToLeft 和 RightToLeftLayout 属性保留为其默认值。在构建本地化文件时，Sisulizer 将更改这些属性的值以匹配目标语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Item contains binary data as a Base-64 encoded string.</source>
          <target>项目包含作为 Base-64 编码字符串的二进制数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Before break</source>
          <target>休息前</target>
        </trans-unit>
        <trans-unit>
          <source>Only the first string from the duplica group is visible.</source>
          <target>只有副本组中的第一个字符串可见。</target>
        </trans-unit>
        <trans-unit>
          <source>This sheet specifies the translation memory maintenance options and tools.</source>
          <target>此表指定翻译记忆库维护选项和工具。</target>
        </trans-unit>
        <trans-unit>
          <source>As you can see the word skiing has been translated in two different way in Finnish. If we now add swimming Sisulizer can not keep both Finnish translations. The one that is first stored in Sisulizer project will be used. After rescan we either get</source>
          <target>正如您所看到的，滑雪这个词在芬兰语中有两种不同的翻译方式。如果我们现在添加游泳 Sisulizer 不能保留两个芬兰语翻译。将使用第一个存储在 Sisulizer 项目中的那个。重新扫描后，我们要么得到</target>
        </trans-unit>
        <trans-unit>
          <source>Qt translation file (.ts)</source>
          <target>Qt 翻译文件 (.ts)</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer uses &lt;a href=&quot;QtLocalization.htm&quot;&gt;Sisulizer&#x27;s  visual Qt localization method&lt;/a&gt;.</source>
          <target>Sisulizer 使用&lt;a href=&quot;QtLocalization.htm&quot;&gt;Sisulizer 的可视化 Qt 定位方法&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies a license file.</source>
          <target>指定许可文件。</target>
        </trans-unit>
        <trans-unit>
          <source>In above screenshot binary, color, font and picture data types are excluded (disabled) and all other included (enabled).</source>
          <target>在上面的截图二进制中，颜色、字体和图片数据类型被排除（禁用）和所有其他包括（启用）。</target>
        </trans-unit>
        <trans-unit>
          <source>Visual C++ (.exe or .dll)</source>
          <target>Visual C++（.exe 或 .dll）</target>
        </trans-unit>
        <trans-unit>
          <source>You can sort result list by any column. There are three sort order: none, ascending and descending. When the sort order is none the items are show on the original order. When the sort order is ascending the items are show on the ascending order of the clicked  column. When the sort order is descending the items are show on the descending order of the clicked  column. You can change the sort order and sort column by clicking the colum header. If click another time the next sort order is taken place and so on.</source>
          <target>您可以按任何列对结果列表进行排序。共有三种排序顺序：无、升序和降序。当排序顺序为 none 时，项目将按原始顺序显示。当排序顺序为升序时，项目将按单击列的升序显示。当排序顺序为降序时，项目将按单击列的降序显示。您可以通过单击列标题来更改排序顺序和排序列。如果再次单击，则会发生下一个排序顺序，依此类推。</target>
        </trans-unit>
        <trans-unit>
          <source>.NET has two different user interface APIs. They are Windows Forms and WPF (Windows Presentation Foundation). Windows Forms is the original .NET user interface API and it stores most resource data including user interface data into .resx files. WPF is a new .NET user interface API that uses .xaml (XAML) files to stores user interface data and .resx files to store other data. The localized and compiled resource data in both cases are stored inside &lt;a href=&quot;SatelliteAssembly.htm&quot;&gt;satellite assembly files&lt;/a&gt;. The process in both cases is similar: You select either original assembly file (.exe or .dll) or a Visual Studio project file (.csproj, .vbproj) or a Visual Studio solution file (.sln). Sisulizer scan the files and reads resource files/data and finally creates localized satellite assembly files.</source>
          <target>.NET 有两种不同的用户界面 API。它们是 Windows 窗体和 WPF（Windows Presentation Foundation）。 Windows 窗体是原始的 .NET 用户界面 API，它将大多数资源数据（包括用户界面数据）存储到 .resx 文件中。 WPF 是一种新的 .NET 用户界面 API，它使用 .xaml (XAML) 文件来存储用户界面数据和 .resx 文件来存储其他数据。在这两种情况下，本地化和编译的资源数据都存储在&lt;a href=&quot;SatelliteAssembly.htm&quot;&gt;附属程序集文件中&lt;/a&gt;。这两种情况下的过程是相似的：选择原始程序集文件（.exe 或 .dll）或 Visual Studio 项目文件（.csproj、.vbproj）或 Visual Studio 解决方案文件 (.sln)。 Sisulizer 扫描文件并读取资源文件/数据，最后创建本地化的卫星程序集文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Translate project using &lt;a href=&quot;TranslationEnginesDialogInternalTranslationMemory.htm&quot;&gt;translation engines&lt;/a&gt;.</source>
          <target>使用&lt;a href=&quot;TranslationEnginesDialogInternalTranslationMemory.htm&quot;&gt;翻译引擎&lt;/a&gt;翻译项​​目。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the string status of the translations that are saved to the translation memory.</source>
          <target>指定保存到翻译记忆库的翻译的字符串状态。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer is now ready to create the package/setup file. Check &lt;em&gt;Show package file in Explorer to show&lt;/em&gt; the created file in Explorer. This makes it easy to open or email the file to the translator. Click &lt;em&gt;Finish&lt;/em&gt; to close Exchange Wizard.</source>
          <target>Sisulizer 现在已准备好创建包/安装文件。选中&lt;em&gt;在资源管理器中显示包文件以在资源管理器中显示&lt;/em&gt;创建的文件。这样可以轻松打开文件或通过电子邮件将文件发送给翻译人员。单击&lt;em&gt;完成&lt;/em&gt;以关闭 Exchange 向导。</target>
        </trans-unit>
        <trans-unit>
          <source>View the original form without any translations or layout changes</source>
          <target>查看没有任何翻译或布局更改的原始表单</target>
        </trans-unit>
        <trans-unit>
          <source>When Sisulizer creates a multilingual .exe it adds each resource in several languages. Our example has three target languages: Finnish, German and Japanese. It also gives the original neutral resource language id matching the original language of the application (e.g. English). When we look at the resources of the multilingual .exe we find out that instead of one TFORM1 we have four TFORM1s. One in each language.</source>
          <target>当 Sisulizer 创建多语言 .exe 时，它​​会以多种语言添加每个资源。我们的示例有三种目标语言：芬兰语、德语和日语。它还提供与应用程序的原始语言（例如英语）匹配的原始中性资源语言 ID。当我们查看多语言 .exe 的资源时，我们发现不是一个 TFORM1，而是四个 TFORM1。一种语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Resource DLL location</source>
          <target>资源DLL位置</target>
        </trans-unit>
        <trans-unit>
          <source>In addition of these there is String alias that is mapped to one of the above strings. In Delphi 1 String was ShortString. After that it was AnsiString until  Delphi 2009/C++Builder 2009 where the default string was changed to UnicodeString.</source>
          <target>除此之外，还有映射到上述字符串之一的字符串别名。在 Delphi 1 中，字符串是 ShortString。之后它是 AnsiString，直到 Delphi 2009/C++Builder 2009，其中默认字符串更改为 UnicodeString。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the escape method how line feed, carriage return and other special characters are encoded. Possible values are:</source>
          <target>指定换行、回车和其他特殊字符如何编码的转义方法。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Middle Eastern people read from right to left. It is opposite to the Western reading order that is from left to right.</source>
          <target>中东人从右到左阅读。它与西方从左到右的阅读顺序相反。</target>
        </trans-unit>
        <trans-unit>
          <source>SelectLanguage.Select changes the language, Form1_Load and Form1_Shown resets the dynamic properties using the new language. There is no need to call webBrowser1_DocumentCompleted because webBrowser1 is calling it automatically after setting Url in Form1_Shown.</source>
          <target>SelectLanguage.Select 更改语言，Form1_Load 和 Form1_Shown 使用新语言重置动态属性。不需要调用 webBrowser1_DocumentCompleted 因为 webBrowser1 在 Form1_Shown 中设置 Url 后会自动调用它。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer ignores the white spaces on the key value after the separator character. Example: &lt;code&gt;key=&amp;nbsp;value -&amp;gt; key=value&lt;/code&gt;</source>
          <target>如果选中 Sisulizer 忽略分隔符后的键值上的空格。示例： &lt;code&gt;key= value -&amp;gt; key=value&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit>
          <source>Exchange Back to Developer</source>
          <target>交换回开发商</target>
        </trans-unit>
        <trans-unit>
          <source>Item contains Pascal or Delphi source code.</source>
          <target>项目包含 Pascal 或 Delphi 源代码。</target>
        </trans-unit>
        <trans-unit>
          <source>.NET country code</source>
          <target>.NET 国家/地区代码</target>
        </trans-unit>
        <trans-unit>
          <source>Language part is written in lower case. Optional country part is written in upper case.&lt;br&gt;For example en-US</source>
          <target>语言部分是小写的。可选的国家/地区部分以大写形式书写。&lt;br&gt;例如 en-US</target>
        </trans-unit>
        <trans-unit>
          <source>Import scanner to be used</source>
          <target>导入要使用的扫描仪</target>
        </trans-unit>
        <trans-unit>
          <source>Normally Sisulizer runs as a user privilege on Windows Vista. Sometimes when performing registration Sisulizer need to elevate its privilege to administrator level. Before doing it Sisulizer will always prompt you if you want to perform action. If you agree Vista will show a &lt;a href=&quot;http://en.wikipedia.org/wiki/User_Account_Control&quot; target=&quot;_blank&quot;&gt;User Account Control (UAC) dialog&lt;/a&gt;.</source>
          <target>通常 Sisulizer 在 Windows Vista 上以用户权限运行。有时在执行注册时 Sisulizer 需要将其权限提升到管理员级别。在执行之前，Sisulizer 将始终提示您是否要执行操作。如果您同意 Vista 将显示&lt;a href=&quot;http://en.wikipedia.org/wiki/User_Account_Control&quot; target=&quot;_blank&quot;&gt;用户帐户控制 (UAC) 对话框&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the options how the above strings are compared to the project strings. Possible values are:</source>
          <target>指定如何将上述字符串与项目字符串进行比较的选项。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Only when importing to a project</source>
          <target>仅在导入到项目时</target>
        </trans-unit>
        <trans-unit>
          <source>Use the File menu to open, save, close, and print new or existing projects, and to import, export and exchange open project.</source>
          <target>使用文件菜单打开、保存、关闭和打印新的或现有的项目，以及导入、导出和交换打开的项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Add unique number before the value.</source>
          <target>在值前添加唯一编号。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the name of the file to be exported (e.g. C:\MyFiles\Export.resx).</source>
          <target>指定要导出的文件的名称（例如 C:\MyFiles\Export.resx）。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer component type. Sisulizer contain a collection of visual component type. Select the type that is best match to the component type. For example if the component class name contains a label component (TMyLabel) the best choice would be Label.</source>
          <target>Sisulizer 组件类型。 Sisulizer 包含一个可视化组件类型的集合。选择与组件类型最匹配的类型。例如，如果组件类名称包含标签组件 (TMyLabel)，则最佳选择是 Label。</target>
        </trans-unit>
        <trans-unit>
          <source>This is the easiest way to control what to translate because it is done on Sisulizer application and not Sisulizer VCL units. You can exclude any &lt;a href=&quot;ExcludeResourceTypes.htm&quot;&gt;resource type&lt;/a&gt; or any &lt;a href=&quot;ExcludeDataTypes.htm&quot;&gt;data type&lt;/a&gt; from your project. In that case Sisulizer does not modify those resources or data types when creating localized resource DLLs.</source>
          <target>这是控制翻译内容的最简单方法，因为它是在 Sisulizer 应用程序上完成的，而不是在 Sisulizer VCL 设备上完成的。您可以从项目中排除任何&lt;a href=&quot;ExcludeResourceTypes.htm&quot;&gt;资源类型&lt;/a&gt;或任何&lt;a href=&quot;ExcludeDataTypes.htm&quot;&gt;数据类型&lt;/a&gt;。在这种情况下，Sisulizer 在创建本地化资源 DLL 时不会修改这些资源或数据类型。</target>
        </trans-unit>
        <trans-unit>
          <source>To make you localized application to work you have to turn &lt;em&gt;Widestring (Unicode) usage&lt;/em&gt; to No.</source>
          <target>要使本地化应用程序正常工作，您必须将&lt;em&gt;Widestring (Unicode) 用法&lt;/em&gt;改为 No。</target>
        </trans-unit>
        <trans-unit>
          <source>HTML Source | Scan extensions</source>
          <target>HTML 源 |扫描扩展</target>
        </trans-unit>
        <trans-unit>
          <source>The above Ini files uses # as a comment character and the sample contains two comments.</source>
          <target>上述 Ini 文件使用 # 作为注释字符，示例包含两个注释。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the type of the exchange package. Possible values are:</source>
          <target>指定交换包的类型。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies what value the status of the translation is set. Possible options are:</source>
          <target>指定设置翻译状态的值。可能的选项是：</target>
        </trans-unit>
        <trans-unit>
          <source>What kind of data can be localized</source>
          <target>什么样的数据可以本地化</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer supports C#, Visual Basic and Delphi projects. Project file localization can be used if you have the full source code available and you use either Microsoft Visual Studio or Borland/CodeGear Developer Studio.</source>
          <target>Sisulizer 支持 C#、Visual Basic 和 Delphi 项目。如果您拥有完整的源代码并且使用 Microsoft Visual Studio 或 Borland/CodeGear Developer Studio，则可以使用项目文件本地化。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the height of the editor is adjusted automatically to fit the Ini file.</source>
          <target>如果选中，编辑器的高度会自动调整以适合 Ini 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>When you open a Sisulizer project following items are visible on the application desktop:</source>
          <target>当您打开 Sisulizer 项目时，应用程序桌面上会显示以下项目：</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the directory where Sisulizer creates localized files. By default the output directory is usually the same directory where the original source file is located. You can change this by pressing ... and browsing another directory.</source>
          <target>指定 Sisulizer 创建本地化文件的目录。默认情况下，输出目录通常与原始源文件所在的目录相同。您可以通过按 ... 并浏览另一个目录来更改此设置。</target>
        </trans-unit>
        <trans-unit>
          <source>If the status is less or equal to</source>
          <target>如果状态小于或等于</target>
        </trans-unit>
        <trans-unit>
          <source>Localize attribute</source>
          <target>本地化属性</target>
        </trans-unit>
        <trans-unit>
          <source>You can set different values for row and translation comments.</source>
          <target>您可以为行和翻译注释设置不同的值。</target>
        </trans-unit>
        <trans-unit>
          <source>Removes the selected item from its current position and places it on the clipboard.</source>
          <target>从当前位置移除所选项目并将其放置在剪贴板上。</target>
        </trans-unit>
        <trans-unit>
          <source>Set language of a neutral resource</source>
          <target>设置中立资源的语言</target>
        </trans-unit>
        <trans-unit>
          <source>You can localize a Delphi binary file without specifying the DRC file but in that case Sisulizer can not use resource name as context ids. Possible context methods are:</source>
          <target>您可以在不指定 DRC 文件的情况下本地化 Delphi 二进制文件，但在这种情况下 Sisulizer 不能使用资源名称作为上下文 ID。可能的上下文方法有：</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer deletes the created .resx or .txt files after the build process.</source>
          <target>如果选中，Sisulizer 会在构建过程后删除创建的 .resx 或 .txt 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>The rows are sorted in ascending order based on the values of the current column.</source>
          <target>行根据当前列的值按升序排序。</target>
        </trans-unit>
        <trans-unit>
          <source>XAML file (.xaml)</source>
          <target>XAML 文件 (.xaml)</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer mirrors the form and its sub components when creating a Middle Eastern form. Uncheck this if you call TForm.FlipChildren method before showing the form. This is because FlipChildren automatically mirrors the form.</source>
          <target>如果选中 Sisulizer 在创建中东表单时镜像表单及其子组件。如果在显示表单之前调用 TForm.FlipChildren 方法，请取消选中此项。这是因为 FlipChildren 会自动镜像表单。</target>
        </trans-unit>
        <trans-unit>
          <source>Windows Binary Source | Platform files</source>
          <target>Windows 二进制源 |平台文件</target>
        </trans-unit>
        <trans-unit>
          <source>Read more about &lt;a href=&quot;NewLineChars.htm&quot;&gt;new lines&lt;/a&gt;.</source>
          <target>阅读有关&lt;a href=&quot;NewLineChars.htm&quot;&gt;新行的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Empty line</source>
          <target>空行</target>
        </trans-unit>
        <trans-unit>
          <source>Resizes the group of components to the height or width of the largest selected component.</source>
          <target>将组件组的大小调整为最大选定组件的高度或宽度。</target>
        </trans-unit>
        <trans-unit>
          <source>Any resource data that has been added as Embedded Resource into .NET project. Most often this resource types is used to store images or other large binary data. Compiled assembly contains each embedded resource as separate resource item (e.g. MyAssembly.MyPicture.png).</source>
          <target>已作为嵌入式资源添加到 .NET 项目中的任何资源数据。大多数情况下，这种资源类型用于存储图像或其他大型二进制数据。编译后的程序集包含每个嵌入资源作为单独的资源项（例如 MyAssembly.MyPicture.png）。</target>
        </trans-unit>
        <trans-unit>
          <source>The length of the string in characters is written in the preceding word of the the first character. Maximum string length is 65535 characters.</source>
          <target>字符串的长度（以字符为单位）写在第一个字符的前一个单词中。最大字符串长度为 65535 个字符。</target>
        </trans-unit>
        <trans-unit>
          <source>The product names used here are for identification purposes only &amp;ndash; all trademarks and registered trademarks are the property of their respective owners.</source>
          <target>此处使用的产品名称仅用于识别目的——所有商标和注册商标均为其各自所有者的财产。</target>
        </trans-unit>
        <trans-unit>
          <source>Jar file (.jar) that contains resource (.properties) files</source>
          <target>包含资源 (.properties) 文件的 Jar 文件 (.jar)</target>
        </trans-unit>
        <trans-unit>
          <source>Draws a row status icon after text if status is other than &lt;em&gt;in use&lt;/em&gt;.</source>
          <target>如果状态不是&lt;em&gt;在使用中，&lt;/em&gt;则在文本后绘制行状态图标。</target>
        </trans-unit>
        <trans-unit>
          <source>Text column. The value of the this column is picked up when scanning.</source>
          <target>文本栏。扫描时会选取此列的值。</target>
        </trans-unit>
        <trans-unit>
          <source>Separate values by a semicolon.</source>
          <target>用分号分隔值。</target>
        </trans-unit>
        <trans-unit>
          <source>When using the assembly localization user selects an assembly file (.exe, .dll or .xap) to be localized. Sisulizer scans all the resource data from the application including XAML, form, string, icons, image and version data. On the build process Sisulizer creates the localized &lt;a href=&quot;SatelliteAssembly.htm&quot;&gt;satellite assembly&lt;/a&gt; files containing localized resources.</source>
          <target>使用程序集本地化时，用户选择要本地化的程序集文件（.exe、.dll 或 .xap）。 Sisulizer 扫描来自应用程序的所有资源数据，包括 XAML、表单、字符串、图标、图像和版本数据。在构建过程中，Sisulizer 创建包含本地化资源的本地化&lt;a href=&quot;SatelliteAssembly.htm&quot;&gt;附属程序集&lt;/a&gt;文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Excludes the selected translation validation error in the future.</source>
          <target>将来排除选定的翻译验证错误。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Use smart method&lt;/em&gt; if checked Sisulizer applies the smart duplicate translation that ignores character case and some punctuation marks.</source>
          <target>如果选中 Sisulizer，则&lt;em&gt;使用智能方法&lt;/em&gt;应用忽略字符大小写和某些标点符号的智能重复翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer always decodes any hex or integer entity. For example if the XML file contains &amp;#42; it will be read as &amp;quot;*&amp;quot;.</source>
          <target>Sisulizer 总是解码任何十六进制或整数实体。例如，如果 XML 文件包含 *，它将被读取为“*”。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the default name of configuration that Sisulizer uses when reading .NET project files.</source>
          <target>指定 Sisulizer 在读取 .NET 项目文件时使用的默认配置名称。</target>
        </trans-unit>
        <trans-unit>
          <source>Sheet Filter | Row statuses</source>
          <target>片式过滤器 |行状态</target>
        </trans-unit>
        <trans-unit>
          <source>Combined string</source>
          <target>组合字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Add-ons that Sisulizer uses if they are installed</source>
          <target>如果安装了 Sisulizer 使用的附加组件</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;strong&gt;Note!&lt;/strong&gt; Depending on your Sisulizer license some of the above formats might be disabled.</source>
          <target>&lt;strong&gt;笔记！&lt;/strong&gt;根据您的 Sisulizer 许可证，上述某些格式可能会被禁用。</target>
        </trans-unit>
        <trans-unit>
          <source>The following line has an information tag that contains a comment (&amp;quot;Clicking this button opens on-line help&amp;quot;) and sets the maximum length to 300 pixels:</source>
          <target>下面一行有一个包含注释的信息标签（“单击此按钮打开在线帮助”）并将最大长度设置为 300 像素：</target>
        </trans-unit>
        <trans-unit>
          <source>Resource DLLs are very flexible way to make you application multilingual. They have advantages such as dynamic language switch and possibility to install only those languages that are needed. However especially Delphi programmers like that they can make applications that require only single .exe. Using standard resource DLLs does not make this possible because each language brings new file.</source>
          <target>资源 DLL 是使您的应用程序多语言的非常灵活的方式。它们具有诸如动态语言切换和仅安装所需语言的可能性等优点。然而，特别是 Delphi 程序员喜欢他们可以制作只需要单个 .exe 的应用程序。使用标准资源 DLL 无法实现这一点，因为每种语言都会带来新文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Do not set but keep the resource language neutral</source>
          <target>不设置但保持资源语言中性</target>
        </trans-unit>
        <trans-unit>
          <source>Any file having ~ character in the beginning of the extension (e.g. sample.~slp) is a backup file. It contains the pervious valid file. You can reverse you version by deleting the new file and renaming the backup file by removing ~ character.</source>
          <target>任何在扩展名开头带有 ~ 字符的文件（例如 sample.~slp）都是备份文件。它包含以前的有效文件。您可以通过删除新文件并通过删除 ~ 字符重命名备份文件来反转版本。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to control how localized assemblies are signed. Note that there are two kind of signing: strong name and digital signature. An assembly can have them both.</source>
          <target>使用此表控制本地化程序集的签名方式。请注意，有两种签名：强名称和数字签名。一个程序集可以同时拥有它们。</target>
        </trans-unit>
        <trans-unit>
          <source>Item has been removed from original file or database.</source>
          <target>项目已从原始文件或数据库中删除。</target>
        </trans-unit>
        <trans-unit>
          <source>As you can see the XML contains three elements that need to be localized. If we set the row using XML and mark caption attribute, header and footer elements Sisulizer will replace the original row with three different rows.</source>
          <target>如您所见，XML 包含三个需要本地化的元素。如果我们使用 XML 设置行并标记标题属性，则页眉和页脚元素 Sisulizer 将用三个不同的行替换原始行。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to browse items from the translation memory. You can edit or remove the items. You can also add new items into the translation memory.</source>
          <target>使用此表可浏览翻译记忆库中的项目。您可以编辑或删除项目。您还可以将新项目添加到翻译记忆库中。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the formatting options when writing the localized XML files. Possible values are:</source>
          <target>指定编写本地化 XML 文件时的格式选项。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>In this method Sisulizer adds new language tables for each table.</source>
          <target>在此方法中，Sisulizer 为每个表添加新的语言表。</target>
        </trans-unit>
        <trans-unit>
          <source>Use separate node for each section in the project tree</source>
          <target>为项目树中的每个部分使用单独的节点</target>
        </trans-unit>
        <trans-unit>
          <source>Align to Grid</source>
          <target>对齐网格</target>
        </trans-unit>
        <trans-unit>
          <source>Whenever Sisulizer starts it read the default proxy settings of the system. If you have empty proxy settings in above settings  then Sisulizer will fill the settings using the detected system values. If you clear the settings and restart Sisulizer the system settings will be loaded again. If you want to disable this uncheck  &lt;em&gt;Use proxy settings.&lt;/em&gt;</source>
          <target>每当 Sisulizer 启动时，它都会读取系统的默认代理设置。如果您在上述设置中有空的代理设置，则 Sisulizer 将使用检测到的系统值填充设置。如果清除设置并重新启动 Sisulizer，系统设置将再次加载。如果要禁用此功能，请取消选中&lt;em&gt;使用代理设置。&lt;/em&gt;</target>
        </trans-unit>
        <trans-unit>
          <source>Works with Visual Basic applications</source>
          <target>适用于 Visual Basic 应用程序</target>
        </trans-unit>
        <trans-unit>
          <source>This tutorial shows how to import translations from glossaries and existing localized files. Import sub directory contains a ini file and several glossary files that have translations for the ini file. Open Country.slp. It contains Country.ini &lt;a href=&quot;Sources.htm&quot;&gt;source&lt;/a&gt; and three target languages: Finnish, German and Japanese. By default the project file contains no translations. Import directory contains several glossary files that you can use to import translations from. To import a file choose &lt;a href=&quot;FileImportMenu.htm&quot;&gt;File | Import&lt;/a&gt;, click &lt;em&gt;Import translations from a file&lt;/em&gt; if you want to import a file and click &lt;em&gt;Import translations from a database&lt;/em&gt; if you want to import a database.</source>
          <target>本教程展示了如何从词汇表和现有的本地化文件中导入翻译。导入子目录包含一个 ini 文件和几个具有 ini 文件翻译的词汇表文件。打开 Country.slp。它包含 Country.ini&lt;a href=&quot;Sources.htm&quot;&gt;源代码&lt;/a&gt;和三种目标语言：芬兰语、德语和日语。默认情况下，项目文件不包含翻译。导入目录包含多个词汇表文件，可用于从中导入翻译。要导入文件，请选择&lt;a href=&quot;FileImportMenu.htm&quot;&gt;文件 |导入&lt;/a&gt;，&lt;em&gt;从一个文件&lt;/em&gt;，如果你要导入的文件，并&lt;em&gt;从数据库中&lt;/em&gt;单击&lt;em&gt;导入翻译&lt;/em&gt;如果要导入一个数据库单击&lt;em&gt;导入翻译&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Zooms out the current item in the editor.</source>
          <target>缩小编辑器中的当前项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to edit &lt;a href=&quot;Segmentation.htm&quot;&gt;segmentation rule&lt;/a&gt;.</source>
          <target>使用此对话框编辑&lt;a href=&quot;Segmentation.htm&quot;&gt;分段规则&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>You can install Sisulizer on a removable drive such as USB stick or memory card. In this case even when installing on Vista all files are installed into the target directory (e.g. &lt;!-- #BeginLibraryItem &quot;/Library/InstallDir.lbi&quot; --&gt; C:\Program files (x86)\Sisulizer 4&lt;!-- #EndLibraryItem --&gt;), just like in XP. You can run Sisulizer from the stick on any computer matching the minimum system requirement by plugging the stick or drive in to the computer. To run Sisulizer start &amp;lt;install_directory&amp;gt;\Sisulizer.exe on your drive.</source>
          <target>您可以将 Sisulizer 安装在可移动驱动器上，例如 U 盘或存储卡。在这种情况下，即使在 Vista 上安装时，所有文件也会安装到目标目录中（例如&lt;!-- #BeginLibraryItem &quot;/Library/InstallDir.lbi&quot; --&gt;C:\程序文件 (x86)\Sisulizer 4&lt;!-- #EndLibraryItem --&gt; )，就像在 XP 中一样。您可以通过将棒或驱动器插入计算机，在任何符合最低系统要求的计算机上从棒运行 Sisulizer。要运行 Sisulizer，请在驱动器上启动 &amp;lt;install_directory&amp;gt;\Sisulizer.exe。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this menu to change the status of the all rows belonging to this componet.</source>
          <target>使用此菜单可更改属于该组件的所有行的状态。</target>
        </trans-unit>
        <trans-unit>
          <source>Creates a validation summary report that show summary about all validation errors.</source>
          <target>创建一个验证摘要报告，显示有关所有验证错误的摘要。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer desktop file (.sds) is an XML based file that contains the desktop settings of the Sisulizer project. If this does not exist Sisulizer will create a new and will use the default settings.</source>
          <target>Sisulizer 桌面文件 (.sds) 是一个基于 XML 的文件，其中包含 Sisulizer 项目的桌面设置。如果不存在，Sisulizer 将创建一个新的并使用默认设置。</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be an &lt;a href=&quot;GuilianiLocalization.htm&quot;&gt;Guiliani file&lt;/a&gt; (e.g. C:\Samples\Sample.lng).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是&lt;a href=&quot;GuilianiLocalization.htm&quot;&gt;Guiliani 文件&lt;/a&gt;（例如 C:\Samples\Sample.lng）。</target>
        </trans-unit>
        <trans-unit>
          <source>Click &lt;em&gt;Remove&lt;/em&gt; to delete the selected one. Click &lt;em&gt;Edit&lt;/em&gt; to edit the selected one. Click &lt;em&gt;Up&lt;/em&gt; to move selected item one step up. Click &lt;em&gt;Down&lt;/em&gt; to move selected item one step down.</source>
          <target>单击&lt;em&gt;删除&lt;/em&gt;以删除选定的一项。单击“&lt;em&gt;编辑”&lt;/em&gt;以编辑选定的一项。单击&lt;em&gt;向上&lt;/em&gt;将所选项目&lt;em&gt;向上&lt;/em&gt;移动一级。单击&lt;em&gt;向下&lt;/em&gt;可将所选项目&lt;em&gt;向下&lt;/em&gt;移动一级。</target>
        </trans-unit>
        <trans-unit>
          <source>Possible options are:</source>
          <target>可能的选项是：</target>
        </trans-unit>
        <trans-unit>
          <source>Default layout</source>
          <target>默认布局</target>
        </trans-unit>
        <trans-unit>
          <source>You can exclude or include any resource type by using the &lt;a href=&quot;WindowsSourceDialogResourcesSheet.htm&quot;&gt;Resource sheet&lt;/a&gt; of source property dialog. Right click the source file in the project tree and choose Properties. Select &lt;a href=&quot;WindowsSourceDialogResourcesSheet.htm&quot;&gt;Resources sheet&lt;/a&gt;. Check those resource types that you want to localize.</source>
          <target>您可以使用源属性对话框的&lt;a href=&quot;WindowsSourceDialogResourcesSheet.htm&quot;&gt;资源表&lt;/a&gt;来排除或包含任何资源类型。右键单击项目树中的源文件并选择“属性”。选择&lt;a href=&quot;WindowsSourceDialogResourcesSheet.htm&quot;&gt;资源表&lt;/a&gt;。检查您要本地化的资源类型。</target>
        </trans-unit>
        <trans-unit>
          <source>Language support</source>
          <target>语言支持</target>
        </trans-unit>
        <trans-unit>
          <source>If no task is given the create task is performed. &lt;em&gt;project&lt;/em&gt; is a Sisulizer project file (.slp) to be processed.</source>
          <target>如果没有给出任务，则执行创建任务。 &lt;em&gt;project&lt;/em&gt;是要处理的 Sisulizer 项目文件 (.slp)。</target>
        </trans-unit>
        <trans-unit>
          <source>Does not bring any translation from the database to the project.</source>
          <target>不会将任何来自数据库的翻译带到项目中。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the XLIFF file version that is written. Possible values are:</source>
          <target>指定写入的 XLIFF 文件版本。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Select the file parser to be used when reading and writing files having the above file extension.</source>
          <target>选择读取和写入具有上述文件扩展名的文件时要使用的文件解析器。</target>
        </trans-unit>
        <trans-unit>
          <source>When Sisulizer &lt;a href=&quot;ProjectScanMenu.htm&quot;&gt;scan&lt;/a&gt; a source and it finds that either context of a row or original row has been changed (most likely developer has modified the resource value) it changes the row status to Changed and invalidates all translations. This means the current translation value is kept but they are marked as Invalidated. To validate translation the user has to check if it still valid and either modify the translation (this automatically validates it) or right clicking the translation and choosing Translation | Invalidated.</source>
          <target>当 Sisulizer&lt;a href=&quot;ProjectScanMenu.htm&quot;&gt;扫描&lt;/a&gt;源并发现行的上下文或原始行已更改（很可能开发人员已修改资源值）时，它将行状态更改为已更改并使所有翻译无效。这意味着保留当前翻译值，但将它们标记为无效。要验证翻译，用户必须检查它是否仍然有效并修改翻译（这会自动验证它）或右键单击翻译并选择翻译 |无效。</target>
        </trans-unit>
        <trans-unit>
          <source>A WIN32 application compiled with Visual Basic and using resource strings to store all string data.</source>
          <target>使用 Visual Basic 编译并使用资源字符串存储所有字符串数据的 WIN32 应用程序。</target>
        </trans-unit>
        <trans-unit>
          <source>Use UTF-8 signature/Use byte order mark</source>
          <target>使用 UTF-8 签名/使用字节顺序标记</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the custom font size.</source>
          <target>指定自定义字体大小。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows &lt;a href=&quot;ThemeDialog.htm&quot;&gt;Theme dialog&lt;/a&gt; that lets you change the active theme.</source>
          <target>显示&lt;a href=&quot;ThemeDialog.htm&quot;&gt;主题对话框&lt;/a&gt;，可让您更改活动主题。</target>
        </trans-unit>
        <trans-unit>
          <source>Japanese written in Latin characters (e.g. Romaji)</source>
          <target>用拉丁字符书写的日语（例如罗马字）</target>
        </trans-unit>
        <trans-unit>
          <source>Flags repeated words. For example, if you select this option, the spelling checker flags &lt;strong&gt;is&lt;/strong&gt; in &amp;quot;This is &lt;strong&gt;is&lt;/strong&gt; a good car&amp;quot;.</source>
          <target>标记重复的单词。例如，如果您选择此选项，拼写检查器标记&lt;strong&gt;为&lt;/strong&gt;“这&lt;strong&gt;是&lt;/strong&gt;一辆好车。”</target>
        </trans-unit>
        <trans-unit>
          <source>Lingsoft spell checker</source>
          <target>Lingsoft 拼写检查器</target>
        </trans-unit>
        <trans-unit>
          <source>You can configure the panes by choosing the context sensitive menu. To access menu right click a pane. You can hide the panes by unchecking View | Panes menu item.</source>
          <target>您可以通过选择上下文相关菜单来配置窗格。要访问菜单，请右键单击窗格。您可以通过取消选中查看 | 来​​隐藏窗格。窗格菜单项。</target>
        </trans-unit>
        <trans-unit>
          <source>UTF-8 is byte order insensitive but BOM is used to make difference between code page based text files and UTF-8 based text files.</source>
          <target>UTF-8 对字节顺序不敏感，但 BOM 用于区分基于代码页的文本文件和基于 UTF-8 的文本文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer item file (.sli) is an XML based file that contains exported Sisulizer items such as fonts, component mappings and file mappings.</source>
          <target>Sisulizer 项目文件 (.sli) 是一个基于 XML 的文件，其中包含导出的 Sisulizer 项目，例如字体、组件映射和文件映射。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked spell checking checks also spelling and grammar of original language. This is enabled only if &lt;em&gt;Check spelling as you type&lt;/em&gt; or &lt;em&gt;Check grammar as you type&lt;/em&gt; is checked.</source>
          <target>如果选中拼写检查，还会检查原始语言的拼写和语法。只有在&lt;em&gt;选中键入时键入拼写&lt;/em&gt;或&lt;em&gt;选中语法时，&lt;/em&gt;才会启用此功能。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the main view shows list of recent projects.</source>
          <target>如果选中，主视图将显示最近项目的列表。</target>
        </trans-unit>
        <trans-unit>
          <source>You can either write the text directly or you can right click on the edit field and choose &lt;em&gt;Add key file&lt;/em&gt; or &lt;em&gt;Add key container&lt;/em&gt; item from the menu.</source>
          <target>您可以直接编写文本，也可以右键单击编辑字段并从菜单中选择&lt;em&gt;添加密钥文件&lt;/em&gt;或&lt;em&gt;添加密钥容器&lt;/em&gt;项。</target>
        </trans-unit>
        <trans-unit>
          <source>Create a new file for each language in the project.</source>
          <target>为项目中的每种语言创建一个新文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to add a new component keyword. Keywords are used to automatically map component based on its classname.</source>
          <target>使用此对话框添加新的组件关键字。关键字用于根据组件的类名自动映射组件。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;strong&gt;Note!&lt;/strong&gt; No matter what is your current localization tool you can import existing translations from the localized files.</source>
          <target>&lt;strong&gt;笔记！&lt;/strong&gt;无论您当前使用什么本地化工具，您都可以从本地化文件中导入现有翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the source PO file that is used together with the target PO file you have already selected to import. When importing string from a PO file two PO files must be selected. The first one contains the source string and second one target string. At this point you have already selected the target file. Now you have to select the source file and set the languages of both files.</source>
          <target>使用此表指定与您已选择导入的目标 PO 文件一起使用的源 PO 文件。从 PO 文件导入字符串时，必须选择两个 PO 文件。第一个包含源字符串和第二个目标字符串。此时您已经选择了目标文件。现在您必须选择源文件并设置两个文件的语言。</target>
        </trans-unit>
        <trans-unit>
          <source>This is a feature of HTML Help viewer. It shows the title correctly only if the language id of the CHM file matches exactly the current language if of you computer. You have to go to Control Panel and change the system locale to match the language of your CHM file in order to show title correctly. However the end user of the localized CHM file has most likely the language id compatible to the language id if CHM file and he or she will see the title text correctly.</source>
          <target>这是 HTML 帮助查看器的一项功能。只有当 CHM 文件的语言 ID 与您的计算机的当前语言完全匹配时，它才能正确显示标题。您必须转到控制面板并更改系统区域设置以匹配 CHM 文件的语言才能正确显示标题。但是，本地化 CHM 文件的最终用户很可能具有与语言 ID 兼容的语言 ID，如果 CHM 文件并且他或她将正确看到标题文本。</target>
        </trans-unit>
        <trans-unit>
          <source>These sheets contain the header and record definitions. Header is an optional block in the beginning of the file. The file contains only on header. Record is a mandatory definition and it specifies a record. The file contains one or more records after the header. Header and record contain fields where each field contains one single data such as integer value or string.</source>
          <target>这些工作表包含标题和记录定义。 Header 是文件开头的一个可选块。该文件仅包含标题。 Record 是一个强制性定义，它指定一个记录。该文件在标题之后包含一个或多个记录。标题和记录包含字段，其中每个字段包含一个单一数据，例如整数值或字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Save  dictionary to the project file</source>
          <target>将字典保存到项目文件中</target>
        </trans-unit>
        <trans-unit>
          <source>You &lt;strong&gt;must&lt;/strong&gt; click Continue button in order to run the registration tool.</source>
          <target>您&lt;strong&gt;必须&lt;/strong&gt;单击继续按钮才能运行注册工具。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the VCL binary file options.</source>
          <target>使用此表指定 VCL 二进制文件选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to turn on  &lt;a href=&quot;PseudoTranslation.htm&quot;&gt;pseudo translation&lt;/a&gt; for the selected language.</source>
          <target>使用此对话框可为所选语言打开&lt;a href=&quot;PseudoTranslation.htm&quot;&gt;伪翻译&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Update si&amp;amp;zes in image styles</source>
          <target>更新图像样式中的大小(&amp;amp;Z)</target>
        </trans-unit>
        <trans-unit>
          <source>The top side of the form editor has a toolbar that contains following buttons:</source>
          <target>表单编辑器的顶部有一个工具栏，其中包含以下按钮：</target>
        </trans-unit>
        <trans-unit>
          <source>Can Sisulizer detect the format</source>
          <target>Sisulizer可以检测格式吗</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer uses also country specific translations in the case there is no country neutral translations.&lt;br&gt;
      For example if this is checked and you are translating a German column and there is not translation having de language code but there is a translation having German (Switzerland) language code then Sisulizer will use it.</source>
          <target>如果选中 Sisulizer，则在没有国家/地区中立翻译的情况下也使用国家/地区特定的翻译。&lt;br&gt;例如，如果选中此项并且您正在翻译德语专栏，并且没有带有 de 语言代码的翻译，但有带有德语（瑞士）语言代码的翻译，那么 Sisulizer 将使用它。</target>
        </trans-unit>
        <trans-unit>
          <source>Show items that need to be translated</source>
          <target>显示需要翻译的项目</target>
        </trans-unit>
        <trans-unit>
          <source>Duplicate menu short cut</source>
          <target>复制菜单快捷方式</target>
        </trans-unit>
        <trans-unit>
          <source>Provides a space for you to type the text what will be inserted in the place of the matched string.</source>
          <target>为您提供一个空间来输入将插入到匹配字符串位置的文本。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the most recent Sisulizer related news. Click the blue header text of the news to read more about the topic.</source>
          <target>显示最新的 Sisulizer 相关新闻。单击新闻的蓝色标题文本以阅读有关该主题的更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Select package create mode</source>
          <target>选择包创建模式</target>
        </trans-unit>
        <trans-unit>
          <source>If your translator does not use Sisulizer as a translation tool you can not use Sisulizer project file as an exchange file. Instead you must export Sisulizer project to TMX, text or Excel file, send the exported file to translator and finally import translated file back to the project.</source>
          <target>如果您的译员不使用 Sisulizer 作为翻译工具，则您不能将 Sisulizer 项目文件用作交换文件。相反，您必须将 Sisulizer 项目导出为 TMX、文本或 Excel 文件，将导出的文件发送给翻译器，最后将翻译的文件导入回项目。</target>
        </trans-unit>
        <trans-unit>
          <source>In some EXE files padding of resource segments are not filled with 0x00 
  but a certain human readable pattern. For example &quot;PADDINGXXPADDING&quot;. That 
  helps to detect viruses. If the pattern is corrupted the program won&#x27;t work. 
  In those situations  the localized EXE file must also be filled by same padding. 
You can enter the pattern here. Use only ASCII characters.</source>
          <target>在某些 EXE 文件中，资源段的填充不是 0x00 而是某种人类可读的模式。例如“PADDINGXXPADDING”。这有助于检测病毒。如果模式已损坏，程序将无法运行。在这些情况下，本地化的 EXE 文件也必须用相同的填充填充。您可以在此处输入图案。仅使用 ASCII 字符。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies what part of project is exported. Possible options are:</source>
          <target>指定导出项目的哪个部分。可能的选项是：</target>
        </trans-unit>
        <trans-unit>
          <source>Wizard contains the following steps:</source>
          <target>向导包含以下步骤：</target>
        </trans-unit>
        <trans-unit>
          <source>There is no translation given.</source>
          <target>没有给出翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Click &lt;em&gt; Add sub&lt;/em&gt; to add a new variant to the selected language or country. &lt;a href=&quot;SystemVariantDialog.htm&quot;&gt;System Variant&lt;/a&gt; dialog box will appear. Set the values and press OK.</source>
          <target>单击&lt;em&gt;添加子&lt;/em&gt;项以向所选语言或国家/地区添加新变体。将出现&lt;a href=&quot;SystemVariantDialog.htm&quot;&gt;系统变体&lt;/a&gt;对话框。设置值并按 OK。</target>
        </trans-unit>
        <trans-unit>
          <source>MAINTENANCE&lt;br&gt;
  Sisulizer shall have no obligation to provide support or maintenance for Sisulizer product under this Agreement.</source>
          <target>维护&lt;br&gt;根据本协议，Sisulizer 没有义务为 Sisulizer 产品提供支持或维护。</target>
        </trans-unit>
        <trans-unit>
          <source>The root node that represents the database</source>
          <target>代表数据库的根节点</target>
        </trans-unit>
        <trans-unit>
          <source>Excludes the selected validation error in the future.</source>
          <target>将来排除选定的验证错误。</target>
        </trans-unit>
        <trans-unit>
          <source>Contains a list of attributes names that are treated as context attribute.</source>
          <target>包含被视为上下文属性的属性名称列表。</target>
        </trans-unit>
        <trans-unit>
          <source>Generates an error if two or more controls overlap each other on the dialog panel.</source>
          <target>如果对话框面板上的两个或多个控件相互重叠，则会生成错误。</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;lt;sample&amp;gt;
  &amp;lt;value localize=&amp;quot;true&amp;quot;&amp;gt;Localize this&amp;lt;/value&amp;gt;
  &amp;lt;value localize=&amp;quot;false&amp;quot;&amp;gt;Do not localize this&amp;lt;/value&amp;gt;
&amp;lt;/sample&amp;gt;
</source>
          <target>&amp;lt;sample&amp;gt; &amp;lt;value localize=&amp;quot;true&amp;quot;&amp;gt;本地化这个&amp;lt;/value&amp;gt; &amp;lt;value localize=&amp;quot;false&amp;quot;&amp;gt;不要本地化这个&amp;lt;/value&amp;gt; &amp;lt;/sample&amp;gt;</target>
        </trans-unit>
        <trans-unit>
          <source>If yo add a OSX &lt;a href=&quot;PlatformFiles.htm&quot;&gt;platform file&lt;/a&gt; then you must also specify the DRC file of the OSX file. Learn more about &lt;a href=&quot;MacLocalization.htm&quot;&gt;Mac localization&lt;/a&gt;.</source>
          <target>如果要添加 OSX&lt;a href=&quot;PlatformFiles.htm&quot;&gt;平台文件，&lt;/a&gt;则还必须指定 OSX 文件的 DRC 文件。了解有关&lt;a href=&quot;MacLocalization.htm&quot;&gt;Mac 本地化的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Marked flag of the translation is cleared if the imported translation is different than the current one.</source>
          <target>如果导入的翻译与当前翻译不同，则清除翻译的标记标志。</target>
        </trans-unit>
        <trans-unit>
          <source>Click Add to add a new file. Click Edit to edit the selected file. Click remove to remove the selected file. Click Clear to remove all files.</source>
          <target>单击添加以添加新文件。单击编辑以编辑所选文件。单击删除以删除选定的文件。单击清除以删除所有文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Use same output directory for all projects</source>
          <target>对所有项目使用相同的输出目录</target>
        </trans-unit>
        <trans-unit>
          <source>Contains one spellings suggest for the selected word. Choose this menu if you want to replace the selected word with the word in this menu.</source>
          <target>包含对所选单词的一种拼写建议。如果您想用此菜单中的单词替换所选单词，请选择此菜单。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer keeps the original language id of resource items. If unchecked Sisulizer updates them to match the target language. For example if your original EXE file contains resources marked with English (United States) and you have checked this items your French EXE file also will have resources marked with English (United States). If unchecked the French EXE will have resources marked with French.</source>
          <target>如果选中 Sisulizer 保留资源项的原始语言 ID。如果未选中 Sisulizer 更新它们以匹配目标语言。例如，如果您的原始 EXE 文件包含标有英语（美国）的资源，并且您已选中此项，则您的法语 EXE 文件也将包含标有英语（美国）的资源。如果未选中，法语 EXE 将具有标有法语的资源。</target>
        </trans-unit>
        <trans-unit>
          <source>Qt contains a command line tool, lupdate.exe, that scans your source code looking for lines where you have used TR function. If found it adds the string inside  TR function to .ts file. To localize your application make copy of ts file for each language and translate the strings. There is one translation file for each language. They all have the same structure, same base name but a language depend file name ending. For example Sample_de.ts contains German translations, Sample_fi.ts contains Finnish, and so on. Translation file is an XML file although older Qt version do not use XML header.</source>
          <target>Qt 包含一个命令行工具 lupdate.exe，它会扫描您的源代码，寻找您使用过 TR 函数的行。如果找到，它会将 TR 函数内的字符串添加到 .ts 文件中。要本地化您的应用程序，请为每种语言制作 ts 文件的副本并翻译字符串。每种语言都有一个翻译文件。它们都具有相同的结构、相同的基本名称，但以语言依赖的文件名结尾。例如，Sample_de.ts 包含德语翻译，Sample_fi.ts 包含芬兰语，等等。翻译文件是一个 XML 文件，尽管较旧的 Qt 版本不使用 XML 标头。</target>
        </trans-unit>
        <trans-unit>
          <source>Item contains Java source code.</source>
          <target>项目包含 Java 源代码。</target>
        </trans-unit>
        <trans-unit>
          <source>Emulator parameters</source>
          <target>模拟器参数</target>
        </trans-unit>
        <trans-unit>
          <source>The case of every character is changed to upper.&lt;br&gt;For example &lt;samp&gt;&amp;quot;Hello world&amp;quot;&lt;/samp&gt; becomes &lt;samp&gt;&amp;quot;HELLO WORLD&amp;quot;&lt;/samp&gt;.</source>
          <target>每个字符的大小写更改为大写。&lt;br&gt;例如&lt;samp&gt;&amp;quot;Hello world&amp;quot;&lt;/samp&gt;变成&lt;samp&gt;&amp;quot;HELLO WORLD&amp;quot;&lt;/samp&gt; 。</target>
        </trans-unit>
        <trans-unit>
          <source>Once you have set the new format Sisulizer will prompt for rescanning. After rescan the row whose format you set will be scanned in the selected format instead as plain format.</source>
          <target>设置新格式后，Sisulizer 将提示重新扫描。重新扫描您设置格式的行后，将以所选格式而不是普通格式扫描。</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;quot;This is &#x27;single&#x27; and &lt;strong&gt;\&amp;quot;&lt;/strong&gt;double&lt;strong&gt;\&amp;quot;&lt;/strong&gt; quote sample&amp;quot;</source>
          <target>&amp;quot;这是&amp;#39;单&amp;#39;和&lt;strong&gt;\&amp;quot;&lt;/strong&gt;双&lt;strong&gt;\&amp;quot;&lt;/strong&gt;报价示例&amp;quot;</target>
        </trans-unit>
        <trans-unit>
          <source>Project Wizard - HTML Help file</source>
          <target>项目向导 - HTML 帮助文件</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer&#x27;s spell checking can save custom dictionary data in the following ways:</source>
          <target>Sisulizer 的拼写检查可以通过以下方式保存自定义词典数据：</target>
        </trans-unit>
        <trans-unit>
          <source>If you choose to keep the original resources (default), and you are localizing a VCL-PE file, and Sisulizer is about to add a localized resource item it will give a language if for the original neutral resource item. The language id will be the id of the original language of the source that is specified in the Encodings sheet of the above dialog. If the project contains a target language having the same language id than the original language, Sisulizer removes the original resource item even if Keep orignal resources is checked. The reason Sisulizer changes the language id of the original resource id is because if there would exist resource item with neutral language id and same resources with language id, Windows would always us the neutral resources no matter even if there were a resource having a matching language id.</source>
          <target>如果您选择保留原始资源（默认），并且您正在本地化 VCL-PE 文件，并且 Sisulizer 即将添加本地化资源项，它将为原始中性资源项提供语言 if。语言 id 将是在上述对话框的编码表中指定的源的原始语言的 id。如果项目包含与原始语言具有相同语言 ID 的目标语言，即使选中了保留原始资源，Sisulizer 也会删除原始资源项。 Sisulizer 更改原始资源 id 的语言 id 的原因是因为如果存在具有中性语言 id 的资源项和具有语言 id 的相同资源，即使存在具有匹配语言的资源，Windows 也会始终使用中性资源ID。</target>
        </trans-unit>
        <trans-unit>
          <source>If you add a Java resource file (.properties or .java) to a Sisulizer project, Project Wizard can import translations from localized resource files. For example if you have selected MyFile.properties file and there exists MyFile_de.properties file, Project Wizard will add German to the project and imports translations from MyFile_de.properties. Localized resource files must locate on the same directory as original one(s).</source>
          <target>如果您将 Java 资源文件（.properties 或 .java）添加到 Sisulizer 项目，项目向导可以从本地化的资源文件导入翻译。例如，如果您选择了 MyFile.properties 文件并且存在 MyFile_de.properties 文件，项目向导将向项目添加德语并从 MyFile_de.properties 导入翻译。本地化的资源文件必须与原始资源文件位于同一目录中。</target>
        </trans-unit>
        <trans-unit>
          <source>Ini files</source>
          <target>这是文件</target>
        </trans-unit>
        <trans-unit>
          <source>There are three methods to localize Windows applications. The methods are:</source>
          <target>有三种方法可以本地化 Windows 应用程序。方法是：</target>
        </trans-unit>
        <trans-unit>
          <source>Saves project translations in the activet &lt;a href=&quot;TranslationEnginesDialogInternalTranslationMemory.htm&quot;&gt;internal translation memory&lt;/a&gt;.</source>
          <target>将项目翻译保存在 activet&lt;a href=&quot;TranslationEnginesDialogInternalTranslationMemory.htm&quot;&gt;内部翻译记忆库中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>The Resource table will look like this.</source>
          <target>资源表将如下所示。</target>
        </trans-unit>
        <trans-unit>
          <source>Output file type</source>
          <target>输出文件类型</target>
        </trans-unit>
        <trans-unit>
          <source>If none of these DLLs are found, MFC will just use the resources in MyApplication.exe</source>
          <target>如果没有找到这些 DLL，MFC 将只使用 MyApplication.exe 中的资源</target>
        </trans-unit>
        <trans-unit>
          <source>Carriage return + Line feed</source>
          <target>回车+换行</target>
        </trans-unit>
        <trans-unit>
          <source>Scan browse sequence</source>
          <target>扫描浏览顺序</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the original HTML document.</source>
          <target>显示原始 HTML 文档。</target>
        </trans-unit>
        <trans-unit>
          <source>Existing translations will be searched only from the same node.</source>
          <target>将仅从同一节点搜索现有翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be a &lt;a href=&quot;ChmLocalization.htm&quot;&gt;HTML Help file&lt;/a&gt; (e.g. C:\Samples\Project1.chm) or &lt;a href=&quot;ChmLocalization.htm&quot;&gt;HTML Help project file&lt;/a&gt; (e.g. C:\Samples\Project1.hhp)..</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是&lt;a href=&quot;ChmLocalization.htm&quot;&gt;HTML 帮助文件&lt;/a&gt;（例如 C:\Samples\Project1.chm）或&lt;a href=&quot;ChmLocalization.htm&quot;&gt;HTML 帮助项目文件&lt;/a&gt;（例如 C:\Samples\Project1.hhp）。</target>
        </trans-unit>
        <trans-unit>
          <source>Select the language of the target strings containing PO file that you have already selected</source>
          <target>选择包含您已选择的 PO 文件的目标字符串的语言</target>
        </trans-unit>
        <trans-unit>
          <source>Delete the selected project file and remove it from the list.&lt;br&gt;&lt;strong&gt;Note!&lt;/strong&gt; This will permanently delete the project file.</source>
          <target>删除选定的项目文件并将其从列表中删除。&lt;br&gt;&lt;strong&gt;笔记！&lt;/strong&gt;这将永久删除项目文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Control out of client</source>
          <target>控制出客户端</target>
        </trans-unit>
        <trans-unit>
          <source>File contains code page encoded data. The actual code page is specified in the Encoding property if the rule. If no encoding is given the default Windows code page of the language of the rule or file is used.</source>
          <target>文件包含代码页编码数据。如果规则，则在 Encoding 属性中指定实际代码页。如果没有给出编码，则使用规则或文件语言的默认 Windows 代码页。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked maximum lengths in characters are written to the file.</source>
          <target>如果选中字符的最大长度写入文件。</target>
        </trans-unit>
        <trans-unit>
          <source>If the project already contains Finnish translation for  the first one (Moi maailma) and we translate duplicates Sisulizer add the exclamation character to the translation of the second row</source>
          <target>如果项目已经包含第一个 (Moi maailma) 的芬兰语翻译并且我们翻译了重复的 Sisulizer 将感叹号添加到第二行的翻译中</target>
        </trans-unit>
        <trans-unit>
          <source>Resource contains user defined text data. It is parsed according to the format user has defined or selected.</source>
          <target>资源包含用户定义的文本数据。它根据用户定义或选择的格式进行解析。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer reads the comments from PO into Sisulizer project.</source>
          <target>如果选中，Sisulizer 会将 PO 中的注释读入 Sisulizer 项目。</target>
        </trans-unit>
        <trans-unit>
          <source>A &lt;a href=&quot;RegularExpressions.htm&quot;&gt;regular expression&lt;/a&gt; that specifies the string before the item.</source>
          <target>指定项前的字符串的&lt;a href=&quot;RegularExpressions.htm&quot;&gt;正则表达式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked each id attribute contains full context id. This is  the parent id and the element id combined. If unchecked each id attribute contains only the element id.&lt;strong&gt; &lt;/strong&gt;If unchecked the  XLIFF file that Sisulizer creates is not necessary strictly valid because some trans-unit elements might have the same id.</source>
          <target>如果选中，每个 id 属性都包含完整的上下文 id。这是父 id 和元素 id 的组合。如果未选中，则每个 id 属性仅包含元素 id。&lt;strong&gt; &lt;/strong&gt;如果未选中，则 Sisulizer 创建的 XLIFF 文件不一定严格有效，因为某些跨单元元素可能具有相同的 ID。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer uses string values as context values. This is safe even if you modify and recompile your application. However if the application has the same text in two ore more resource strings this method brings only one row to the project file. So all instances of the same text will share the same row and you can  no longer translate them in a different way.</source>
          <target>Sisulizer 使用字符串值作为上下文值。即使您修改并重新编译应用程序，这也是安全的。但是，如果应用程序在两个或更多资源字符串中具有相同的文本，则此方法只会为项目文件带来一行。因此，同一文本的所有实例将共享同一行，您不能再以不同的方式翻译它们。</target>
        </trans-unit>
        <trans-unit>
          <source>Localizing files</source>
          <target>本地化文件</target>
        </trans-unit>
        <trans-unit>
          <source>Maximum translation count</source>
          <target>最大翻译计数</target>
        </trans-unit>
        <trans-unit>
          <source>Adobe Flash 8 and later has a feature that can store the strings in a separate XML file. Actually these file are XLIFF files but because Flash can not properly import translated data from an XLIFF file, you have to use XML localization. Flash localization process is following:</source>
          <target>Adobe Flash 8 及更高版本具有可将字符串存储在单独的 XML 文件中的功能。实际上这些文件是 XLIFF 文件，但由于 Flash 无法从 XLIFF 文件正确导入翻译的数据，您必须使用 XML 本地化。 Flash本地化过程如下：</target>
        </trans-unit>
        <trans-unit>
          <source>This items is used when a reduce type is selected.</source>
          <target>选择缩减类型时使用此项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Click &lt;em&gt;Test&lt;/em&gt; button to select a file and o run parsing on that fie using the current definition. Click &lt;em&gt;Import&lt;/em&gt; button to import definition from a definition file. Click &lt;em&gt;Export&lt;/em&gt; to export definition to a definition file. Click &lt;em&gt;Sample&lt;/em&gt; to show a same sample as in the sample sheet but in a floating dialog.</source>
          <target>单击“&lt;em&gt;测试”&lt;/em&gt;按钮选择一个文件，然后使用当前定义在该文件上运行解析。单击&lt;em&gt;导入&lt;/em&gt;按钮从定义文件导入定义。单击&lt;em&gt;导出&lt;/em&gt;将定义&lt;em&gt;导出&lt;/em&gt;到定义文件。单击&lt;em&gt;示例&lt;/em&gt;以显示与示例表中相同的示例，但显示在浮动对话框中。</target>
        </trans-unit>
        <trans-unit>
          <source>This sheet lets you select the exchange direction. Possible values are:</source>
          <target>此表可让您选择交换方向。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Scan index</source>
          <target>扫描索引</target>
        </trans-unit>
        <trans-unit>
          <source>Embedded resource name</source>
          <target>嵌入资源名称</target>
        </trans-unit>
        <trans-unit>
          <source>Select the rule type. The possible values are:</source>
          <target>选择规则类型。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>If there is no translation value the translation is not written.</source>
          <target>如果没有翻译价值，则不会编写翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be a &lt;a href=&quot;ReportLocalization.htm&quot;&gt; ReportBuilder file&lt;/a&gt; (e.g. C:\Samples\Project1.rtm).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是&lt;a href=&quot;ReportLocalization.htm&quot;&gt;ReportBuilder 文件&lt;/a&gt;（例如 C:\Samples\Project1.rtm）。</target>
        </trans-unit>
        <trans-unit>
          <source>You start grammar checking by choosing Column |  Grammar menu. Sisulizer checks  grammar of all sentences in the selected column.</source>
          <target>您可以通过选择 Column | 开始语法检查。语法菜单。 Sisulizer 检查所选列中所有句子的语法。</target>
        </trans-unit>
        <trans-unit>
          <source>NET culture code is used. It is combination of language and country. The syntax in .NET 4.0 and later is:&lt;br&gt;
        &lt;code&gt;la[-script][-co]&lt;/code&gt;</source>
          <target>NET 文化代码。它是语言和国家的结合。 .NET 4.0 及更高版本中的语法是：&lt;br&gt; &lt;code&gt;la[-script][-co]&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit>
          <source>Import comment only if there is no comment value in the row at the moment.</source>
          <target>仅当当前行中没有注释值时才导入注释。</target>
        </trans-unit>
        <trans-unit>
          <source>Select type of files or type a wild card filter</source>
          <target>选择文件类型或输入通配符过滤器</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be a  &lt;a href=&quot;TmxLocalization.htm&quot;&gt;TMX file&lt;/a&gt; (e.g. C:\Samples\Sample.tmx).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是&lt;a href=&quot;TmxLocalization.htm&quot;&gt;TMX 文件&lt;/a&gt;（例如 C:\Samples\Sample.tmx）。</target>
        </trans-unit>
        <trans-unit>
          <source>Invalid amount of white spaces</source>
          <target>无效的空格数量</target>
        </trans-unit>
        <trans-unit>
          <source>Scan visible property</source>
          <target>扫描可见属性</target>
        </trans-unit>
        <trans-unit>
          <source>Write row comment</source>
          <target>写行注释</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure Windows Forms (.NET) settings.</source>
          <target>使用此对话框配置 Windows 窗体 (.NET) 设置。</target>
        </trans-unit>
        <trans-unit>
          <source>File in the project: Project1.exe&lt;br&gt;Import file: Project1.&lt;strong&gt;DE&lt;/strong&gt;</source>
          <target>项目中的文件：Project1.exe&lt;br&gt;导入文件：Project1。&lt;strong&gt;德&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit>
          <source>Korean input method</source>
          <target>韩文输入法</target>
        </trans-unit>
        <trans-unit>
          <source>Use encoding that matches the original encoding</source>
          <target>使用与原始编码匹配的编码</target>
        </trans-unit>
        <trans-unit>
          <source>Resource contains plain text data.</source>
          <target>资源包含纯文本数据。</target>
        </trans-unit>
        <trans-unit>
          <source>First line sample</source>
          <target>第一行样本</target>
        </trans-unit>
        <trans-unit>
          <source>yes</source>
          <target>是的</target>
        </trans-unit>
        <trans-unit>
          <source>These options specify how the resource data in the localized files is written.</source>
          <target>这些选项指定如何写入本地化文件中的资源数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Windows binary file compiled by C++Builder</source>
          <target>由 C++Builder 编译的 Windows 二进制文件</target>
        </trans-unit>
        <trans-unit>
          <source>Importing existing translation when creating a new project</source>
          <target>创建新项目时导入现有翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Overwrites if the translation status of imported item is greater than the status in project.&lt;br&gt;This option is enabled when importing Sisulizer projects.</source>
          <target>如果导入项目的翻译状态大于项目中的状态，则覆盖。&lt;br&gt;导入 Sisulizer 项目时启用此选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Never update existing translations</source>
          <target>永远不要更新现有的翻译</target>
        </trans-unit>
        <trans-unit>
          <source>In addition of above features there are dozens of new and improved features. You can find a complete What&#x27;s new list &lt;a href=&quot;https://www.sisulizer.com/support/history.shtml&quot; target=&quot;_blank&quot;&gt;here&lt;/a&gt;.</source>
          <target>除了上述功能外，还有许多新的和改进的功能。您可以&lt;a href=&quot;https://www.sisulizer.com/support/history.shtml&quot; target=&quot;_blank&quot;&gt;在此处&lt;/a&gt;找到完整的新增功能列表。</target>
        </trans-unit>
        <trans-unit>
          <source>&#x27;This is &lt;strong&gt;&#x27;&#x27;&lt;/strong&gt;single&lt;strong&gt;&#x27;&#x27;&lt;/strong&gt; and &amp;quot;double&amp;quot; quote sample&#x27;</source>
          <target>&amp;#39;这是&lt;strong&gt;&amp;#39;&amp;#39;&lt;/strong&gt;单&lt;strong&gt;&amp;#39;&amp;#39;&lt;/strong&gt;和“双”引号样本&amp;#39;</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can access and localize Interbase databases</source>
          <target>Sisulizer 可以访问和本地化 Interbase 数据库</target>
        </trans-unit>
        <trans-unit>
          <source>Include sub directories</source>
          <target>包含子目录</target>
        </trans-unit>
        <trans-unit>
          <source>If a source in your project will be modified or you exclude some items, those excluded items won&#x27;t be scanned anymore. They will be marked to Unused. If you check this option those unused items (rows, components and nodes) will be removed automatically after the scanning process. Sisulizer removes automatically only those items that do not have any translations. To remove items that have translations choose Project | Remove unused items.</source>
          <target>如果您的项目中的源将被修改或您排除某些项目，则将不再扫描这些排除的项目。它们将被标记为未使用。如果您选中此选项，那些未使用的项目（行、组件和节点）将在扫描过程后自动删除。 Sisulizer 只会自动删除那些没有任何翻译的项目。要删除有翻译的项目，请选择 Project |删除未使用的项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify the field that contains extended data of the selected database field. Read more about &lt;a href=&quot;DatabaseLocalization.htm#ExtendedData&quot;&gt;extended data&lt;/a&gt;.</source>
          <target>使用此对话框指定包含所选数据库字段的扩展数据的字段。阅读有关&lt;a href=&quot;DatabaseLocalization.htm#ExtendedData&quot;&gt;扩展数据的&lt;/a&gt;更多&lt;a href=&quot;DatabaseLocalization.htm#ExtendedData&quot;&gt;信息&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>When you create a new Sisulizer project for your .NET project Sisulizer can automatically import existing translations. If you disabled importing during the project creating you can import the existing translations later by using the following instructions.</source>
          <target>当您为 .NET 项目创建新的 Sisulizer 项目时，Sisulizer 可以自动导入现有的翻译。如果您在项目创建期间禁用了导入，您可以稍后使用以下说明导入现有翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Collapses all sub nodes of the selected node.</source>
          <target>折叠所选节点的所有子节点。</target>
        </trans-unit>
        <trans-unit>
          <source>Sort data</source>
          <target>排序数据</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer displays spaces between words as dots, tabulators as arrows and line breaks as special characters.</source>
          <target>如果选中 Sisulizer，则将单词之间的空格显示为点，将制表符显示为箭头，将换行符显示为特殊字符。</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;quot;This is &#x27;single&#x27; and &lt;strong&gt;&amp;quot;&amp;quot;&lt;/strong&gt;double&lt;strong&gt;&amp;quot;&amp;quot;&lt;/strong&gt; quote sample&amp;quot;</source>
          <target>&amp;quot;这是&amp;#39;单&amp;#39;和&lt;strong&gt;&amp;quot;&amp;quot;&lt;/strong&gt;双&lt;strong&gt;&amp;quot;&amp;quot;&lt;/strong&gt;报价样本&amp;quot;</target>
        </trans-unit>
        <trans-unit>
          <source>Row has been added to project since creation.&lt;br&gt;You can clear this status on every rows of the project by choosing &lt;a href=&quot;ProjectClearNewMenu.htm&quot;&gt;Project | Clear New Status&lt;/a&gt;.</source>
          <target>自创建以来，行已添加到项目中。&lt;br&gt;您可以通过选择&lt;a href=&quot;ProjectClearNewMenu.htm&quot;&gt;Project |&lt;/a&gt;在项目的每一行上清除此状态。&lt;a href=&quot;ProjectClearNewMenu.htm&quot;&gt;清除新状态&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>A Java source code file containing list resources. If you select this Sisulizer either localizes the list resource file or then imports translations from the file.</source>
          <target>包含列表资源的 Java 源代码文件。如果您选择此 Sisulizer，要么本地化列表资源文件，要么从文件中导入翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>A null terminated UTF-8 string</source>
          <target>一个空终止的 UTF-8 字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Prompt on replace</source>
          <target>提示更换</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify optional files need to properly import Delphi binary file.</source>
          <target>使用此表指定需要正确导入 Delphi 二进制文件的可选文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Other sheets contains other WPF settings.</source>
          <target>其他工作表包含其他 WPF 设置。</target>
        </trans-unit>
        <trans-unit>
          <source>Excludes types</source>
          <target>排除类型</target>
        </trans-unit>
        <trans-unit>
          <source>For example if the original file is &lt;code&gt;C:\MyFiles\Sample.xml&lt;/code&gt; and the pattern is &lt;code&gt;&amp;lt;body&amp;gt;_&amp;lt;iso&amp;gt;.&amp;lt;ext&amp;gt;&lt;/code&gt; the German (Austria) file will be &lt;code&gt;C:\MyFiles\Sample_de_AT.xml&lt;/code&gt;.</source>
          <target>例如，如果原始文件是&lt;code&gt;C:\MyFiles\Sample.xml&lt;/code&gt;并且模式是&lt;code&gt;&amp;lt;body&amp;gt;_&amp;lt;iso&amp;gt;.&amp;lt;ext&amp;gt;&lt;/code&gt;德语（奥地利）文件将是&lt;code&gt;C:\MyFiles\Sample_de_AT.xml&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit>
          <source>Null character (0x00)</source>
          <target>空字符 (0x00)</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to set options of .NET project file.</source>
          <target>使用此表设置 .NET 项目文件的选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Only parameters given in the solution dialog are used.</source>
          <target>仅使用解决方案对话框中给出的参数。</target>
        </trans-unit>
        <trans-unit>
          <source>When application has been started the form no longer is in the design time state. The design time state is the state that exist in the DFM file (e.g. form data). The caption of the label have been changed on run time. When a language change occurs Sisulizer automatically updates the static properties (e.g. those that exist on the form data) but does not change dynamic properties. This is why you have to set them again.</source>
          <target>应用程序启动后，表单不再处于设计时状态。设计时状态是存在于 DFM 文件中的状态（例如表单数据）。标签的标题已在运行时更改。当语言发生变化时，Sisulizer 会自动更新静态属性（例如存在于表单数据中的那些），但不会更改动态属性。这就是您必须再次设置它们的原因。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer checks if the project file to be opened is created with newer Sisulizer. If it is Sisulizer warns and open the download page where the user can download an upgrade.</source>
          <target>如果选中 Sisulizer，则检查要打开的项目文件是否是使用较新的 Sisulizer 创建的。如果是 Sisulizer 警告并打开用户可以下载升级的下载页面。</target>
        </trans-unit>
        <trans-unit>
          <source>Enter additional info, depending on source type</source>
          <target>根据来源类型输入其他信息</target>
        </trans-unit>
        <trans-unit>
          <source>The above line for a .rc file adds IMAGEDATA typed custom resource with &amp;quot;Ski&amp;quot; name. The resource data is read from Ski.jpg file. Whenever you have a custom resource Sisulizer tries to detect its format. Sisulizer can handle custom resources as following formats:</source>
          <target>.rc 文件的上述行添加了带有“Ski”名称的 IMAGEDATA 类型的自定义资源。从 Ski.jpg 文件中读取资源数据。每当您拥有自定义资源时，Sisulizer 都会尝试检测其格式。 Sisulizer 可以处理以下格式的自定义资源：</target>
        </trans-unit>
        <trans-unit>
          <source>Finds the next item matching to the previous find parameters.</source>
          <target>查找与前一个查找参数匹配的下一个项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Add translations to the translation memory</source>
          <target>将翻译添加到翻译记忆库</target>
        </trans-unit>
        <trans-unit>
          <source>Marked flag of the translation is cleared if the imported translation is different than the current one. If imported translation is same or empty the the marked flag  it is set.</source>
          <target>如果导入的翻译与当前翻译不同，则清除翻译的标记标志。如果导入的翻译相同或为空，则设置标记标志。</target>
        </trans-unit>
        <trans-unit>
          <source>Language options</source>
          <target>语言选项</target>
        </trans-unit>
        <trans-unit>
          <source>The source file contains several languages and the import target is a project column. Select the source language.</source>
          <target>源文件包含多种语言，导入目标是一个项目列。选择源语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the original resource data of selected node in a binary format.</source>
          <target>以二进制格式显示所选节点的原始资源数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Add the selected word to the dictionary.</source>
          <target>将选定的单词添加到词典中。</target>
        </trans-unit>
        <trans-unit>
          <source>Source code</source>
          <target>源代码</target>
        </trans-unit>
        <trans-unit>
          <source>Suggest from main dictionaries only</source>
          <target>仅从主要词典中推荐</target>
        </trans-unit>
        <trans-unit>
          <source>String size in byte following an UTF-16 string</source>
          <target>UTF-16 字符串后的字符串大小（以字节为单位）</target>
        </trans-unit>
        <trans-unit>
          <source>Enter any text that describes the definition.</source>
          <target>输入任何描述定义的文本。</target>
        </trans-unit>
        <trans-unit>
          <source>New primary id</source>
          <target>新的主 ID</target>
        </trans-unit>
        <trans-unit>
          <source>Localized field</source>
          <target>本地化领域</target>
        </trans-unit>
        <trans-unit>
          <source>Translations status</source>
          <target>翻译状态</target>
        </trans-unit>
        <trans-unit>
          <source>Installing into DVD/CD drive</source>
          <target>安装到 DVD/CD 驱动器</target>
        </trans-unit>
        <trans-unit>
          <source>Do not import strings whose length in characters is greater than</source>
          <target>不要导入字符长度大于</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer has license to deploy   Polar spell checker engine and dictionary files for several languages. Polar dictionary files are quite compact and they can be easily included to Sisulizer setup. This is why Polar is enabled out of the box.</source>
          <target>Sisulizer 拥有为多种语言部署 Polar 拼写检查引擎和词典文件的许可。 Polar 词典文件非常紧凑，可以轻松包含在 Sisulizer 设置中。这就是 Polar 开箱即用的原因。</target>
        </trans-unit>
        <trans-unit>
          <source>A database</source>
          <target>一个数据库</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer validates only hotkeys in the strings that are translated and ignores hotkeys validation on strings that are not translated.</source>
          <target>如果选中，Sisulizer 仅验证已翻译字符串中的热键，而忽略未翻译字符串的热键验证。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the report properties. Possible values are:</source>
          <target>指定报告属性。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Speficies the 32-bit resource only OSX dynamic library  file that is used basic for the localized resource libraries. If this is left empty the built-in resource file is used.</source>
          <target>指定用于本地化资源库的 32 位纯资源 OSX 动态库文件。如果将其留空，则使用内置资源文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Embedded resources</source>
          <target>嵌入式资源</target>
        </trans-unit>
        <trans-unit>
          <source>Both exclude and information tags</source>
          <target>排除和信息标签</target>
        </trans-unit>
        <trans-unit>
          <source>Dictionary file</source>
          <target>字典文件</target>
        </trans-unit>
        <trans-unit>
          <source>Keep format</source>
          <target>保持格式</target>
        </trans-unit>
        <trans-unit>
          <source>The length of the original string is reduced to one character. This character is either one specific character (e.g. &#x27;.&#x27;) or the first character of the string. This type tests how the user interface works for minimum length strings.&lt;br&gt;
       For example &lt;samp&gt;&amp;quot;Hello World&amp;quot;&lt;/samp&gt; becomes to &lt;samp&gt;&amp;quot;H&amp;quot;&lt;/samp&gt;.</source>
          <target>原始字符串的长度减少到一个字符。这个字符要么是一个特定的字符（例如&amp;#39;.&amp;#39;），要么是字符串的第一个字符。这种类型测试用户界面如何处理最小长度的字符串。&lt;br&gt;例如&lt;samp&gt;&amp;quot;Hello World&amp;quot;&lt;/samp&gt;变成&lt;samp&gt;&amp;quot;H&amp;quot;&lt;/samp&gt; 。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies how to select &lt;a href=&quot;DuplicateString.htm&quot;&gt;duplicate strings&lt;/a&gt;.</source>
          <target>指定如何选择&lt;a href=&quot;DuplicateString.htm&quot;&gt;重复的字符串&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the character format of the file. Possible values are:</source>
          <target>指定文件的字符格式。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>3rd party machine translation engine. &amp;lt;MT&amp;gt; is the type of the machine translator such as Google Translate or Microsoft Translator. In order to use this you need Sisulizer enterprise edition and may need to have either the 3rd party machine translation engine installed on your computer or have access to a machine translator service.</source>
          <target>第三方机器翻译引擎。 &amp;lt;MT&amp;gt; 是机器翻译器的类型，例如 Google Translate 或 Microsoft Translator。为了使用它，您需要 Sisulizer 企业版，并且可能需要在您的计算机上安装第 3 方机器翻译引擎或访问机器翻译服务。</target>
        </trans-unit>
        <trans-unit>
          <source>Include those rows that has &lt;em&gt;In use&lt;/em&gt; status.</source>
          <target>包括那些&lt;em&gt;处于使用&lt;/em&gt;状态的行。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the expand percentage when the length of the original string is between 21 and 30 characters.</source>
          <target>指定原始字符串长度在 21 到 30 个字符之间时的扩展百分比。</target>
        </trans-unit>
        <trans-unit>
          <source>msbuild /t:updateuid myproject.csproj</source>
          <target>msbuild /t:updateuid myproject.csproj</target>
        </trans-unit>
        <trans-unit>
          <source>Source files</source>
          <target>源文件</target>
        </trans-unit>
        <trans-unit>
          <source>The following table compares different localization methods.</source>
          <target>下表比较了不同的定位方法。</target>
        </trans-unit>
        <trans-unit>
          <source>Removes a property.</source>
          <target>删除一个属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies how HTML images are localized. Possible values are:</source>
          <target>指定 HTML 图像的本地化方式。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Source | Additional files</source>
          <target>来源 |附加文件</target>
        </trans-unit>
        <trans-unit>
          <source>Write the empty string to the field.</source>
          <target>将空字符串写入字段。</target>
        </trans-unit>
        <trans-unit>
          <source>where comment is the single line comment character (e.g. &amp;quot;//&amp;quot;), tag is a tag string (e.g. slz), mc is the maximum length of the translation in characters, mp is the maximum length of the translation is pixels, and expression is the &lt;a href=&quot;CombinedStrings.htm&quot;&gt;combined string&lt;/a&gt; expression.</source>
          <target>其中comment是单行注释字符（例如“//”），tag是标签字符串（例如slz），mc是翻译的最大长度，以字符为单位，mp是翻译的最大长度，是像素，表达式是&lt;a href=&quot;CombinedStrings.htm&quot;&gt;组合字符串&lt;/a&gt;表达式。</target>
        </trans-unit>
        <trans-unit>
          <source>Output directory</source>
          <target>输出目录</target>
        </trans-unit>
        <trans-unit>
          <source>To restores the default value of the seleced item press the Restore button.</source>
          <target>要恢复所选项目的默认值，请按“恢复”按钮。</target>
        </trans-unit>
        <trans-unit>
          <source>By default Sisulizer&#x27;s translation memory removes all special characters including hotkey from the translation before adding them to the translation memory. When applying translation memory using automatic translation Sisulizer automatically adds a hotkey if the original string contains hotkey.</source>
          <target>默认情况下，Sisulizer 的翻译记忆库会在将它们添加到翻译记忆库之前从翻译中删除包括热键在内的所有特殊字符。当使用自动翻译应用翻译记忆库时，如果原始字符串包含热键，Sisulizer 会自动添加一个热键。</target>
        </trans-unit>
        <trans-unit>
          <source>Check &lt;em&gt;Scan source code to find resource string comments&lt;/em&gt; check box to make Sisulizer to scan the source code. Checking this will slow down the scanning speed so check it only if your source code contains resource string tags. You need to have source code available and you have to specify project file name in order to enable resource string tags.</source>
          <target>选中&lt;em&gt;Scan source code to find resource string comments&lt;/em&gt;复选框以使 Sisulizer 扫描源代码。检查此项会减慢扫描速度，因此仅当您的源代码包含资源字符串标签时才检查它。您需要有可用的源代码，并且必须指定项目文件名才能启用资源字符串标签。</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks if the localized file dialog filter string has the same structure as the original one</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查本地化文件对话框过滤器字符串是否与原始文件具有相同的结构</target>
        </trans-unit>
        <trans-unit>
          <source>You can add any number of spell and grammar checker configuration in the list. Configuration contains contains engine, language and dictionary. Each configuration has a unique name that Sisulizer use to make different between multiple similar configurations. You can add more than one configuration for one language. For example if you have two project one using medical terminology and another using engineering terminology you might want to use different dictionaries for each projects.</source>
          <target>您可以在列表中添加任意数量的拼写和语法检查器配置。配置包含引擎、语言和字典。每个配置都有一个唯一的名称，Sisulizer 使用它来区分多个相似配置。您可以为一种语言添加多个配置。例如，如果您有两个项目，一个使用医学术语，另一个使用工程术语，您可能希望为每个项目使用不同的词典。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows a sample form using the selected theme.</source>
          <target>显示使用所选主题的示例表单。</target>
        </trans-unit>
        <trans-unit>
          <source>Embedded.exe -&amp;gt; Embedded.exe, Embedded.FI, Embedded.DE and Embedded.JP.</source>
          <target>Embedded.exe -&amp;gt; Embedded.exe、Embedded.FI、Embedded.DE 和 Embedded.JP。</target>
        </trans-unit>
        <trans-unit>
          <source>ResX resources</source>
          <target>ResX 资源</target>
        </trans-unit>
        <trans-unit>
          <source>Structured text files</source>
          <target>结构化文本文件</target>
        </trans-unit>
        <trans-unit>
          <source>When you hold down an arrow key, multiple up or down key event will be generated. I you want to draw selected node completely on each move, please check this. Moving will slow down a little bit.</source>
          <target>当您按住方向键时，会产生多个向上或向下键事件。我想在每次移动时完全绘制选定的节点，请检查这个。移动会慢一点。</target>
        </trans-unit>
        <trans-unit>
          <source>Default project languages</source>
          <target>默认项目语言</target>
        </trans-unit>
        <trans-unit>
          <source>Language parameters are:</source>
          <target>语言参数是：</target>
        </trans-unit>
        <trans-unit>
          <source>Edit translation</source>
          <target>编辑翻译</target>
        </trans-unit>
        <trans-unit>
          <source>HTML (and variants) file</source>
          <target>HTML（和变体）文件</target>
        </trans-unit>
        <trans-unit>
          <source>If you add a &lt;a href=&quot;PlatformFiles.htm&quot;&gt;platform file&lt;/a&gt; such as 64-bit EXE or DLL make sure that the same directory contains the DRC file of the 64-bit EXE or DLL. For example if your 64-bit file is C:\Sample\Debug\Win64\Project1.exe there must be also C:\Sample\Debug\Win64\Project1.drc. Make sure that Delphi compiler creates the DRC file.</source>
          <target>如果添加&lt;a href=&quot;PlatformFiles.htm&quot;&gt;平台文件，&lt;/a&gt;例如 64 位 EXE 或 DLL，请确保同一目录包含 64 位 EXE 或 DLL 的 DRC 文件。例如，如果您的 64 位文件是 C:\Sample\Debug\Win64\Project1.exe，那么也必须是 C:\Sample\Debug\Win64\Project1.drc。确保 Delphi 编译器创建了 DRC 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Translator&#x27;s tool</source>
          <target>翻译工具</target>
        </trans-unit>
        <trans-unit>
          <source>Delphi XE2 and C++Builder XE2 or later using FireMonkey</source>
          <target>Delphi XE2 和 C++Builder XE2 或更高版本，使用 FireMonkey</target>
        </trans-unit>
        <trans-unit>
          <source>If Sisulizer can not parse your resource data it treats it as plain binary data. In this case it shows you the original bytes and lets you change the contents of the resource in localized items. You can change the contents by create a file that contains the new data and binding that file to Sisulizer project. When Sisulizer creates localized items it read the data from the  file and uses that data in the localized resource instead of original data.</source>
          <target>如果 Sisulizer 无法解析您的资源数据，它会将其视为纯二进制数据。在这种情况下，它会向您显示原始字节，并允许您更改本地化项目中资源的内容。您可以通过创建一个包含新数据的文件并将该文件绑定到 Sisulizer 项目来更改内容。当 Sisulizer 创建本地化项目时，它从文件中读取数据并在本地化资源中使用该数据而不是原始数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;NetLocalization.htm&quot;&gt;Borland/CodeGear .NET project group is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;NetLocalization.htm&quot;&gt;Borland/CodeGear .NET 项目组的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Before&lt;/em&gt; specifies the string that is added before the pseudo translated value.&lt;br&gt;
  &lt;em&gt;Separator&lt;/em&gt; specifies the string that is added separate context/id and the value.&lt;br&gt;
  &lt;em&gt;After&lt;/em&gt; specifies the string that is added after the pseudo translated value.</source>
          <target>&lt;em&gt;Before&lt;/em&gt;指定在伪翻译值之前添加的字符串。&lt;br&gt;&lt;em&gt;分隔符&lt;/em&gt;指定添加单独的上下文/id 和值的字符串。&lt;br&gt; &lt;em&gt;After&lt;/em&gt;指定在伪翻译值之后添加的字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies what viewer is used when show XAML files. Possible options are:</source>
          <target>指定显示 XAML 文件时使用的查看器。可能的选项是：</target>
        </trans-unit>
        <trans-unit>
          <source>Comment field</source>
          <target>评论栏</target>
        </trans-unit>
        <trans-unit>
          <source>Use msgstr value as original</source>
          <target>使用 msgstr 值作为原始值</target>
        </trans-unit>
        <trans-unit>
          <source>UTF-16, little endian</source>
          <target>UTF-16，小端</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to set the environment settings.</source>
          <target>使用此表设置环境设置。</target>
        </trans-unit>
        <trans-unit>
          <source>Translations and Rows</source>
          <target>翻译和行</target>
        </trans-unit>
        <trans-unit>
          <source>Lingsoft has a superior spell checker that is used in several applications including Microsoft Office and Adobe products. Lingsoft also supports grammar checking. If you need a high quality spell checking for Nordic languages it is recommended to &lt;a href=&quot;InstallLingsoft.htm&quot;&gt;purchase Lingsoft spell checker and install it&lt;/a&gt;. Next time you start Sisulizer it can use your Lingsoft spell checker.</source>
          <target>Lingsoft 拥有卓越的拼写检查器，可用于多种应用程序，包括 Microsoft Office 和 Adob​​e 产品。 Lingsoft 还支持语法检查。如果您需要对北欧语言进行高质量的拼写检查，建议您&lt;a href=&quot;InstallLingsoft.htm&quot;&gt;购买 Lingsoft 拼写检查器并安装它&lt;/a&gt;。下次启动 Sisulizer 时，它可以使用 Lingsoft 拼写检查器。</target>
        </trans-unit>
        <trans-unit>
          <source>Your &lt;a href=&quot;DrcFile.htm&quot;&gt;DRC&lt;/a&gt; file is older than the EXE or DLL file. Make sure you have DRC file generation turned on and rebuild your application.</source>
          <target>您的&lt;a href=&quot;DrcFile.htm&quot;&gt;DRC&lt;/a&gt;文件比 EXE 或 DLL 文件旧。确保您已打开 DRC 文件生成并重建您的应用程序。</target>
        </trans-unit>
        <trans-unit>
          <source>Test for overlapping controls</source>
          <target>测试重叠控件</target>
        </trans-unit>
        <trans-unit>
          <source>Update language id</source>
          <target>更新语言 ID</target>
        </trans-unit>
        <trans-unit>
          <source>Class name</source>
          <target>班级名称</target>
        </trans-unit>
        <trans-unit>
          <source>Show translation statistics</source>
          <target>显示翻译统计</target>
        </trans-unit>
        <trans-unit>
          <source>Use these combo boxes to specify how the &lt;a href=&quot;WorkingWithTranslationSheet.htm#TranslationStatus&quot;&gt;translation status&lt;/a&gt; changes after certain actions. Possible actions are:</source>
          <target>使用这些组合框来指定特定操作后&lt;a href=&quot;WorkingWithTranslationSheet.htm#TranslationStatus&quot;&gt;翻译状态的&lt;/a&gt;变化方式。可能的操作是：</target>
        </trans-unit>
        <trans-unit>
          <source>Show hidden characters</source>
          <target>显示隐藏字符</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the Sisulizer component name that is used when when mapping an unmapped component.</source>
          <target>指定映射未映射组件时使用的 Sisulizer 组件名称。</target>
        </trans-unit>
        <trans-unit>
          <source>When loading</source>
          <target>加载时</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the format of the text resource.</source>
          <target>指定文本资源的格式。</target>
        </trans-unit>
        <trans-unit>
          <source>Problematic unit name</source>
          <target>有问题的单位名称</target>
        </trans-unit>
        <trans-unit>
          <source>Shows information about the project.</source>
          <target>显示有关项目的信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Emulator application</source>
          <target>模拟器应用</target>
        </trans-unit>
        <trans-unit>
          <source>A break occurs when there is one or more Asian full stop (Unicode 0x3002), period, question mark, or exclamation mark following one or more white space. For example:&lt;br&gt;&amp;#31169;&amp;#12399;&amp;#26481;&amp;#20140;&amp;#12395;&amp;#20303;&amp;#12435;&amp;#12391;&amp;#12356;&amp;#12414;&amp;#12377;&lt;u&gt;&amp;#12290;&lt;/u&gt;&amp;#26481;&amp;#20140;&amp;#12399;&amp;#22823;&amp;#12365;&amp;#12356;&amp;#12391;&amp;#12377;&amp;#12290;&lt;br&gt;Underline shows the break pattern.</source>
          <target>当一个或多个空格后有一个或多个亚洲句号 (Unicode 0x3002)、句号、问号或感叹号时，会发生中断。例如：&lt;br&gt;私は东京に住んでいます&lt;u&gt;。&lt;/u&gt;东京は大きいです。&lt;br&gt;下划线显示突破形态。</target>
        </trans-unit>
        <trans-unit>
          <source>If your database contains more than one table this  list visible. Check those tables you want to analyze and possible localize. If your database is very large and there is only few  tables you want to localize then check only those tables. Sisulizer will ignore all other tables.</source>
          <target>如果您的数据库包含多个表，则此列表可见。检查您要分析的那些表并可能进行本地化。如果您的数据库非常大，并且您只想本地化的表很少，则只检查这些表。 Sisulizer 将忽略所有其他表。</target>
        </trans-unit>
        <trans-unit>
          <source>Ignore words with UPPERCASE</source>
          <target>忽略带有大写的单词</target>
        </trans-unit>
        <trans-unit>
          <source>Prompt before overwrite</source>
          <target>覆盖前提示</target>
        </trans-unit>
        <trans-unit>
          <source>Remove every character from the string but the first one</source>
          <target>从字符串中删除除第一个字符以外的所有字符</target>
        </trans-unit>
        <trans-unit>
          <source>Qt project file (.pro) that contains translations files (.ts) and user interface files (.ui)</source>
          <target>Qt 项目文件 (.pro) 包含翻译文件 (.ts) 和用户界面文件 (.ui)</target>
        </trans-unit>
        <trans-unit>
          <source>Select tables you want to process</source>
          <target>选择要处理的表</target>
        </trans-unit>
        <trans-unit>
          <source>If you select a release key the following items will be visible.</source>
          <target>如果您选择一个释放键，以下项目将可见。</target>
        </trans-unit>
        <trans-unit>
          <source>Inserts the contents of the clipboard into the active postion on the project.</source>
          <target>将剪贴板的内容插入项目的活动位置。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;strong&gt;Note!&lt;/strong&gt; If the list is empty all files with known extensions will be scanned.</source>
          <target>&lt;strong&gt;笔记！&lt;/strong&gt;如果列表为空，则将扫描所有具有已知扩展名的文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Row comment column</source>
          <target>行注释列</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the initial settings of keyboard layout and IME of the language being edited. Possible values are:</source>
          <target>指定正在编辑的语言的键盘布局和 IME 的初始设置。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the default new line encoding. It is used if the original data does not contains new lines but the translated data contains. Possible values are:</source>
          <target>指定默认的换行编码。如果原始数据不包含新行但翻译数据包含新行，则使用它。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>File menu</source>
          <target>文件菜单</target>
        </trans-unit>
        <trans-unit>
          <source>Moved control</source>
          <target>移动控制</target>
        </trans-unit>
        <trans-unit>
          <source>If checked file name values from version resource are extracted.</source>
          <target>如果从版本资源中提取选中的文件名值。</target>
        </trans-unit>
        <trans-unit>
          <source>Invalid Amount of New Lines Validation</source>
          <target>新行验证数量无效</target>
        </trans-unit>
        <trans-unit>
          <source>Possible length methods are:</source>
          <target>可能的长度方法是：</target>
        </trans-unit>
        <trans-unit>
          <source>Create options</source>
          <target>创建选项</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer project file (.slp)</source>
          <target>Sisulizer 项目文件 (.slp)</target>
        </trans-unit>
        <trans-unit>
          <source>Machine translator that uses &lt;a href=&quot;GoogleTranslate.htm&quot;&gt;Google Translate&lt;/a&gt; service to translate strings.</source>
          <target>使用&lt;a href=&quot;GoogleTranslate.htm&quot;&gt;Google Translate&lt;/a&gt;服务翻译字符串的机器翻译器。</target>
        </trans-unit>
        <trans-unit>
          <source>This translates all items of the selected language that exists in the project. If you want to translate only the items of the selected view choose &lt;a href=&quot;ColumnTranslateViewUsingTeMenu.htm&quot;&gt;Column | Translate View Using Translation Engine&lt;/a&gt;. If you want to translate only certain items select them, right click, and choose Translate | Translate Using Translation Engine.</source>
          <target>这将翻译项目中存在的所选语言的所有项目。如果您只想翻译所选视图的项目，请选择&lt;a href=&quot;ColumnTranslateViewUsingTeMenu.htm&quot;&gt;列 |使用翻译引擎翻译视图&lt;/a&gt;。如果您只想翻译某些项目，请选择它们，右键单击，然后选择翻译 |使用翻译引擎翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>If data is XML Sisulizer initially scans all XML elements. If you want to disable scanning of one or more elements you must uncheck those in the &lt;a href=&quot;FormatNodeDialogTagsSheet.htm&quot;&gt;XML Tags&lt;/a&gt; sheet.</source>
          <target>如果数据是 XML，Sisulizer 最初会扫描所有 XML 元素。如果您想禁用对一个或多个元素的扫描，您必须在&lt;a href=&quot;FormatNodeDialogTagsSheet.htm&quot;&gt;XML 标签&lt;/a&gt;表中取消选中这些元素。</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be a &lt;a href=&quot;WindowsLocalization.htm#VisualBasic&quot;&gt;Visual Basic project file&lt;/a&gt; (e.g. C:\Samples\Sample.vbp).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是&lt;a href=&quot;WindowsLocalization.htm#VisualBasic&quot;&gt;Visual Basic 项目文件&lt;/a&gt;（例如 C:\Samples\Sample.vbp）。</target>
        </trans-unit>
        <trans-unit>
          <source>Qt user interface file</source>
          <target>Qt用户界面文件</target>
        </trans-unit>
        <trans-unit>
          <source>Row localization where id and language id together make the primary key</source>
          <target>行本地化，其中 id 和语言 id 共同构成主键</target>
        </trans-unit>
        <trans-unit>
          <source>If you want to localize the above table add the Language field and add that to the primary index.</source>
          <target>如果要本地化上表，请添加语言字段并将其添加到主索引。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked string values from version resource are extracted.</source>
          <target>如果从版本资源中提取选中的字符串值。</target>
        </trans-unit>
        <trans-unit>
          <source>Add all the localized .resx files that Sisulizer created into Visual Studio project</source>
          <target>将 Sisulizer 创建的所有本地化 .resx 文件添加到 Visual Studio 项目中</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify what elements should be localized in the selected XML file. Double click an element that you want to localize. To change the way how element data is interpreted right click the element and choose the right format.</source>
          <target>使用此表指定应在所选 XML 文件中本地化哪些元素。双击要本地化的元素。要更改元素数据的解释方式，请右键单击元素并选择正确的格式。</target>
        </trans-unit>
        <trans-unit>
          <source>If a image (e.g. BITMAP) has been translated it will be written to the localized directory if this has been checked.</source>
          <target>如果图像（例如 BITMAP）已被翻译，则它会被写入本地化目录（如果已选中）。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure how database table is localized.</source>
          <target>使用此对话框配置数据库表的本地化方式。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;strong&gt;Note!&lt;/strong&gt; When you turn on sorting Sisulizer visual contents editor still shows the contents as unsorted. However when you build localized files the contents is sorted using the sort method you selected.</source>
          <target>&lt;strong&gt;笔记！&lt;/strong&gt;当您打开排序 Sisulizer 可视化内容编辑器时，仍将内容显示为未排序。但是，当您构建本地化文件时，内容将使用您选择的排序方法进行排序。</target>
        </trans-unit>
        <trans-unit>
          <source>Use the  default font for this language.</source>
          <target>使用此语言的默认字体。</target>
        </trans-unit>
        <trans-unit>
          <source>Starts &lt;a href=&quot;ImportWizard.htm&quot;&gt;Import Wizard&lt;/a&gt; that imports data to the current Sisulizer project.</source>
          <target>启动将数据&lt;a href=&quot;ImportWizard.htm&quot;&gt;导入&lt;/a&gt;当前 Sisulizer 项目的&lt;a href=&quot;ImportWizard.htm&quot;&gt;导入向导&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Username&lt;/em&gt; indicates the user name used when logging in to the FTP server.</source>
          <target>&lt;em&gt;用户名&lt;/em&gt;表示登录FTP服务器时使用的用户名。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked a row comment column is added after all translation columns.</source>
          <target>如果选中，则在所有翻译列之后添加行注释列。</target>
        </trans-unit>
        <trans-unit>
          <source>Accept wildcard characters</source>
          <target>接受通配符</target>
        </trans-unit>
        <trans-unit>
          <source>File contains little endian UTF-16 data.</source>
          <target>文件包含小端 UTF-16 数据。</target>
        </trans-unit>
        <trans-unit>
          <source>When selecting</source>
          <target>选择时</target>
        </trans-unit>
        <trans-unit>
          <source>Visual Studio .NET solution file</source>
          <target>Visual Studio .NET 解决方案文件</target>
        </trans-unit>
        <trans-unit>
          <source>.NET script code. .NET 4 uses the standard script codes such as Hans, Hant, Cyrl, Latn, etc. .NET 2-3 uses legacy Chinese codes such as CHS and CHT.</source>
          <target>.NET 脚本代码。 .NET 4 使用标准的脚本代码，如 Hans、Hant、Cyrl、Latn 等。.NET 2-3 使用传统的中文代码，如 CHS 和 CHT。</target>
        </trans-unit>
        <trans-unit>
          <source>Missing period</source>
          <target>缺失期</target>
        </trans-unit>
        <trans-unit>
          <source>If you select an XML tag that has sub tags Sisulizer automatically combines the tag into single element and adds that to the project.</source>
          <target>如果您选择具有子标签的 XML 标签，Sisulizer 会自动将该标签组合成单个元素并将其添加到项目中。</target>
        </trans-unit>
        <trans-unit>
          <source>Makes the find is performed backward (up in the column) starting from the current origin.</source>
          <target>使查找从当前原点开始向后执行（在列中向上）。</target>
        </trans-unit>
        <trans-unit>
          <source>TNT and ElPack components provide Unicode support even when used with non-Unicode VCL. Sisulizer automatically detects that you use Unicode components and writes all strings as Unicode. Sometimes usage of Unicode components can not be detected. In that case turn &lt;em&gt;Widestring (Unicode) usage&lt;/em&gt; to Yes.</source>
          <target>即使与非 Unicode VCL 一起使用，TNT 和 ElPack 组件也提供 Unicode 支持。 Sisulizer 会自动检测您使用 Unicode 组件并将所有字符串写入为 Unicode。有时无法检测到 Unicode 组件的使用。在这种情况下，将&lt;em&gt;宽字符串 (Unicode) 用法&lt;/em&gt;设为 Yes。</target>
        </trans-unit>
        <trans-unit>
          <source>Inconsistent hot key</source>
          <target>不一致的热键</target>
        </trans-unit>
        <trans-unit>
          <source>Read more abut &lt;a href=&quot;ComponentMapping.htm&quot;&gt;component mapping&lt;/a&gt;.</source>
          <target>阅读更多关于&lt;a href=&quot;ComponentMapping.htm&quot;&gt;组件映射&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Show detailed error information.</source>
          <target>显示详细的错误信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows information about the selected &lt;a href=&quot;GoogleTranslate.htm&quot;&gt;Google Translate&lt;/a&gt; machine translator.</source>
          <target>显示有关所选&lt;a href=&quot;GoogleTranslate.htm&quot;&gt;Google Translate&lt;/a&gt;机器翻译器的信息。</target>
        </trans-unit>
        <trans-unit>
          <source>An important part of spell checking are custom dictionaries. A custom dictionary is a dictionary where you can add your own words. The spell checker will look from the main dictionary first. If not found then it will look from the custom dictionary. The main dictionary is generally read only but for custom dictionary you always has full control. You can add and remove items from it. Sisulizer can store custom dictionary is two different way:</source>
          <target>拼写检查的一个重要部分是自定义词典。自定义词典是一种可以在其中添加自己的单词的词典。拼写检查器将首先查看主词典。如果未找到，它将从自定义词典中查找。主词典通常是只读的，但对于自定义词典，您始终可以完全控制。您可以在其中添加和删除项目。 Sisulizer 可以通过两种不同的方式存储自定义字典：</target>
        </trans-unit>
        <trans-unit>
          <source>Can be detected?</source>
          <target>能检测到吗？</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies if a context part or unique id should be added into pseudo translated strings. Possible characters are:</source>
          <target>指定是否应将上下文部分或唯一 id 添加到伪翻译字符串中。可能的字符有：</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to sepcify the type of .NET and its version.</source>
          <target>使用此表来确定 .NET 的类型及其版本。</target>
        </trans-unit>
        <trans-unit>
          <source>Spell and grammar checker list</source>
          <target>拼写和语法检查器列表</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer creates satellite assemblies when building localized files.</source>
          <target>如果选中 Sisulizer，则在构建本地化文件时会创建附属程序集。</target>
        </trans-unit>
        <trans-unit>
          <source>It is recommended to leave all above check boxes checked.</source>
          <target>建议选中上述所有复选框。</target>
        </trans-unit>
        <trans-unit>
          <source>Ini file localization is very simple in Sisulizer because it is visual and safe. The basic idea of ini localization it to parse the file, extract strings from it and create localized copy of the file where the original strings are replaced with the translated ones. The structure of the localized file is identical to the original file. Only the strings are different.</source>
          <target>在 Sisulizer 中，Ini 文件本地化非常简单，因为它是可视化和安全的。 ini 本地化的基本思想是解析文件，从中提取字符串并创建文件的本地化副本，其中原始字符串替换为翻译后的字符串。本地化文件的结构与原始文件相同。只是字符串不同。</target>
        </trans-unit>
        <trans-unit>
          <source>Starts &lt;a href=&quot;ProjectWizard.htm&quot;&gt;Project Wizard&lt;/a&gt; that creates a new Sisulizer project.</source>
          <target>启动创建新 Sisulizer 项目的&lt;a href=&quot;ProjectWizard.htm&quot;&gt;项目向导&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer contains several Delphi units that you can use to implement &lt;a href=&quot;RuntimeLanguageChangeVcl.htm&quot;&gt;runtime language change&lt;/a&gt; for your application. Units are:</source>
          <target>Sisulizer 包含多个 Delphi 单元，您可以使用这些单元为您的应用程序实现&lt;a href=&quot;RuntimeLanguageChangeVcl.htm&quot;&gt;运行时语言更改&lt;/a&gt;。单位是：</target>
        </trans-unit>
        <trans-unit>
          <source>Mark the row statuses of items</source>
          <target>标记项目的行状态</target>
        </trans-unit>
        <trans-unit>
          <source>Exclude original</source>
          <target>排除原件</target>
        </trans-unit>
        <trans-unit>
          <source>Definition is used when importing files. In this case the definition can contain a context item but it is not required. Each text item must contain language attribute.</source>
          <target>导入文件时使用定义。在这种情况下，定义可以包含上下文项，但不是必需的。每个文本项必须包含语言属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Copy the global settings before scanning</source>
          <target>扫描前复制全局设置</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to select what part of the project you will be included to the package. You can choose what languages and what nodes will be added there.</source>
          <target>使用此表选择您将包含在包中的项目部分。您可以选择将在那里添加哪些语言和哪些节点。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Update Translations&lt;/em&gt; specifies if and how the translations of &lt;a href=&quot;DuplicateString.htm&quot;&gt;duplicate strings&lt;/a&gt; are updates after the translation of one of the strings has been changed.</source>
          <target>&lt;em&gt;更新翻译&lt;/em&gt;指定在更改字符串之一的翻译后是否以及如何更新&lt;a href=&quot;DuplicateString.htm&quot;&gt;重复字符串&lt;/a&gt;的翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;JavaLocalization.htm&quot;&gt;Java binary file is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;JavaLocalization.htm&quot;&gt;Java 二进制文件的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Check &lt;em&gt;Check grammar&lt;/em&gt;  to include grammar checking. Click &lt;em&gt;Options&lt;/em&gt;  to change spelling options. Click &lt;em&gt;Undo&lt;/em&gt; to undo previous change.</source>
          <target>检查&lt;em&gt;检查语法&lt;/em&gt;以包括语法检查。单击&lt;em&gt;选项&lt;/em&gt;以更改拼写选项。单击&lt;em&gt;撤消&lt;/em&gt;以撤消先前的更改。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the options how strings are encoded to the file.</source>
          <target>指定如何将字符串编码到文件中的选项。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;FlipChildren&lt;/em&gt; method mirrors the control and optionally its sub controls.</source>
          <target>&lt;em&gt;FlipChildren&lt;/em&gt;方法镜像控件及其子控件（可选）。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows a statistics dialog that contains the statistical information about the selected node.</source>
          <target>显示一个统计对话框，其中包含有关所选节点的统计信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the default language. This languages is used in the build process if there is no translation given in the project sheet. The translation select rule is following. Use first the translation given in the language column of the build language. If there is no translation then use the country neutral column (if the build language is country specific and a country neutral column exists). If this value is empty too then use the translation given in the column of the default language. If no translation is found then the original value is used.</source>
          <target>指定默认语言。如果项目表中没有提供翻译，则在构建过程中使用此语言。翻译选择规则如下。首先使用构建语言的语言栏中给出的翻译。如果没有翻译，则使用国家/地区中立列（如果构建语言是国家特定的并且存在国家/地区中立列）。如果此值也为空，则使用默认语言列中给出的翻译。如果未找到翻译，则使用原始值。</target>
        </trans-unit>
        <trans-unit>
          <source>Information/include tag is used to pass string properties to the project. The syntax is</source>
          <target>Information/include 标签用于将字符串属性传递给项目。语法是</target>
        </trans-unit>
        <trans-unit>
          <source>Read more about &lt;a href=&quot;DatabaseLocalization.htm&quot;&gt;database localization&lt;/a&gt;.</source>
          <target>阅读有关&lt;a href=&quot;DatabaseLocalization.htm&quot;&gt;数据库本地化的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;strong&gt;Note!&lt;/strong&gt; Some item (e.g. sources or nodes) do not support all formats.</source>
          <target>&lt;strong&gt;笔记！&lt;/strong&gt;某些项目（例如源或节点）不支持所有格式。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies a Delphi project file (.dpr). Use this if you have unit names having _ in their file names and those units use resource strings having also _ in their names. Otherwise Sisulizer can not determine the exact resource string context. For example if My_File.pas has the following resource string</source>
          <target>指定 Delphi 项目文件 (.dpr)。如果您的单元名称在其文件名中包含 _，并且这些单元使用名称中也包含 _ 的资源字符串，请使用此选项。否则 Sisulizer 无法确定确切的资源字符串上下文。例如，如果 My_File.pas 具有以下资源字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be a &lt;a href=&quot;JavaLocalization.htm#Archive&quot;&gt;Java archive file&lt;/a&gt; (e.g. C:\Samples\Project.jar).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是&lt;a href=&quot;JavaLocalization.htm#Archive&quot;&gt;Java 存档文件&lt;/a&gt;（例如 C:\Samples\Project.jar）。</target>
        </trans-unit>
        <trans-unit>
          <source>Translations can be imported from two different sources. They are:</source>
          <target>可以从两个不同的来源导入翻译。他们是：</target>
        </trans-unit>
        <trans-unit>
          <source>Special English used in Engineering</source>
          <target>工程中使用的特殊英语</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the languages that engine can translate.</source>
          <target>显示引擎可以翻译的语言。</target>
        </trans-unit>
        <trans-unit>
          <source>A language version of the field. Each original field can contain language specific fields that specify what field is used for each language.</source>
          <target>字段的语言版本。每个原始字段都可以包含特定于语言的字段，这些字段指定用于每种语言的字段。</target>
        </trans-unit>
        <trans-unit>
          <source>By command (File | Save To Translation Memory)</source>
          <target>通过命令（文件 | 保存到翻译记忆库）</target>
        </trans-unit>
        <trans-unit>
          <source>Learn more about &lt;a href=&quot;MprConvert.htm&quot;&gt;converting Multilizer project files&lt;/a&gt;.</source>
          <target>了解有关&lt;a href=&quot;MprConvert.htm&quot;&gt;转换 Multilizer 项目文件的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Keyboard layouts and Input method editors</source>
          <target>键盘布局和输入法编辑器</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies a grammar file. This file usually has the same file extension as the dictionary file.</source>
          <target>指定一个语法文件。该文件通常与字典文件具有相同的文件扩展名。</target>
        </trans-unit>
        <trans-unit>
          <source>The most important new features of Sisulizer 4 are:</source>
          <target>Sisulizer 4 最重要的新功能是：</target>
        </trans-unit>
        <trans-unit>
          <source>Check &lt;em&gt;Add language attribute into target elements&lt;/em&gt; if you want that Sisulizer adds xml:lang attributes into the target elements.</source>
          <target>如果您希望 Sisulizer 将 xml:lang 属性&lt;em&gt;添加到目标元素中，&lt;/em&gt;请选中&lt;em&gt;将语言属性&lt;/em&gt;添加到目标元素中。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the exported data is sorted by original string value.</source>
          <target>如果选中，则导出的数据按原始字符串值排序。</target>
        </trans-unit>
        <trans-unit>
          <source>The following image contain sorted table of contents where &lt;em&gt;Sort pages and sub folders together&lt;/em&gt; sorting is used.</source>
          <target>下图包含已排序的目录，其中使用&lt;em&gt;排序页面和子文件夹一起&lt;/em&gt;排序。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer reads  data by using text format that you specify. This makes it possible to parse simple proprietary text data.</source>
          <target>Sisulizer 使用您指定的文本格式读取数据。这使得解析简单的专有文本数据成为可能。</target>
        </trans-unit>
        <trans-unit>
          <source>Whole strings only</source>
          <target>仅整串</target>
        </trans-unit>
        <trans-unit>
          <source>Press Skip All to skip the items that have multiple translations.</source>
          <target>按跳过全部跳过有多个翻译的项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Project Wizard - Ini file</source>
          <target>项目向导 - Ini 文件</target>
        </trans-unit>
        <trans-unit>
          <source>One of the target languages or the original language is the default language. Its purpose is to determine what language is used in the build process when there are no translation given. By default the default language is original language. This means that Sisulizer uses the original value in the case there is no translation value in the project. You can set the default language to be any target language in the project. This is useful in the case that original language is a language that is not well known in the world. For example if you original language is Finnish and you localize to English, German, French and Japanese it is useful to set the default language to English. In that case when ever there is no German, French or Japanese translation Sisulizer is using English translation instead of original Finnish value. It is much more likely that the end user of the application in Germany know English than Finnish.</source>
          <target>目标语言或原始语言之一是默认语言。它的目的是在没有给出翻译时确定在构建过程中使用什么语言。默认情况下，默认语言是原始语言。这意味着在项目中没有翻译值的情况下，Sisulizer 使用原始值。您可以将默认语言设置为项目中的任何目标语言。这在原始语言是一种在世界上并不广为人知的语言的情况下很有用。例如，如果您的原始语言是芬兰语并且您本地化为英语、德语、法语和日语，则将默认语言设置为英语会很有用。在这种情况下，当没有德语、法语或日语翻译时，Sisulizer 使用英语翻译而不是原始芬兰语值。与芬兰语相比，德国应用程序的最终用户更可能懂英语。</target>
        </trans-unit>
        <trans-unit>
          <source>SelectResourceLocale changes the language and FormCreate resets the dynamic properties using the new language. You just have to remember to resets any dynamic properties after language change. This might seem a bit complicated but in most cases your language change routine is on the main menu or on the main form. In a situation like that you only have one form existing at that moment so you only have to take care if resetting dynamic properties of that form. All forms that you create after language change will automatically use the new language.</source>
          <target>SelectResourceLocale 更改语言，FormCreate 使用新语言重置动态属性。您只需要记住在语言更改后重置任何动态属性。这可能看起来有点复杂，但在大多数情况下，您的语言更改例程位于主菜单或主窗体上。在这种情况下，此时您只有一个表单，因此您只需在重置该表单的动态属性时注意。您在语言更改后创建的所有表单都将自动使用新语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure sheet settings.</source>
          <target>使用此对话框配置图纸设置。</target>
        </trans-unit>
        <trans-unit>
          <source>Some spell checkers support grammar checking. Grammar checking is enabled if you have installed such a spell checker. Sisulizer has two grammar checking modes. They are:</source>
          <target>一些拼写检查器支持语法检查。如果您安装了这样的拼写检查器，则启用语法检查。 Sisulizer 有两种语法检查模式。他们是：</target>
        </trans-unit>
        <trans-unit>
          <source>Restores the visible property of the selected control.</source>
          <target>恢复所选控件的可见属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the options.</source>
          <target>指定选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Select the PO file that contains the source strings</source>
          <target>选择包含源字符串的 PO 文件</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the node is excluded from the project. This means that items belonging to the node is not shown in the translation grid.</source>
          <target>如果选中，该节点将从项目中排除。这意味着属于该节点的项目不会显示在翻译网格中。</target>
        </trans-unit>
        <trans-unit>
          <source>Column | Spelling and Grammar</source>
          <target>专栏 |拼写和语法</target>
        </trans-unit>
        <trans-unit>
          <source>Localized application contains support for one language only and it always starts on that language no mater application or operating system settings. The other two methods contain support for multiple languages. The difference between multilingual and runtime language change enabled application is that a multilingual application starts on the language that either OS or your logic selects it but you can not change it afterwards. In order to run a multilingual application on different language you have to stop it, modify the applications and/or operating system settings and start again.</source>
          <target>本地化应用程序仅支持一种语言，无论应用程序或操作系统设置如何，它始终以该语言启动。另外两种方法包含对多种语言的支持。启用多语言和运行时语言更改的应用程序之间的区别在于，多语言应用程序以操作系统或您的逻辑选择的语言启动，但之后无法更改。为了在不同语言上运行多语言应用程序，您必须停止它，修改应用程序和/或操作系统设置并重新启动。</target>
        </trans-unit>
        <trans-unit>
          <source>Enter a sample text that contains text data to be scanned and click Process button to extract item from the string.</source>
          <target>输入包含要扫描的文本数据的示例文本，然后单击“处理”按钮从字符串中提取项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Restore project</source>
          <target>恢复项目</target>
        </trans-unit>
        <trans-unit>
          <source>VCL (Delphi and C++Builder)</source>
          <target>VCL（Delphi 和 C++Builder）</target>
        </trans-unit>
        <trans-unit>
          <source>The following image has string data in B3:D:6 range.</source>
          <target>下图包含 B3:D:6 范围内的字符串数据。</target>
        </trans-unit>
        <trans-unit>
          <source>The following item contains maximum length of the string in characters.</source>
          <target>以下项目包含字符串的最大长度（以字符为单位）。</target>
        </trans-unit>
        <trans-unit>
          <source>Contains a list of available validation types. Check those validations from the list you want to apply to the project.  The possible validations are:</source>
          <target>包含可用验证类型的列表。从要应用于项目的列表中检查这些验证。可能的验证是：</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies what messages are shown</source>
          <target>指定显示什么消息</target>
        </trans-unit>
        <trans-unit>
          <source>Contains only the basic Sisulizer features and some of the platforms. The following features are not enabled:</source>
          <target>仅包含基本的 Sisulizer 功能和一些平台。以下功能未启用：</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the main view shows recent news.</source>
          <target>如果选中，主视图将显示最近的新闻。</target>
        </trans-unit>
        <trans-unit>
          <source>You select a new language and press OK. It is simple like that! If you want to use your own user interface to show available languages and way to choose a new one you can use the functions in LaResource.pas to get list of available languages and finally set a new language active.</source>
          <target>您选择一种新语言并按 OK。就是这么简单！如果您想使用自己的用户界面来显示可用语言和选择新语言的方式，您可以使用 LaResource.pas 中的功能来获取可用语言列表，并最终将新语言设置为活动状态。</target>
        </trans-unit>
        <trans-unit>
          <source>Fine tuning runtime language change</source>
          <target>微调运行时语言更改</target>
        </trans-unit>
        <trans-unit>
          <source>Selects a corresponding resourcestring node.</source>
          <target>选择相应的资源字符串节点。</target>
        </trans-unit>
        <trans-unit>
          <source>The Country table in the Japanese database will look like this after Sisulizer has created the database:</source>
          <target>Sisulizer 创建数据库后，日本数据库中的 Country 表将如下所示：</target>
        </trans-unit>
        <trans-unit>
          <source>Keep original resources</source>
          <target>保留原始资源</target>
        </trans-unit>
        <trans-unit>
          <source>Click &lt;em&gt;Create New&lt;/em&gt; to create a new project. Click &lt;em&gt;Open Existing&lt;/em&gt; to open an existing project. Click &lt;em&gt;Open Sample&lt;/em&gt; to open a sample project. Click &lt;em&gt;Read Documentation&lt;/em&gt; to read the online documentation.</source>
          <target>单击&lt;em&gt;新建&lt;/em&gt;以创建新项目。单击“&lt;em&gt;打开现有”&lt;/em&gt;以打开现有项目。单击&lt;em&gt;打开示例&lt;/em&gt;以打开示例项目。单击“&lt;em&gt;阅读文档”&lt;/em&gt;以阅读在线文档。</target>
        </trans-unit>
        <trans-unit>
          <source>Mirror forms</source>
          <target>镜像形式</target>
        </trans-unit>
        <trans-unit>
          <source>In order to compile the localized resources Sisulizer needs to know the location of the tools used by Visual Basic.</source>
          <target>为了编译本地化资源，Sisulizer 需要知道 Visual Basic 使用的工具的位置。</target>
        </trans-unit>
        <trans-unit>
          <source>It is possible to implement runtime language change for &lt;a href=&quot;RuntimeLanguageChangeOther.htm&quot;&gt;other platforms&lt;/a&gt; but not without significant need to modify your existing code.</source>
          <target>可以为&lt;a href=&quot;RuntimeLanguageChangeOther.htm&quot;&gt;其他平台&lt;/a&gt;实现运行时语言更改，但需要大量修改现有代码。</target>
        </trans-unit>
        <trans-unit>
          <source>String length</source>
          <target>字符串长度</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies if definition is used when localizing files or when importing files.</source>
          <target>指定在本地化文件或导入文件时是否使用定义。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer&#x27;s Tutorial directory contains Import sub directory (&amp;lt;sldir&amp;gt;\Tutorial\Import). It has Country.slp project file that localizes Country.ini file. Directory also contains several glossary files (.tmx, .csv, .xls), glossary databases (.mdb) and already localized ini files (Finnish.ini, German.ini and Japanese.ini). You can &lt;a href=&quot;ImportingData.htm&quot;&gt;import&lt;/a&gt; Finnish, German jan Japanese translations from glossaries and localized files to the project by choosing File | Import.</source>
          <target>Sisulizer 的教程目录包含导入子目录 (&amp;lt;sldir&amp;gt;\Tutorial\Import)。它具有 Country.slp 项目文件，用于本地化 Country.ini 文件。目录还包含几个词汇表文件（.tmx、.csv、.xls）、词汇表数据库 (.mdb) 和已经本地化的 ini 文件（Finnish.ini、German.ini 和 Japanese.ini）。您可以通过选择文件 |&lt;a href=&quot;ImportingData.htm&quot;&gt;将&lt;/a&gt;芬兰语、德语 jan 日语翻译从词汇表和本地化文件导入到项目中。进口。</target>
        </trans-unit>
        <trans-unit>
          <source>Just like source code your XML files might contain image or binary data. Sisulizer can read both hexadecimal encoded and base-64 encoded image/binary data. Right click the node and select the right type.</source>
          <target>就像源代码一样，您的 XML 文件可能包含图像或二进制数据。 Sisulizer 可以读取十六进制编码和 base-64 编码的图像/二进制数据。右键单击节点并选择正确的类型。</target>
        </trans-unit>
        <trans-unit>
          <source>VCL&#x27;s resource DLLs</source>
          <target>VCL 的资源 DLL</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the data types that are not localized.</source>
          <target>使用此表指定未本地化的数据类型。</target>
        </trans-unit>
        <trans-unit>
          <source>Select a dictionary file that you want to extract</source>
          <target>选择要提取的字典文件</target>
        </trans-unit>
        <trans-unit>
          <source>XLIFF file is a bilingual file. It has source and target languages. When Sisulizer reads XLIFF data it reads the source language. Sisulizer goes through every &amp;lt;trans-unit&amp;gt; element in the file and extracts &amp;lt;source&amp;gt; element data to the project.</source>
          <target>XLIFF 文件是双语文件。它有源语言和目标语言。当 Sisulizer 读取 XLIFF 数据时，它会读取源语言。 Sisulizer 遍历文件中的每个 &amp;lt;trans-unit&amp;gt; 元素并将 &amp;lt;source&amp;gt; 元素数据提取到项目中。</target>
        </trans-unit>
        <trans-unit>
          <source>You can easily make your own module if needed for your own components or 3rd party components that you use. See the source code of existing modules to learn how to write them. If you create your own module you have to register it. Call LaModules.Register function in LaModule.pas. A good place for that is the initialization part of the module unit.</source>
          <target>如果您自己的组件或您使用的 3rd 方组件需要，您可以轻松地制作自己的模块。查看现有模块的源代码以了解如何编写它们。如果您创建自己的模块，则必须注册它。在 LaModule.pas 中调用 LaModules.Register 函数。一个很好的地方是模块单元的初始化部分。</target>
        </trans-unit>
        <trans-unit>
          <source>Use the directory combo box on the upper side of the dialog to select the directory where the file(s) is located.</source>
          <target>使用对话框上方的目录组合框选择文件所在的目录。</target>
        </trans-unit>
        <trans-unit>
          <source>xml:lang attribute is not set.</source>
          <target>未设置 xml:lang 属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the location of the custom dictionary. Possible values are:</source>
          <target>指定自定义词典的位置。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>There are three kind of tags. They are:</source>
          <target>共有三种标签。他们是：</target>
        </trans-unit>
        <trans-unit>
          <source>Export Wizard exports data from a Sisulizer project or from translation memory. Wizard consists of the following steps:</source>
          <target>导出向导从 Sisulizer 项目或翻译记忆库导出数据。向导包括以下步骤：</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the J2ME emulator application executable file name.</source>
          <target>指定 J2ME 模拟器应用程序可执行文件名。</target>
        </trans-unit>
        <trans-unit>
          <source>de</source>
          <target>de</target>
        </trans-unit>
        <trans-unit>
          <source>Name and email of the translator.</source>
          <target>译员的姓名和电子邮件。</target>
        </trans-unit>
        <trans-unit>
          <source>Let&#x27;s have a example. We have a label on a form that has value &amp;quot;One&amp;quot;. The sheet contains the following row.</source>
          <target>让我们举个例子。我们在表单上有一个值为“One”的标签。该工作表包含以下行。</target>
        </trans-unit>
        <trans-unit>
          <source>Localize all but excluded</source>
          <target>本地化所有但排除的</target>
        </trans-unit>
        <trans-unit>
          <source>Click &lt;em&gt;Remove All&lt;/em&gt; to remove all custom items from the system language tree.</source>
          <target>单击&lt;em&gt;全部删除&lt;/em&gt;以从系统语言树中删除所有自定义项。</target>
        </trans-unit>
        <trans-unit>
          <source>Where &amp;lt;tasks&amp;gt;  contains one or more tasks and their options. Possible tasks are:</source>
          <target>其中 &amp;lt;tasks&amp;gt; 包含一项或多项任务及其选项。可能的任务是：</target>
        </trans-unit>
        <trans-unit>
          <source>Read more about &lt;a href=&quot;VclStrings.htm&quot;&gt;strings in VCL&lt;/a&gt;.</source>
          <target>阅读有关&lt;a href=&quot;VclStrings.htm&quot;&gt;VCL 中字符串的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;a href=&quot;http://en.wikipedia.org/wiki/ISO-639&quot; target=&quot;_blank&quot;&gt;ISO-639&lt;/a&gt; language code. This is two or three characters. Most languages use two characters code.</source>
          <target>&lt;a href=&quot;http://en.wikipedia.org/wiki/ISO-639&quot; target=&quot;_blank&quot;&gt;ISO-639&lt;/a&gt;语言代码。这是两三个字符。大多数语言使用两个字符的代码。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the language names.</source>
          <target>使用此表指定语言名称。</target>
        </trans-unit>
        <trans-unit>
          <source>Tags apply range</source>
          <target>标签适用范围</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to set the general options.</source>
          <target>使用此表设置常规选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Clear all changes status of every row in the project.</source>
          <target>清除项目中每一行的所有更改状态。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked inherited forms are show as sub nodes of the parent node in the project tree.</source>
          <target>如果选中的继承形式在项目树中显示为父节点的子节点。</target>
        </trans-unit>
        <trans-unit>
          <source>Item contains text value. This is either localized or imported depending on the purpose of the text definition.</source>
          <target>项目包含文本值。根据文本定义的目的，这是本地化的还是导入的。</target>
        </trans-unit>
        <trans-unit>
          <source>If you use FireMonkey and you localize also your Mac file you &lt;strong&gt;must&lt;/strong&gt; use DRC files. You need to specify both the Windows and Mac DRC file in the source options. Learn more about &lt;a href=&quot;MacLocalization.htm&quot;&gt;Mac localization&lt;/a&gt;.</source>
          <target>如果您使用 FireMonkey 并且您还本地化了您的 Mac 文件，则您&lt;strong&gt;必须&lt;/strong&gt;使用 DRC 文件。您需要在源选项中指定 Windows 和 Mac DRC 文件。了解有关&lt;a href=&quot;MacLocalization.htm&quot;&gt;Mac 本地化的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>XML file (.xml)</source>
          <target>XML 文件 (.xml)</target>
        </trans-unit>
        <trans-unit>
          <source>By default Sisulizer creates the output files into the default locations. If your platform requires a specific location then Sisulizer uses it. For example .NET resource files must have filename-&lt;em&gt;language&lt;/em&gt;.resx and .NET satellite assembly files must have &lt;em&gt;language&lt;/em&gt;\&lt;em&gt;filename&lt;/em&gt;.resources.dll. If your platform does not have a specific location (e.g. Visual C++) then Sisulizer uses default Sisulizer convention that creates language specific sub directories into the directory where the original file is located and creates output files into sub directories. You can change both the output directory and the output file name by using the File sheet of the source dialog. Right click the original file in the left side project three and choose Properties. Choose File sheet. The sheet contains the original file, output directory and output files.</source>
          <target>默认情况下，Sisulizer 在默认位置创建输出文件。如果您的平台需要特定位置，则 Sisulizer 会使用它。例如，.NET 资源文件必须具有 filename- &lt;em&gt;language&lt;/em&gt; .resx，并且 .NET 附属程序集文件必须具有&lt;em&gt;language&lt;/em&gt; \ &lt;em&gt;filename&lt;/em&gt; .resources.dll。如果您的平台没有特定位置（例如 Visual C++），则 Sisulizer 使用默认的 Sisulizer 约定，在原始文件所在的目录中创建特定于语言的子目录，并将输出文件创建到子目录中。您可以使用源对话框的文件表更改输出目录和输出文件名。右键单击左侧项目三中的原始文件，然后选择属性。选择文件表。该工作表包含原始文件、输出目录和输出文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Localization method</source>
          <target>定位方法</target>
        </trans-unit>
        <trans-unit>
          <source>Check &lt;em&gt;Negate the duplicates filter&lt;/em&gt; if you want to have a negate of the above duplicates settings.</source>
          <target>如果您想要否定上述重复项设置，请选中否定&lt;em&gt;重复项过滤器&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>script</source>
          <target>脚本</target>
        </trans-unit>
        <trans-unit>
          <source>Polar dictionary. These files are &lt;a href=&quot;InstallPolar.htm&quot;&gt;installed&lt;/a&gt; by Sisulizer setup.</source>
          <target>极地词典。这些文件由 Sisulizer 安装&lt;a href=&quot;InstallPolar.htm&quot;&gt;程序&lt;/a&gt;安装。</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;lt;Label&amp;gt;This    is    a     sample  text.&amp;lt;/Label&amp;gt; </source>
          <target>&amp;lt;Label&amp;gt;这是一个示例文本。&amp;lt;/Label&amp;gt;</target>
        </trans-unit>
        <trans-unit>
          <source>Original has period but translation does not have.</source>
          <target>原文有句号，但译文没有。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the default input method. Sisulizer turns this input method on when the user selects a cell of this language. This is visible only if the language use input method editor (e.g. Chinese, Korean or Japanese).</source>
          <target>指定默认输入法。当用户选择此语言的单元格时，Sisulizer 会打开此输入法。这仅在语言使用输入法编辑器（例如中文、韩文或日文）时可见。</target>
        </trans-unit>
        <trans-unit>
          <source>Preview windows</source>
          <target>预览窗口</target>
        </trans-unit>
        <trans-unit>
          <source>Project Wizard creates a new Sisulizer project. The Wizard consists of the following steps:</source>
          <target>项目向导创建一个新的 Sisulizer 项目。向导包括以下步骤：</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies what part of the &lt;a href=&quot;SalesForceLocalization.htm&quot;&gt;Salesforce translation&lt;/a&gt; file are localized.</source>
          <target>指定&lt;a href=&quot;SalesForceLocalization.htm&quot;&gt;Salesforce 翻译&lt;/a&gt;文件的哪一部分已本地化。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;strong&gt;Note!&lt;/strong&gt; This will overwrite existing translations with those in the localized file.</source>
          <target>&lt;strong&gt;笔记！&lt;/strong&gt;这将使用本地化文件中的翻译覆盖现有翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Target language</source>
          <target>目标语言</target>
        </trans-unit>
        <trans-unit>
          <source>Class path</source>
          <target>类路径</target>
        </trans-unit>
        <trans-unit>
          <source>Enter the &lt;a href=&quot;Segmentation.htm&quot;&gt;regular expression&lt;/a&gt; specifying the string before the break or exception.</source>
          <target>输入指定中断或异常之前的字符串的&lt;a href=&quot;Segmentation.htm&quot;&gt;正则表达式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Sets the maximum length for imported strings. If a string is longer than that it will not be imported. If the value is 0 all string are imported.</source>
          <target>设置导入字符串的最大长度。如果一个字符串比它长，它将不会被导入。如果值为 0，则导入所有字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>If you existing translations are on some other locations or files you have to manually import the translations by using &lt;a href=&quot;FileImportMenu.htm&quot;&gt;File | Import&lt;/a&gt; or Column | Import menus.</source>
          <target>如果您现有的翻译位于其他位置或文件，则必须使用&lt;a href=&quot;FileImportMenu.htm&quot;&gt;File |&lt;/a&gt;手动导入翻译&lt;a href=&quot;FileImportMenu.htm&quot;&gt;。导入&lt;/a&gt;或列 |导入菜单。</target>
        </trans-unit>
        <trans-unit>
          <source>Send original project file to translator</source>
          <target>将原始项目文件发送给翻译人员</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer&#x27;s Text\Guiliani directory contains Guiliani samples.</source>
          <target>Sisulizer 的 Text\Guiliani 目录包含 Guiliani 示例。</target>
        </trans-unit>
        <trans-unit>
          <source>You can download HTML Help Workshop from &lt;a href=&quot;http://www.sisulizer.com/downloads.shtml&quot; target=&quot;_blank&quot;&gt;http://www.sisulizer.com/downloads.shtml&lt;/a&gt;.</source>
          <target>您可以从&lt;a href=&quot;http://www.sisulizer.com/downloads.shtml&quot; target=&quot;_blank&quot;&gt;http://www.sisulizer.com/downloads.shtml&lt;/a&gt;下载 HTML Help Workshop。</target>
        </trans-unit>
        <trans-unit>
          <source>If &lt;em&gt;Emulation&lt;/em&gt; is selected then &lt;em&gt;Set predefined configuration&lt;/em&gt; combo box will be visible. Use it to quickly set pseudo settings into one of the predefined values.</source>
          <target>如果选择&lt;em&gt;仿真&lt;/em&gt;，则&lt;em&gt;设置预定义配置&lt;/em&gt;组合框将可见。使用它可以快速将伪设置设置为预定义值之一。</target>
        </trans-unit>
        <trans-unit>
          <source>32-bit resource DLL filename</source>
          <target>32 位资源 DLL 文件名</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer uses the value of msgstr as original value instead of the value of msgid.</source>
          <target>如果勾选 Sisulizer 使用 msgstr 的值作为原始值而不是 msgid 的值。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the library file that contains the spell checker engine. Type a file name or click ... to browse a library file.</source>
          <target>指定包含拼写检查引擎的库文件。键入文件名或单击 ... 以浏览库文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Properties sheet contains property list. The purpose of the list is to either include or exclude localization of certain properties no matter what is the component where they belong to.</source>
          <target>属性表包含属性列表。该列表的目的是包括或排除某些属性的本地化，无论它们属于什么组件。</target>
        </trans-unit>
        <trans-unit>
          <source>Ignoring words</source>
          <target>忽略单词</target>
        </trans-unit>
        <trans-unit>
          <source>ReportBuilder file</source>
          <target>报表生成器文件</target>
        </trans-unit>
        <trans-unit>
          <source>Speficies the 64-bit resource only DLL file that is used basic for the localized resource DLLs. If this is left empty the built-in resource file is used.</source>
          <target>指定用于本地化资源 DLL 的基本 64 位纯资源 DLL 文件。如果将其留空，则使用内置资源文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Copyright message of the assembly</source>
          <target>大会版权信息</target>
        </trans-unit>
        <trans-unit>
          <source>In this sample start comment string is &amp;quot;/*&amp;quot; and end comment string is &amp;quot;*/&amp;quot;.</source>
          <target>在这个示例中，开始注释字符串是“/*”，结束注释字符串是“*/”。</target>
        </trans-unit>
        <trans-unit>
          <source>The first one is to &lt;a href=&quot;ExcludeResourceTypes.htm&quot;&gt;exclude the resource type&lt;/a&gt;. This is not available on all source types.</source>
          <target>第一个是&lt;a href=&quot;ExcludeResourceTypes.htm&quot;&gt;排除资源类型&lt;/a&gt;。这并非适用于所有源类型。</target>
        </trans-unit>
        <trans-unit>
          <source>Installing into removable drive</source>
          <target>安装到可移动驱动器</target>
        </trans-unit>
        <trans-unit>
          <source>Variable is replaced with the relative directory to the source file including the last backslash.&lt;br&gt;
      If the source file is</source>
          <target>变量被替换为源文件的相对目录，包括最后一个反斜杠。&lt;br&gt;如果源文件是</target>
        </trans-unit>
        <trans-unit>
          <source>Expand characters</source>
          <target>展开字符</target>
        </trans-unit>
        <trans-unit>
          <source>Zoom out</source>
          <target>缩小</target>
        </trans-unit>
        <trans-unit>
          <source>Create backup project file</source>
          <target>创建备份项目文件</target>
        </trans-unit>
        <trans-unit>
          <source>Translates properties whose type is TTntStrings or derived.</source>
          <target>翻译类型为 TTntStrings 或派生的属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be a &lt;a href=&quot;WindowsLocalization.htm#Binary&quot;&gt;Windows binary file&lt;/a&gt; created by Delphi WIN32 compiler (e.g. C:\Samples\Project1.exe).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是由 Delphi WIN32 编译器创建的&lt;a href=&quot;WindowsLocalization.htm#Binary&quot;&gt;Windows 二进制文件&lt;/a&gt;（例如 C:\Samples\Project1.exe）。</target>
        </trans-unit>
        <trans-unit>
          <source>Field type</source>
          <target>字段类型</target>
        </trans-unit>
        <trans-unit>
          <source>List of files that are not localized</source>
          <target>未本地化的文件列表</target>
        </trans-unit>
        <trans-unit>
          <source>Imports data from a TMX file</source>
          <target>从 TMX 文件导入数据</target>
        </trans-unit>
        <trans-unit>
          <source>Lines up the selected components equidistant from each other</source>
          <target>将选定的组件排列成等距</target>
        </trans-unit>
        <trans-unit>
          <source>Possible encoding methods are:</source>
          <target>可能的编码方法有：</target>
        </trans-unit>
        <trans-unit>
          <source>Delete localized .resx files after the build process</source>
          <target>在构建过程后删除本地化的 .resx 文件</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the name of the spell checker. Each spell checker must have a unique name. The name is used to make difference between two or more spell checkers having the language.</source>
          <target>指定拼写检查器的名称。每个拼写检查器必须有一个唯一的名称。该名称用于区分具有该语言的两个或多个拼写检查器。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked and the localized text is longer or taller than the original text Sisulizer grows the width and height of the controls such way that the whole text fits into the control.</source>
          <target>如果选中并且本地化的文本比原始文本长或高，Sisulizer 会增加控件的宽度和高度，使整个文本适合控件。</target>
        </trans-unit>
        <trans-unit>
          <source>report</source>
          <target>报告</target>
        </trans-unit>
        <trans-unit>
          <source>\ character</source>
          <target>\ 特点</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies how context value is generated. Possible values are:</source>
          <target>指定如何生成上下文值。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>A field that can be an id field but has not been marked as an id field. Only one of the possible id fields can be marked as id field.</source>
          <target>可以是 id 字段但尚未标记为 id 字段的字段。只有一个可能的 id 字段可以标记为 id 字段。</target>
        </trans-unit>
        <trans-unit>
          <source>Languages and Items</source>
          <target>语言和项目</target>
        </trans-unit>
        <trans-unit>
          <source>Totally resized control</source>
          <target>完全调整大小的控件</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;HtmlLocalization.htm&quot;&gt;HTML file or files are localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;HtmlLocalization.htm&quot;&gt;HTML 文件的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>By data definition</source>
          <target>按数据定义</target>
        </trans-unit>
        <trans-unit>
          <source>Set status to</source>
          <target>将状态设置为</target>
        </trans-unit>
        <trans-unit>
          <source>Fonts are essential part of localization. Sisulizer makes font localization easy. Basically you have four choices in font localization:</source>
          <target>字体是本地化的重要组成部分。 Sisulizer 使字体本地化变得容易。基本上你有四种字体本地化选择：</target>
        </trans-unit>
        <trans-unit>
          <source>The current user&#x27;s default UI language, as returned from the GetUserDefaultUILanguage() Win32 API. (Windows 2000 or later only)</source>
          <target>当前用户的默认 UI 语言，从 GetUserDefaultUILanguage() Win32 API 返回。 （仅限 Windows 2000 或更高版本）</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can open following file formats:</source>
          <target>Sisulizer 可以打开以下文件格式：</target>
        </trans-unit>
        <trans-unit>
          <source>Remove white spaces</source>
          <target>删除空格</target>
        </trans-unit>
        <trans-unit>
          <source>Original value</source>
          <target>原值</target>
        </trans-unit>
        <trans-unit>
          <source>Warnings should be taken seriously.</source>
          <target>警告应该被认真对待。</target>
        </trans-unit>
        <trans-unit>
          <source>Invalid amount of new lines</source>
          <target>新行数无效</target>
        </trans-unit>
        <trans-unit>
          <source>Expands all sub nodes of the selected node.</source>
          <target>展开选定节点的所有子节点。</target>
        </trans-unit>
        <trans-unit>
          <source>Create a project report</source>
          <target>创建项目报告</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks if a component has been moved from it&#x27;s original position.</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查组件是否已从其原始位置移动。</target>
        </trans-unit>
        <trans-unit>
          <source>Yes if project localization is used</source>
          <target>是，如果使用项目本地化</target>
        </trans-unit>
        <trans-unit>
          <source>Import maximum string length value</source>
          <target>导入最大字符串长度值</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;QtLocalization.htm&quot;&gt;Qt project file is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;QtLocalization.htm&quot;&gt;Qt 项目文件的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Remove the selected item from the list but does not delete the project file.</source>
          <target>从列表中删除所选项目但不删除项目文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Easiest and recommended way is to send the original Sisulizer project file (.slp) to the translator. The file contains all the information needed to translate your project.</source>
          <target>最简单且推荐的方法是将原始 Sisulizer 项目文件 (.slp) 发送给翻译人员。该文件包含翻译项目所需的所有信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the header file</source>
          <target>指定头文件</target>
        </trans-unit>
        <trans-unit>
          <source>If checked control characters (e.g. characters whose ASCII value is less than32) are added to the above exclude list when processing strings.</source>
          <target>如果在处理字符串时将选中的控制字符（例如ASCII 值小于32 的字符）添加到上述排除列表中。</target>
        </trans-unit>
        <trans-unit>
          <source>Undoes the last action.</source>
          <target>撤消最后一个动作。</target>
        </trans-unit>
        <trans-unit>
          <source>Add all strings of your Flash document to a string panel. This makes Flash to put the strings to the language file(s).</source>
          <target>将 Flash 文档的所有字符串添加到字符串面板。这使得 Flash 将字符串放入语言文件中。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the localized resource data of selected node in a text format.</source>
          <target>以文本格式显示选定节点的本地化资源数据。</target>
        </trans-unit>
        <trans-unit>
          <source>All matching files in the directory must have similar structure</source>
          <target>目录中所有匹配的文件必须具有相似的结构</target>
        </trans-unit>
        <trans-unit>
          <source>Map unknown components by keywords</source>
          <target>通过关键字映射未知组件</target>
        </trans-unit>
        <trans-unit>
          <source>If our application is D:\Src\Delphi\Simple\Project1.exe, then VCL finds that FI extension should be use. It is going to look for D:\Src\Delphi\Simple\Project1.FI file (this file is a resource DLL even then file extension is not DLL). If resource DLL is found then VCL uses resource from that file.</source>
          <target>如果我们的应用程序是 D:\Src\Delphi\Simple\Project1.exe，那么 VCL 发现应该使用 FI 扩展名。它将寻找 D:\Src\Delphi\Simple\Project1.FI 文件（即使文件扩展名不是 DLL，该文件也是资源 DLL）。如果找到资源 DLL，则 VCL 使用该文件中的资源。</target>
        </trans-unit>
        <trans-unit>
          <source>Imports data from a Multilizer project file (.mpr or .m7p).</source>
          <target>从 Multilizer 项目文件（.mpr 或 .m7p）导入数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Add unused strings to the translation memory</source>
          <target>将未使用的字符串添加到翻译记忆库</target>
        </trans-unit>
        <trans-unit>
          <source>This works out of the box.</source>
          <target>这是开箱即用的。</target>
        </trans-unit>
        <trans-unit>
          <source>A field that has been marked to be a language id field. This field is used in row localization method to identify the language of the row.</source>
          <target>已标记为语言 ID 字段的字段。该字段在行本地化方法中用于标识行的语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Specified the key file that is used to give assembly a strong name.</source>
          <target>指定用于为程序集提供强名称的密钥文件。</target>
        </trans-unit>
        <trans-unit>
          <source>An empty string is always written even if there is a translation value.</source>
          <target>即使存在翻译值，也始终写入空字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Now the database has placeholders for German and Japanese localization. Unlike in row localization you have to change the table structure every time you add a new language.</source>
          <target>现在，数据库具有用于德语和日语本地化的占位符。与行本地化不同，每次添加新语言时都必须更改表结构。</target>
        </trans-unit>
        <trans-unit>
          <source>Filter all rows having &amp;quot;...&amp;quot;</source>
          <target>过滤所有带有“...”的行</target>
        </trans-unit>
        <trans-unit>
          <source>Default custom dictionary location</source>
          <target>默认自定义词典位置</target>
        </trans-unit>
        <trans-unit>
          <source>Character set</source>
          <target>字符集</target>
        </trans-unit>
        <trans-unit>
          <source>The biggest problem of multilingual .exe is that the developer or the end user has no easy way to control what language resource to use. Windows operating system makes the choice. Unfortunately there is no single method how operating system makes this choice. The method depends on the operating system. In Windows 2000 and later the language is always the same as the language of the operating system itself. In Windows NT the language matching the International settings in the Control Panel will be used. 95/98/ME works like 2000 and later.</source>
          <target>多语言 .exe 的最大问题是开发人员或最终用户没有简单的方法来控制使用哪种语言资源。 Windows 操作系统做出了选择。不幸的是，操作系统如何做出这种选择并没有单一的方法。该方法取决于操作系统。在 Windows 2000 和更高版本中，语言始终与操作系统本身的语言相同。在 Windows NT 中，将使用与控制面板中的国际设置匹配的语言。 95/98/ME 的工作方式与 2000 及更高版本类似。</target>
        </trans-unit>
        <trans-unit>
          <source>Add context value after translation</source>
          <target>翻译后添加上下文值</target>
        </trans-unit>
        <trans-unit>
          <source>Language id case</source>
          <target>语言 ID 大小写</target>
        </trans-unit>
        <trans-unit>
          <source>Simplified and traditional Chinese mixed</source>
          <target>简繁体混合</target>
        </trans-unit>
        <trans-unit>
          <source>/* First line
   Second line */</source>
          <target>/* 第一行 第二行 */</target>
        </trans-unit>
        <trans-unit>
          <source>When there is not translation</source>
          <target>没有翻译的时候</target>
        </trans-unit>
        <trans-unit>
          <source>Case sensitive</source>
          <target>区分大小写</target>
        </trans-unit>
        <trans-unit>
          <source>Any string that describes the variant. This is optional.</source>
          <target>任何描述变体的字符串。这是可选的。</target>
        </trans-unit>
        <trans-unit>
          <source>Show as Text | Compare</source>
          <target>显示为文本 |相比</target>
        </trans-unit>
        <trans-unit>
          <source>XML localization is very simple in Sisulizer because it is visual and safe. You just select what tags you want to localize. Sisulizer extracts the visual XML data and adds the translated tags to the project. When creating localized file Sisulizer creates an identical copy of the original XML file except it contains the selected tags in the target language.</source>
          <target>XML 本地化在 Sisulizer 中非常简单，因为它是可视化和安全的。您只需选择要本地化的标签。 Sisulizer 提取可视化 XML 数据并将翻译后的标签添加到项目中。创建本地化文件时，Sisulizer 会创建原始 XML 文件的相同副本，但它包含目标语言中的选定标签。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;File extensions&lt;/em&gt; edit contains the file extensions that use the defined binary format. If you give more that one extension separate them with semicolon (;).</source>
          <target>&lt;em&gt;文件扩展名&lt;/em&gt;编辑包含使用定义的二进制格式的文件扩展名。如果您提供更多的扩展名，则用分号 (;) 将它们分开。</target>
        </trans-unit>
        <trans-unit>
          <source>Low priority. Node is not validated along other nodes.</source>
          <target>低优先级。节点未沿其他节点进行验证。</target>
        </trans-unit>
        <trans-unit>
          <source>Row menu</source>
          <target>行菜单</target>
        </trans-unit>
        <trans-unit>
          <source>A field that has been marked to be localized. This is used in the row and cloning localization methods to mark those fields that should be localized.</source>
          <target>已标记为本地化的字段。这用于行和克隆本地化方法来标记那些应该本地化的字段。</target>
        </trans-unit>
        <trans-unit>
          <source>To configure the output name and location right click the source name on the project tree and choose Properties. Check &lt;em&gt;Localized files&lt;/em&gt; check box to make Sisulizer creating localized files. You can change the directory, file name and file extension naming convention by changing the value in the combo box below the check box. &lt;em&gt;Output directory&lt;/em&gt; specifies the root directory where the localized files are written. By default it is the directory of the original file.</source>
          <target>要配置输出名称和位置，请右键单击项目树上的源名称并选择“属性”。选中&lt;em&gt;Localized files&lt;/em&gt;复选框以使 Sisulizer 创建本地化文件。您可以通过更改复选框下方组合框中的值来更改目录、文件名和文件扩展名命名约定。&lt;em&gt;输出目录&lt;/em&gt;指定写入本地化文件的根目录。默认情况下它是原始文件的目录。</target>
        </trans-unit>
        <trans-unit>
          <source>Read more about &lt;a href=&quot;NetLocalization.htm#xUid&quot;&gt;WPF localization&lt;/a&gt;.</source>
          <target>阅读有关&lt;a href=&quot;NetLocalization.htm#xUid&quot;&gt;WPF 本地化的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the ISO-639 language code.</source>
          <target>指定 ISO-639 语言代码。</target>
        </trans-unit>
        <trans-unit>
          <source>You can add custom items to Sisulizer&#x27;s language list. A custom item is either a custom language, custom country or custom variant. By default Sisulizer contains all the languages, countries and variants of the Windows version that you are using plus all the languages, countries and variants of the that Windows version that was most recent when your Sisulizer build was compiled.</source>
          <target>您可以将自定义项目添加到 Sisulizer 的语言列表中。自定义项目是自定义语言、自定义国家/地区或自定义变体。默认情况下，Sisulizer 包含您正在使用的 Windows 版本的所有语言、国家和变体，以及编译您的 Sisulizer 版本时最新的 Windows 版本的所有语言、国家和变体。</target>
        </trans-unit>
        <trans-unit>
          <source>Use the Edit menu to edit translations.</source>
          <target>使用编辑菜单编辑翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this source type when you want to localize several files and they locate in a same directory or its sub directories. The different between this source type and the single file source type is that single file source contains a specific file name (e.g. C:\MyFiles\Sample.htm) but this source type contains a wild card file name (e.g. C:\MyFiles\*.htm). If you add new files in the directory you do not have to add those files in the Sisulizer&#x27;s project file. It is enough that you rescan the project. To create a project containing an all similar files source, start &lt;a href=&quot;ProjectWizard.htm&quot;&gt;Project Wizard&lt;/a&gt;, check &lt;em&gt;Localize all similar files in a directory&lt;/em&gt; and go hrough Project Wizard. Some sources do not accept wild cards in the file name. For example most application file sources such as Delphi source, .NET source do not accept wild cards. In these cases you have to use single file sources.</source>
          <target>当您想要本地化多个文件并且它们位于同一目录或其子目录中时，请使用此源类型。此源类型与单文件源类型的不同之处在于，单文件源包含特定文件名（例如 C:\MyFiles\Sample.htm）但此源类型包含通配符文件名（例如 C:\MyFiles\ *.htm）。如果在目录中添加新文件，则不必将这些文件添加到 Sisulizer 的项目文件中。重新扫描项目就足够了。要创建包含所有相似文件源的&lt;a href=&quot;ProjectWizard.htm&quot;&gt;项目&lt;/a&gt;，请启动&lt;a href=&quot;ProjectWizard.htm&quot;&gt;Project Wizard&lt;/a&gt; ，选中&lt;em&gt;Localize all similar files in a directory&lt;/em&gt;并通过 Project Wizard。某些来源不接受文件名中的通配符。例如，Delphi 源、.NET 源等大多数应用程序文件源不接受通配符。在这些情况下，您必须使用单个文件源。</target>
        </trans-unit>
        <trans-unit>
          <source>When modifying</source>
          <target>修改时</target>
        </trans-unit>
        <trans-unit>
          <source>Duplicate strings</source>
          <target>重复的字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can automatically remove untranslated binary resources and data types. Click &lt;em&gt;Yes&lt;/em&gt; to exclude binary resource and data types. Click &lt;em&gt;No&lt;/em&gt; to not to exclude anything.&lt;!-- #BeginLibraryItem &quot;/Library/DoNotShowAnyMore.lbi&quot; --&gt;Check &lt;em&gt;Do not show this next time&lt;/em&gt; to not to show this message any more.</source>
          <target>Sisulizer 可以自动删除未翻译的二进制资源和数据类型。单击&lt;em&gt;是以&lt;/em&gt;排除二进制资源和数据类型。单击&lt;em&gt;否&lt;/em&gt;不排除任何内容。&lt;!-- #BeginLibraryItem &quot;/Library/DoNotShowAnyMore.lbi&quot; --&gt;选中&lt;em&gt;下次&lt;/em&gt;不再显示此消息以不再显示此消息。</target>
        </trans-unit>
        <trans-unit>
          <source>How to Translate</source>
          <target>如何翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer package file</source>
          <target>Sisulizer 包文件</target>
        </trans-unit>
        <trans-unit>
          <source>Ignore lines</source>
          <target>忽略行</target>
        </trans-unit>
        <trans-unit>
          <source>Once you build the localized files Sisulizer creates three sets of output files. One set in Win32\Debug directory. This contains the 32-bit Windows files. Another set in Win64\Debug directory. This contains the 64-bit Windows files. Finally the third set in OSX32\Debug directory. This contains the Mac files.</source>
          <target>构建本地化文件后，Sisulizer 将创建三组输出文件。一组在 Win32\Debug 目录中。这包含 32 位 Windows 文件。另一个设置在 Win64\Debug 目录中。这包含 64 位 Windows 文件。最后在 OSX32\Debug 目录中设置第三个。这包含 Mac 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>All &lt;a href=&quot;AndroidLocalization.htm&quot;&gt;Android&lt;/a&gt; applications must be &lt;a href=&quot;AndroidLocalization.htm#Sign&quot;&gt;signed&lt;/a&gt; using a key. Use this sheet to configure how localized application files are signed.</source>
          <target>所有&lt;a href=&quot;AndroidLocalization.htm&quot;&gt;Android&lt;/a&gt;应用程序都必须使用密钥进行&lt;a href=&quot;AndroidLocalization.htm#Sign&quot;&gt;签名&lt;/a&gt;。使用此表配置本地化应用程序文件的签名方式。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer sets the translation date to current date even if the translation is a &lt;a href=&quot;PseudoTranslation.htm&quot;&gt;pseudo translation&lt;/a&gt;.</source>
          <target>如果选中 Sisulizer 将翻译日期设置为当前日期，即使翻译是&lt;a href=&quot;PseudoTranslation.htm&quot;&gt;伪翻译&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>SDK directory</source>
          <target>SDK目录</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the options for writing error text in the log. Check &lt;em&gt;Write detailed error output returned by build tools&lt;/em&gt; check box to write detailed error text returned by build tools. By default when writing detailed error text into the log one error case contains several lines of text. If you want Sisulizer to write complete error text into single log line check &lt;em&gt;Write error output into single log line&lt;/em&gt; check box. If you want to limit the size of the single error text check  &lt;em&gt;Limit error output length&lt;/em&gt; check box and specify the maximum error text length in the edit box.</source>
          <target>指定在日志中写入错误文本的选项。选中&lt;em&gt;写入构建工具返回的详细错误输出&lt;/em&gt;复选框以写入构建工具返回的详细错误文本。默认情况下，将详细的错误文本写入日志时，一个错误案例包含多行文本。如果您希望 Sisulizer 将完整的错误文本写入单个日志行，请选中&lt;em&gt;将错误输出写入单个日志行&lt;/em&gt;复选框。如果要限制单个错误文本的大小，请选中&lt;em&gt;限制错误输出长度&lt;/em&gt;复选框并在编辑框中指定最大错误文本长度。</target>
        </trans-unit>
        <trans-unit>
          <source>XAML or BAML (binary XAML) resource data. 
      This is available only in WPF and Silverlight projects.</source>
          <target>XAML 或 BAML（二进制 XAML）资源数据。这仅在 WPF 和 Silverlight 项目中可用。</target>
        </trans-unit>
        <trans-unit>
          <source>Do not use segmentation</source>
          <target>不要使用分段</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be a &lt;a href=&quot;NetLocalization.htm#Project&quot;&gt;CodeGear/Borland project file&lt;/a&gt; (e.g. C:\Samples\Project.bdsproj).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是&lt;a href=&quot;NetLocalization.htm#Project&quot;&gt;CodeGear/Borland 项目文件&lt;/a&gt;（例如 C:\Samples\Project.bdsproj）。</target>
        </trans-unit>
        <trans-unit>
          <source>Archive files</source>
          <target>存档文件</target>
        </trans-unit>
        <trans-unit>
          <source>Turn off automatic satellite assembly creation in your Sisulizer project</source>
          <target>在您的 Sisulizer 项目中关闭自动卫星程序集创建</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Mark long translations&lt;/em&gt; if checked marks long translations with read color. More longer the transalation is compared to the original length more deeper red color is used.</source>
          <target>如果选中标记与读取的彩色长翻译&lt;em&gt;标志着长翻译&lt;/em&gt;。与原始长度相比，翻译越长，使用的红色越深。</target>
        </trans-unit>
        <trans-unit>
          <source>Add language part into name of localized resources</source>
          <target>将语言部分添加到本地化资源的名称中</target>
        </trans-unit>
        <trans-unit>
          <source>You can make Sisulizer to automatically import translations from output files. These files are the files that Sisulizer creates on build process. Notrmally there is not point to perform this because the project already contains same translations as the localized output files. However if you use some extenal file (such as Visual Studio) to edit the output file you can automatically import changes to your project. Choose &lt;a href=&quot;ProjectImportTranslationsFromLocalizedFilesMenu.htm&quot;&gt;Project | Import translations from localized files&lt;/a&gt; to import translations from localized files.</source>
          <target>您可以使 Sisulizer 自动从输出文件导入翻译。这些文件是 Sisulizer 在构建过程中创建的文件。通常没有必要执行此操作，因为项目已经包含与本地化输出文件相同的翻译。但是，如果您使用一些外部文件（例如 Visual Studio）来编辑输出文件，您可以自动将更改导入到您的项目中。选择&lt;a href=&quot;ProjectImportTranslationsFromLocalizedFilesMenu.htm&quot;&gt;项目 |从本地化文件导入翻译以从本地化文件&lt;/a&gt;导入翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>using System.Globalization;
using System.Threading;

public partial class App : Application
{
  // Add these lines of code
  public App()
  {
      Thread.CurrentThread.CurrentUICulture = CultureInfo.CurrentCulture;
  }
}</source>
          <target>使用 System.Globalization；使用 System.Threading; public partial class App : Application { // 添加这些代码行 public App() { Thread.CurrentThread.CurrentUICulture = CultureInfo.CurrentCulture; } }</target>
        </trans-unit>
        <trans-unit>
          <source>Select the language of the string in the original field</source>
          <target>在原始字段中选择字符串的语言</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer uses &lt;a href=&quot;QtLocalization.htm&quot;&gt;traditional non-visual Qt localization method&lt;/a&gt;. This is default.</source>
          <target>Sisulizer 使用&lt;a href=&quot;QtLocalization.htm&quot;&gt;传统的非可视化 Qt 定位方法&lt;/a&gt;。这是默认设置。</target>
        </trans-unit>
        <trans-unit>
          <source>Project | Import translations from localized files | Import by value, do not change existing translations</source>
          <target>项目 |从本地化文件导入翻译 |按值导入，不更改现有翻译</target>
        </trans-unit>
        <trans-unit>
          <source>When Sisulizer creates multilingual application of library file it can ether keep the original resource files, modify them, or completely remove them. The action depends on the type of the source file and the settings of the source. PE files created by Delphi or C++Builder (later VCL-PE) has neutral language id in their resources. PE files created by Visual Studio or Visual Basic (later MS-PE) has a language id in their resources.</source>
          <target>Sisulizer 创建库文件的多语言应用程序时，它可以保留原始资源文件、修改它们或完全删除它们。操作取决于源文件的类型和源的设置。由 Delphi 或 C++Builder（后来的 VCL-PE）创建的 PE 文件在其资源中具有中性语言 ID。由 Visual Studio 或 Visual Basic（后来的 MS-PE）创建的 PE 文件在其资源中具有语言 ID。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to configure &lt;a href=&quot;SpellChecking.htm&quot;&gt;spell and grammar checking&lt;/a&gt;. This sheet contains list of installed spell and grammar checkers. If you want to disable spell checking uncheck &lt;em&gt;Use spell checking&lt;/em&gt; check box.</source>
          <target>使用此表配置&lt;a href=&quot;SpellChecking.htm&quot;&gt;拼写和语法检查&lt;/a&gt;。此表包含已安装的拼写和语法检查器列表。如果要禁用拼写检查，请取消选中&lt;em&gt;使用拼写检查&lt;/em&gt;复选框。</target>
        </trans-unit>
        <trans-unit>
          <source>The content of Vehicle.xml is:</source>
          <target>Vehicle.xml 的内容为：</target>
        </trans-unit>
        <trans-unit>
          <source>Extended data</source>
          <target>扩展数据</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies how translation value is written. Possible values are:</source>
          <target>指定如何写入翻译值。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>If &lt;em&gt;File entities&lt;/em&gt; is unchecked Sisulizer does not decode the string but leaves it as it is. For example the above sample will be read as will be read as &amp;quot;&amp;amp;sports;&amp;quot;.</source>
          <target>如果未选中&lt;em&gt;文件实体，&lt;/em&gt;则 Sisulizer 不会解码字符串而是保持原样。例如，上面的示例将被读取为“&amp;amp;sports;”。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked and original CHM file uses binary index then Sisulizer creates binary index to localized CHM files only if the code page of the target CHM and the current system match.If code pages do not match then the localized CHM file does not use binary index. This option is because HTML Help compiler can not create correct index data if there is no code page match. &lt;a href=&quot;ChmCompilationCodePage.htm&quot;&gt;Learn more&lt;/a&gt; about this.</source>
          <target>如果选中且原始 CHM 文件使用二进制索引，则仅当目标 CHM 的代码页与当前系统匹配时，Sisulizer 才会为本地化 CHM 文件创建二进制索引。如果代码页不匹配，则本地化 CHM 文件不使用二进制索引。此选项是因为如果没有代码页匹配，HTML 帮助编译器将无法创建正确的索引数据。&lt;a href=&quot;ChmCompilationCodePage.htm&quot;&gt;了解更多&lt;/a&gt;信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Keep original format</source>
          <target>保留原始格式</target>
        </trans-unit>
        <trans-unit>
          <source>Start Sisulizer and choose &lt;a href=&quot;FileOpenMenu.htm&quot;&gt;File | Open&lt;/a&gt; to open the Multilizer project.</source>
          <target>启动 Sisulizer 并选择&lt;a href=&quot;FileOpenMenu.htm&quot;&gt;File |打开&lt;/a&gt;以打开 Multilizer 项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Spell checker files</source>
          <target>拼写检查文件</target>
        </trans-unit>
        <trans-unit>
          <source>Replace the &lt;em&gt;text&lt;/em&gt; in the template with the container name of the PFX file.</source>
          <target>将模板中的&lt;em&gt;文本&lt;/em&gt;替换为 PFX 文件的容器名称。</target>
        </trans-unit>
        <trans-unit>
          <source>The componnent has been relocated from its original position.</source>
          <target>该组件已从其原始位置重新定位。</target>
        </trans-unit>
        <trans-unit>
          <source>Localizes one database.</source>
          <target>本地化一个数据库。</target>
        </trans-unit>
        <trans-unit>
          <source>The Sisulizer component where the component class having the above tail is mapped.</source>
          <target>具有上述尾部的组件类所映射的 Sisulizer 组件。</target>
        </trans-unit>
        <trans-unit>
          <source>The image appears near the top of the button</source>
          <target>图像出现在按钮顶部附近</target>
        </trans-unit>
        <trans-unit>
          <source>If checked translation defect statuses are written to the file.</source>
          <target>如果检查的翻译缺陷状态被写入文件。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Output file type&lt;/em&gt; means the &lt;a href=&quot;DelphiSourceDialogFileSheet.htm&quot;&gt;output file kind&lt;/a&gt; you have selected. The default value is &lt;em&gt;Localized files&lt;/em&gt;.</source>
          <target>&lt;em&gt;输出文件类型&lt;/em&gt;是指您选择的&lt;a href=&quot;DelphiSourceDialogFileSheet.htm&quot;&gt;输出文件类型&lt;/a&gt;。默认值为&lt;em&gt;本地化文件&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows  strings that are not grammar  checked in the selected cell.</source>
          <target>显示所选单元格中未检查语法的字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the variant codes. The variant code contains the following properties:</source>
          <target>指定变体代码。变体代码包含以下属性：</target>
        </trans-unit>
        <trans-unit>
          <source>Group items</source>
          <target>分组项目</target>
        </trans-unit>
        <trans-unit>
          <source>Ignore words that contains numbers when performing a spell check or underlining wrong words. For example, if you select this options, the spell checker does not flag &lt;strong&gt;xdr234&lt;/strong&gt; as a mistake in &amp;quot;My license plate is &lt;strong&gt;xdr234&lt;/strong&gt;&amp;quot;.</source>
          <target>在执行拼写检查或在错误的单词下划线时忽略包含数字的单词。例如，如果您选择此选项，拼写检查器不会标记&lt;strong&gt;xdr234&lt;/strong&gt;在“我的车牌是&lt;strong&gt;xdr234”&lt;/strong&gt;一个错误。</target>
        </trans-unit>
        <trans-unit>
          <source>In many cases HTML contains paragraphs that contains several sentences. In such case Sisulizer by default breaks the paragraphs into segments. Each segment is one translation gentry and it appears on its own row. &lt;a href=&quot;Segmentation.htm&quot;&gt;Segmentation&lt;/a&gt; makes translation easier and it also makes reuse of translations much more useful.</source>
          <target>在许多情况下，HTML 包含包含多个句子的段落。在这种情况下，Sisulizer 默认将段落分成几段。每个段都是一个翻译绅士，它出现在自己的行中。&lt;a href=&quot;Segmentation.htm&quot;&gt;分割&lt;/a&gt;使翻译更容易，也使翻译的重用更加有用。</target>
        </trans-unit>
        <trans-unit>
          <source>Restore desktop</source>
          <target>恢复桌面</target>
        </trans-unit>
        <trans-unit>
          <source>Draws translated text with gray color if they are identical with original values.</source>
          <target>如果翻译文本与原始值相同，则用灰色绘制翻译文本。</target>
        </trans-unit>
        <trans-unit>
          <source>Scan server scripts</source>
          <target>扫描服务器脚本</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer uses .NET tools when scanning and building .NET files. There are two kinds of .NET tools. Some are included to .NET framework (e.g. runtime), some other are included to .NET SDK.</source>
          <target>Sisulizer 在扫描和构建 .NET 文件时使用 .NET 工具。 .NET 工具有两种。有些包含在 .NET 框架中（例如运行时），有些包含在 .NET SDK 中。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure XLIFF settings.</source>
          <target>使用此对话框配置 XLIFF 设置。</target>
        </trans-unit>
        <trans-unit>
          <source>You can filter items based on the priority of their parent node. Check those priorities that you want to be visible in the sheet.</source>
          <target>您可以根据其父节点的优先级过滤项目。检查您希望在工作表中显示的优先级。</target>
        </trans-unit>
        <trans-unit>
          <source>Inconsistent dialog filter string Validation</source>
          <target>不一致的对话框过滤器字符串验证</target>
        </trans-unit>
        <trans-unit>
          <source>and if the file to be processed is&lt;br&gt;
    &lt;code&gt;C:\MyFiles\&lt;span class=&quot;style2&quot;&gt;SubFiles\&lt;/span&gt;Sample.html&lt;/code&gt;&lt;br&gt;
    variable is replaced with</source>
          <target>如果要处理的文件是&lt;br&gt;&lt;code&gt;C:\MyFiles\ &lt;span class=&quot;style2&quot;&gt;SubFiles\&lt;/span&gt; Sample.html&lt;/code&gt;&lt;br&gt;变量被替换为</target>
        </trans-unit>
        <trans-unit>
          <source>Property name</source>
          <target>物业名称</target>
        </trans-unit>
        <trans-unit>
          <source>Horizontal scroll bars</source>
          <target>水平滚动条</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer automatically changes row status from &lt;em&gt;Changed&lt;/em&gt; to &lt;em&gt;In use&lt;/em&gt; when rescanning the project.</source>
          <target>如果选中 Sisulizer，则&lt;em&gt;在&lt;/em&gt;重新扫描项目时会自动将行状态从“&lt;em&gt;已更改”更改&lt;/em&gt;为“&lt;em&gt;正在使用&lt;/em&gt;”。</target>
        </trans-unit>
        <trans-unit>
          <source>By default the Program Files folder is read only in Vista and later. This is why Sisulizer setup installs that directory only those files that do not need to be modifies during Sisulizer usage. Files that need to be modified such as settings and translation memory files are always installed on your personal directory. For example in English Vista this is C:\Users\&amp;lt;your name&amp;gt;\Documents\Sisulizer 4. Samples files are also installed to the same personal directory. You can force Sisulizer setup to install samples files on the main installation directory but then you have to run Sisulizer as administrator in order to be able to modify those files.</source>
          <target>默认情况下，Program Files 文件夹在 Vista 及更高版本中是只读的。这就是为什么 Sisulizer 安装程序只安装那些在 Sisulizer 使用期间不需要修改的文件的原因。需要修改的文件（例如设置和翻译记忆库文件）始终安装在您的个人目录中。例如，在英语 Vista 中，这是 C:\Users\&amp;lt;您的姓名&amp;gt;\Documents\Sisulizer 4。示例文件也安装到同一个人目录中。您可以强制 Sisulizer 安装程序在主安装目录中安装示例文件，但您必须以管理员身份运行 Sisulizer 才能修改这些文件。</target>
        </trans-unit>
        <trans-unit>
          <source>If the original file does not contain this field Sisulizer adds this to the localized PO files.</source>
          <target>如果原始文件不包含此字段，Sisulizer 会将其添加到本地化的 PO 文件中。</target>
        </trans-unit>
        <trans-unit>
          <source>Ignore white spaces after the separator</source>
          <target>忽略分隔符后的空格</target>
        </trans-unit>
        <trans-unit>
          <source>Register COM object manually</source>
          <target>手动注册 COM 对象</target>
        </trans-unit>
        <trans-unit>
          <source>Other code page</source>
          <target>其他代码页</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the default value of the property. Use it if the file does not contain properties having the default value.</source>
          <target>指定属性的默认值。如果文件不包含具有默认值的属性，请使用它。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows  word that are not spell checked in the selected cell.</source>
          <target>显示所选单元格中未进行拼写检查的单词。</target>
        </trans-unit>
        <trans-unit>
          <source>You can turn this warning off. Choose &amp;quot;Tools | General...&amp;quot; and select &amp;quot;Output Messages&amp;quot; sheet.</source>
          <target>您可以关闭此警告。选择“工具|常规...”并选择“输出消息”表。</target>
        </trans-unit>
        <trans-unit>
          <source>Application tries to detect the separator character automatically on each row based on the row content.</source>
          <target>应用程序尝试根据行内容自动检测每一行的分隔符。</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file can be any  &lt;a href=&quot;JavaLocalization.htm#Resource&quot;&gt;Java resource file&lt;/a&gt; (e.g. C:\Project\Sample.properties or C:\Project\Sample.java).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件可以是任何&lt;a href=&quot;JavaLocalization.htm#Resource&quot;&gt;Java 资源文件&lt;/a&gt;（例如 C:\Project\Sample.properties 或 C:\Project\Sample.java）。</target>
        </trans-unit>
        <trans-unit>
          <source>Space equally</source>
          <target>空间均等</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to select the language column of the project where you want to import items to.</source>
          <target>使用此表选择要将项目导入到的项目的语言列。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the status value that will be the initial status of the imported strings in the translation memory.</source>
          <target>指定将成为翻译记忆库中导入字符串的初始状态的状态值。</target>
        </trans-unit>
        <trans-unit>
          <source>Choose Bring to Front to move a selected component in front of all other components on the form. This is called changing the component&#x27;s z-order.</source>
          <target>选择“置于最前面”将选定的组件移动到窗体上所有其他组件的前面。这称为更改组件的 z 顺序。</target>
        </trans-unit>
        <trans-unit>
          <source>HTML Browser parameters (after filename)</source>
          <target>HTML 浏览器参数（在文件名之后）</target>
        </trans-unit>
        <trans-unit>
          <source>Binary data can be in binary, pictute, text, HTML or XML format. When auto format is on the data stream will automatically analysed the find out the right format.</source>
          <target>二进制数据可以是二进制、图片、文本、HTML 或 XML 格式。当自动格式化时，数据流将自动分析找出正确的格式。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the status of available add-ons</source>
          <target>显示可用加载项的状态</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;SalesForceLocalization.htm&quot;&gt;Salesforce translation file is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;SalesForceLocalization.htm&quot;&gt;Salesforce 翻译文件的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>The rule specifies an exception to a break.</source>
          <target>该规则指定了中断的例外情况。</target>
        </trans-unit>
        <trans-unit>
          <source>Marked field</source>
          <target>标记字段</target>
        </trans-unit>
        <trans-unit>
          <source>Check this to localize also all matching files in sub directories of the selected directory.</source>
          <target>选中此项以本地化所选目录的子目录中的所有匹配文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Project | Import translations from localized files | Import by context, replace existing translations</source>
          <target>项目 |从本地化文件导入翻译 |按上下文导入，替换现有翻译</target>
        </trans-unit>
        <trans-unit>
          <source>You can later change this value in the source dialog by checking or unchecking &lt;em&gt;Mirror forms&lt;/em&gt; check box.</source>
          <target>您可以稍后在源对话框中通过选中或取消选中&lt;em&gt;Mirror forms&lt;/em&gt;复选框来更改此值。</target>
        </trans-unit>
        <trans-unit>
          <source>Support for Delphi XE7 and C++Builder XE7</source>
          <target>支持 Delphi XE7 和 C++Builder XE7</target>
        </trans-unit>
        <trans-unit>
          <source>Export those duplicated strings whose properties differs from the other duplicate strings. For example they might have different comment or maximum length.</source>
          <target>导出那些属性与其他重复字符串不同的重复字符串。例如，他们可能有不同的评论或最大长度。</target>
        </trans-unit>
        <trans-unit>
          <source>Strings are encoded with &lt;a href=&quot;http://en.wikipedia.org/wiki/ISO/IEC_8859&quot; target=&quot;_blank&quot;&gt;ISO code pages&lt;/a&gt;.</source>
          <target>字符串使用&lt;a href=&quot;http://en.wikipedia.org/wiki/ISO/IEC_8859&quot; target=&quot;_blank&quot;&gt;ISO 代码页&lt;/a&gt;进行编码。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify a file to be localized and the location and naming of the localized files that Sisulizer creates.</source>
          <target>使用此表指定要本地化的文件以及 Sisulizer 创建的本地化文件的位置和命名。</target>
        </trans-unit>
        <trans-unit>
          <source>Translation value</source>
          <target>翻译价值</target>
        </trans-unit>
        <trans-unit>
          <source>If checked  Sisulizer  ignores white spaces such as space, tab and new line when importing data.&lt;br&gt;
      Checking this will make import process of &lt;u&gt;large&lt;/u&gt; file much slower but on the other side it can import more strings.</source>
          <target>如果选中，Sisulizer 在导入数据时会忽略空格，制表符和换行符等空格。&lt;br&gt;检查这一点会使&lt;u&gt;大&lt;/u&gt;文件的导入过程变慢，但另一方面它可以导入更多的字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>The advantage is Sisulizer&#x27;s own translation memory is that you do not have to purchase or install expensive 3rd party translation memory. Everything that you need is in Sisulizer. The advantage of 3rd party translations memories is that they might have more features than Sisulizer&#x27;s own translation memory and if you already have data in those translations memories you can still use data from Sisulizer. Use &lt;a href=&quot;TranslationMemoryEditor.htm&quot;&gt;Translation Memory Editor&lt;/a&gt; to edit content of the translations memory.</source>
          <target>Sisulizer 自己的翻译记忆库的优点是您不必购买或安装昂贵的第 3 方翻译记忆库。您需要的一切都在 Sisulizer 中。第三方翻译记忆库的优势在于它们可能比 Sisulizer 自己的翻译记忆库具有更多的功能，如果您已经在这些翻译记忆库中有数据，您仍然可以使用来自 Sisulizer 的数据。使用&lt;a href=&quot;TranslationMemoryEditor.htm&quot;&gt;翻译记忆库编辑器&lt;/a&gt;编辑&lt;a href=&quot;TranslationMemoryEditor.htm&quot;&gt;翻译记忆库的&lt;/a&gt;内容。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;NetLocalization.htm&quot;&gt;Visual Studio .NET solution is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;NetLocalization.htm&quot;&gt;Visual Studio .NET 解决方案的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Include those items that has &lt;em&gt;Best guess&lt;/em&gt; status.</source>
          <target>包括那些具有&lt;em&gt;最佳猜测&lt;/em&gt;状态的项目。</target>
        </trans-unit>
        <trans-unit>
          <source>If you want to disable this message in the future check &lt;em&gt;Do not show this next time&lt;/em&gt; check box. Sisulizer will not show this message any more and Sisulizer will disable and hide &lt;strong&gt;all&lt;/strong&gt; those features that are not included in your edition.</source>
          <target>如果您想在以后禁用此消息，请选中&lt;em&gt;下次不再显示此&lt;/em&gt;复选框。 Sisulizer 将不再显示此消息，Sisulizer 将禁用并隐藏您的版本中未包含的&lt;strong&gt;所有&lt;/strong&gt;功能。</target>
        </trans-unit>
        <trans-unit>
          <source>You can filter items based on their data type. Check those data types that you want to be visible in the sheet.</source>
          <target>您可以根据项目的数据类型过滤项目。检查您希望在工作表中可见的那些数据类型。</target>
        </trans-unit>
        <trans-unit>
          <source>Update code page</source>
          <target>更新代码页</target>
        </trans-unit>
        <trans-unit>
          <source>There is a specific source class for each &lt;a href=&quot;SupportedFiles.htm&quot;&gt;supported file format&lt;/a&gt; and one for &lt;a href=&quot;SupportedDatabases.htm&quot;&gt;databases&lt;/a&gt;. Each source has an property editor dialog box that lets the user to configure how the source is localized. To open the property dialog box of a source right click the name of the source on the project tree and choose Properties.</source>
          <target>每种&lt;a href=&quot;SupportedFiles.htm&quot;&gt;支持的文件格式&lt;/a&gt;都有一个特定的源类，&lt;a href=&quot;SupportedDatabases.htm&quot;&gt;数据库有&lt;/a&gt;一个。每个源都有一个属性编辑器对话框，允许用户配置源的本地化方式。要打开源的属性对话框，请右键单击项目树上的源名称，然后选择“属性”。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;a href=&quot;TranslationEnginesDialogInternalTranslationMemory.htm&quot;&gt;Translation Engines dialog box&lt;/a&gt; is used to add new translation engines or to remove or configure existing ones.</source>
          <target>&lt;a href=&quot;TranslationEnginesDialogInternalTranslationMemory.htm&quot;&gt;翻译引擎对话框&lt;/a&gt;用于添加新的翻译引擎或删除或配置现有的翻译引擎。</target>
        </trans-unit>
        <trans-unit>
          <source>Characters that are not added</source>
          <target>未添加的字符</target>
        </trans-unit>
        <trans-unit>
          <source>DRC file missing</source>
          <target>缺少 DRC 文件</target>
        </trans-unit>
        <trans-unit>
          <source>Embedded tags</source>
          <target>嵌入式标签</target>
        </trans-unit>
        <trans-unit>
          <source>Check &lt;em&gt;Localize a file or files&lt;/em&gt; and click &lt;em&gt;Next&lt;/em&gt; to select a &lt;a href=&quot;SupportedFiles.htm&quot;&gt;file or files&lt;/a&gt; to be localized. Use this when there is a specific file or files that you want to localize.</source>
          <target>选中&lt;em&gt;本地化一个或多个文件&lt;/em&gt;，然后单击&lt;em&gt;下一步&lt;/em&gt;选择要本地化的一个&lt;a href=&quot;SupportedFiles.htm&quot;&gt;或多个文件&lt;/a&gt;。当您想要本地化一个或多个特定文件时使用此选项。</target>
        </trans-unit>
        <trans-unit>
          <source>When you get a translation project (.slp) back from translator you can easily import the new translations to the project by choosing &lt;a href=&quot;ExchangeMethodDialog.htm&quot;&gt;File | Exchange&lt;/a&gt;, &lt;a href=&quot;FileImportMenu.htm&quot;&gt;File | Import&lt;/a&gt; or Column | Import menus.</source>
          <target>当您从译员处获得翻译项目 (.slp) 后，您可以通过选择&lt;a href=&quot;ExchangeMethodDialog.htm&quot;&gt;文件 |&lt;/a&gt;轻松地将新翻译导入到项目中&lt;a href=&quot;ExchangeMethodDialog.htm&quot;&gt;。交换&lt;/a&gt;，&lt;a href=&quot;FileImportMenu.htm&quot;&gt;文件 |导入&lt;/a&gt;或列 |导入菜单。</target>
        </trans-unit>
        <trans-unit>
          <source>.NET assembly file (.exe or .dll)&lt;br&gt;.NET project file (.csproj or .vbproj)&lt;br&gt;.NET solution file (.sln)</source>
          <target>.NET 程序集文件（.exe 或 .dll）&lt;br&gt; .NET 项目文件（.csproj 或 .vbproj）&lt;br&gt; .NET 解决方案文件 (.sln)</target>
        </trans-unit>
        <trans-unit>
          <source>Pascal/Delphi source code</source>
          <target>帕斯卡/德尔福源代码</target>
        </trans-unit>
        <trans-unit>
          <source>There are four different string types in VCL:</source>
          <target>VCL 中有四种不同的字符串类型：</target>
        </trans-unit>
        <trans-unit>
          <source>Select the attributes that will be scanned.</source>
          <target>选择将被扫描的属性。</target>
        </trans-unit>
        <trans-unit>
          <source>The best approach is to use a generic font in the application. Such a font is not an actual font but it is always mapped to a real font. Operating system takes care that the generic font is mapped to the default user interface font of the system. If the application that you localize uses a generic font you should &lt;u&gt;not&lt;/u&gt; localize fonts. It is better to let operating system to map the generic font to the actual user interface font on runtime.</source>
          <target>最好的方法是在应用程序中使用通用字体。这样的字体不是实际的字体，但它总是映射到真正的字体。操作系统负责将通用字体映射到系统的默认用户界面字体。如果您本地化使用一个通用字体，你&lt;u&gt;不&lt;/u&gt;应该本地化字体的应用程序。最好让操作系统在运行时将通用字体映射到实际的用户界面字体。</target>
        </trans-unit>
        <trans-unit>
          <source>A string. The string type is specified by byte order,  string encoding and string length properties of the definition.</source>
          <target>一个字符串。字符串类型由定义的字节顺序、字符串编码和字符串长度属性指定。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to export data to an XLIFF file.</source>
          <target>使用此表将数据导出到 XLIFF 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this menu to change the &lt;a href=&quot;WorkingWithTranslationSheet.htm#RowStatus&quot;&gt;status of the row&lt;/a&gt;.</source>
          <target>使用此菜单更改&lt;a href=&quot;WorkingWithTranslationSheet.htm#RowStatus&quot;&gt;行&lt;/a&gt;的&lt;a href=&quot;WorkingWithTranslationSheet.htm#RowStatus&quot;&gt;状态&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Use Sisulizer to localize the main language file. This is the language file of that language that you use to edit the Flash document.</source>
          <target>使用 Sisulizer 本地化主语言文件。这是用于编辑 Flash 文档的该语言的语言文件。</target>
        </trans-unit>
        <trans-unit>
          <source>A sample files (Plain.txt and Plain.slp) can be found from &amp;lt;sisulizer&amp;gt;\Text\Text directory.</source>
          <target>可以从 &amp;lt;sisulizer&amp;gt;\Text\Text 目录中找到示例文件（Plain.txt 和 Plain.slp）。</target>
        </trans-unit>
        <trans-unit>
          <source>Use original string</source>
          <target>使用原始字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Click &lt;em&gt;Remove&lt;/em&gt; to delete the selected language or locale.</source>
          <target>单击&lt;em&gt;删除&lt;/em&gt;以删除选定的语言或区域设置。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the separator character that the file uses. Possible values are:</source>
          <target>指定文件使用的分隔符。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>fillpseudo</source>
          <target>填充伪</target>
        </trans-unit>
        <trans-unit>
          <source>Greater than original</source>
          <target>大于原版</target>
        </trans-unit>
        <trans-unit>
          <source>Translate duplicate strings</source>
          <target>翻译重复的字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the type of the field. Possible values are:</source>
          <target>指定字段的类型。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>File containing key to sign the assembly</source>
          <target>包含对程序集进行签名的密钥的文件</target>
        </trans-unit>
        <trans-unit>
          <source>Contains all Sisulizer features.</source>
          <target>包含所有 Sisulizer 功能。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked hidden charcters such as space, tab, line feed are shown in a text.</source>
          <target>如果选中隐藏字符，如空格、制表符、换行符等显示在文本中。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the search string is a regular expression.</source>
          <target>如果选中，则搜索字符串是正则表达式。</target>
        </trans-unit>
        <trans-unit>
          <source>Delphi and C++Builder</source>
          <target>Delphi 和 C++Builder</target>
        </trans-unit>
        <trans-unit>
          <source>Removes the visible translation(s) from the selected row(s).</source>
          <target>从选定的行中删除可见的翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the script that the language uses. Normally this is omitted but if the language does not use the default script of the language then the script part must be included. Languages such as Azeri, Chinese, Serbo-Croatian and Uzbek can be written using two different scripts. In these cases there exits two code that have the same language code but but different script.</source>
          <target>指定语言使用的脚本。通常这会被省略，但如果语言不使用该语言的默认脚本，则必须包含脚本部分。阿塞拜疆语、中文、塞尔维亚-克罗地亚语和乌兹别克语等语言可以使用两种不同的文字书写。在这些情况下，存在两个具有相同语言代码但不同脚本的代码。</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be a &lt;a href=&quot;NetLocalization.htm#Project&quot;&gt;Visual Studio solution file&lt;/a&gt; (e.g. C:\Samples\Project.sln).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是&lt;a href=&quot;NetLocalization.htm#Project&quot;&gt;Visual Studio 解决方案文件&lt;/a&gt;（例如 C:\Samples\Project.sln）。</target>
        </trans-unit>
        <trans-unit>
          <source>Sample string</source>
          <target>示例字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Checks spelling in the selected language column. You can configure how spelling is done by choosing &lt;a href=&quot;GeneralSettingsDialogSpellingSheet.htm&quot;&gt;Tools | General menu&lt;/a&gt; and selecting the &lt;a href=&quot;GeneralSettingsDialogSpellingSheet.htm&quot;&gt;Spell sheet&lt;/a&gt;.</source>
          <target>检查所选语言列中的拼写。您可以通过选择&lt;a href=&quot;GeneralSettingsDialogSpellingSheet.htm&quot;&gt;工具 |&lt;/a&gt;来配置拼写的完成方式&lt;a href=&quot;GeneralSettingsDialogSpellingSheet.htm&quot;&gt;。常规菜单&lt;/a&gt;并选择&lt;a href=&quot;GeneralSettingsDialogSpellingSheet.htm&quot;&gt;拼写表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>If you add a .resx file, .NET assembly file (.exe or .dll), Visual Studio project file (.csproj or .vbproj), or Visual Studio solution file (.sln) to a Sisulizer project, &lt;a href=&quot;ProjectWizard.htm&quot;&gt;Project Wizard&lt;/a&gt; can import translations from localized .resx files. For example if you have selected MyFile.resx and there exists MyFile.de.resx file, Project Wizard will add German to the project and imports translations from MyFile.de.resx. Localized resource files must locate on the same directory as original one(s).</source>
          <target>如果将 .resx 文件、.NET 程序集文件（.exe 或 .dll）、Visual Studio 项目文件（.csproj 或 .vbproj）或 Visual Studio 解决方案文件 (.sln) 添加到 Sisulizer 项目，&lt;a href=&quot;ProjectWizard.htm&quot;&gt;项目向导&lt;/a&gt;可以导入来自本地化 .resx 文件的翻译。例如，如果您选择了 MyFile.resx 并且存在 MyFile.de.resx 文件，项目向导将向项目添加德语并从 MyFile.de.resx 导入翻译。本地化的资源文件必须与原始资源文件位于同一目录中。</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks if both original string and its translation include the same number of period at the end of the string. Some examples:</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查原始字符串及其翻译在字符串末尾是否包含相同数量的句点。一些例子：</target>
        </trans-unit>
        <trans-unit>
          <source>If enabled Sisulizer changes the translation status automatically to the selected status after a translation has been selected.&lt;br&gt;This feature is for a QA persons that can just click translations to set the status for a desired status.</source>
          <target>如果启用，Sisulizer 会在选择翻译后自动将翻译状态更改为选定状态。&lt;br&gt;此功能适用于只需单击翻译即可将状态设置为所需状态的 QA 人员。</target>
        </trans-unit>
        <trans-unit>
          <source>File type</source>
          <target>文件类型</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer writes all resource items to the localized resource file. If no translation is entered in the edit sheet the original value is used. The structure of the localized resource files are identical to the original ones. Only the translated values are different.</source>
          <target>如果选中，Sisulizer 会将所有资源项写入本地化的资源文件。如果未在编辑表中输入翻译，则使用原始值。本地化资源文件的结构与原始资源文件相同。只有转换后的值不同。</target>
        </trans-unit>
        <trans-unit>
          <source>Maximum string length</source>
          <target>最大字符串长度</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can localize JPEG, PNG, GIF, BMP, icon and cursor images. If you have images in some other format you have to scan them as &lt;a href=&quot;BinaryData.htm&quot;&gt;binary data&lt;/a&gt;.</source>
          <target>Sisulizer 可以本地化 JPEG、PNG、GIF、BMP、图标和光标图像。如果您有其他格式的图像，则必须将它们扫描为&lt;a href=&quot;BinaryData.htm&quot;&gt;二进制数据&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Custom data</source>
          <target>自定义数据</target>
        </trans-unit>
        <trans-unit>
          <source>Add context after the value.</source>
          <target>在值后添加上下文。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked  Sisulizer  ignores character case (upper case vs. lower case) when importing data.&lt;br&gt;
      Checking this will make import process of &lt;u&gt;large&lt;/u&gt; file much slower but on the other side it can import more strings.</source>
          <target>如果选中 Sisulizer 在导入数据时忽略字符大小写（大写与小写）。&lt;br&gt;检查这一点会使&lt;u&gt;大&lt;/u&gt;文件的导入过程变慢，但另一方面它可以导入更多的字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Some languages are spoken on several countries, some other only in one country. For example English is spoken in UK, USA, Australia, Canada, etc. Japanese on the other hand is used only in Japan. Those languages that are used in several countries have sub languages. A sub language is a combination of language and country. For example English (United States) is English in USA.</source>
          <target>有些语言在几个国家使用，有些语言只在一个国家使用。例如，英语在英国、美国、澳大利亚、加拿大等地使用。另一方面，日语仅在日本使用。在多个国家/地区使用的语言具有子语言。子语言是语言和国家的组合。例如英语（美国）在美国是英语。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Chinese&lt;/em&gt; uses two scripts: Simplified and Traditional. Simplified is used in China and Singapore. Traditional is used in Taiwan, Hong Kong and Macao. Because one region does not use more than one script the culture that contains a country part (e.g. zh-CN) does not need a script part. However if there is no country part then the script part is needed (e.g. zh-Hans). It is possible to have a culture code without a script (zh) but this is not a unique code. It can either mean Simplified or Traditional Chinese.</source>
          <target>&lt;em&gt;中文&lt;/em&gt;使用两种文字：简体和繁体。简体在中国和新加坡使用。台湾、香港和澳门使用繁体字。因为一个地区不使用多个脚本，所以包含国家部分（例如 zh-CN）的文化不需要脚本部分。但是，如果没有国家部分，则需要脚本部分（例如 zh-Hans）。可以在没有脚本 (zh) 的情况下使用文化代码，但这不是唯一代码。它可以表示简体中文或繁体中文。</target>
        </trans-unit>
        <trans-unit>
          <source>Qt translation file</source>
          <target>Qt翻译文件</target>
        </trans-unit>
        <trans-unit>
          <source>Let&#x27;s have an example. We have an English .NET application, Converter.exe, and its resource files (called satellite assembly files in .NET) in Finnish, German and Japanese. This makes the application to support four languages. If you start the application on Finnish Windows, .NET runtime will load the Finnish resources (fi\Converter.resources.dll) and application will initially show up in Finnish.</source>
          <target>让我们举个例子。我们有一个英语 .NET 应用程序 Converter.exe 及其芬兰语、德语和日语的资源文件（在 .NET 中称为附属程序集文件）。这使得应用程序支持四种语言。如果您在芬兰语 Windows 上启动应用程序，.NET 运行时将加载芬兰语资源 (fi\Converter.resources.dll)，应用程序最初将以芬兰语显示。</target>
        </trans-unit>
        <trans-unit>
          <source>Import translation status</source>
          <target>导入翻译状态</target>
        </trans-unit>
        <trans-unit>
          <source>Spelling errors on originals</source>
          <target>原件拼写错误</target>
        </trans-unit>
        <trans-unit>
          <source>Yes if data contains standard JPEG, BMP, PNG, GIF or icon.</source>
          <target>如果数据包含标准 JPEG、BMP、PNG、GIF 或图标，则为是。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to set the grid settings.</source>
          <target>使用此表设置网格设置。</target>
        </trans-unit>
        <trans-unit>
          <source>Use the project menu to work and modify the current project.</source>
          <target>使用项目菜单来工作和修改当前项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify the output file of the report.</source>
          <target>使用此对话框指定报告的输出文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies how context value is determined. Possible values are:</source>
          <target>指定如何确定上下文值。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>2 bytes integer value</source>
          <target>2 字节整数值</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer saves translations to the to the translation memory even if the value equals to the original value.</source>
          <target>如果选中 Sisulizer 会将翻译保存到翻译记忆库，即使该值等于原始值。</target>
        </trans-unit>
        <trans-unit>
          <source>Pentium CPU or higher</source>
          <target>Pentium CPU 或更高</target>
        </trans-unit>
        <trans-unit>
          <source>Whole words only</source>
          <target>仅整个单词</target>
        </trans-unit>
        <trans-unit>
          <source>when the correct one should be</source>
          <target>什么时候应该是正确的</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer updates the image size values in style attributes to match the localized image (if any) when writing the localized HTML files.&lt;br&gt;For example the size of the original image is 200x100 and the translated image is 210x110.&lt;br&gt;&lt;code&gt;style=&quot;width:200px; height:100px;&quot;&lt;/code&gt;&lt;br&gt;-&amp;gt;&lt;br&gt;&lt;code&gt;style=&quot;width:220px; height:110px;&quot;&lt;/code&gt;</source>
          <target>如果选中 Sisulizer 更新样式属性中的图像大小值，以在编写本地化 HTML 文件时匹配本地化图像（如果有）。&lt;br&gt;例如原始图像的大小为 200x100，转换后的图像为 210x110。&lt;br&gt; &lt;code&gt;style=&amp;quot;width:200px; height:100px;&amp;quot;&lt;/code&gt;&lt;br&gt; -&amp;gt;&lt;br&gt; &lt;code&gt;style=&amp;quot;width:220px; height:110px;&amp;quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit>
          <source>If checked all characters using predefined entities (&amp;lt;, &amp;gt;, &amp;quot;, &#x27; and &amp;amp;) will always be encoded even not necessary needed.</source>
          <target>如果使用预定义的实体（&amp;lt;、&amp;gt;、&amp;quot;、&amp;#39; 和 &amp;amp;）检查所有字符，即使不需要，也将始终进行编码。</target>
        </trans-unit>
        <trans-unit>
          <source>Visual Studio .NET project file</source>
          <target>Visual Studio .NET 项目文件</target>
        </trans-unit>
        <trans-unit>
          <source>Save report to</source>
          <target>将报告保存到</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies HTML Help options and what other HTML Help items in addition of HTML data is localized. Possible values are:</source>
          <target>指定 HTML 帮助选项以及本地化 HTML 数据之外的其他 HTML 帮助项。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>UTF-16, big endian</source>
          <target>UTF-16，大端</target>
        </trans-unit>
        <trans-unit>
          <source>If version resource is checked then the following options will appear:</source>
          <target>如果选中版本资源，则会出现以下选项：</target>
        </trans-unit>
        <trans-unit>
          <source>WIN-32 resources</source>
          <target>WIN-32资源</target>
        </trans-unit>
        <trans-unit>
          <source>A field that has been marked to be an id field. This field is used in row localization method to identify the resource id in that case where the primary id is not a combination of id and language id fields.</source>
          <target>已被标记为 id 字段的字段。在主 ID 不是 id 和语言 id 字段的组合的情况下，此字段用于行本地化方法来标识资源 id。</target>
        </trans-unit>
        <trans-unit>
          <source>Context attributes</source>
          <target>上下文属性</target>
        </trans-unit>
        <trans-unit>
          <source>Target languages</source>
          <target>目标语言</target>
        </trans-unit>
        <trans-unit>
          <source>Check languages that you want to include to the package or want to exchange. To check all languages right click and choose Select all. To uncheck all language right click and choose Unselect all.</source>
          <target>检查要包含在包中或要交换的语言。要检查所有语言，请右键单击并选择全选。要取消选中所有语言，请右键单击并选择取消全选。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to add a new property definition to Sisulizer&#x27;s visual editor.</source>
          <target>使用此对话框向 Sisulizer 的可视化编辑器添加新的属性定义。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the .NET version of the exported .resx file.</source>
          <target>指定导出的 .resx 文件的 .NET 版本。</target>
        </trans-unit>
        <trans-unit>
          <source>Import if there is no comment at the moment</source>
          <target>如果目前没有评论，请导入</target>
        </trans-unit>
        <trans-unit>
          <source>These contain data of all other embedded files.</source>
          <target>这些包含所有其他嵌入文件的数据。</target>
        </trans-unit>
        <trans-unit>
          <source>In first two cases the other Finnish translation is lost. On the third case they are mixed together. Only on the fourth case they are right. This is indeed a very rare situation but we can avoid it by using context attributes.</source>
          <target>在前两种情况下，其他芬兰语翻译丢失。在第三种情况下，它们混合在一起。只有在第四种情况下他们是对的。这确实是一种非常罕见的情况，但我们可以通过使用上下文属性来避免它。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to view and edit source specific component mappings, keywords and properties.</source>
          <target>使用此对话框查看和编辑特定于源的组件映射、关键字和属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Click &lt;em&gt;Add language&lt;/em&gt; to add a language column. Click &lt;em&gt;Add&lt;/em&gt; to add another column. Click &lt;em&gt;Import&lt;/em&gt; to read the column structure from a file. Click &lt;em&gt;Export&lt;/em&gt; to write column structure to a file.</source>
          <target>单击&lt;em&gt;添加语言&lt;/em&gt;以添加语言列。单击&lt;em&gt;添加&lt;/em&gt;以添加另一列。单击&lt;em&gt;导入&lt;/em&gt;以从文件中读取列结构。单击&lt;em&gt;导出&lt;/em&gt;将列结构写入文件。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer makes resources in satellite assemblies private.</source>
          <target>如果选中 Sisulizer，则将附属程序集中的资源设为私有。</target>
        </trans-unit>
        <trans-unit>
          <source>.NET assembly file such as an application (.exe) or a library (.dll) file</source>
          <target>.NET 程序集文件，例如应用程序 (.exe) 或库 (.dll) 文件</target>
        </trans-unit>
        <trans-unit>
          <source>Add control chars to the list</source>
          <target>将控制字符添加到列表中</target>
        </trans-unit>
        <trans-unit>
          <source>will be expanded to:</source>
          <target>将扩展为：</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify how and what part of the project data is exported to the export file.</source>
          <target>使用此表可指定将项目数据导出到导出文件的方式和部分。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to configure binary format. Sisulizer can localize and import data from various binary  based files. In order to properly scan the binary file you need to specify the format. It is done by defining fields. It is possible to specify the definition case by case but if you need to constantly work with certain file type you can define the format and give it a name. Finally you can attach the definition to a file extension.</source>
          <target>使用此表配置二进制格式。 Sisulizer 可以本地化和导入来自各种基于二进制文件的数据。为了正确扫描二进制文件，您需要指定格式。它是通过定义字段来完成的。可以逐个指定定义，但如果您需要经常使用某些文件类型，您可以定义格式并为其命名。最后，您可以将定义附加到文件扩展名。</target>
        </trans-unit>
        <trans-unit>
          <source>Create several packages, one for each selected language</source>
          <target>创建多个包，每个选定的语言一个</target>
        </trans-unit>
        <trans-unit>
          <source>You have three choices.</source>
          <target>你有三个选择。</target>
        </trans-unit>
        <trans-unit>
          <source>Project Wizard - Qt project file</source>
          <target>项目向导 - Qt 项目文件</target>
        </trans-unit>
        <trans-unit>
          <source>Regular expressions in Wikipedia</source>
          <target>维基百科中的正则表达式</target>
        </trans-unit>
        <trans-unit>
          <source>Ignore if no  value</source>
          <target>如果没有值则忽略</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the initial source code settings such as programming language and tags.</source>
          <target>指定初始源代码设置，例如编程语言和标签。</target>
        </trans-unit>
        <trans-unit>
          <source>Turns cell into to edit mode. This equals double clicking the cell.</source>
          <target>将单元格变为编辑模式。这等于双击单元格。</target>
        </trans-unit>
        <trans-unit>
          <source>This localizes add the topic files.</source>
          <target>这将本地化添加主题文件。</target>
        </trans-unit>
        <trans-unit>
          <source>There are five methods to localize databases. The methods are:</source>
          <target>有五种方法可以本地化数据库。方法是：</target>
        </trans-unit>
        <trans-unit>
          <source>Scan #&amp;amp;include directives</source>
          <target>扫描 #&amp;amp;include 指令</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the ISO country codes. The country code contains the following properties:</source>
          <target>指定 ISO 国家/地区代码。国家/地区代码包含以下属性：</target>
        </trans-unit>
        <trans-unit>
          <source>String contains &lt;a href=&quot;EmbeddedHtml.htm&quot;&gt;HTML data&lt;/a&gt; and it is scanned as HTML files.</source>
          <target>字符串包含&lt;a href=&quot;EmbeddedHtml.htm&quot;&gt;HTML 数据，&lt;/a&gt;并作为 HTML 文件进行扫描。</target>
        </trans-unit>
        <trans-unit>
          <source>Performs &lt;a href=&quot;SpellChecking.htm#Grammar&quot;&gt;grammar checking&lt;/a&gt; on the fly when you type and when your a project.&lt;br&gt;&lt;strong&gt;Note!&lt;/strong&gt; Grammar checking is not supported by all spell checking engines.</source>
          <target>在您键入和项目时即时执行&lt;a href=&quot;SpellChecking.htm#Grammar&quot;&gt;语法检查&lt;/a&gt;。&lt;br&gt;&lt;strong&gt;笔记！&lt;/strong&gt;并非所有拼写检查引擎都支持语法检查。</target>
        </trans-unit>
        <trans-unit>
          <source>Some emulators supports the language parameter in command line. This option specifies whether to send the language parameter or not.</source>
          <target>一些模拟器支持命令行中的语言参数。此选项指定是否发送语言参数。</target>
        </trans-unit>
        <trans-unit>
          <source>Choose the &lt;a href=&quot;ExchangeWizardTypeSheet.htm&quot;&gt;exchange type&lt;/a&gt;</source>
          <target>选择&lt;a href=&quot;ExchangeWizardTypeSheet.htm&quot;&gt;兑换类型&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit>
          <source>2 GB central memory</source>
          <target>2 GB 中央内存</target>
        </trans-unit>
        <trans-unit>
          <source>You add one or more .ts files into Sisulizer project.  Sisulizer creates localized .ts files&lt;br&gt;
      sample.ts 
      -&amp;gt; &lt;br&gt;
      sample_fi.ts (Finnish)&lt;br&gt;
      sample_de.ts (German)</source>
          <target>您将一个或多个 .ts 文件添加到 Sisulizer 项目中。 Sisulizer 创建本地化的 .ts 文件&lt;br&gt;样本.ts -&amp;gt;&lt;br&gt; sample_fi.ts（芬兰语）&lt;br&gt; sample_de.ts（德语）</target>
        </trans-unit>
        <trans-unit>
          <source>Your computer does not have files for East Asian languages. In order to perform some operations (e.g. compile HTML Help file to East Asian language) you have to install East Asian files.</source>
          <target>您的计算机没有东亚语言文件。为了执行某些操作（例如将 HTML 帮助文件编译为东亚语言），您必须安装东亚文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Mac application file</source>
          <target>Mac应用程序文件</target>
        </trans-unit>
        <trans-unit>
          <source>Once you have clicked Search button this list gets populated by result translations. Now you can start editing. To edit a translation select it and click &lt;em&gt;Edit&lt;/em&gt; or double click it. To remove a translation select  it and click &lt;em&gt;Remove&lt;/em&gt;. To remove all translations in the list click &lt;em&gt;Remove all&lt;/em&gt;. To add a new translations click &lt;em&gt;Add&lt;/em&gt;. The list contains maximun 100 strings. If the search result contains more translations only the first 100 translations are shown.</source>
          <target>单击“搜索”按钮后，此列表将被结果翻译填充。现在您可以开始编辑了。要编辑翻译，请选择它并单击&lt;em&gt;编辑&lt;/em&gt;或双击它。要删除翻译，请选择它并单击&lt;em&gt;删除&lt;/em&gt;。要删除列表中的所有翻译，请单击&lt;em&gt;全部删除&lt;/em&gt;。要添加新翻译，请单击&lt;em&gt;添加&lt;/em&gt;。该列表最多包含 100 个字符串。如果搜索结果包含更多翻译，则仅显示前 100 个翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the grid options. Possible values are:</source>
          <target>指定网格选项。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Browse documents. You can edit, add and remove translations of the selected document.</source>
          <target>浏览文档。您可以编辑、添加和删除所选文档的翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Vertical scroll bars</source>
          <target>垂直滚动条</target>
        </trans-unit>
        <trans-unit>
          <source>The system languages are used to create the language lists that are shown whenever a language should be selected. By default the program contains all known locales of the most recent Windows operating system. You can add your own items using this sheet. The system languages contains a three level tree where the top level items are languages, second level items are countries where the language is spoken, and the optional third contains variants of the language.</source>
          <target>系统语言用于创建语言列表，每当应选择语言时就会显示这些列表。默认情况下，该程序包含最新 Windows 操作系统的所有已知区域设置。您可以使用此表添加自己的项目。系统语言包含一个三级树，其中顶级项是语言，二级项是使用该语言的国家，可选的第三级包含该语言的变体。</target>
        </trans-unit>
        <trans-unit>
          <source>Type of the component. Select from the list the most suitable component that present the above component. If you are unsure what component to choose, use the Basic control. It is a simple white control with single borders. You can use it to resize your control event it doesn&#x27;t look exactly the same. If you have a custom container control, use the Panel.</source>
          <target>组件的类型。从列表中选择最适合呈现上述组件的组件。如果您不确定要选择什么组件，请使用基本控件。它是一个带有单边框的简单白色控件。您可以使用它来调整控件事件的大小，它看起来并不完全相同。如果您有自定义容器控件，请使用面板。</target>
        </trans-unit>
        <trans-unit>
          <source>Learn more about &lt;a href=&quot;TranslationFallback.htm&quot;&gt;languages&lt;/a&gt;.</source>
          <target>了解有关&lt;a href=&quot;TranslationFallback.htm&quot;&gt;语言的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the variant names.</source>
          <target>使用此表指定变体名称。</target>
        </trans-unit>
        <trans-unit>
          <source>Visual C++ uses standard WIN32 resources. They have full support for bidirectional languages.</source>
          <target>Visual C++ 使用标准的 WIN32 资源。它们完全支持双向语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Check this if you want to scan also those message strings that contain only excluded characters.</source>
          <target>如果您还想扫描那些仅包含排除字符的消息字符串，请选中此项。</target>
        </trans-unit>
        <trans-unit>
          <source>Import also those strings where the translated value equals to the original value</source>
          <target>还导入那些翻译值等于原始值的字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Duplicate translation</source>
          <target>重复翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Determines the icon size.</source>
          <target>确定图标大小。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;a href=&quot;TranslationEngines.htm&quot;&gt;Translation engines&lt;/a&gt; except the local translation memory</source>
          <target>除本地翻译记忆库外的&lt;a href=&quot;TranslationEngines.htm&quot;&gt;翻译引擎&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit>
          <source>OpenOffice dictionary. This is a zip file that contains .dic and .aff files for Hunspell. You can &lt;a href=&quot;InstallHunspell.htm&quot;&gt;download&lt;/a&gt; dictionary files for free.</source>
          <target>OpenOffice 词典。这是一个包含 Hunspell 的 .dic 和 .aff 文件的 zip 文件。您可以&lt;a href=&quot;InstallHunspell.htm&quot;&gt;免费下载&lt;/a&gt;字典文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to customize how the toolbar of the Ini editor looks like.</source>
          <target>使用此表来自定义 Ini 编辑器的工具栏的外观。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify import options of a .NET assembly file.</source>
          <target>使用此表指定 .NET 程序集文件的导入选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Show splash screen</source>
          <target>显示启动画面</target>
        </trans-unit>
        <trans-unit>
          <source>This sheet is visible if the assebly file has been created using Delphi and VCL.NET.</source>
          <target>如果已使用 Delphi 和 VCL.NET 创建了 assebly 文件，则此表可见。</target>
        </trans-unit>
        <trans-unit>
          <source>No .NET SDK or runtime need to be installed</source>
          <target>无需安装 .NET SDK 或运行时</target>
        </trans-unit>
        <trans-unit>
          <source>Source file has been changed since then last scan</source>
          <target>自上次扫描以来源文件已更改</target>
        </trans-unit>
        <trans-unit>
          <source>HTML tags</source>
          <target>HTML 标签</target>
        </trans-unit>
        <trans-unit>
          <source>Check as you type</source>
          <target>键入时检查</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the default input method mode of the controls when creating Traditional Chinese application files. This is enabled if the project contains Traditional Chinese.</source>
          <target>指定创建繁体中文应用程序文件时控件的默认输入法模式。如果项目包含繁体中文，则启用此功能。</target>
        </trans-unit>
        <trans-unit>
          <source>HTML Help Workshop directory</source>
          <target>HTML 帮助研讨会目录</target>
        </trans-unit>
        <trans-unit>
          <source>Single string table</source>
          <target>单字符串表</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer imports all translations (e.g. strings and localized user interface control dimensions) from existing localized file into the Sisulizer project.</source>
          <target>Sisulizer 将所有翻译（例如字符串和本地化用户界面控件维度）从现有本地化文件导入到 Sisulizer 项目中。</target>
        </trans-unit>
        <trans-unit>
          <source>This translates all items of the selected language that exists in the project. If you want to translate only the items of the selected view choose &lt;a href=&quot;ColumnTranslateViewDuplicatesMenu.htm&quot;&gt;Column | Translate View Duplicates&lt;/a&gt;. If you want to translate only certain items select them, right click, and choose &lt;a href=&quot;CellTranslateDuplicatesMenu.htm&quot;&gt;Translate | Translate Duplicates&lt;/a&gt;.</source>
          <target>这将翻译项目中存在的所选语言的所有项目。如果您只想翻译所选视图的项目，请选择&lt;a href=&quot;ColumnTranslateViewDuplicatesMenu.htm&quot;&gt;列 |翻译查看重复项&lt;/a&gt;。如果您只想翻译某些项目，请选择它们，右键单击，然后选择&lt;a href=&quot;CellTranslateDuplicatesMenu.htm&quot;&gt;翻译 |翻译重复项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Reads a list of properties from external XML-based file.</source>
          <target>从基于 XML 的外部文件中读取属性列表。</target>
        </trans-unit>
        <trans-unit>
          <source>Binary localization</source>
          <target>二进制本地化</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer compiles localized PO files to binary MO files.</source>
          <target>如果选中 Sisulizer 将本地化的 PO 文件编译为二进制 MO 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>By default both values are unchecked and you have to check them in order to take tag scanning in use.</source>
          <target>默认情况下，两个值都未选中，您必须选中它们才能使用标签扫描。</target>
        </trans-unit>
        <trans-unit>
          <source>Text format</source>
          <target>文本格式</target>
        </trans-unit>
        <trans-unit>
          <source>Add this unit to your project to make menu short cuts multilingual.</source>
          <target>将此单元添加到您的项目以制作多语言菜单快捷方式。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows or hides &lt;a href=&quot;MainFormClose.htm#News&quot;&gt;Recent News pane&lt;/a&gt;.</source>
          <target>显示或隐藏&lt;a href=&quot;MainFormClose.htm#News&quot;&gt;最近新闻窗格&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Enter a string that must be in the original value in order the row to be visible in the sheet. If &lt;em&gt;Excluded&lt;/em&gt; is checked matching rows are not shown.</source>
          <target>输入必须在原始值中的字符串，以便该行在工作表中可见。如果选中“&lt;em&gt;排除”，&lt;/em&gt;则不会显示匹配的行。</target>
        </trans-unit>
        <trans-unit>
          <source>Engineering variant of English</source>
          <target>英语的工程变体</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer&#x27;s translation memory on a database. &amp;lt;DB&amp;gt; is the type of the database such as Access, DBISAM, Firebird, Interbase, MySQL or SQL Server. When adding a new Sisulizer translation memory the application creates translation memory tables to the selected database.&lt;br&gt;
      &lt;strong&gt;Note!&lt;/strong&gt; If you have already added Interbase translation memory, Firebird will be disabled and vice versa. This is because they both can not be active at the same time.</source>
          <target>Sisulizer 在数据库中的翻译记忆库。 &amp;lt;DB&amp;gt; 是数据库的类型，例如 Access、DBISAM、Firebird、Interbase、MySQL 或 SQL Server。添加新的 Sisulizer 翻译记忆库时，应用程序会为所选数据库创建翻译记忆库表。&lt;br&gt;&lt;strong&gt;笔记！&lt;/strong&gt;如果您已经添加了 Interbase 翻译记忆库，Firebird 将被禁用，反之亦然。这是因为它们不能同时处于活动状态。</target>
        </trans-unit>
        <trans-unit>
          <source>Switched to the next view mode.</source>
          <target>切换到下一个视图模式。</target>
        </trans-unit>
        <trans-unit>
          <source>Edit translation comment.</source>
          <target>编辑翻译评论。</target>
        </trans-unit>
        <trans-unit>
          <source>Virtual device</source>
          <target>虚拟设备</target>
        </trans-unit>
        <trans-unit>
          <source>Add language</source>
          <target>添加语言</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to select the method how to localize the database and to select the items that will be localized.</source>
          <target>使用此表来选择如何本地化数据库的方法以及选择将要本地化的项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows a dialog that lets you edit the custom dictionary of spell checker.</source>
          <target>显示一个对话框，可让您编辑拼写检查器的自定义词典。</target>
        </trans-unit>
        <trans-unit>
          <source>When you use &lt;a href=&quot;ProjectWizard.htm&quot;&gt;Project Wizard&lt;/a&gt; to create a new project Sisulizer can automatically find existing translations and import them to the project. If Sisulizer finds existing translations it will show a message box during the Project Wizard asking if the user wants to import existing translations. If you click Yes Sisulizer imports the translations.</source>
          <target>当您使用&lt;a href=&quot;ProjectWizard.htm&quot;&gt;项目向导&lt;/a&gt;创建新项目时，Sisulizer 可以自动查找现有翻译并将它们导入到项目中。如果 Sisulizer 找到现有翻译，它会在项目向导期间显示一个消息框，询问用户是否要导入现有翻译。如果您单击是 Sisulizer 导入翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Start Sisulizer and choose &lt;a href=&quot;FileNewMenu.htm&quot;&gt;File | New&lt;/a&gt; to create a new Sisulizer project.</source>
          <target>启动 Sisulizer 并选择&lt;a href=&quot;FileNewMenu.htm&quot;&gt;File |新建&lt;/a&gt;一个新的 Sisulizer 项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Each language has a unique language code. It is a combination of language, country, variant and script ids. The format is:</source>
          <target>每种语言都有唯一的语言代码。它是语言、国家、变体和脚本 ID 的组合。格式为：</target>
        </trans-unit>
        <trans-unit>
          <source>You can exclude rows one by one. Select any cell on the row and use Row | Exclude menu to exclude the row. You can exclude only that specific row (Row | Exclude | Exclude this Row) or all rows having the same original value (Row | Exclude | Exclude &amp;quot;current sting&amp;quot; Original). You can bring excluded row back by choosing Project | Excluded Rows and/or Project | Excluded Originals.</source>
          <target>您可以一一排除行。选择行上的任何单元格并使用 Row |排除菜单以排除该行。您可以仅排除该特定行（行 | 排除 | 排除此行）或具有相同原始值的所有行（行 | 排除 | 排除“当前字符串”原始值）。您可以通过选择 Project | 将排除的行带回来。排除的行和/或项目 |排除的原件。</target>
        </trans-unit>
        <trans-unit>
          <source>Use Office look in toolbars</source>
          <target>在工具栏中使用 Office 外观</target>
        </trans-unit>
        <trans-unit>
          <source>Ansi applications</source>
          <target>安思应用</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer checks if there is a new Sisulizer version available. This will check only for free minor updates.</source>
          <target>如果选中 Sisulizer，则检查是否有可用的新 Sisulizer 版本。这将只检查免费的小更新。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can access ADO/ODBC compatible databases</source>
          <target>Sisulizer 可以访问 ADO/ODBC 兼容的数据库</target>
        </trans-unit>
        <trans-unit>
          <source>will show you information about the exchange task.</source>
          <target>将显示有关交换任务的信息。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;a href=&quot;SlMake.htm&quot;&gt;SlMake&lt;/a&gt;, Command line tool</source>
          <target>&lt;a href=&quot;SlMake.htm&quot;&gt;SlMake&lt;/a&gt; ，命令行工具</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer supports many more glossary file formats than the above file formats. Read more about &lt;a href=&quot;ImportingData.htm&quot;&gt;importing&lt;/a&gt;.</source>
          <target>Sisulizer 支持比上述文件格式更多的词汇表文件格式。阅读有关&lt;a href=&quot;ImportingData.htm&quot;&gt;导入的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Normally in VCL each component must have a unique not null name. Check if the null name is a misstake. Some 3rd. party components generate subcomponents with null names. For them thare is nothing you can do.</source>
          <target>通常在 VCL 中，每个组件都必须有一个唯一的非空名称。检查空名称是否是错误的。一些第三。派对组件生成具有空名称的子组件。对他们来说，你无能为力。</target>
        </trans-unit>
        <trans-unit>
          <source>A temporal key that is used to debug Android application.</source>
          <target>用于调试 Android 应用程序的临时密钥。</target>
        </trans-unit>
        <trans-unit>
          <source>Toolbars on the top side of the main view provide shortcuts of most important menu items. You can configure the toolbars by using the context sensitive menu. To access the menu right click the background area of the toolbar.</source>
          <target>主视图顶部的工具栏提供最重要菜单项的快捷方式。您可以使用上下文相关菜单配置工具栏。要访问菜单，请右键单击工具栏的背景区域。</target>
        </trans-unit>
        <trans-unit>
          <source>Detect original language</source>
          <target>检测原始语言</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to show the documents that have been imported to the translation memory. Press &lt;em&gt;Add&lt;/em&gt; button (+) to import a document to the translation memory. Press &lt;em&gt;Remove&lt;/em&gt; button (x) to remove the selected document from the translation memory.</source>
          <target>使用此表显示已导入翻译记忆库的文档。按&lt;em&gt;添加&lt;/em&gt;按钮 (+) 将文档导入翻译记忆库。按&lt;em&gt;删除&lt;/em&gt;按钮 (x) 从翻译记忆库中删除选定的文档。</target>
        </trans-unit>
        <trans-unit>
          <source>Performs validations for the selected node.</source>
          <target>对所选节点执行验证。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;AndroidLocalization.htm&quot;&gt;Android values file is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;AndroidLocalization.htm&quot;&gt;Android 值文件的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;GuilianiLocalization.htm&quot;&gt;Guiliani file is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;GuilianiLocalization.htm&quot;&gt;Guiliani 文件的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Original script and default font</source>
          <target>原始脚本和默认字体</target>
        </trans-unit>
        <trans-unit>
          <source>Hide selection when loses focus</source>
          <target>失去焦点时隐藏选择</target>
        </trans-unit>
        <trans-unit>
          <source>Validate original or translated values</source>
          <target>验证原始值或翻译值</target>
        </trans-unit>
        <trans-unit>
          <source>How to use</source>
          <target>如何使用</target>
        </trans-unit>
        <trans-unit>
          <source>A string that describes the project.</source>
          <target>描述项目的字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>ISO code page</source>
          <target>ISO 代码页</target>
        </trans-unit>
        <trans-unit>
          <source>When you perform the build process  Sisulizer creates localized files or localized data. Localized files are the localized versions of your original files. The location and format of the localized files depends on the original file. Each platform uses its own localized data. In some cases the localized files equals to the original expect strings are translated into the target language. In that case the file format and extension is the same. Only the location is different.</source>
          <target>当您执行构建过程时，Sisulizer 会创建本地化文件或本地化数据。本地化文件是原始文件的本地化版本。本地化文件的位置和格式取决于原始文件。每个平台都使用自己的本地化数据。在某些情况下，本地化文件等于原始期望字符串被翻译成目标语言。在这种情况下，文件格式和扩展名是相同的。只是地点不一样。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked limits the search to text that exactly matches the case of the text you want to find.&lt;br&gt;
    For example, if you search for &lt;em&gt;the blue car&lt;/em&gt;, you will not find &lt;em&gt;The Blue Car&lt;/em&gt;.</source>
          <target>如果选中，则将搜索限制为与您要查找的文本的大小写完全匹配的文本。&lt;br&gt;例如，如果您搜索&lt;em&gt;blue car&lt;/em&gt; ，您将找不到&lt;em&gt;The Blue Car&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit>
          <source>If you want to disable adding of these punctuation marks when translating duplicates or using translation engines add the characters that you want to exclude to this field.</source>
          <target>如果要在翻译重复项或使用翻译引擎时禁用添加这些标点符号，请将要排除的字符添加到此字段。</target>
        </trans-unit>
        <trans-unit>
          <source>Error messages are shown</source>
          <target>显示错误消息</target>
        </trans-unit>
        <trans-unit>
          <source>String size in word following an Ansi string</source>
          <target>跟随 Ansi 字符串的单词中的字符串大小</target>
        </trans-unit>
        <trans-unit>
          <source>Recent news</source>
          <target>最近的新闻</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the encoding that is used when creating localized HTML resource data. Possible values are:</source>
          <target>指定创建本地化 HTML 资源数据时使用的编码。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheets to specify the platform specific language codes.</source>
          <target>使用此表指定平台特定的语言代码。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked limits the search to text that matches the whole words.&lt;br&gt;
      For example, if you search for &lt;em&gt;auto&lt;/em&gt;, you will not find &lt;em&gt;automobile&lt;/em&gt;.</source>
          <target>如果选中，则将搜索限制为与整个单词匹配的文本。&lt;br&gt;例如，如果您搜索&lt;em&gt;auto&lt;/em&gt; ，您将找不到&lt;em&gt;汽车&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Press Add to add a new keyword. Press Remove to delete the selected keyword. Press Edit to edit the selected keyword.</source>
          <target>按添加添加新关键字。按删除删除选定的关键字。按编辑以编辑选定的关键字。</target>
        </trans-unit>
        <trans-unit>
          <source>Importing from text and CSV files</source>
          <target>从文本和 CSV 文件导入</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the ISO language code. The language code contains the following properties:</source>
          <target>指定 ISO 语言代码。语言代码包含以下属性：</target>
        </trans-unit>
        <trans-unit>
          <source>Importing is very powerful feature of Sisulizer. It makes it possible to import existing translations from different sources to either Sisulizer project or translation memory. Sisulizer can import data from several sources:</source>
          <target>导入是 Sisulizer 非常强大的功能。它可以将来自不同来源的现有翻译导入 Sisulizer 项目或翻译记忆库。 Sisulizer 可以从多个来源导入数据：</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;lt;p&amp;gt;Finland is the most northern country in the world&amp;lt;/p&amp;gt;</source>
          <target>&amp;lt;p&amp;gt;芬兰是世界上最北的国家&amp;lt;/p&amp;gt;</target>
        </trans-unit>
        <trans-unit>
          <source>If you want to send a subset of your project (for example just one language instead of all languages) you have to use &lt;a href=&quot;ExchangeWizard.htm&quot;&gt;Exchange Wizard&lt;/a&gt;. The wizard creates a sub project that contains only the languages and items you want exchange. Exchange Wizard creates a .sle file that is a zip file that contains the created subset project file (.slp) and any other file you decided to include to the package.</source>
          <target>如果您想发送您项目的一个子集（例如只发送一种语言而不是所有语言），您必须使用&lt;a href=&quot;ExchangeWizard.htm&quot;&gt;Exchange 向导&lt;/a&gt;。该向导会创建一个子项目，其中仅包含您想要交换的语言和项目。 Exchange 向导会创建一个 .sle 文件，该文件是一个 zip 文件，其中包含创建的子集项目文件 (.slp) 和您决定包含在包中的任何其他文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Let&#x27;s suppose that we localize the your English database to German and Japanese using &lt;a href=&quot;DatabaseLocalization.htm&quot;&gt;row localization method&lt;/a&gt;. Our database contains each row in English, German and Japanese. When we create English report we only use English rows and this is why we have to add WHERE part to the SQL statement.</source>
          <target>假设我们使用&lt;a href=&quot;DatabaseLocalization.htm&quot;&gt;行本地化方法&lt;/a&gt;将您的英语数据库本地化为德语和日语。我们的数据库包含英语、德语和日语的每一行。当我们创建英文报告时，我们只使用英文行，这就是我们必须在 SQL 语句中添加 WHERE 部分的原因。</target>
        </trans-unit>
        <trans-unit>
          <source>c</source>
          <target>C</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;b&gt;Note!&lt;/b&gt;Pressing Enter will add a new line break in the translation.</source>
          <target>&lt;b&gt;笔记！&lt;/b&gt;按 Enter 将在翻译中添加一个新的换行符。</target>
        </trans-unit>
        <trans-unit>
          <source>Source value is written into the target element.</source>
          <target>源值写入目标元素。</target>
        </trans-unit>
        <trans-unit>
          <source>Expand percentage</source>
          <target>展开百分比</target>
        </trans-unit>
        <trans-unit>
          <source>Snap to</source>
          <target>对齐到</target>
        </trans-unit>
        <trans-unit>
          <source>ISO locale code is used. It is combination of language and country. The syntax is&lt;br&gt;
        &lt;code&gt;la[_co[_variant]]&lt;/code&gt;&lt;br&gt;
      where
      &lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot;&gt; &lt;tr&gt; &lt;td nowrap&gt;la&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/ISO-639&quot; target=&quot;_blank&quot;&gt;ISO-639&lt;/a&gt; language code&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td nowrap&gt;co&lt;/td&gt; &lt;td&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/ISO-3166&quot; target=&quot;_blank&quot;&gt;ISO-3166&lt;/a&gt; country code&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td nowrap&gt;variant&lt;/td&gt; &lt;td&gt;ISO variant code&lt;/td&gt; &lt;/tr&gt;  &lt;/table&gt;
      For example &amp;quot;en&amp;quot; is for English, &amp;quot;en_US&amp;quot; is fo English (United States), and &amp;quot;zh_TW&amp;quot; is for Traditional Chinese. ISO language code does not have any way to code a country neutral Traditional Chinese. That is why Chinese (Taiwan) is used.</source>
          <target>使用 ISO 区域设置代码。它是语言和国家的结合。语法是&lt;br&gt;&lt;code&gt;la[_co[_variant]]&lt;/code&gt;&lt;br&gt;在哪里&lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot;&gt;&lt;tr&gt;&lt;td nowrap&gt;啦&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/ISO-639&quot; target=&quot;_blank&quot;&gt;ISO-639&lt;/a&gt;语言代码&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td nowrap&gt;合作&lt;/td&gt;&lt;td&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/ISO-3166&quot; target=&quot;_blank&quot;&gt;ISO-3166&lt;/a&gt;国家代码&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td nowrap&gt;变体&lt;/td&gt;&lt;td&gt;ISO 变体代码&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;例如，“en”代表英语，“en_US”代表英语（美国），“zh_TW”代表繁体中文。 ISO 语言代码没有任何方法可以对国家中性繁体中文进行编码。这就是使用中文（台湾）的原因。</target>
        </trans-unit>
        <trans-unit>
          <source>If &lt;em&gt;Import only strings&lt;/em&gt; is not visible it means that Sisulizer can only import strings values from the import source. No other data types such as integer or color values are imported.</source>
          <target>如果&lt;em&gt;仅导入字符串&lt;/em&gt;不可见，则意味着 Sisulizer 只能从导入源导入字符串值。不会导入其他数据类型，例如整数或颜色值。</target>
        </trans-unit>
        <trans-unit>
          <source>In most cases your database contains plain text in string fields and you do not have any other data type to be translated. In this case you do not have to do anything but select the localization method your want to use and then select the fields you want to localize. Sisulizer can also localize none-string data. For example if you database has  binary fields (BLOB) that contain image data Sisulizer can localize these as well. Like with plain string data you do not have to do anything but select the field.</source>
          <target>在大多数情况下，您的数据库在字符串字段中包含纯文本，并且您没有任何其他要转换的数据类型。在这种情况下，您无需执行任何操作，只需选择要使用的本地化方法，然后选择要本地化的字段即可。 Sisulizer 还可以本地化非字符串数据。例如，如果您的数据库具有包含图像数据的二进制字段 (BLOB)，则 Sisulizer 也可以对这些字段进行本地化。与纯字符串数据一样，您无需执行任何操作，只需选择字段即可。</target>
        </trans-unit>
        <trans-unit>
          <source>By default Sisulizer adds all resources to the resource DLLs; even those that have not been localized. If you want to make you resource DLLs smaller uncheck &lt;em&gt;Copy all resources&lt;/em&gt;. This will make Sisulizer add only those resource items that have been localized.</source>
          <target>默认情况下，Sisulizer 将所有资源添加到资源 DLL 中；甚至那些没有被本地化的。如果要使资源 DLL 变小，请取消选中&lt;em&gt;Copy all resources&lt;/em&gt; 。这将使 Sisulizer 仅添加那些已本地化的资源项。</target>
        </trans-unit>
        <trans-unit>
          <source>Values written in bold typeface are got through translation fallback procedure.</source>
          <target>以粗体书写的值是通过翻译后备程序获得的。</target>
        </trans-unit>
        <trans-unit>
          <source>Original field</source>
          <target>原始字段</target>
        </trans-unit>
        <trans-unit>
          <source>These contain either form data or resource table that contains text, images, etc. Original these files are in .resx or .txt format but .NET compiler compiles them into binary .resources format before embedding them to the assembly file.</source>
          <target>它们包含表单数据或包含文本、图像等的资源表。这些文件的原始格式为 .resx 或 .txt 格式，但 .NET 编译器将它们编译为二进制 .resources 格式，然后再将它们嵌入到程序集文件中。</target>
        </trans-unit>
        <trans-unit>
          <source>For example if we have the following C++ source code:</source>
          <target>例如，如果我们有以下 C++ 源代码：</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer does not mirror forms but you have to mirror them on run time using the mirror function or property of the platform.</source>
          <target>Sisulizer 不镜像表单，但您必须在运行时使用平台的镜像功能或属性镜像它们。</target>
        </trans-unit>
        <trans-unit>
          <source>Show type of image</source>
          <target>显示图像类型</target>
        </trans-unit>
        <trans-unit>
          <source>HTML Help compiler is rather old product. It does not support Unicode even it allows that topic files use UTF-8 encoding. TOC and index files are not Unicode. When HTML Help compiler compiles topic, TOC and index files into CHM it assumes that the system code page is same as the code page of the target CHM. This might not be the case if you have a Western OS but are localizing CHM into Asian languages such as Japanese. In such case the binary index of the CHM get invalid and when CHM is viewed the index data shows up as mojibake.</source>
          <target>HTML 帮助编译器是相当老的产品。它不支持 Unicode，即使它允许主题文件使用 UTF-8 编码。 TOC 和索引文件不是 Unicode。当 HTML 帮助编译器将主题、TOC 和索引文件编译为 CHM 时，它假定系统代码页与目标 CHM 的代码页相同。如果您使用的是西方操作系统，但要将 CHM 本地化为亚洲语言（例如日语），则情况可能并非如此。在这种情况下，CHM 的二进制索引无效，当查看 CHM 时，索引数据显示为 mojibake。</target>
        </trans-unit>
        <trans-unit>
          <source>Each satellite assembly sub directory contains localized satellite assembly files for the application and Sisulizer library (select language dialog).</source>
          <target>每个附属程序集子目录包含应用程序和 Sisulizer 库（选择语言对话框）的本地化附属程序集文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Enable screen tips</source>
          <target>启用屏幕提示</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be a &lt;a href=&quot;http://www.ncore.fi/products/nres/&quot; target=&quot;_blank&quot;&gt;nRes&lt;/a&gt; master language file (e.g. C:\Samples\Project.mlng).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是&lt;a href=&quot;http://www.ncore.fi/products/nres/&quot; target=&quot;_blank&quot;&gt;nRes&lt;/a&gt;主语言文件（例如 C:\Samples\Project.mlng）。</target>
        </trans-unit>
        <trans-unit>
          <source>For example if the original file is &lt;code&gt;C:\MyFiles\Sample.xml&lt;/code&gt; and the pattern is &lt;code&gt;&amp;lt;sl&amp;gt;\&amp;lt;file&amp;gt;&lt;/code&gt; the Chinese (Taiwan) file will be &lt;code&gt;C:\MyFiles\zh.tra\Sample.xml&lt;/code&gt;.</source>
          <target>例如，如果原始文件是&lt;code&gt;C:\MyFiles\Sample.xml&lt;/code&gt;并且模式是&lt;code&gt;&amp;lt;sl&amp;gt;\&amp;lt;file&amp;gt;&lt;/code&gt;中文（台湾）文件将是&lt;code&gt;C:\MyFiles\zh.tra\Sample.xml&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the country names.</source>
          <target>使用此表指定国家/地区名称。</target>
        </trans-unit>
        <trans-unit>
          <source>Prompts before overwriting existing string.</source>
          <target>在覆盖现有字符串之前提示。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer sets the translation date to current date even if the translation is automatically translated.</source>
          <target>如果选中 Sisulizer 将翻译日期设置为当前日期，即使翻译是自动翻译的。</target>
        </trans-unit>
        <trans-unit>
          <source>Auto size</source>
          <target>自动尺寸</target>
        </trans-unit>
        <trans-unit>
          <source>Status is showed as complete if the translation is a pseudo translation.</source>
          <target>如果翻译是伪翻译，则状态显示为完成。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the pseudo translation type. The possible values are:</source>
          <target>指定伪翻译类型。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Shows both rows and propries.</source>
          <target>显示行和属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Tail of the class name</source>
          <target>类名的尾部</target>
        </trans-unit>
        <trans-unit>
          <source>If you use the standard field name convention for language field Sisulizer will automatically detect the field to be a language field. The standard language field name is either &amp;quot;language&amp;quot;, &amp;quot;languageid&amp;quot;, &amp;quot;lang&amp;quot;, &amp;quot;langid&amp;quot;, &amp;quot;locale&amp;quot; or &amp;quot;localeid&amp;quot;. If you do not use the standard language field name convention you must mark the field to be a language field by right clicking and checking the Language Id Field menu. Finally check (double click) those fields that you want to localize.</source>
          <target>如果对语言字段使用标准字段命名约定，Sisulizer 将自动检测该字段为语言字段。标准语言字段名称是“language”、“languageid”、“lang”、“langid”、“locale”或“localeid”。如果您不使用标准语言字段名称约定，则必须通过右键单击并选中语言 ID 字段菜单来将该字段标记为语言字段。最后检查（双击）您要本地化的字段。</target>
        </trans-unit>
        <trans-unit>
          <source>In this sample line comment string is &amp;quot;//&amp;quot;.</source>
          <target>在此示例行中，注释字符串是“//”。</target>
        </trans-unit>
        <trans-unit>
          <source>Remove all unnecessary translations from the project. For example if you have moved a control (it&#x27;s left property has been translated). Then you moved the control exactly to it&#x27;s original place. Now the control have a translation that is identical with the original value. Those translations are unnecessary and can be to removed.</source>
          <target>从项目中删除所有不必要的翻译。例如，如果您移动了一个控件（它的 left 属性已被翻译）。然后您将控件准确地移至其原始位置。现在控件具有与原始值相同的转换。这些翻译是不必要的，可以删除。</target>
        </trans-unit>
        <trans-unit>
          <source>This combo box specifies the minimum translation status that are used when building localized items. By default this is the lowest translation status, Not translated, that means all translation are used no matter what the status is. If you set this value to any higher value then Sisulizer uses only those translations that have translation status equal or higher than the value specified here.</source>
          <target>此组合框指定构建本地化项目时使用的最低翻译状态。默认情况下，这是最低的翻译状态，未翻译，这意味着无论状态如何，都使用所有翻译。如果您将此值设置为任何更高的值，则 Sisulizer 仅使用那些翻译状态等于或高于此处指定值的翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;nbsp;This is the first extension for US description.</source>
          <target>这是美国描述的第一个扩展。</target>
        </trans-unit>
        <trans-unit>
          <source>Select the output type of the package(s) that Exchange Wizard creates. Possible values are:</source>
          <target>选择 Exchange 向导创建的包的输出类型。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>HTML Browser parameters (before filename)</source>
          <target>HTML 浏览器参数（在文件名之前）</target>
        </trans-unit>
        <trans-unit>
          <source>A &lt;a href=&quot;RegularExpressions.htm&quot;&gt;regular expression&lt;/a&gt; that specifies the string after the item.</source>
          <target>指定项后的字符串的&lt;a href=&quot;RegularExpressions.htm&quot;&gt;正则表达式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>To change the Localizable property true open your project, select each form and user control and make sure that Localizable property is set to true.</source>
          <target>要更改 Localizable 属性 true 打开您的项目，选择每个窗体和用户控件并确保 Localizable 属性设置为 true。</target>
        </trans-unit>
        <trans-unit>
          <source>All rows</source>
          <target>所有行</target>
        </trans-unit>
        <trans-unit>
          <source>If you choose option #1 you should mirror the forms and controls on run time. You can use Sisulizer.WindowsForms.Translate.FlipControl function to mirror containers.</source>
          <target>如果您选择选项#1，您应该在运行时镜像表单和控件。您可以使用 Sisulizer.WindowsForms.Translate.FlipControl 函数来镜像容器。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the binary data that the field must always contain. Use this to define signature fields that are in the beginning of the file header. Leave this empty if the field can contain some other value but single one required value. You can enter the data as ASCII string or hex value. Check &lt;em&gt;ASCII&lt;/em&gt; if you want to view and enter data as characters. Check &lt;em&gt;Hex&lt;/em&gt; if you want to view or enter data as hexadecimal values.</source>
          <target>指定字段必须始终包含的二进制数据。使用它来定义位于文件头开头的签名字段。如果该字段可以包含一些其他值但只有一个必需值，则将此字段留空。您可以以 ASCII 字符串或十六进制值的形式输入数据。如果要以字符形式查看和输入数据，请选中&lt;em&gt;ASCII&lt;/em&gt; 。如果要以十六进制值查看或输入数据，请选中&lt;em&gt;Hex&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit>
          <source>Automatically activates IME by language</source>
          <target>按语言自动激活 IME</target>
        </trans-unit>
        <trans-unit>
          <source>Write translation status</source>
          <target>写入翻译状态</target>
        </trans-unit>
        <trans-unit>
          <source>Context column. It specifies the context of the original column(s).</source>
          <target>上下文列。它指定原始列的上下文。</target>
        </trans-unit>
        <trans-unit>
          <source>Enabled message dialogs</source>
          <target>启用消息对话框</target>
        </trans-unit>
        <trans-unit>
          <source>If checked row info is shown on the right side of the pane. Row info shows information about the row that is being edited.</source>
          <target>如果选中的行信息显示在窗格的右侧。行信息显示有关正在编辑的行的信息。</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;lt;data name=&amp;quot;String5&lt;span class=&quot;style1&quot;&gt;noslz&lt;/span&gt;&amp;quot; xml:space=&amp;quot;preserve&amp;quot;&amp;gt;
  &amp;lt;value&amp;gt;This is a sample&amp;lt;/value&amp;gt;
&amp;lt;/data&amp;gt;</source>
          <target>&amp;lt;data name=&amp;quot;String5 &lt;span class=&quot;style1&quot;&gt;noslz&lt;/span&gt; &amp;quot; xml:space=&amp;quot;preserve&amp;quot;&amp;gt; &amp;lt;value&amp;gt;这是一个示例&amp;lt;/value&amp;gt; &amp;lt;/data&amp;gt;</target>
        </trans-unit>
        <trans-unit>
          <source>License file</source>
          <target>许可证文件</target>
        </trans-unit>
        <trans-unit>
          <source>Shows different codes of the language.</source>
          <target>显示语言的不同代码。</target>
        </trans-unit>
        <trans-unit>
          <source>Exclude all but string types</source>
          <target>排除除字符串类型之外的所有类型</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks if a component has been &lt;a href=&quot;ComponentMapping.htm&quot;&gt;mapped&lt;/a&gt;. Software created in component-based developing tools (Visual Basic, .NET, and Delphi/C++Builder) can include 3rd-party components that contain localizable information. In order to show them correctly on visual editor, they need to be &lt;a href=&quot;ComponentMapping.htm&quot;&gt;mapped&lt;/a&gt;. This validation informs, if there are any component that need to be mapped.</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查是否已&lt;a href=&quot;ComponentMapping.htm&quot;&gt;映射&lt;/a&gt;组件。在基于组件的开发工具（Visual Basic、.NET 和 Delphi/C++Builder）中创建的软件可以包括包含可本地化信息的第 3 方组件。为了在可视化编辑器上正确显示它们，它们需要被&lt;a href=&quot;ComponentMapping.htm&quot;&gt;映射&lt;/a&gt;。此验证会通知是否有任何组件需要映射。</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks if a form string contains hotkey that is also used by some other string in the same form.&lt;!-- #BeginLibraryItem &quot;/Library/Hotkey.lbi&quot; --&gt;
Hotkey is special character that marks another character that specifies what character actives that item. Ampersand (&amp;amp;) is used as hotkey mark character  on most platforms (Visual C++, VCL and .NET). WPF uses underscore (_). Duplicate hotkey prevents using the  hotkey on second item and on some platforms it might disable hotkeys on all items. Change all hotkeys but the first one to remove duplicates. Sisulizer suggest you the available hotkey characters that do not conflict. If you validating translations Sisulizer can automatically fix duplicate hotkey if you click Fix button.&lt;!-- #EndLibraryItem --&gt;For example if you have two labels: &amp;quot;&lt;strong&gt;&amp;amp;F&lt;/strong&gt;ile name:&amp;quot; and &amp;quot;Project &lt;strong&gt;&amp;amp;f&lt;/strong&gt;ile name:&amp;quot; on your form you have duplicate F hotkey.</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查表单字符串是否包含也被同一表单中的其他字符串使用的热键。&lt;!-- #BeginLibraryItem &quot;/Library/Hotkey.lbi&quot; --&gt;热键是特殊字符，它标记另一个字符，指定哪个字符激活该项目。与号 (&amp;amp;) 在大多数平台（Visual C++、VCL 和 .NET）上用作热键标记字符。 WPF 使用下划线 (_)。重复的热键防止在第二个项目上使用热键，在某些平台上它可能会禁用所有项目的热键。更改除第一个热键以外的所有热键以删除重复项。 Sisulizer 建议您使用不冲突的可用热键字符。如果您验证翻译，如果您单击“修复”按钮，Sisulizer 可以自动修复重复的热键。&lt;!-- #EndLibraryItem --&gt;例如，如果您的表单上有两个标签：“ &lt;strong&gt;&amp;amp;&lt;/strong&gt; File name:” 和“Project &lt;strong&gt;&amp;amp;&lt;/strong&gt; file name:”，则您有重复的 F 热键。</target>
        </trans-unit>
        <trans-unit>
          <source>Use &lt;a href=&quot;ExchangeWizard.htm&quot;&gt;Exchange Wizard&lt;/a&gt; to import translations from the project file that the translator has sent. After import process developer&#x27;s projects contains the same translations as the translator&#x27;s project.</source>
          <target>使用&lt;a href=&quot;ExchangeWizard.htm&quot;&gt;Exchange 向导&lt;/a&gt;从翻译人员发送的项目文件中导入翻译。导入流程后，开发人员的项目包含与翻译人员项目相同的翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>zh</source>
          <target>zh</target>
        </trans-unit>
        <trans-unit>
          <source>This is a &amp;lt;Span&amp;gt;simple&amp;lt;/Span&amp;gt; &amp;lt;Run&amp;gt;sample&amp;lt;/Run&amp;gt;..</source>
          <target>这是一个 &amp;lt;Span&amp;gt;simple&amp;lt;/Span&amp;gt; &amp;lt;Run&amp;gt;sample&amp;lt;/Run&amp;gt;..</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to edit the &lt;a href=&quot;Shortcuts.htm&quot;&gt;short cuts&lt;/a&gt;.</source>
          <target>使用此对话框编辑&lt;a href=&quot;Shortcuts.htm&quot;&gt;快捷方式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Localization item by item</source>
          <target>逐项本地化</target>
        </trans-unit>
        <trans-unit>
          <source>HTML comments</source>
          <target>HTML 注释</target>
        </trans-unit>
        <trans-unit>
          <source>The following item contains exclude tag inside the comment value.</source>
          <target>以下项目在注释值中包含 exclude 标记。</target>
        </trans-unit>
        <trans-unit>
          <source>Multilingual application</source>
          <target>多语言应用</target>
        </trans-unit>
        <trans-unit>
          <source>Use segmentation with the following platforms</source>
          <target>在以下平台上使用分段</target>
        </trans-unit>
        <trans-unit>
          <source>All characters of original strings are replaced with a replace character. This type helps to find hard coded strings.&lt;br&gt;For example &lt;samp&gt;&amp;quot;Hello World&amp;quot;&lt;/samp&gt; becomes to &lt;samp&gt;&amp;quot;...........&amp;quot;&lt;/samp&gt;.</source>
          <target>原始字符串的所有字符都被替换为替换字符。这种类型有助于查找硬编码字符串。&lt;br&gt;例如&lt;samp&gt;&amp;quot;Hello World&amp;quot;&lt;/samp&gt;变成&lt;samp&gt;&amp;quot;...........&amp;quot;&lt;/samp&gt; 。</target>
        </trans-unit>
        <trans-unit>
          <source>As you can see the resource id context id does not give any meaningful information (4096.65520) for translator. The string value method also does not give any additional information compared to the string value (&amp;amp;Browse... vs. &amp;amp;Browse...). The resource name method gives extra information (SelectFile.SBrowseFile) in addition of the string value.</source>
          <target>如您所见，资源 ID 上下文 ID 没有为翻译器提供任何有意义的信息 (4096.65520)。与字符串值相比，字符串值方法也不提供任何附加信息（&amp;amp;Browse... 与 &amp;amp;Browse...）。除了字符串值之外，资源名称方法还提供额外信息 (SelectFile.SBrowseFile)。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the file mappings (e.g. maps file extensions to parsers)</source>
          <target>指定文件映射（例如将文件扩展名映射到解析器）</target>
        </trans-unit>
        <trans-unit>
          <source>Exclude row</source>
          <target>排除行</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer&#x27;s Silverlight directory contains Silverlight samples.</source>
          <target>Sisulizer 的 Silverlight 目录包含 Silverlight 示例。</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;lt;data name=&amp;quot;String3&amp;quot; xml:space=&amp;quot;preserve&amp;quot;&amp;gt;
  &amp;lt;value&amp;gt;This is a sample&amp;lt;/value&amp;gt;
  &amp;lt;comment&amp;gt;&lt;span class=&quot;style1&quot;&gt;noslz&lt;/span&gt;&amp;lt;/comment&amp;gt;
&amp;lt;/data&amp;gt; </source>
          <target>&amp;lt;data name=&amp;quot;String3&amp;quot; xml:space=&amp;quot;preserve&amp;quot;&amp;gt; &amp;lt;value&amp;gt;这是一个示例&amp;lt;/value&amp;gt; &amp;lt;comment&amp;gt; &lt;span class=&quot;style1&quot;&gt;noslz&lt;/span&gt; &amp;lt;/comment&amp;gt; &amp;lt;/data&amp;gt;</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer shows the pixel depth of the bitmap in the cell.</source>
          <target>如果选中 Sisulizer 显示单元格中位图的像素深度。</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks if  the amount of HTML comments in translation differs from original.</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查翻译中的 HTML 注释数量是否与原始注释不同。</target>
        </trans-unit>
        <trans-unit>
          <source>Name entity</source>
          <target>名称实体</target>
        </trans-unit>
        <trans-unit>
          <source>You can include any data as custom resource</source>
          <target>您可以包含任何数据作为自定义资源</target>
        </trans-unit>
        <trans-unit>
          <source>Maximum characters</source>
          <target>最大字符数</target>
        </trans-unit>
        <trans-unit>
          <source>Read &amp;lt;sisulizersamples&amp;gt;\VCL\VCL.pdf and see &amp;lt;sisulizersamples&amp;gt;\VCL\Delphi\BiDi samples.</source>
          <target>阅读 &amp;lt;sisulizersamples&amp;gt;\VCL\VCL.pdf 并查看 &amp;lt;sisulizersamples&amp;gt;\VCL\Delphi\BiDi 样本。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Translation/Current Translation&lt;/em&gt; contains the current translation of the string. If you just changed the translation of a string these values of those strings that you have checked will be updated matching the translation of the edited string.</source>
          <target>&lt;em&gt;Translation/Current Translation&lt;/em&gt;包含字符串的当前翻译。如果您刚刚更改了一个字符串的翻译，您检查过的这些字符串的这些值将根据编辑后的字符串的翻译进行更新。</target>
        </trans-unit>
        <trans-unit>
          <source>I have purchased a license key</source>
          <target>我已经购买了许可证密钥</target>
        </trans-unit>
        <trans-unit>
          <source>Each row in the component mappings list contains a mapping of one component. The mapping contains the following properties:</source>
          <target>组件映射列表中的每一行都包含一个组件的映射。该映射包含以下属性：</target>
        </trans-unit>
        <trans-unit>
          <source>Support for &lt;a href=&quot;AndroidLocalization.htm&quot;&gt;Android&lt;/a&gt;</source>
          <target>支持&lt;a href=&quot;AndroidLocalization.htm&quot;&gt;安卓&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit>
          <source>Set or clear current row with &lt;a href=&quot;WorkingWithTranslationSheet.htm#DoNotTranslate&quot;&gt;Read Only&lt;/a&gt; state.</source>
          <target>以&lt;a href=&quot;WorkingWithTranslationSheet.htm#DoNotTranslate&quot;&gt;只读&lt;/a&gt;状态设置或清除当前行。</target>
        </trans-unit>
        <trans-unit>
          <source>When you start Sisulizer for first time it will create initial translations engines. The initial translation engines depend on the active Sisulizer &lt;a href=&quot;Licenses.htm&quot;&gt;license&lt;/a&gt;:</source>
          <target>当您第一次启动 Sisulizer 时，它会创建初始翻译引擎。初始翻译引擎取决于有效的 Sisulizer&lt;a href=&quot;Licenses.htm&quot;&gt;许可证&lt;/a&gt;：</target>
        </trans-unit>
        <trans-unit>
          <source>Edit row Max Characters value. If the value is specified or is greater than zero, you can&#x27;t enter a value for the translation that is greater than the value specified.</source>
          <target>编辑行 Max Characters 值。如果该值已指定或大于零，则不能为翻译输入大于指定值的值。</target>
        </trans-unit>
        <trans-unit>
          <source>Click Test to test if Sisulizer can access &lt;a href=&quot;http://www.sunda.fi/eng/tuotteet_seramenterprise.html&quot; target=&quot;_blank&quot;&gt;Sunda&lt;/a&gt;&lt;a href=&quot;http://www.worldlingo.com/&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt;.</source>
          <target>点击Test测试Sisulizer是否可以访问&lt;a href=&quot;http://www.sunda.fi/eng/tuotteet_seramenterprise.html&quot; target=&quot;_blank&quot;&gt;Sunda&lt;/a&gt;&lt;a href=&quot;http://www.worldlingo.com/&quot; target=&quot;_blank&quot;&gt;&lt;/a&gt; .</target>
        </trans-unit>
        <trans-unit>
          <source>Your EXE or DLL contains resource data of inherited dialog that is not linked to the application. The dialog is most liked unused but still remain in the project file. Remove the unit from the project file.</source>
          <target>您的 EXE 或 DLL 包含未链接到应用程序的继承对话框的资源数据。该对话框最喜欢未使用但仍保留在项目文件中。从项目文件中删除该单元。</target>
        </trans-unit>
        <trans-unit>
          <source>Select file or database to be imported</source>
          <target>选择要导入的文件或数据库</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the user name used when logging in to the FTP server.</source>
          <target>指定登录FTP服务器时使用的用户名。</target>
        </trans-unit>
        <trans-unit>
          <source>Next available value above this value</source>
          <target>高于此值的下一个可用值</target>
        </trans-unit>
        <trans-unit>
          <source>Both lanugage and country parts are upper case. For example EN-US and DE-DE.</source>
          <target>语言和国家部分都是大写的。例如 EN-US 和 DE-DE。</target>
        </trans-unit>
        <trans-unit>
          <source>Host application</source>
          <target>主机应用程序</target>
        </trans-unit>
        <trans-unit>
          <source>Set message string flag. The message string indicates the string is used in message or string formatting function in the target application. The message string status can be used in Inconsistent Message String validation routine. See: &lt;a href=&quot;ValidationTranslationDialog.htm&quot;&gt;Validate As dialog&lt;/a&gt;.</source>
          <target>设置消息字符串标志。消息字符串表示该字符串用于目标应用程序中的消息或字符串格式化功能。消息字符串状态可用于不一致消息字符串验证例程。请参阅：&lt;a href=&quot;ValidationTranslationDialog.htm&quot;&gt;验证为对话框&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Translation has been marked completed. Use this when you have checked the translation and found it be final.</source>
          <target>翻译已标记为完成。当您检查翻译并发现它是最终版本时，请使用此选项。</target>
        </trans-unit>
        <trans-unit>
          <source>File contains big endian UTF-16 data.</source>
          <target>文件包含大端 UTF-16 数据。</target>
        </trans-unit>
        <trans-unit>
          <source>When translating Chinese translators might enter  Simplified Chinese when Traditional Chinese is needed or other way around.</source>
          <target>在翻译中文时，翻译人员可能会在需要繁体中文或其他方式时输入简体中文。</target>
        </trans-unit>
        <trans-unit>
          <source>A WIN32 application or library compiled with Delphi.</source>
          <target>用 Delphi 编译的 WIN32 应用程序或库。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer project file (.sle) is a compressed file that contains the exchange project file and other possible file(s) needed by the translator. It uses the same file format as ZIP files.</source>
          <target>Sisulizer 项目文件 (.sle) 是一个压缩文件，其中包含翻译项目文件和翻译人员所需的其他可能文件。它使用与 ZIP 文件相同的文件格式。</target>
        </trans-unit>
        <trans-unit>
          <source>UTF-16 string with preceding length byte</source>
          <target>带有前面长度字节的 UTF-16 字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Auto expand nodes</source>
          <target>自动展开节点</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can access and localize dBase databases</source>
          <target>Sisulizer 可以访问和本地化 dBase 数据库</target>
        </trans-unit>
        <trans-unit>
          <source>To add a new mapping press the Add button to open File Mapping dialog that you can used to specify the file mapping.</source>
          <target>要添加新映射，请按添加按钮打开文件映射对话框，您可以使用该对话框指定文件映射。</target>
        </trans-unit>
        <trans-unit>
          <source>Tries first to import by context. If no match then import by value.</source>
          <target>首先尝试按上下文导入。如果不匹配，则按值导入。</target>
        </trans-unit>
        <trans-unit>
          <source>Use filter on validation</source>
          <target>在验证时使用过滤器</target>
        </trans-unit>
        <trans-unit>
          <source>Clears the find pane.</source>
          <target>清除查找窗格。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify country codes.</source>
          <target>使用此表指定国家/地区代码。</target>
        </trans-unit>
        <trans-unit>
          <source>The following image contain sorted table of contents where &lt;em&gt;Sort pages first, then sub folders&lt;/em&gt; sorting is used.</source>
          <target>下图包含已排序的目录，其中&lt;em&gt;首先对页面&lt;/em&gt;进行&lt;em&gt;排序，然后使用子文件夹&lt;/em&gt;排序。</target>
        </trans-unit>
        <trans-unit>
          <source>When sending translated project back to developer there is no need to create an exchange package. Just send the &lt;a href=&quot;Files.htm&quot;&gt;project file&lt;/a&gt; (.slp) to the developer. It contains all translation data.</source>
          <target>将翻译后的项目发送回开发人员时，无需创建交换包。只需将&lt;a href=&quot;Files.htm&quot;&gt;项目文件&lt;/a&gt;(.slp) 发送给开发人员即可。它包含所有翻译数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Do not add context value to translation</source>
          <target>不要在翻译中添加上下文值</target>
        </trans-unit>
        <trans-unit>
          <source>A name attribute is either x:Uid, x:Name or Name attribute. For example if you have the following menu component.</source>
          <target>名称属性是 x:Uid、x:Name 或 Name 属性。例如，如果您有以下菜单组件。</target>
        </trans-unit>
        <trans-unit>
          <source>Creates the localized items (e.g. localized files or database items) for all languages in the project.</source>
          <target>为项目中的所有语言创建本地化项（例如本地化文件或数据库项）。</target>
        </trans-unit>
        <trans-unit>
          <source>Delphi 2009 and C++Builder 2009 and later have a Unicode enabled VCL. It means that the default string is now UnicodeString instead of AnsiString. If you localize an Unicode VCL application Sisulizer writes all strings as Unicode using either UTF-8 or UTF-16.</source>
          <target>Delphi 2009 和 C++Builder 2009 及更高版本具有支持 Unicode 的 VCL。这意味着默认字符串现在是 UnicodeString 而不是 AnsiString。如果您本地化 Unicode VCL 应用程序，Sisulizer 会使用 UTF-8 或 UTF-16 将所有字符串写入 Unicode。</target>
        </trans-unit>
        <trans-unit>
          <source>Enable automatic update of binary translations</source>
          <target>启用二进制翻译的自动更新</target>
        </trans-unit>
        <trans-unit>
          <source>Existing translations are never overwritten.</source>
          <target>现有的翻译永远不会被覆盖。</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;lt;file source-language=&amp;quot;en&amp;quot; &lt;strong&gt;target-language=&amp;quot;fi&amp;quot;&lt;/strong&gt;&amp;gt;
  &amp;lt;trans-unit&amp;gt;
    &amp;lt;source&amp;gt;This is a sample&amp;lt;/source&amp;gt;
    &lt;strong&gt;&amp;lt;target&amp;gt;Tämä on esimerkki&amp;lt;/target&amp;gt;&lt;/strong&gt;
  &amp;lt;trans-unit&amp;gt;
  ...
</source>
          <target>&amp;lt;file source-language=&amp;quot;en&amp;quot; &lt;strong&gt;target-language=&amp;quot;fi&amp;quot;&lt;/strong&gt; &amp;gt; &amp;lt;trans-unit&amp;gt; &amp;lt;source&amp;gt;这是一个示例&amp;lt;/source&amp;gt; &lt;strong&gt;&amp;lt;target&amp;gt;Tämä on esimerkki&amp;lt;/target&amp;gt;&lt;/strong&gt; &amp;lt;trans-unit&amp;gt; .. .</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer imports the string even if it equals to the original value. If unchecked Sisulizer does not import string if it equals to the original value.</source>
          <target>如果选中 Sisulizer 导入字符串，即使它等于原始值。如果未选中 Sisulizer 不导入等于原始值的字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies what items are shown in the project tree. This lets you filter out items that do not need to be translated. Possible values are:</source>
          <target>指定在项目树中显示哪些项目。这使您可以过滤掉不需要翻译的项目。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>*) Only if the Visual Basic applications has been prepared for binary localization. See &lt;a href=&quot;#VisualBasic&quot;&gt;Visual Basic localization&lt;/a&gt;.</source>
          <target>*) 仅当 Visual Basic 应用程序已准备好进行二进制本地化时。请参阅&lt;a href=&quot;#VisualBasic&quot;&gt;Visual Basic 本地化&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;lt;sample&amp;gt;&amp;amp;sportname; is very fast sport.&amp;lt;/sample&amp;gt;</source>
          <target>&amp;lt;样本&amp;gt;&amp;amp;sportname;是一项非常快的运动。&amp;lt;/sample&amp;gt;</target>
        </trans-unit>
        <trans-unit>
          <source>Auto translated</source>
          <target>自动翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Translation comment column</source>
          <target>翻译评论栏</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies if Sisulizer overwrites the current value with the imported one. Possible options are:</source>
          <target>指定 Sisulizer 是否用导入的值覆盖当前值。可能的选项是：</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to set the general project options.</source>
          <target>使用此对话框设置常规项目选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Import translations from a file</source>
          <target>从文件导入翻译</target>
        </trans-unit>
        <trans-unit>
          <source>NexusDB database.&lt;br&gt;
    Type a database directory in the edit field or press ... to select a directory.</source>
          <target>NexusDB 数据库。&lt;br&gt;在编辑字段中输入数据库目录或按 ... 选择目录。</target>
        </trans-unit>
        <trans-unit>
          <source>la</source>
          <target>这</target>
        </trans-unit>
        <trans-unit>
          <source>Check this if you want to scan texts of spin controls.</source>
          <target>如果要扫描旋转控件的文本，请选中此项。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to set the options how to localize a .NET project file.</source>
          <target>使用此表设置如何本地化 .NET 项目文件的选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to replace text in the project.</source>
          <target>使用此对话框替换项目中的文本。</target>
        </trans-unit>
        <trans-unit>
          <source>Other platforms</source>
          <target>其他平台</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;strong&gt;Note!&lt;/strong&gt; This is used with Windows Forms only.</source>
          <target>&lt;strong&gt;笔记！&lt;/strong&gt;这仅用于 Windows 窗体。</target>
        </trans-unit>
        <trans-unit>
          <source>Mac code page</source>
          <target>Mac 代码页</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the layout of visual controls can not be changed.</source>
          <target>如果选中，则无法更改可视控件的布局。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to select the fields of a database table where you want to import data from.</source>
          <target>使用此表选择要从中导入数据的数据库表的字段。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the programming language that your &lt;a href=&quot;SourceCodeLocalization.htm&quot;&gt;source code&lt;/a&gt; uses.</source>
          <target>使用此表指定&lt;a href=&quot;SourceCodeLocalization.htm&quot;&gt;源代码&lt;/a&gt;使用的编程语言。</target>
        </trans-unit>
        <trans-unit>
          <source>.NET assembly file</source>
          <target>.NET 程序集文件</target>
        </trans-unit>
        <trans-unit>
          <source>Little endian UTF-16 text file.</source>
          <target>小端 UTF-16 文本文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Runtime language change requires a lot from the platform. In order to make it automatic (i.e. without significant code modification) the platform need to support component oriented programming. In practice this means that runtime language change needs an object oriented and component/property/event modeled platform. Currently there are only few platforms that meet those requirements. They are:</source>
          <target>运行时语言更改需要来自平台的大量内容。为了使其自动化（即无需大量代码修改），平台需要支持面向组件的编程。实际上，这意味着运行时语言更改需要面向对象和组件/属性/事件建模平台。目前，满足这些要求的平台很少。他们是：</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify the type of a single custom resource.</source>
          <target>使用此对话框指定单个自定义资源的类型。</target>
        </trans-unit>
        <trans-unit>
          <source>Spell and Grammar Checking</source>
          <target>拼写和语法检查</target>
        </trans-unit>
        <trans-unit>
          <source>This validation can handle also Asian periods and different question marks used in Japanese text.</source>
          <target>此验证还可以处理亚洲时期和日语文本中使用的不同问号。</target>
        </trans-unit>
        <trans-unit>
          <source>Property file options</source>
          <target>属性文件选项</target>
        </trans-unit>
        <trans-unit>
          <source>This dialog is shown in a case where Sisulizer tries to import a strings but there is already existing value that differs from the imported one. Click &lt;em&gt;Yes&lt;/em&gt; to overwrite the current value. Click &lt;em&gt;No&lt;/em&gt; to ignore importing of this value. Click &lt;em&gt;No to All&lt;/em&gt; if you want that Sisulizer not to show this dialog any more but simple   ignores those strings where the current value if different to   imported one. Click 
  &lt;em&gt;Yes to All&lt;/em&gt; if you want that Sisulizer does not show this dialog   any more but overwrites all existing values when importing.</source>
          <target>在 Sisulizer 尝试导入字符串但已经存在与导入字符串不同的值的情况下，将显示此对话框。单击&lt;em&gt;是以&lt;/em&gt;覆盖当前值。单击&lt;em&gt;否&lt;/em&gt;忽略此值的导入。如果您希望 Sisulizer 不再显示此对话框，但简单地忽略当前值与导入的值不同的那些字符串，请单击&lt;em&gt;No to All&lt;/em&gt; 。如果您希望 Sisulizer 不再显示此对话框，而是在导入时覆盖所有现有值，请单击&lt;em&gt;Yes to All&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit>
          <source>Automatically selects the node when searching untranslated rows</source>
          <target>搜索未翻译行时自动选择节点</target>
        </trans-unit>
        <trans-unit>
          <source>Ansi mode. Output is written in Ansi instead of UTF-8.</source>
          <target>安斯模式。输出是用 Ansi 而不是 UTF-8 编写的。</target>
        </trans-unit>
        <trans-unit>
          <source>Exits the application.</source>
          <target>退出应用程序。</target>
        </trans-unit>
        <trans-unit>
          <source>Select File sheet lets you select a file or files to be &lt;a href=&quot;SupportedFiles.htm&quot;&gt;localized&lt;/a&gt; or &lt;a href=&quot;ImportingData.htm&quot;&gt;imported&lt;/a&gt;.</source>
          <target>选择文件表允许您选择要&lt;a href=&quot;SupportedFiles.htm&quot;&gt;本地化&lt;/a&gt;或&lt;a href=&quot;ImportingData.htm&quot;&gt;导入的&lt;/a&gt;一个或多个文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies filter based on row statuses</source>
          <target>根据行状态指定过滤器</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the original script and specifies the default original font. You can change the original script by changing the original language in the &lt;a href=&quot;SourceDialogEncodingsSheet.htm&quot;&gt;Encodings sheet&lt;/a&gt;. Click &lt;em&gt;Change&lt;/em&gt; to change the default original font.</source>
          <target>显示原始脚本并指定默认原始字体。您可以通过更改&lt;a href=&quot;SourceDialogEncodingsSheet.htm&quot;&gt;编码表中&lt;/a&gt;的原始语言来更改原始脚本。单击&lt;em&gt;更改&lt;/em&gt;以更改默认的原始字体。</target>
        </trans-unit>
        <trans-unit>
          <source>Image data in hexadecimal</source>
          <target>十六进制图像数据</target>
        </trans-unit>
        <trans-unit>
          <source>If you add a resource id file or files Sisulizer uses symbolic names instead of integer values on every possible id. This also makes it possible to import translations from localized .rc files. Without header files you can import translations only from localized binary files.</source>
          <target>如果您添加一个或多个资源 id 文件，Sisulizer 会在每个可能的 id 上使用符号名称而不是整数值。这也使得从本地化的 .rc 文件导入翻译成为可能。如果没有头文件，您只能从本地化的二进制文件导入翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Choose Align to Grid to align the selected components to the closest grid point. To select more than one component, either hold down Shift while clicking each one, or click and drag your mouse button over the components you want to select. Choose Editor Properties, click the Grid page, and check Snap to grid so that any component will align itself automatically when added. You can specify the form&#x27;s grid size on the Grid page. You can invoke Align to Grid by right clicking on an active form with 
selected components.</source>
          <target>选择“对齐网格”以将所选组件与最近的网格点对齐。要选择多个组件，请按住 Shift 键同时单击每个组件，或者单击鼠标按钮并将其拖到要选择的组件上。选择 Editor Properties，单击 Grid 页面，然后选中 Snap to grid 以便任何组件在添加时都会自动对齐。您可以在“网格”页面上指定表单的网格大小。您可以通过右键单击带有选定组件的活动表单来调用对齐网格。</target>
        </trans-unit>
        <trans-unit>
          <source>If you are not connected to Internet Sisulizer will automatically close this view few seconds after you have started Sisulizer.</source>
          <target>如果您未连接到 Internet，Sisulizer 将在您启动 Sisulizer 几秒钟后自动关闭此视图。</target>
        </trans-unit>
        <trans-unit>
          <source>Saves the active project file with a different name or in a different location.</source>
          <target>使用不同的名称或在不同的位置保存活动项目文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Spell checking modes</source>
          <target>拼写检查模式</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;strong&gt;.NET:&lt;/strong&gt; This is visible only of the platform does not provide type information of the property. Windows Forms in .NET contain such information but WPF does not. However because a .NEt project can contains mixed Windows Forms and WPF data this type in show even on pure Windows Forms projects.</source>
          <target>&lt;strong&gt;.NET：&lt;/strong&gt;仅平台可见，不提供属性的类型信息。 .NET 中的 Windows 窗体包含此类信息，但 WPF 不包含。但是，由于 .NEt 项目可以包含混合的 Windows 窗体和 WPF 数据，因此即使在纯 Windows 窗体项目中也可以显示这种类型。</target>
        </trans-unit>
        <trans-unit>
          <source>Each &lt;a href=&quot;BinaryFieldDialog.htm&quot;&gt;field&lt;/a&gt; contain one data such as integer or string value or just array of bytes.</source>
          <target>每个&lt;a href=&quot;BinaryFieldDialog.htm&quot;&gt;字段&lt;/a&gt;包含一个数据，例如整数或字符串值或仅字节数组。</target>
        </trans-unit>
        <trans-unit>
          <source>Germany or the Federal Republic of Germany is one of the world&#x27;s leading industrialized countries, located in the heart of Europe.</source>
          <target>德国或德意志联邦共和国是世界领先的工业化国家之一，位于欧洲的中心。</target>
        </trans-unit>
        <trans-unit>
          <source>Excluded externsion sheet</source>
          <target>排除的扩展表</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the default input method mode of the controls when creating Simplified Chinese application files. This is enabled if the project contains Simplified Chinese.</source>
          <target>创建简体中文应用程序文件时，指定控件的默认输入法模式。如果项目包含简体中文，则启用此功能。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer localizes client side scripts such as JavaScript and VBScript codes.</source>
          <target>如果选中 Sisulizer 本地化客户端脚本，如 JavaScript 和 VBScript 代码。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies how text is written in HTML. Possible values are:</source>
          <target>指定文本在 HTML 中的书写方式。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Path&lt;/em&gt; contains the context of the string. It helps you to identify the string.</source>
          <target>&lt;em&gt;路径&lt;/em&gt;包含字符串的上下文。它可以帮助您识别字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Unused inhrited forms</source>
          <target>未使用的继承表格</target>
        </trans-unit>
        <trans-unit>
          <source>Resource id file name</source>
          <target>资源 ID 文件名</target>
        </trans-unit>
        <trans-unit>
          <source>Address of the remote computer system. It identifies the address of the remote computer system that will act as the endpoint for the client connection. The address can be a computer name such as &amp;quot;www.sisulizer.com&amp;quot; or an IP Address such as &amp;quot;208.109.67.175&amp;quot;. To connect to a server on your machine, use an IP address like &amp;quot;127.0.0.1&amp;quot; or &amp;quot;localhost&amp;quot;.</source>
          <target>远程计算机系统的地址。它标识将充当客户端连接端点的远程计算机系统的地址。地址可以是计算机名称（例如“www.sisulizer.com”）或 IP 地址（例如“208.109.67.175”）。要连接到您机器上的服务器，请使用 IP 地址，例如“127.0.0.1”或“localhost”。</target>
        </trans-unit>
        <trans-unit>
          <source>The original string is reduced to a one character string containing the first character of the string.</source>
          <target>原始字符串被缩减为一个包含字符串第一个字符的字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Project is in translate only mode</source>
          <target>项目处于仅翻译模式</target>
        </trans-unit>
        <trans-unit>
          <source>and we want to localize strings marked with bold typeface we need to enter following lines:</source>
          <target>并且我们想要本地化标有粗体的字符串，我们需要输入以下几行：</target>
        </trans-unit>
        <trans-unit>
          <source>Detect the framework.</source>
          <target>检测框架。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;a href=&quot;http://www.microsofttranslator.com/&quot; target=&quot;_blank&quot;&gt;Microsoft Translator&lt;/a&gt; is a &lt;a href=&quot;TranslationEngines.htm#MachineTranslator&quot;&gt;machine translator&lt;/a&gt; provided by Microsoft. Microsoft Translate supports all major languages. Microsoft Translate is a free service up to 2 million characters per month. However you have to first get your personal Microsoft Translate account before  you can take Microsoft Translate in use in your Sisulizer.</source>
          <target>&lt;a href=&quot;http://www.microsofttranslator.com/&quot; target=&quot;_blank&quot;&gt;Microsoft Translator&lt;/a&gt;是微软提供的&lt;a href=&quot;TranslationEngines.htm#MachineTranslator&quot;&gt;机器翻译器&lt;/a&gt;。 Microsoft Translate 支持所有主要语言。 Microsoft Translate 是一项免费服务，每月最多 200 万个字符。但是，您必须先获得您的个人 Microsoft Translate 帐户，然后才能在您的 Sisulizer 中使用 Microsoft Translate。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;strong&gt;Note!&lt;/strong&gt; All the edits you make are immediately updated to the translation memory. You can not undo them.</source>
          <target>&lt;strong&gt;笔记！&lt;/strong&gt;您所做的所有编辑都会立即更新到翻译记忆库中。您无法撤消它们。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer will automatically detect the format of the resource. In most cases Sisulizer can correctly detect the format. If it does uncheck this check box and specify the format.</source>
          <target>如果勾选 Sisulizer 会自动检测资源的格式。在大多数情况下，Sisulizer 可以正确检测格式。如果确实取消选中此复选框并指定格式。</target>
        </trans-unit>
        <trans-unit>
          <source>Performs spell checking &lt;a href=&quot;SpellChecking.htm#Modes&quot;&gt;on the fly&lt;/a&gt; when you type and when your view a project.</source>
          <target>在您键入和查看项目时&lt;a href=&quot;SpellChecking.htm#Modes&quot;&gt;即时&lt;/a&gt;执行拼写检查。</target>
        </trans-unit>
        <trans-unit>
          <source>OpenOffice 2.x dictionaries are deployed as ZIP files that contain .dic and .aff files. &lt;a href=&quot;http://wiki.services.openoffice.org/wiki/Dictionaries&quot; target=&quot;_blank&quot;&gt;Download&lt;/a&gt; a dictionary file, unzip it and add the .dic file to Sisulizer. Choose &lt;a href=&quot;GeneralSettingsDialog.htm&quot;&gt;Tools | General&lt;/a&gt; menu, select &lt;a href=&quot;GeneralSettingsDialogSpellingSheet.htm&quot;&gt;Spelling &amp;amp; Grammar sheet&lt;/a&gt;, and click Add button.</source>
          <target>OpenOffice 2.x 词典部署为包含 .dic 和 .aff 文件的 ZIP 文件。&lt;a href=&quot;http://wiki.services.openoffice.org/wiki/Dictionaries&quot; target=&quot;_blank&quot;&gt;下载&lt;/a&gt;字典文件，解压缩并将 .dic 文件添加到 Sisulizer。选择&lt;a href=&quot;GeneralSettingsDialog.htm&quot;&gt;工具 | General&lt;/a&gt;菜单，选择&lt;a href=&quot;GeneralSettingsDialogSpellingSheet.htm&quot;&gt;Spelling &amp;amp; Grammar sheet&lt;/a&gt; ，然后单击 Add 按钮。</target>
        </trans-unit>
        <trans-unit>
          <source>Data types</source>
          <target>数据类型</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulzier does not merge rows that have a string value that already exist on the current project.</source>
          <target>如果选中 Sisulzier 不会合并具有当前项目中已存在的字符串值的行。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer has four different license levels. The first three are for developers, localization managers, localization engineers, software testers, QA persons and translators. The fourth one is only for translators.</source>
          <target>Sisulizer 有四种不同的许可证级别。前三个面向开发人员、本地化经理、本地化工程师、软件测试人员、QA 人员和翻译人员。第四个只供翻译人员使用。</target>
        </trans-unit>
        <trans-unit>
          <source>Center in window</source>
          <target>窗口居中</target>
        </trans-unit>
        <trans-unit>
          <source>Incompatible Ansi code page</source>
          <target>不兼容的 Ansi 代码页</target>
        </trans-unit>
        <trans-unit>
          <source>Check &lt;em&gt;Message patterns&lt;/em&gt; if you want  to preserve placeholder of message patterns during translation. Check &lt;em&gt;Filenames&lt;/em&gt; if you want to preserve  file and path names during translation.</source>
          <target>如果要在翻译期间保留消息模式的占位符，请选中&lt;em&gt;消息模式&lt;/em&gt;。如果您想在翻译过程中保留文件名和路径名，请选中&lt;em&gt;文件名&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can not find the output file of your Visual Studio project file. Sisulizer tries to find the assembly from the output directory of the active configuration of the Visual Studio project. The are two possible reasons why Sisulizer did not find the assembly. The first one is that your project is not yet compiled. In that case open it into Visual Studio and compile it. Another possible reason is that you have not selected the default  configuration. In that case open your Sisulizer project, right click your Visual Studio project in Sisulizer&#x27;s project tree and choose properties. Use File sheet to set the configuration.</source>
          <target>Sisulizer 找不到您的 Visual Studio 项目文件的输出文件。 Sisulizer 尝试从 Visual Studio 项目的活动配置的输出目录中查找程序集。 Sisulizer 未找到该组件的两个可能原因。第一个是您的项目尚未编译。在这种情况下，将其打开到 Visual Studio 中并进行编译。另一个可能的原因是您没有选择默认配置。在这种情况下，打开您的 Sisulizer 项目，在 Sisulizer 的项目树中右键单击您的 Visual Studio 项目并选择属性。使用文件表设置配置。</target>
        </trans-unit>
        <trans-unit>
          <source>In above &amp;quot; //  This is a comment&amp;quot; + line end are skipped when scanning.</source>
          <target>扫描时跳过上面的“//这是注释”+行尾。</target>
        </trans-unit>
        <trans-unit>
          <source>Read more about &lt;a href=&quot;NetLocalization.htm&quot;&gt;.NET localization&lt;/a&gt;.</source>
          <target>阅读有关&lt;a href=&quot;NetLocalization.htm&quot;&gt;.NET 本地化的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Runtime language change is not implemented for other platforms but .NET and VCL. It is possible to implement for Visual C++, Visual Basic and Java but not without a significant need to modify your application(s) and loosing possibility for visual localization. If you need runtime language change you have to store all strings to a database or text/XML file, you have to write your own functions or classes to get translations from database or file to perform runtime language change.</source>
          <target>除了 .NET 和 VCL 之外，其他平台没有实现运行时语言更改。可以为 Visual C++、Visual Basic 和 Java 实现，但需要大量修改您的应用程序并失去视觉本地化的可能性。如果您需要更改运行时语言，您必须将所有字符串存储到数据库或文本/XML 文件中，您必须编写自己的函数或类以从数据库或文件中获取翻译以执行运行时语言更改。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked editor shows colored boundaries around frames. You cab specify used color.</source>
          <target>如果选中的编辑器在框架周围显示彩色边界。您可以指定使用的颜色。</target>
        </trans-unit>
        <trans-unit>
          <source>Some .NET project or solutions contain two or more namespace. In order to import resource string correctly you should specify the namespace. Select the namespace used in the resource file that you are importing.</source>
          <target>某些 .NET 项目或解决方案包含两个或多个命名空间。为了正确导入资源字符串，您应该指定命名空间。选择您要导入的资源文件中使用的命名空间。</target>
        </trans-unit>
        <trans-unit>
          <source>If you have used Multilizer you can just open your existing Multilizer project file. Sisulizer automatically makes similar Sisulizer project file and imports existing translations into the project. &lt;a href=&quot;MprConvert.htm&quot;&gt;Learn more about that&lt;/a&gt;.</source>
          <target>如果您使用过 Multilizer，则只需打开现有的 Multilizer 项目文件即可。 Sisulizer 自动制作类似的 Sisulizer 项目文件并将现有翻译导入项目。&lt;a href=&quot;MprConvert.htm&quot;&gt;了解更多信息&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>It is not practical to implement runtime language change in MFC. It is possible but not without significant need to &lt;a href=&quot;RuntimeLanguageChangeOther.htm&quot;&gt;modify your existing code&lt;/a&gt;.</source>
          <target>在 MFC 中实现运行时语言更改是不切实际的。&lt;a href=&quot;RuntimeLanguageChangeOther.htm&quot;&gt;修改现有代码&lt;/a&gt;是可能的，但并非没有必要。</target>
        </trans-unit>
        <trans-unit>
          <source>Machine translator</source>
          <target>机器翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Hides the selected column.</source>
          <target>隐藏选定的列。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to configure the default &lt;a href=&quot;Segmentation.htm&quot;&gt;segmentation rules&lt;/a&gt;.</source>
          <target>使用此表配置默认&lt;a href=&quot;Segmentation.htm&quot;&gt;分段规则&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this page to set the default languages for the project. The default languages will be automatically added to every new project created. Add the languages that you most often use to the Selected languages list.</source>
          <target>使用此页面设置项目的默认语言。默认语言将自动添加到创建的每个新项目中。将您最常使用的语言添加到所选语言列表中。</target>
        </trans-unit>
        <trans-unit>
          <source>Use index in list items</source>
          <target>在列表项中使用索引</target>
        </trans-unit>
        <trans-unit>
          <source>Run or show the localized source file.</source>
          <target>运行或显示本地化的源文件。</target>
        </trans-unit>
        <trans-unit>
          <source>The bottom side of the main view contains the panes.</source>
          <target>主视图的底部包含窗格。</target>
        </trans-unit>
        <trans-unit>
          <source>Overwrites if existing translation status is less or equal to the given status.</source>
          <target>如果现有翻译状态小于或等于给定状态，则覆盖。</target>
        </trans-unit>
        <trans-unit>
          <source>Translation sheet is located on the lower right side of the main view. The sheet is used to enter translations. A typical sheet looks like this. It contains flags, context, translation status, original and target language columns.</source>
          <target>翻译表位于主视图的右下方。该表用于输入翻译。典型的工作表如下所示。它包含标志、上下文、翻译状态、原始和目标语言列。</target>
        </trans-unit>
        <trans-unit>
          <source>How to create resource DLLs</source>
          <target>如何创建资源 DLL</target>
        </trans-unit>
        <trans-unit>
          <source>File entities</source>
          <target>文件实体</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the options of a Visual Studio .NET project belonging to a Visual Studio .NET solution. Most settings are solution wide so they are given in the solution dialog. However you can set or override the following settings.</source>
          <target>指定属于 Visual Studio .NET 解决方案的 Visual Studio .NET 项目的选项。大多数设置都是解决方案范围的，因此它们在解决方案对话框中给出。但是，您可以设置或覆盖以下设置。</target>
        </trans-unit>
        <trans-unit>
          <source>Removes current pseudo translation from the selected column.</source>
          <target>从选定的列中删除当前的伪翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Sample table</source>
          <target>样品表</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer sets the translation date to current date even if the translation is imported.</source>
          <target>如果选中 Sisulizer 将翻译日期设置为当前日期，即使翻译已导入。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer imports translations from existing localized files. Importing is done by context sensitive way so it is very accurate.&lt;br&gt;This feature imports &lt;strong&gt;all kind of data&lt;/strong&gt; such as strings, changed user interface element positions and sizes, fonts, etc.</source>
          <target>Sisulizer 从现有的本地化文件导入翻译。导入是通过上下文敏感的方式完成的，因此非常准确。&lt;br&gt;此功能可导入&lt;strong&gt;所有类型的数据，&lt;/strong&gt;例如字符串、更改的用户界面元素位置和大小、字体等。</target>
        </trans-unit>
        <trans-unit>
          <source>Online localization depends on the format of your online help. Sisulizer support HTML, CHM (HTML Help) and WebHelp files.</source>
          <target>在线本地化取决于在线帮助的格式。 Sisulizer 支持 HTML、CHM（HTML 帮助）和 WebHelp 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks if there are any &lt;a href=&quot;SpellChecking.htm&quot;&gt;spell check&lt;/a&gt; errors in a string. In addition of this validation you can check spelling by using &lt;a href=&quot;SpellChecking.htm#Modes&quot;&gt;real time spell checking&lt;/a&gt; and &lt;a href=&quot;SpellChecking.htm#Modes&quot;&gt;interactive spell checking&lt;/a&gt;.</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查字符串中是否存在任何&lt;a href=&quot;SpellChecking.htm&quot;&gt;拼写检查&lt;/a&gt;错误。除了此验证之外，您还可以使用&lt;a href=&quot;SpellChecking.htm#Modes&quot;&gt;实时拼写检查&lt;/a&gt;和&lt;a href=&quot;SpellChecking.htm#Modes&quot;&gt;交互式拼写检查来检查拼写&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>xml:lang attribute is updated if it exists in the original XAML file.</source>
          <target>如果原始 XAML 文件中存在 xml:lang 属性，则会更新该属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Ansi string with preceding length word</source>
          <target>带有前面长度字的 Ansi 字符串</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the translation is done on both directions. This means if the translation memory contains English to Japanese translation (e.g. &amp;quot;mountain&amp;quot; -&amp;gt; &amp;quot;&amp;#23665;&amp;quot;) the translation memory can also translate Japanese string &amp;quot;&amp;#23665;&amp;quot; to English string &amp;quot;mountain&amp;quot;. Making translation bidirectional slows down the translation process sligthly but enables translations to both directions.</source>
          <target>如果选中，则翻译在两个方向上完成。这意味着如果翻译记忆库包含英语到日语的翻译（例如“mountain”-&amp;gt;“山”），翻译记忆库还可以将日语字符串“山”翻译成英语字符串“mountain”。使翻译双向会稍微减慢翻译过程，但可以实现双向翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>There are two kinds of special attributes: context and localize attributes. You can use &lt;a href=&quot;XmlContext.htm&quot;&gt;context attribute&lt;/a&gt; to give content to elements. You can use &lt;a href=&quot;XmlLocalizeAttribute.htm&quot;&gt;localize attribute&lt;/a&gt; to control element by element what to localize.</source>
          <target>有两种特殊属性：context 和 localize 属性。您可以使用&lt;a href=&quot;XmlContext.htm&quot;&gt;上下文属性&lt;/a&gt;为元素提供内容。您可以使用&lt;a href=&quot;XmlLocalizeAttribute.htm&quot;&gt;localize 属性&lt;/a&gt;来逐个控制要本地化的内容。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer saves the project before running or showing the localized item.</source>
          <target>如果选中 Sisulizer 在运行或显示本地化项目之前保存项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Write SQL statement that Sisulizer calls when it needs a new id. SQL statement must return one row where the first field contains the row id.</source>
          <target>编写 Sisulizer 在需要新 id 时调用的 SQL 语句。 SQL 语句必须返回一行，其中第一个字段包含行 ID。</target>
        </trans-unit>
        <trans-unit>
          <source>Paste value form main language to the selected language cell. Use this if you have a sub language column (e.g. Germany (Switzerland)) and you want to copy translation from the main language (e.g. German).</source>
          <target>将主语言的值粘贴到选定的语言单元格。如果您有一个子语言栏（例如德国（瑞士））并且您想从主要语言（例如德语）复制翻译，请使用此选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Importing from localized files</source>
          <target>从本地化文件导入</target>
        </trans-unit>
        <trans-unit>
          <source>I want to buy a license key online and get</source>
          <target>我想在线购买许可证密钥并获得</target>
        </trans-unit>
        <trans-unit>
          <source>When creating localized XML file Sisulizer always encodes &amp;amp; and &amp;lt;. Encoding of other predefined entities depends on their usage in the original file. If the original file has encoded them then the localized files created by Sisulizer use the same encoding. If the original uses several encoding methods Sisulizer prefers name encoding over hex and integer encoding, and hex encoding over integer encoding.</source>
          <target>创建本地化 XML 文件时，Sisulizer 始终对 &amp;amp; 和 &amp;lt; 进行编码。其他预定义实体的编码取决于它们在原始文件中的使用情况。如果原始文件对它们进行了编码，则 Sisulizer 创建的本地化文件使用相同的编码。如果原始使用几种编码方法，Sisulizer 更喜欢名称编码而不是十六进制和整数编码，十六进制编码优于整数编码。</target>
        </trans-unit>
        <trans-unit>
          <source>Full width alphabet used</source>
          <target>使用全角字母</target>
        </trans-unit>
        <trans-unit>
          <source>Stretch Bounds by Text</source>
          <target>按文本拉伸边界</target>
        </trans-unit>
        <trans-unit>
          <source>Set the full path name of Visual Basic application.</source>
          <target>设置 Visual Basic 应用程序的完整路径名。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the format of the user defined text resource.</source>
          <target>指定用户定义的文本资源的格式。</target>
        </trans-unit>
        <trans-unit>
          <source>Status is set  either to &lt;em&gt;auto translated&lt;/em&gt; or &lt;em&gt;best guess&lt;/em&gt; depending on the translation method that was used.</source>
          <target>根据使用的翻译方法，状态设置为&lt;em&gt;自动翻译&lt;/em&gt;或&lt;em&gt;最佳猜测&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>VCL&#x27;s resource DLLs and runtime language change</source>
          <target>VCL 的资源 DLL 和运行时语言更改</target>
        </trans-unit>
        <trans-unit>
          <source>Wizard creates one single package file that contains all languages that you select.</source>
          <target>向导会创建一个包含您选择的所有语言的包文件。</target>
        </trans-unit>
        <trans-unit>
          <source>You can filter items based on their &lt;a href=&quot;WorkingWithTranslationSheet.htm#DoNotTranslate&quot;&gt;Do not translate state&lt;/a&gt;. Possible values are:</source>
          <target>您可以根据项目的&lt;a href=&quot;WorkingWithTranslationSheet.htm#DoNotTranslate&quot;&gt;“不翻译”状态&lt;/a&gt;过滤项目。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the Java2 Micro Edition settings.</source>
          <target>使用此表指定 Java2 Micro Edition 设置。</target>
        </trans-unit>
        <trans-unit>
          <source>Definition is used when</source>
          <target>定义用于</target>
        </trans-unit>
        <trans-unit>
          <source>Our sample contains context as the first value in the row. So the first rule will contain context value. There is no need for before expression because this is the first value in the row. Text value is separated from context with a tab character. This is why the after expression will be &amp;quot;\t&amp;quot;. The second rule contains the text value. Because the first rule has after expression there is no need for before expression. The text value is ended either by new line or file end. This is why our after expression will be &amp;quot;\r\n|\z&amp;quot;. Now our definition is complete and it contains two rules:</source>
          <target>我们的示例包含上下文作为行中的第一个值。所以第一条规则将包含上下文值。不需要 before 表达式，因为这是行中的第一个值。文本值与上下文用制表符分隔。这就是 after 表达式将是“\t”的原因。第二个规则包含文本值。因为第一条规则有 after 表达式，所以不需要 before 表达式。文本值以新行或文件结尾结束。这就是为什么我们的后表达式将是“\r\n|\z”。现在我们的定义已经完成，它包含两个规则：</target>
        </trans-unit>
        <trans-unit>
          <source>If checked maximum lengths in pixels are written to the file.</source>
          <target>如果选中以像素为单位的最大长度写入文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the field name of the extended table that contains the block number of the extended data. Each block has a number. First block is either 0 or 1 depending on the logic of your application. Each block after that uses number that is one larger than the previous block. So the sequence is either 0, 1, 2, ... or 1, 2, 3 ...</source>
          <target>指定包含扩展数据块号的扩展表的字段名称。每个块都有一个编号。第一个块是 0 或 1，具体取决于您的应用程序的逻辑。之后的每个块使用比前一个块大一个的数字。所以序列是 0, 1, 2, ... 或 1, 2, 3 ...</target>
        </trans-unit>
        <trans-unit>
          <source>Choose  &lt;a href=&quot;GeneralSettingsDialog.htm&quot;&gt;Tools | General&lt;/a&gt; menu and select &lt;a href=&quot;GeneralSettingsDialogSpellingSheet.htm&quot;&gt;Spelling &amp;amp; Grammar sheet&lt;/a&gt; to configure spell checking. The sheet contains list of configured spell checkers. You can add any number of spell checker/dictionary combinations. There can be multiple spell checkers for one language. Each spell checker item configures one of the above spell checker engine with one dictionary and language. Each configuration uses a custom dictionary file. It is a dictionary where you can add your own words. By default each Sisulizer project has its own custom dictionary that is saved inside Sisulizer project file. You can also make custom dictionary to be save into Sisulizer configuration file in case it is shared with all projects. Third option is to use external custom dictionary file. Two or more spell checker configurations can share the same dictionary file but they must have &lt;a href=&quot;SpellCheckerDialog.htm#Custom&quot;&gt;different custom dictionary locations&lt;/a&gt;.</source>
          <target>选择&lt;a href=&quot;GeneralSettingsDialog.htm&quot;&gt;工具 |常规&lt;/a&gt;菜单并选择&lt;a href=&quot;GeneralSettingsDialogSpellingSheet.htm&quot;&gt;拼写和语法表&lt;/a&gt;以配置拼写检查。该工作表包含已配置的拼写检查器列表。您可以添加任意数量的拼写检查器/字典组合。一种语言可以有多个拼写检查器。每个拼写检查器项目都使用一种字典和语言配置上述拼写检查器引擎之一。每个配置使用一个自定义字典文件。这是一本字典，您可以在其中添加自己的单词。默认情况下，每个 Sisulizer 项目都有自己的自定义字典，保存在 Sisulizer 项目文件中。您还可以将自定义字典保存到 Sisulizer 配置文件中，以防与所有项目共享。第三个选项是使用外部自定义词典文件。两个或多个拼写检查器配置可以共享同一个字典文件，但它们必须具有&lt;a href=&quot;SpellCheckerDialog.htm#Custom&quot;&gt;不同的自定义字典位置&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>If all rows on node has been translated with complete status marks node with complete icon.</source>
          <target>如果节点上的所有行都已转换为带有完整图标的完整状态标记节点。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to edit items in the &lt;a href=&quot;SpellCheckerDialog.htm&quot;&gt;custom dictionary&lt;/a&gt;.</source>
          <target>使用此对话框编辑&lt;a href=&quot;SpellCheckerDialog.htm&quot;&gt;自定义词典中的&lt;/a&gt;项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies how tags are used when localizing. Possible values are:</source>
          <target>指定本地化时如何使用标签。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Proxy server</source>
          <target>代理服务器</target>
        </trans-unit>
        <trans-unit>
          <source>This is available only when importing data. When importing this assumes that the import file has the same format as the file included to current project. If the format is different select &lt;em&gt;Regular expression defined text file&lt;/em&gt; in below.</source>
          <target>这仅在导入数据时可用。导入时，假设导入文件与当前项目中包含的文件具有相同的格式。如果格式不同，请选择下面的&lt;em&gt;正则表达式定义的文本文件&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>duplicate</source>
          <target>复制</target>
        </trans-unit>
        <trans-unit>
          <source>Set the status of imported string to</source>
          <target>将导入字符串的状态设置为</target>
        </trans-unit>
        <trans-unit>
          <source>If checked TMX file contains single XML tag (e.g. &amp;lt;header/&amp;gt;). If unchecked no single XML tags are written (e.g. &amp;lt;header&amp;gt;&amp;lt;/header&amp;gt;).</source>
          <target>如果选中的 TMX 文件包含单个 XML 标记（例如 &amp;lt;header/&amp;gt;）。如果未选中，则不会写入单个 XML 标记（例如 &amp;lt;header&amp;gt;&amp;lt;/header&amp;gt;）。</target>
        </trans-unit>
        <trans-unit>
          <source>Use values in the original element as context ids. If there are two or more elements with same original value then Sisulizer adds comment value to the original value. If this does not generate an unique id then an integer value is added to the original value until an unique id is got.</source>
          <target>使用原始元素中的值作为上下文 ID。如果有两个或更多元素具有相同的原始值，则 Sisulizer 将注释值添加到原始值。如果这不会生成唯一 id，则将整数值添加到原始值，直到获得唯一 id。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer&#x27;s Source directory contain source code samples.</source>
          <target>Sisulizer 的 Source 目录包含源代码示例。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the mapping is enabled. If unchecked the mapping is a member is mappings collection but it is not used.</source>
          <target>如果选中，则启用映射。如果未选中，则映射是映射集合的成员，但未使用。</target>
        </trans-unit>
        <trans-unit>
          <source>Restore all</source>
          <target>恢复所有</target>
        </trans-unit>
        <trans-unit>
          <source>Species how the application class is passed to the J2ME emulator. Possible values are:</source>
          <target>指定应用程序类如何传递到 J2ME 模拟器。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Project | Import translations from localized files</source>
          <target>项目 |从本地化文件导入翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Enter the maximum value of the translation in pixels.</source>
          <target>以像素为单位输入平移的最大值。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer copies original image files to the localized directories.</source>
          <target>如果选中 Sisulizer 将原始图像文件复制到本地化目录。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet the specify options of XAML file.</source>
          <target>使用此表指定 XAML 文件的选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Add unique id value before translation</source>
          <target>在翻译前添加唯一的 id 值</target>
        </trans-unit>
        <trans-unit>
          <source>Gets the longest value among the original and  the translations of the row.</source>
          <target>获取行的原始值和翻译中的最长值。</target>
        </trans-unit>
        <trans-unit>
          <source>If the font size is less than the font size specified in &lt;em&gt;Fonts to be used&lt;/em&gt; list change also the font size.</source>
          <target>如果字体大小小于在&lt;em&gt;要使用&lt;/em&gt;的字体列表中指定的字体大小&lt;em&gt;，也要&lt;/em&gt;更改字体大小。</target>
        </trans-unit>
        <trans-unit>
          <source>Tags can be used to control what strings to localize in the script sections. Tags options are visible only if you have checked either Scan client scripts or Scan server scripts.</source>
          <target>标签可用于控制要在脚本部分本地化哪些字符串。仅当您选中扫描客户端脚本或扫描服务器脚本时，标签选项才可见。</target>
        </trans-unit>
        <trans-unit>
          <source>Segmentation is available with following source types: HTML and XML files, and database data. By default it is turned off. You have to turn it on by using source&#x27;s property dialog.</source>
          <target>分段可用于以下源类型：HTML 和 XML 文件以及数据库数据。默认情况下它是关闭的。您必须使用源的属性对话框打开它。</target>
        </trans-unit>
        <trans-unit>
          <source>If you do not have .NET SDK you can download it from Microsoft&#x27;s site. By default .NET SDKs are installed to  the above directories. Sisulizer  automatically detects the installed SDKs. If the list does not contain your SDK click &lt;em&gt;Edit&lt;/em&gt; and browse the SDK root directory.</source>
          <target>如果您没有 .NET SDK，您可以从 Microsoft 的站点下载。默认情况下，.NET SDK 安装到上述目录。 Sisulizer 会自动检测已安装的 SDK。如果列表不包含您的 SDK，请单击&lt;em&gt;编辑&lt;/em&gt;并浏览 SDK 根目录。</target>
        </trans-unit>
        <trans-unit>
          <source>Use stored procedure to get the value</source>
          <target>使用存储过程获取值</target>
        </trans-unit>
        <trans-unit>
          <source>Use visual editor</source>
          <target>使用可视化编辑器</target>
        </trans-unit>
        <trans-unit>
          <source>Click &lt;em&gt;Do not show this next time you have created a new project&lt;/em&gt; if you do not want to show this dialog every time you have created a new project.</source>
          <target>如果不想在每次创建新项目时都显示此对话框，请单击&lt;em&gt;下次创建新项目&lt;/em&gt;时不再显示。</target>
        </trans-unit>
        <trans-unit>
          <source>Use alternative original values</source>
          <target>使用替代原始值</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to select the source of the imported item. Possible values are:</source>
          <target>使用此表选择导入项目的来源。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Include the files that you used such as Sisulizer project file (.slp) and the original source file (e.g. .exe). Zip all the files to a single Zip file and attach that to the email.</source>
          <target>包括您使用的文件，例如 Sisulizer 项目文件 (.slp) 和原始源文件（例如 .exe）。将所有文件压缩为一个 Zip 文件并将其附加到电子邮件中。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows a print preview window that lets you preview the printed project before your print it.</source>
          <target>显示打印预览窗口，可让您在打印之前预览打印的项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Variable is replaced with the parent path of the original file.&lt;br&gt;
        &lt;code&gt;C:\Files\MyFiles\&lt;span class=&quot;style2&quot;&gt;Sample.exe&lt;/span&gt; -&amp;gt; C:\Files&lt;/code&gt;&lt;br&gt;
    Output directory is ignored.</source>
          <target>变量替换为原始文件的父路径。&lt;br&gt; &lt;code&gt;C:\Files\MyFiles\ &lt;span class=&quot;style2&quot;&gt;Sample.exe&lt;/span&gt; -&amp;gt; C:\Files&lt;/code&gt;&lt;br&gt;输出目录被忽略。</target>
        </trans-unit>
        <trans-unit>
          <source>JSON file (.json)</source>
          <target>JSON 文件 (.json)</target>
        </trans-unit>
        <trans-unit>
          <source>Restores the bounds (e.g. left, top, width and height) of the selected control.</source>
          <target>恢复选定控件的边界（例如左侧、顶部、宽度和高度）。</target>
        </trans-unit>
        <trans-unit>
          <source>Imports data from a TBX file</source>
          <target>从 TBX 文件导入数据</target>
        </trans-unit>
        <trans-unit>
          <source>Replace strings with the following string</source>
          <target>用以下字符串替换字符串</target>
        </trans-unit>
        <trans-unit>
          <source>You can find out more information about regular expressions from:</source>
          <target>您可以从以下位置找到有关正则表达式的更多信息：</target>
        </trans-unit>
        <trans-unit>
          <source>Duplicate form hotkey</source>
          <target>复制表格热键</target>
        </trans-unit>
        <trans-unit>
          <source> &amp;quot;This is a string&amp;quot;</source>
          <target>“这是一个字符串”</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the text enclosed in the code element preserves spaces and line breaks. Otherwise all extra spaces and all line breaks will be removed on scanned rows.</source>
          <target>如果选中，包含在代码元素中的文本会保留空格和换行符。否则所有多余的空格和所有换行符都将在扫描的行上被删除。</target>
        </trans-unit>
        <trans-unit>
          <source>Import translations from a database</source>
          <target>从数据库导入翻译</target>
        </trans-unit>
        <trans-unit>
          <source>va</source>
          <target>将要</target>
        </trans-unit>
        <trans-unit>
          <source>As a result the assembly linker parameter  should look like this</source>
          <target>因此，程序集链接器参数应如下所示</target>
        </trans-unit>
        <trans-unit>
          <source>If you set either of comments Sisulizer will skip comments if you expressions do not handle comments. If you have included comment handling into the logic of expressions then they are used. In most cases it is easier to ignore comments in the expression and enter either line or block comment strings.</source>
          <target>如果您设置任何一个注释，如果您的表达式不处理注释，Sisulizer 将跳过注释。如果您已将注释处理包含到表达式的逻辑中，则将使用它们。在大多数情况下，忽略表达式中的注释并输入行或块注释字符串更容易。</target>
        </trans-unit>
        <trans-unit>
          <source>Use Office look in menus</source>
          <target>在菜单中使用 Office 外观</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can not automatically get the name of the PFX file. This means that if you original assembly has been signed using a PFX file then Sisulizer can not automatically sign the satellite assembly files unless you give the key name as a Assembly Linker parameter.</source>
          <target>Sisulizer 无法自动获取 PFX 文件的名称。这意味着如果您的原始程序集已使用 PFX 文件进行签名，则 Sisulizer 无法自动对附属程序集文件进行签名，除非您将密钥名称作为程序集链接器参数提供。</target>
        </trans-unit>
        <trans-unit>
          <source>language</source>
          <target>语</target>
        </trans-unit>
        <trans-unit>
          <source>The result list shows translations that belong to the selected document and languages. To edit a translation select it and click &lt;em&gt;Edit&lt;/em&gt; or double click an item in the list. To remove a translation select  it and click &lt;em&gt;Remove&lt;/em&gt;. To remove all translations in the list click &lt;em&gt;Remove all&lt;/em&gt;. To add a new translations click Add.</source>
          <target>结果列表显示属于所选文档和语言的翻译。要编辑翻译，请选择它并单击&lt;em&gt;编辑&lt;/em&gt;或双击列表中的项目。要删除翻译，请选择它并单击&lt;em&gt;删除&lt;/em&gt;。要删除列表中的所有翻译，请单击&lt;em&gt;全部删除&lt;/em&gt;。要添加新翻译，请单击添加。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the original picture. This is read-only.</source>
          <target>显示原始图片。这是只读的。</target>
        </trans-unit>
        <trans-unit>
          <source>Choose Send to Back to move a selected component behind all other components on the form. This is called changing the component&#x27;s z-order.</source>
          <target>选择“置于底层”将选定的组件移到表单上所有其他组件的后面。这称为更改组件的 z 顺序。</target>
        </trans-unit>
        <trans-unit>
          <source>Key password</source>
          <target>钥匙密码</target>
        </trans-unit>
        <trans-unit>
          <source>Resource id</source>
          <target>资源编号</target>
        </trans-unit>
        <trans-unit>
          <source>Localization of VCL.NET Applications</source>
          <target>VCL.NET 应用程序的本地化</target>
        </trans-unit>
        <trans-unit>
          <source>Click &lt;em&gt;Check all&lt;/em&gt; to check all the elements. Click &lt;em&gt;Uncheck all&lt;/em&gt; to clear all selections. Click &lt;em&gt;Edit&lt;/em&gt; to edit the selected tag. Click &lt;em&gt;Show file&lt;/em&gt; to open the file in default viewer. Click &lt;em&gt;Export&lt;/em&gt; to export selections to a file. Click &lt;em&gt;Import&lt;/em&gt; to import selections from a file.</source>
          <target>单击“&lt;em&gt;全部&lt;/em&gt;检查”以检查所有元素。单击&lt;em&gt;取消全部选中&lt;/em&gt;以清除所有选择。单击&lt;em&gt;编辑&lt;/em&gt;以编辑所选标签。单击&lt;em&gt;显示文件&lt;/em&gt;以在默认查看器中打开文件。单击&lt;em&gt;导出&lt;/em&gt;将选择&lt;em&gt;导出&lt;/em&gt;到文件。单击&lt;em&gt;导入&lt;/em&gt;以从文件导入选择。</target>
        </trans-unit>
        <trans-unit>
          <source>There are two kind of Java source files (*.java). They are:</source>
          <target>有两种 Java 源文件 (*.java)。他们是：</target>
        </trans-unit>
        <trans-unit>
          <source>Translation is all spaces</source>
          <target>翻译是所有的空间</target>
        </trans-unit>
        <trans-unit>
          <source>Visual C++ (.exe or .dll)&lt;br&gt;Delphi or C++Builder file (.exe or .dll)</source>
          <target>Visual C++（.exe 或 .dll）&lt;br&gt; Delphi 或 C++Builder 文件（.exe 或 .dll）</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can access and localize MySQL databases</source>
          <target>Sisulizer 可以访问和本地化 MySQL 数据库</target>
        </trans-unit>
        <trans-unit>
          <source>Strings are encoded with &lt;a href=&quot;http://en.wikipedia.org/wiki/Extended_Binary_Coded_Decimal_Interchange_Code&quot; target=&quot;_blank&quot;&gt;EBCDIC code pages&lt;/a&gt;.</source>
          <target>字符串使用&lt;a href=&quot;http://en.wikipedia.org/wiki/Extended_Binary_Coded_Decimal_Interchange_Code&quot; target=&quot;_blank&quot;&gt;EBCDIC 代码页&lt;/a&gt;进行编码。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked clears the status in the nodes.</source>
          <target>如果选中，则清除节点中的状态。</target>
        </trans-unit>
        <trans-unit>
          <source>Select the language pair that are show on the list. This specifies the source and target languages. Choose &lt;em&gt;All languages&lt;/em&gt; if you want to show all strings from the selected document.</source>
          <target>选择列表中显示的语言对。这指定了源语言和目标语言。如果要显示所选文档中的所有字符串，请选择&lt;em&gt;所有语言&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>String size in word following an UTF-16 string</source>
          <target>UTF-16 字符串后面的字串大小</target>
        </trans-unit>
        <trans-unit>
          <source>Bits per character</source>
          <target>每个字符的位数</target>
        </trans-unit>
        <trans-unit>
          <source>Automatically aligns components on the form with the nearest grid line. You cannot place a component &amp;quot;in between&amp;quot; grid lines.</source>
          <target>自动将表单上的组件与最近的网格线对齐。您不能在网格线“之间”放置组件。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the translation memory removes the special characters from the string before storing them. Special characters are:
      &lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot;&gt; &lt;tr&gt; &lt;td bgcolor=&quot;#999999&quot;&gt;&amp;amp;&lt;/td&gt; &lt;td&gt;Hotkey character used in Windows user interfaces.&lt;br&gt;For example &amp;amp;File.&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td bgcolor=&quot;#999999&quot;&gt;_&lt;/td&gt; &lt;td&gt;Hotkey character used in WPF user interfaces.&lt;br&gt;For example _File.&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td bgcolor=&quot;#999999&quot;&gt;:&lt;/td&gt; &lt;td&gt;Semicolon is used in user interface to show that something is following.&lt;br&gt;For example Color:&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td bgcolor=&quot;#999999&quot;&gt;...&lt;/td&gt; &lt;td&gt;Three or two periods are used in menu items to show that item opens a user interface element such as dialog.&lt;br&gt;For example Options...&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td bgcolor=&quot;#999999&quot;&gt;|&lt;/td&gt; &lt;td&gt;Vertical line is used in some menu items to separate menu caption and menu hint.&lt;br&gt;For example Options|&lt;/td&gt; &lt;/tr&gt;  &lt;/table&gt;
      It is recommended to leave this check box checked. Uncheck this only if you want the translation memory remember the exact location of the hotkey positions and special characters.</source>
          <target>如果选中，翻译记忆库会在存储之前从字符串中删除特殊字符。特殊字符有：&lt;table border=&quot;0&quot; cellpadding=&quot;0&quot; cellspacing=&quot;0&quot;&gt;&lt;tr&gt;&lt;td bgcolor=&quot;#999999&quot;&gt; &amp;amp;&lt;/td&gt;&lt;td&gt; Windows 用户界面中使用的热键字符。&lt;br&gt;例如&amp;amp;文件。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td bgcolor=&quot;#999999&quot;&gt; _&lt;/td&gt;&lt;td&gt; WPF 用户界面中使用的热键字符。&lt;br&gt;例如_文件。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td bgcolor=&quot;#999999&quot;&gt; ：&lt;/td&gt;&lt;td&gt;用户界面中使用分号来表示后面有内容。&lt;br&gt;例如颜色：&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td bgcolor=&quot;#999999&quot;&gt; ...&lt;/td&gt;&lt;td&gt;在菜单项中使用三个或两个句点来显示该项目打开一个用户界面元素，例如对话框。&lt;br&gt;例如选项...&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td bgcolor=&quot;#999999&quot;&gt; |&lt;/td&gt;&lt;td&gt;一些菜单项中使用竖线来分隔菜单标题和菜单提示。&lt;br&gt;例如选项|&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;建议选中此复选框。仅当您希望翻译记忆库记住热键位置和特殊字符的确切位置时才取消选中此项。</target>
        </trans-unit>
        <trans-unit>
          <source>Enter a sample string that contains combined string and click Process button to break the string into pieces.</source>
          <target>输入一个包含组合字符串的示例字符串，然后单击“处理”按钮将字符串分成几部分。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can convert Multilizer 6 and later project files. If you use Multilizer 5 you have to first create a Sisulizer project that contains the same source file(s) and the import Multilizer project file by choosing &lt;a href=&quot;FileImportMenu.htm&quot;&gt;File | Import&lt;/a&gt;.</source>
          <target>Sisulizer 可以转换 Multilizer 6 和更高版本的项目文件。如果您使用 Multilizer 5，您必须首先通过选择&lt;a href=&quot;FileImportMenu.htm&quot;&gt;File |&lt;/a&gt;创建一个包含相同源文件和导入 Multilizer 项目文件的 Sisulizer 项目&lt;a href=&quot;FileImportMenu.htm&quot;&gt;。进口&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>When checked Sisulizer localized also matching files in every sub directory of the directory that File name specifies.</source>
          <target>选中时，Sisulizer 在文件名指定的目录的每个子目录中也本地化了匹配的文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Several .NET assembly formats: 32-bit, 64-bit, platform independent.</source>
          <target>几种 .NET 程序集格式：32 位、64 位、平台无关。</target>
        </trans-unit>
        <trans-unit>
          <source>Enter additional info, depending on file type</source>
          <target>根据文件类型输入其他信息</target>
        </trans-unit>
        <trans-unit>
          <source>Translation memory editor let you edit items of translation memory. It has been integrated into &lt;a href=&quot;TranslationEnginesDialog.htm&quot;&gt;translation engines dialog&lt;/a&gt;. If the selected translation engine in the dialog is Sisulizer&#x27;s translation memory the dialog shows following sheets:</source>
          <target>翻译记忆库编辑器可让您编辑翻译记忆库项目。它已集成到&lt;a href=&quot;TranslationEnginesDialog.htm&quot;&gt;翻译引擎对话框中&lt;/a&gt;。如果对话框中选择的翻译引擎是 Sisulizer 的翻译记忆库，对话框会显示以下表格：</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer localizes contents data (.hhc file).</source>
          <target>如果选中 Sisulizer 本地化内容数据（.hhc 文件）。</target>
        </trans-unit>
        <trans-unit>
          <source>Original validation helps you to track down if there are any mistakes or errors on your original items. By running original validation checking successfully makes sure that the translation job is as smooth as possible. This is why you should always run validation checks for your original items before starting the translations job. Sooner you fix the bugs better it is. Choose &lt;a href=&quot;ValidationOriginalDialog.htm&quot;&gt;Validation | Validate Original&lt;/a&gt; to start original validation and to see the possible validations that can be applied for original items.</source>
          <target>原始验证可帮助您追踪原始商品是否存在任何错误或错误。通过成功运行原始验证检查，确保翻译工作尽可能顺利。这就是为什么您应该始终在开始翻译工作之前对原始项目运行验证检查的原因。越早修复错误越好。选择&lt;a href=&quot;ValidationOriginalDialog.htm&quot;&gt;验证 |验证原始&lt;/a&gt;以开始原始验证并查看可应用于原始项目的可能验证。</target>
        </trans-unit>
        <trans-unit>
          <source>To remove the selected mapping press the Remove button.</source>
          <target>要删除选定的映射，请按删除按钮。</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file can be any  &lt;a href=&quot;BinaryLocalization.htm&quot;&gt;binary file&lt;/a&gt;  (e.g. C:\Samples\Project.dat).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件可以是任何&lt;a href=&quot;BinaryLocalization.htm&quot;&gt;二进制文件&lt;/a&gt;（例如 C:\Samples\Project.dat）。</target>
        </trans-unit>
        <trans-unit>
          <source>This dialog lets you select what items where the status is cleared. Possible value are:</source>
          <target>此对话框允许您选择清除状态的项目。可能的值是：</target>
        </trans-unit>
        <trans-unit>
          <source>Initial translation engines</source>
          <target>初始翻译引擎</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the  run parameters.</source>
          <target>使用此表指定运行参数。</target>
        </trans-unit>
        <trans-unit>
          <source>If you use above tools you can localize their content by first exporting it to XLIFF, thene using Sisulizer to create localized XLIFF files and finally importing localized XLIFF files back to your tool.</source>
          <target>如果您使用上述工具，您可以先将其内容导出到 XLIFF，然后使用 Sisulizer 创建本地化的 XLIFF 文件，最后将本地化的 XLIFF 文件导入回您的工具。</target>
        </trans-unit>
        <trans-unit>
          <source>Importing project sent by translator</source>
          <target>导入翻译发送的项目</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies if the strings are quoted. Possible values are:</source>
          <target>指定字符串是否被引用。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Borland/CodeGear .NET project file</source>
          <target>Borland/CodeGear .NET 项目文件</target>
        </trans-unit>
        <trans-unit>
          <source>Whenever you change the original source code you have to &lt;a href=&quot;Introduction.htm#Build&quot;&gt;create the localized source code&lt;/a&gt; files again. Just open the Sisulizer project file and choose &lt;a href=&quot;ProjectBuildAllMenu.htm&quot;&gt;Project | Build All&lt;/a&gt;. You can also use Sisulizer&#x27;s command line tool, &lt;a href=&quot;SlMake.htm&quot;&gt;SlMake&lt;/a&gt; to build the localized files.</source>
          <target>每当您更改原始源代码时，您都必须再次&lt;a href=&quot;Introduction.htm#Build&quot;&gt;创建本地化的源代码&lt;/a&gt;文件。只需打开 Sisulizer 项目文件并选择&lt;a href=&quot;ProjectBuildAllMenu.htm&quot;&gt;Project |全部构建&lt;/a&gt;。您还可以使用 Sisulizer 的命令行工具&lt;a href=&quot;SlMake.htm&quot;&gt;SlMake&lt;/a&gt;来构建本地化文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Overwrite method</source>
          <target>覆盖方法</target>
        </trans-unit>
        <trans-unit>
          <source>User defined binary</source>
          <target>用户定义的二进制文件</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the user name.</source>
          <target>指定用户名。</target>
        </trans-unit>
        <trans-unit>
          <source>Project Wizard - Source code options</source>
          <target>项目向导 - 源代码选项</target>
        </trans-unit>
        <trans-unit>
          <source>Keywords sheet contains source specific keywords.</source>
          <target>关键字表包含特定于源的关键字。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies if rows are filtered because empty original strings or original strings having only white spaces.</source>
          <target>指定是否因为空的原始字符串或只有空格的原始字符串而过滤行。</target>
        </trans-unit>
        <trans-unit>
          <source>Lines up the right edges of the selected components (horizontal only)</source>
          <target>排列所选组件的右边缘（仅限水平）</target>
        </trans-unit>
        <trans-unit>
          <source>No DTD part is included to the file.</source>
          <target>文件中不包含 DTD 部分。</target>
        </trans-unit>
        <trans-unit>
          <source>Validate only translated hotkeys</source>
          <target>仅验证翻译的热键</target>
        </trans-unit>
        <trans-unit>
          <source>This will restore the original postitions on controls that has been automaticalley repositioned.</source>
          <target>这将恢复已自动重新定位的控件的原始位置。</target>
        </trans-unit>
        <trans-unit>
          <source>C/C++ source code</source>
          <target>C/C++ 源代码</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;lt;sldir&amp;gt;\NET\CSharp\Select contains a simple application using runtime language change. Both Form1_Load and Form1_Shown events set property values or use data that is locale depend. Form1_Load set the initial position of the main form and updates the caption of the main form.</source>
          <target>&amp;lt;sldir&amp;gt;\NET\CSharp\Select 包含一个使用运行时语言更改的简单应用程序。 Form1_Load 和 Form1_Shown 事件都设置属性值或使用区域设置依赖的数据。 Form1_Load 设置主窗体的初始位置并更新主窗体的标题。</target>
        </trans-unit>
        <trans-unit>
          <source>Vietnamese support</source>
          <target>越南语支持</target>
        </trans-unit>
        <trans-unit>
          <source>You can change the scan logic opposite: to make Sisulizer to scan everything except tagged ones. In this case you have to use noslz tag.</source>
          <target>您可以更改相反的扫描逻辑：使 Sisulizer 扫描除标记之外的所有内容。在这种情况下，您必须使用 noslz 标签。</target>
        </trans-unit>
        <trans-unit>
          <source>In a similar way we can select German data for German report.</source>
          <target>以类似的方式，我们可以为德国报告选择德国数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Disables a break when a lower case character or a number is followed by a period, one ore more white space, and one lower case character. For example:&lt;br&gt;Raaka-aineena voidaan k&amp;auml;ytt&amp;auml;&amp;auml; esi&lt;u&gt;m. v&lt;/u&gt;anhoja autonrenkaita.&lt;br&gt;
    Underline shows the pattern that is not a break even some break rule would indicate so.</source>
          <target>当小写字符或数字后跟一个句点、一个或多个空格和一个小写字符时禁用中断。例如：&lt;br&gt; Raaka-aineena voidaan käyttää esi &lt;u&gt;m. v&lt;/u&gt; anhoja autonrenkaita。&lt;br&gt;下划线显示的模式不是盈亏，即使某些盈亏规则表明如此。</target>
        </trans-unit>
        <trans-unit>
          <source>Open the report after Sisulizer has created it.</source>
          <target>在 Sisulizer 创建后打开报告。</target>
        </trans-unit>
        <trans-unit>
          <source>Middle eastern languages use right to left reading order. If you original form layout is based on left to right reading order you have to mirror the layout. There are two ways to do that. They are:</source>
          <target>中东语言使用从右到左的阅读顺序。如果原始表单布局基于从左到右的阅读顺序，则必须镜像布局。有两种方法可以做到这一点。他们是：</target>
        </trans-unit>
        <trans-unit>
          <source>Windows Binary Source| Header files</source>
          <target>Windows 二进制源|头文件</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the translation memory is case sensitive. This means that all data is stored as it is. When translating the translation memory first tries exact case match. If no string is found it ignores the case.&lt;br&gt;If not checked the translation memory is case insensitive. This means that all data is stored in lower case. When translating data the engine reformats the string case to match the original string.&lt;br&gt;Is is recommended to leave this check box checked.</source>
          <target>如果选中，翻译记忆库区分大小写。这意味着所有数据都按原样存储。翻译翻译记忆库时，首先尝试精确大小写匹配。如果未找到字符串，则忽略大小写。&lt;br&gt;如果未选中，则翻译记忆库不区分大小写。这意味着所有数据都以小写形式存储。翻译数据时，引擎重新格式化字符串大小写以匹配原始字符串。&lt;br&gt;建议选中此复选框。</target>
        </trans-unit>
        <trans-unit>
          <source>co</source>
          <target>什么</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer extends .NET framework by providing classes to performs &lt;a href=&quot;RuntimeLanguageChange.htm&quot;&gt;runtime language change&lt;/a&gt;. This makes it possible to start application in one language and later change the language on run time as many times as possible. Sisulizer&#x27;s runtime language change is very fast and flicker free.</source>
          <target>Sisulizer 通过提供执行&lt;a href=&quot;RuntimeLanguageChange.htm&quot;&gt;运行时语言更改的&lt;/a&gt;类来扩展 .NET 框架。这使得可以以一种语言启动应用程序，然后在运行时尽可能多地更改语言。 Sisulizer 的运行时语言更改非常快且无闪烁。</target>
        </trans-unit>
        <trans-unit>
          <source>Repeat the above step for Japanese file C:\MyFiles\ja\MyApplications.exe.</source>
          <target>对日文文件 C:\MyFiles\ja\MyApplications.exe 重复上述步骤。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer has a possibility to embed the resource DLLs inside .exe as resource data. When applications starts first time it will extract the resource DLLs from the resource data, makes the actual DLLs and after that it works just like applications using separate DLLs.</source>
          <target>Sisulizer 可以将资源 DLL 作为资源数据嵌入到 .exe 中。当应用程序第一次启动时，它会从资源数据中提取资源 DLL，制作实际的 DLL，然后它就像使用单独的 DLL 的应用程序一样工作。</target>
        </trans-unit>
        <trans-unit>
          <source>Align to grid</source>
          <target>对齐网格</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file can be any &lt;a href=&quot;HtmlLocalization.htm&quot;&gt;HTML file or variant&lt;/a&gt; (e.g. C:\Samples\sample.html or C:\Samples\sample.asp).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件可以是任何&lt;a href=&quot;HtmlLocalization.htm&quot;&gt;HTML 文件或变体&lt;/a&gt;（例如 C:\Samples\sample.html 或 C:\Samples\sample.asp）。</target>
        </trans-unit>
        <trans-unit>
          <source>Some Excel files contains several sheets. Select a sheet where you want to import from.</source>
          <target>某些 Excel 文件包含多个工作表。选择要从中导入的工作表。</target>
        </trans-unit>
        <trans-unit>
          <source>Specified the default localized fonts to be used in .NET VCL applications.</source>
          <target>指定要在 .NET VCL 应用程序中使用的默认本地化字体。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked contents, index, browse sequence, and browser nodes are grouped in Items folder in the project tree.&lt;br&gt;If unchecked above nodes are placed in the root node of the source.</source>
          <target>如果选中的内容、索引、浏览顺序和浏览器节点分组在项目树的 Items 文件夹中。&lt;br&gt;如果未选中，上面的节点将放置在源的根节点中。</target>
        </trans-unit>
        <trans-unit>
          <source>Windows does not use ISO language codes but it uses its own NLS language ids and code pages.</source>
          <target>Windows 不使用 ISO 语言代码，但它使用自己的 NLS 语言 ID 和代码页。</target>
        </trans-unit>
        <trans-unit>
          <source>Enter the password of the keystore file.</source>
          <target>输入密钥库文件的密码。</target>
        </trans-unit>
        <trans-unit>
          <source>Removes the selected rule from the list.</source>
          <target>从列表中删除选定的规则。</target>
        </trans-unit>
        <trans-unit>
          <source>If you localize VCL.NET applications you must use assembly localization.</source>
          <target>如果您本地化 VCL.NET 应用程序，您必须使用程序集本地化。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;XliffLocalization.htm&quot;&gt;XLIFF file is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;XliffLocalization.htm&quot;&gt;XLIFF 文件的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the .NET version of the project using the resource file(s).</source>
          <target>使用资源文件指定项目的 .NET 版本。</target>
        </trans-unit>
        <trans-unit>
          <source>Asian languages use ideographs instead of alphabets. This is why these languages generally uses a bit different approach to mark hotkeys. They add a single alphabet inside parenthesis in the end of the string.</source>
          <target>亚洲语言使用表意文字而不是字母。这就是为什么这些语言通常使用稍微不同的方法来标记热键。他们在字符串末尾的括号内添加一个字母。</target>
        </trans-unit>
        <trans-unit>
          <source>When the original [script] font name is [name]</source>
          <target>当原来的【脚本】字体名称为【名称】时</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify the type of a database&#x27;s string field. This specifies the type of items in this field. If you have several rows that contains different data format you have to specify the format in &lt;a href=&quot;WindowsCustomNodeDialog.htm&quot;&gt;each node&lt;/a&gt;.</source>
          <target>使用此对话框指定数据库字符串字段的类型。这指定了该字段中项目的类型。如果您有多行包含不同的数据格式，则必须在&lt;a href=&quot;WindowsCustomNodeDialog.htm&quot;&gt;每个节点中&lt;/a&gt;指定格式。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies what resource items are written to the localized resource files. Possible values are:</source>
          <target>指定将哪些资源项写入本地化资源文件。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>If checked imports an item only if the context and the original value of the imported item match the item in the project. For example the context of the item is &lt;em&gt;MyProject.exe.MainForm.BrowseButton&lt;/em&gt; and the current original value id &amp;quot;Browse&amp;quot; and the imported original value is &lt;em&gt;&amp;quot;Browse file &amp;quot;&lt;/em&gt;, Sisulizer does not import the value. In unchecked the item is imported if there is a context match even if the original value is different than the original value in the project.</source>
          <target>如果选中，则仅当导入项目的上下文和原始值与项目中的项目匹配时才导入项目。例如项目的上下文是&lt;em&gt;MyProject.exe.MainForm.BrowseButton&lt;/em&gt;和当前原始值 id &amp;quot;Browse&amp;quot; 和导入的原始值是&lt;em&gt;&amp;quot;Browse file&amp;quot;&lt;/em&gt; ，Sisulizer 不导入该值。在未选中的情况下，如果存在上下文匹配，即使原始值与项目中的原始值不同，也会导入该项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer changed the row status to &lt;em&gt;Changed&lt;/em&gt;, invalidated the current Finnish translation and changed translation status to &lt;em&gt;For review&lt;/em&gt;.</source>
          <target>Sisulizer 将行状态&lt;em&gt;更改&lt;/em&gt;为&lt;em&gt;已更改&lt;/em&gt;，使当前芬兰语翻译无效并将翻译状态更改为待&lt;em&gt;审&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Imports data from a selected range from Excel sheet (.xls).</source>
          <target>从 Excel 工作表 (.xls) 中的选定范围导入数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Available languages</source>
          <target>可用语言</target>
        </trans-unit>
        <trans-unit>
          <source>Select a stored procedure name that Sisulizer calls when it needs a new id. This option is available only if the database support stored procedure and there are at least one stored procedure defined. The stored procedure must not take any parameters and it must return one row where the first field contains the row id.</source>
          <target>选择 Sisulizer 在需要新 ID 时调用的存储过程名称。仅当数据库支持存储过程并且至少定义了一个存储过程时，此选项才可用。存储过程不得接受任何参数，并且必须返回第一个字段包含行 ID 的行。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to set the options how to localize a .NET resource file.</source>
          <target>使用此表设置如何本地化 .NET 资源文件的选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Click &lt;em&gt;Add&lt;/em&gt; to add an new extension. Click &lt;em&gt;Edit&lt;/em&gt; to edit the selected extension. Click &lt;em&gt;Remove&lt;/em&gt; to remove the selected extension. Click &lt;em&gt;Clear&lt;/em&gt; to remove all extensions.</source>
          <target>单击&lt;em&gt;添加&lt;/em&gt;以添加新扩展。单击&lt;em&gt;编辑&lt;/em&gt;以编辑选定的扩展名。单击&lt;em&gt;删除&lt;/em&gt;以删除选定的扩展。单击&lt;em&gt;清除&lt;/em&gt;以删除所有扩展名。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;a href=&quot;http://en.wikipedia.org/wiki/UTF-16&quot; target=&quot;_blank&quot;&gt;UTF-16&lt;/a&gt; strings are used.</source>
          <target>&lt;a href=&quot;http://en.wikipedia.org/wiki/UTF-16&quot; target=&quot;_blank&quot;&gt;使用 UTF-16&lt;/a&gt;字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>This localizes the table of contents file.</source>
          <target>这将本地化目录文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Line attribute value</source>
          <target>线属性值</target>
        </trans-unit>
        <trans-unit>
          <source>You can use it to quickly change the &lt;a href=&quot;WorkingWithTranslationSheet.htm#Filter&quot;&gt;active filtering&lt;/a&gt;. You can hide the panel by unchecking View | Filter Panel menu item.</source>
          <target>您可以使用它来快速更改&lt;a href=&quot;WorkingWithTranslationSheet.htm#Filter&quot;&gt;活动过滤&lt;/a&gt;。您可以通过取消选中 View | 来隐藏面板。过滤器面板菜单项。</target>
        </trans-unit>
        <trans-unit>
          <source>Updates the FILEVERSION ?,?,?,? field in VERSIONINFO resource</source>
          <target>更新 FILEVERSION ?,?,?,? VERSIONINFO 资源中的字段</target>
        </trans-unit>
        <trans-unit>
          <source>Format specific sheets</source>
          <target>格式化特定工作表</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;English&lt;/em&gt; uses only one script: Latin. This is why there is no need for a script code in the culture id. Culture id must contain the language id (en) and it can optionally contain a country code (US, GB, AU, ...).</source>
          <target>&lt;em&gt;英语&lt;/em&gt;只使用一种文字：拉丁语。这就是为什么文化 id 中不需要脚本代码的原因。文化 ID 必须包含语言 ID (en)，并且可以选择包含国家/地区代码（US、GB、AU 等）。</target>
        </trans-unit>
        <trans-unit>
          <source>Confirm the clearing of cells</source>
          <target>确认清除细胞</target>
        </trans-unit>
        <trans-unit>
          <source>Original strings are modified to simulate the language. This type checks if the user interface works with the script of the language.&lt;br&gt;For example if the selected language is using a latin script &lt;samp&gt;&amp;quot;Hello World&amp;quot;&lt;/samp&gt; becomes to &lt;samp&gt;&amp;quot;H&amp;eacute;ll&amp;ouml; W&amp;ouml;rld&amp;quot;&lt;/samp&gt;.</source>
          <target>修改原始字符串以模拟语言。此类型检查用户界面是否适用于该语言的脚本。&lt;br&gt;例如，如果所选语言使用拉丁文字，则&lt;samp&gt;&amp;quot;Hello World&amp;quot;&lt;/samp&gt;变为&lt;samp&gt;&amp;quot;Héllö Wörld&amp;quot;&lt;/samp&gt; 。</target>
        </trans-unit>
        <trans-unit>
          <source>This is the &amp;quot;World&amp;quot; styled spell checking where Sisulizer always checks spelling as you type or as you view rows. If a spelling errors is found the word is marked with red line. For example the following image contains a situation where &amp;quot;Sample&amp;quot; is misspelled.</source>
          <target>这是“世界”风格的拼写检查，其中 Sisulizer 始终在您键入或查看行时检查拼写。如果发现拼写错误，该词会用红线标记。例如，下图包含“示例”拼写错误的情况。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the additional items that will be added to the package. Possible values are:</source>
          <target>指定将添加到包中的附加项目。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Shows &lt;a href=&quot;MergeDialog.htm&quot;&gt;Merge Project dialog&lt;/a&gt; that merges a selected project  to the current Sisulizer project.</source>
          <target>显示&lt;a href=&quot;MergeDialog.htm&quot;&gt;合并项目对话框&lt;/a&gt;，将选定的项目合并到当前的 Sisulizer 项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Check &lt;em&gt;Automatically selects keyboard by language&lt;/em&gt; to automatically set the keyboard layout (if any) of the language of the column. Check &lt;em&gt;Automatically activates IME by language&lt;/em&gt; to automatically set the default IME when selecting a cell in the column.</source>
          <target>选中&lt;em&gt;自动按语言选择键盘&lt;/em&gt;以自动设置列语言的键盘布局（如果有）。选中&lt;em&gt;按语言自动激活 IME 以&lt;/em&gt;在选择列中的单元格时自动设置默认 IME。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the selected item is not highlighted when the control does not have focus.</source>
          <target>如果选中，当控件没有焦点时，所选项目不会突出显示。</target>
        </trans-unit>
        <trans-unit>
          <source>When you select an engine this dialog shows one or more sheets that can be used to configure the engine.</source>
          <target>当您选择一个引擎时，此对话框会显示一个或多个可用于配置引擎的工作表。</target>
        </trans-unit>
        <trans-unit>
          <source>This is the output area. It contains log entries of the most recent operation such as build operation.</source>
          <target>这是输出区域。它包含最近操作的日志条目，例如构建操作。</target>
        </trans-unit>
        <trans-unit>
          <source>[germany]
Name=&lt;strong&gt;Saksa&lt;/strong&gt;
Population=82
Capital=&lt;strong&gt;Berliini&lt;/strong&gt;
Description=&lt;strong&gt;Saksa tai Saksan liittotasavalta on yksi maailman johtavista teollisuusmaista Euroopan syd&amp;auml;mmess&amp;auml;.&lt;/strong&gt;</source>
          <target>[德国] 名称 =&lt;strong&gt;德国&lt;/strong&gt;人口 = 82 首都 =&lt;strong&gt;柏林&lt;/strong&gt;描述 =&lt;strong&gt;德国或德意志联邦共和国是位于欧洲中心的世界领先的工业化国家之一。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit>
          <source>Custom dictionary is always project depend and the actual words in the custom dictionary are saved inside Sisulizer project file. Because custom words are embedded to the project file there is no need to backup the custom dictionary file or send custom dictionary file to translators. Sisulizer will automatically exchange also custom dictionary together with the project data.&lt;br&gt;This is the recommended way to save custom dictionary.</source>
          <target>自定义词典始终取决于项目，自定义词典中的实际单词保存在 Sisulizer 项目文件中。由于自定义词嵌入到项目文件中，因此无需备份自定义词典文件或将自定义词典文件发送给翻译人员。 Sisulizer 还会自动与项目数据交换自定义字典。&lt;br&gt;这是保存自定义词典的推荐方法。</target>
        </trans-unit>
        <trans-unit>
          <source>Translation validations</source>
          <target>翻译验证</target>
        </trans-unit>
        <trans-unit>
          <source>Detect encoding each time</source>
          <target>每次检测编码</target>
        </trans-unit>
        <trans-unit>
          <source>Combined Strings is a feature that breaks a string to parts. This means that a single text will be split into several parts. Combine string rule decides how the breaking is done. Sisulizer uses &lt;a href=&quot;RegularExpressions.htm&quot;&gt;regular expressions&lt;/a&gt; to describe  breaking rules. After converting a plain string into a combined string, Sisulizer project will have several rows instead of one single row.</source>
          <target>组合字符串是一种将字符串分成多个部分的功能。这意味着单个文本将被分成几个部分。组合字符串规则决定了如何进行拆分。 Sisulizer 使用&lt;a href=&quot;RegularExpressions.htm&quot;&gt;正则表达式&lt;/a&gt;来描述破坏规则。将普通字符串转换为组合字符串后，Sisulizer 项目将有几行而不是一行。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer package file (.sle)</source>
          <target>Sisulizer 包文件 (.sle)</target>
        </trans-unit>
        <trans-unit>
          <source>Importing data from a text file can be very difficult task. The reason is that data can be in any format. There are dozens of different formats used in text files. This is why Sisulizer uses regular expression when importing data from text files. Expression are used to define the data format. The same expression rules are used when &lt;a href=&quot;TextLocalization.htm&quot;&gt;localizing text files&lt;/a&gt;. When you select a file to be imported Sisulizer tries to detect the format. It can do that of the format is quite simple. If you format is not simple you have to manually set the rules in the &lt;a href=&quot;ImportWizardTextFrame.htm&quot;&gt;Import Wizard&lt;/a&gt;.</source>
          <target>从文本文件导入数据可能是一项非常艰巨的任务。原因是数据可以是任何格式。文本文件中使用了数十种不同的格式。这就是 Sisulizer 在从文本文件导入数据时使用正则表达式的原因。表达式用于定义数据格式。&lt;a href=&quot;TextLocalization.htm&quot;&gt;本地化文本文件&lt;/a&gt;时使用相同的表达式规则。当您选择要导入的文件时，Sisulizer 会尝试检测格式。它可以做到的格式很简单。如果您的格式不简单，您必须在&lt;a href=&quot;ImportWizardTextFrame.htm&quot;&gt;导入向导中&lt;/a&gt;手动设置规则。</target>
        </trans-unit>
        <trans-unit>
          <source>By default Sisulizer does not use script neutral language codes with multi script languages but always uses the code that contains script code (e.g. zh vs. zh-Hans/zh-Hant). However .NET allows you to use script neutral language code and they might even be handy in some cases. This is why Sisulizer also gives you a possibility to use them. If you use a script neutral language code you have to choose the script that uses the neutral code. The following table contains those languages that use more than one script.</source>
          <target>默认情况下，Sisulizer 不使用具有多脚本语言的脚本中性语言代码，而是始终使用包含脚本代码的代码（例如 zh 与 zh-Hans/zh-Hant）。然而，.NET 允许您使用脚本中性语言代码，在某些情况下它们甚至可能很方便。这就是为什么 Sisulizer 还为您提供使用它们的可能性。如果您使用脚本中性语言代码，则必须选择使用中性代码的脚本。下表包含使用多个脚本的语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Saves the original data to a file.</source>
          <target>将原始数据保存到文件中。</target>
        </trans-unit>
        <trans-unit>
          <source>Lingsoft dictionary. You can &lt;a href=&quot;InstallLingsoft.htm&quot;&gt;purchase&lt;/a&gt; dictionary file from Lingsoft.</source>
          <target>灵软词典。您可以从灵软件&lt;a href=&quot;InstallLingsoft.htm&quot;&gt;购买&lt;/a&gt;词典文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Imports data from a .NET resource  file (.resx).</source>
          <target>从 .NET 资源文件 (.resx) 导入数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Machine translator is an application or a service that uses extensive dictionary and grammatical rules to automatically translate virtually any sentence from source language to target language. The quality of the machine translator does not reach the same level as human translation. However machine translation is very useful feature in document translation. Sisulizer can use 3rd party machine translators such as Google Translate.</source>
          <target>机器翻译器是一种应用程序或服务，它使用广泛的字典和语法规则将几乎任何句子从源语言自动翻译成目标语言。机器翻译的质量达不到人工翻译的水平。然而，机器翻译是文档翻译中非常有用的功能。 Sisulizer 可以使用 3rd 方机器翻译器，例如 Google Translate。</target>
        </trans-unit>
        <trans-unit>
          <source>Selects the parent form of the currently selected form.</source>
          <target>选择当前选定窗体的父窗体。</target>
        </trans-unit>
        <trans-unit>
          <source>developer -&amp;gt; translator</source>
          <target>开发者 -&amp;gt; 翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer options file (Sisulizer.slo) is an XML based file that contains the settings of your Sisulizer. It is located on the Sisulizer installation directory (Windows XP) or Sisulizer data directory (Vista).</source>
          <target>Sisulizer 选项文件 (Sisulizer.slo) 是一个基于 XML 的文件，其中包含您的 Sisulizer 设置。它位于 Sisulizer 安装目录 (Windows XP) 或 Sisulizer 数据目录 (Vista)。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to set the options how to localize a .NET assembly file.</source>
          <target>使用此表设置如何本地化 .NET 程序集文件的选项。</target>
        </trans-unit>
        <trans-unit>
          <source>It provides information about the selected item. You can hide the status bar by unchecking View | Status bar menu item.</source>
          <target>它提供有关所选项目的信息。您可以通过取消选中 View | 来隐藏状态栏。状态栏菜单项。</target>
        </trans-unit>
        <trans-unit>
          <source>Currently Sisulizer supports following translation engines:</source>
          <target>目前 Sisulizer 支持以下翻译引擎：</target>
        </trans-unit>
        <trans-unit>
          <source>String is cut from the right side and cut part is replaced with ...&lt;br&gt;&lt;samp&gt;This is a long string -&amp;gt; This is a lon...&lt;/samp&gt;</source>
          <target>从右侧切下字符串，切掉的部分替换为 ...&lt;br&gt;&lt;samp&gt;这是一个长字符串 -&amp;gt; 这是一个长...&lt;/samp&gt;</target>
        </trans-unit>
        <trans-unit>
          <source>32-bit and 64-bit Windows, 32-bit OSX and iOS.</source>
          <target>32 位和 64 位 Windows、32 位 OSX 和 iOS。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer imports translations from project file of another tool (e.g. .mpr). Importing is done by original value matching. This might import incorrectly those string that have been translated in many different ways.&lt;br&gt;This feature imports &lt;strong&gt;only&lt;/strong&gt; strings.</source>
          <target>Sisulizer 从另一个工具的项目文件（例如 .mpr）导入翻译。导入是通过原始值匹配完成的。这可能会错误地导入那些以多种不同方式翻译的字符串。&lt;br&gt;此功能&lt;strong&gt;仅&lt;/strong&gt;导入字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer updates the image size attributes to match the localized image (if any) when writing the localized HTML files.</source>
          <target>如果选中，Sisulizer 会在写入本地化 HTML 文件时更新图像大小属性以匹配本地化图像（如果有）。</target>
        </trans-unit>
        <trans-unit>
          <source>Auto zoom</source>
          <target>自动缩放</target>
        </trans-unit>
        <trans-unit>
          <source>Choose Clear to clear the parameters field.</source>
          <target>选择清除以清除参数字段。</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file can be any  &lt;a href=&quot;AndroidLocalization.htm&quot;&gt;Android application  file&lt;/a&gt;  (e.g. C:\Samples\Project.apk).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件可以是任何&lt;a href=&quot;AndroidLocalization.htm&quot;&gt;Android 应用程序文件&lt;/a&gt;（例如 C:\Samples\Project.apk）。</target>
        </trans-unit>
        <trans-unit>
          <source>Import Read Only status</source>
          <target>导入只读状态</target>
        </trans-unit>
        <trans-unit>
          <source>Key container</source>
          <target>钥匙容器</target>
        </trans-unit>
        <trans-unit>
          <source>Empty originals</source>
          <target>空原件</target>
        </trans-unit>
        <trans-unit>
          <source>All instances that has different properties</source>
          <target>具有不同属性的所有实例</target>
        </trans-unit>
        <trans-unit>
          <source>Let&#x27;s have few example. First we have row where the original value is &amp;quot;This is a sample string&amp;quot; and Finnish value is &amp;quot;T&amp;auml;m&amp;auml; on esimerkkimerkkijono&amp;quot;. The following table contains exported lines of that row when a tab character is used as a delimiter character.</source>
          <target>让我们举几个例子。首先，我们有原始值为“这是一个示例字符串”的行，芬兰语值为“Tämä on esimerkkimerkkijono”。下表包含使用制表符作为分隔符时该行的导出行。</target>
        </trans-unit>
        <trans-unit>
          <source>Show as Binary | Localized</source>
          <target>显示为二进制 |本地化</target>
        </trans-unit>
        <trans-unit>
          <source>If pattern does not contains &amp;lt;dir&amp;gt; parameter Sisulizer automatically adds it into the beginning of pattern before processing it.</source>
          <target>如果模式不包含 &amp;lt;dir&amp;gt; 参数，Sisulizer 会在处理之前自动将其添加到模式的开头。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the language is enabled. If unchecked the language will not be added to language list.</source>
          <target>如果选中，则语言已启用。如果取消选中该语言将不会添加到语言列表中。</target>
        </trans-unit>
        <trans-unit>
          <source>If you want to localize the table to German and Japanese add localized Name, Capital and Description fields for each language.</source>
          <target>如果要将表本地化为德语和日语，请为每种语言添加本地化的名称、大写和说明字段。</target>
        </trans-unit>
        <trans-unit>
          <source>Import file might contain row comment (e.g. notes about the original value) or translation comments (e.g. notes about the translation). In that case you can specify how to import comments. Possible values are:</source>
          <target>导入文件可能包含行注释（例如关于原始值的注释）或翻译注释（例如关于翻译的注释）。在这种情况下，您可以指定如何导入注释。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be a &lt;a href=&quot;JavaLocalization.htm#Project&quot;&gt;JBuilder project file&lt;/a&gt; (e.g. C:\Samples\Project.jpx).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是&lt;a href=&quot;JavaLocalization.htm#Project&quot;&gt;JBuilder 项目文件&lt;/a&gt;（例如 C:\Samples\Project.jpx）。</target>
        </trans-unit>
        <trans-unit>
          <source>The Languages dialog lets you add and remove languages to the project.</source>
          <target>“语言”对话框允许您向项目添加和删除语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to customize how the toolbar of the source code editor looks like.</source>
          <target>使用此表来自定义源代码编辑器的工具栏的外观。</target>
        </trans-unit>
        <trans-unit>
          <source>Start Multilizer, open the project and choose Project | Build Localized Items to create the localized files.</source>
          <target>启动 Multilizer，打开项目并选择 Project |构建本地化项目以创建本地化文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be an &lt;a href=&quot;XliffLocalization.htm&quot;&gt;XLIFF file&lt;/a&gt; (e.g. C:\Samples\Sample.xlf).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是&lt;a href=&quot;XliffLocalization.htm&quot;&gt;XLIFF 文件&lt;/a&gt;（例如 C:\Samples\Sample.xlf）。</target>
        </trans-unit>
        <trans-unit>
          <source>Status is set to the value that the translations has in the translation memory.</source>
          <target>状态设置为翻译在翻译记忆库中的值。</target>
        </trans-unit>
        <trans-unit>
          <source>Keyword is a custom keyword added by the user.</source>
          <target>关键字是用户添加的自定义关键字。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure how the &lt;a href=&quot;SourceCodeLocalization.htm&quot;&gt;source code&lt;/a&gt; editor works.</source>
          <target>使用此对话框配置&lt;a href=&quot;SourceCodeLocalization.htm&quot;&gt;源代码&lt;/a&gt;编辑器的工作方式。</target>
        </trans-unit>
        <trans-unit>
          <source>Project files</source>
          <target>项目文件</target>
        </trans-unit>
        <trans-unit>
          <source>No need for recompilation</source>
          <target>无需重新编译</target>
        </trans-unit>
        <trans-unit>
          <source>The options for Width or Height alignment are:</source>
          <target>宽度或高度对齐的选项是：</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the id value is shown first in the combo box following with the description (en - English) and combo box is sorted by the ids. If unchecked the description is shown first following with the id (English - en) and combo box is sorted by descriptions.</source>
          <target>如果选中，则 id 值首先显示在描述（en - 英语）之后的组合框中，并且组合框按 id 排序。如果未选中，则描述首先显示在 id（英语 - en）之后，组合框按描述排序。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the font that is used in the pane.</source>
          <target>指定在窗格中使用的字体。</target>
        </trans-unit>
        <trans-unit>
          <source>After item</source>
          <target>项目后</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;JavaLocalization.htm&quot;&gt;Java resource file is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;JavaLocalization.htm&quot;&gt;Java 资源文件的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Visual editor and translation sheet have been linked to each other. If you select an item on the editor the corresponding row in the sheet gets selected. Similarly if you select a row in the sheet the corresponding item gets selected in the visual editor. You can configure the visual editor by choosing the context sensitive menu. To access menu right click visual editor. Sisulizer contains several visual editors. They are &lt;a href=&quot;FormEditor.htm&quot;&gt;form and dialog editor&lt;/a&gt;, HTML editor, XML editor, source code editor and Ini-file editor.</source>
          <target>可视化编辑器和翻译表已相互链接。如果您在编辑器上选择一个项目，则工作表中的相应行将被选中。同样，如果您在工作表中选择一行，则在可视化编辑器中会选择相应的项目。您可以通过选择上下文相关菜单来配置可视化编辑器。要访问菜单，请右键单击可视化编辑器。 Sisulizer 包含多个可视化编辑器。它们是&lt;a href=&quot;FormEditor.htm&quot;&gt;表单和对话框编辑器&lt;/a&gt;、HTML 编辑器、XML 编辑器、源代码编辑器和 Ini 文件编辑器。</target>
        </trans-unit>
        <trans-unit>
          <source>Makes the find performed forward (down in the column) starting from the current origin.</source>
          <target>使查找从当前原点开始向前执行（在列中向下）。</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be a &lt;a href=&quot;NetLocalization.htm#Project&quot;&gt;Visual Studio .NET project file&lt;/a&gt; (e.g. C:\Samples\Project.csproj).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是&lt;a href=&quot;NetLocalization.htm#Project&quot;&gt;Visual Studio .NET 项目文件&lt;/a&gt;（例如 C:\Samples\Project.csproj）。</target>
        </trans-unit>
        <trans-unit>
          <source>Right sides</source>
          <target>右侧</target>
        </trans-unit>
        <trans-unit>
          <source>The file must be a valid Windows PE file. If you use any post linker tools such as &lt;a href=&quot;EncryptedPeFiles.htm&quot;&gt;compresser or encrypter&lt;/a&gt; do not apply the tool for this file but the localized output files created by Sisulizer.</source>
          <target>该文件必须是有效的 Windows PE 文件。如果您使用任何后链接器工具，例如&lt;a href=&quot;EncryptedPeFiles.htm&quot;&gt;压缩器或加密器，&lt;/a&gt;请不要将此工具应用于此文件，而是使用 Sisulizer 创建的本地化输出文件。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked a translation status column is added as after a a translation column.</source>
          <target>如果选中，则在翻译列之后添加翻译状态列。</target>
        </trans-unit>
        <trans-unit>
          <source>UTF-16 string</source>
          <target>UTF-16 字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Here is the project tree of a sample Sisulizer project after you have completed the above steps.</source>
          <target>这是完成上述步骤后示例 Sisulizer 项目的项目树。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked clears the status in the rows.</source>
          <target>如果选中，则清除行中的状态。</target>
        </trans-unit>
        <trans-unit>
          <source>Set the language always</source>
          <target>始终设置语言</target>
        </trans-unit>
        <trans-unit>
          <source>Enter  here parameters that are passed to HTML browser command line before the filename.</source>
          <target>在此处输入在文件名之前传递到 HTML 浏览器命令行的参数。</target>
        </trans-unit>
        <trans-unit>
          <source>Highlight untranslated text</source>
          <target>突出显示未翻译的文本</target>
        </trans-unit>
        <trans-unit>
          <source>After you have created the localized file using your previous localization tool you can open the project again into Sisulizer.</source>
          <target>使用之前的本地化工具创建本地化文件后，您可以再次在 Sisulizer 中打开项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Choose the export file, type of the file, and the format of the file</source>
          <target>选择导出文件、文件类型和文件格式</target>
        </trans-unit>
        <trans-unit>
          <source>Exclude selected component from the project.</source>
          <target>从项目中排除选定的组件。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure how the Ini editor works.</source>
          <target>使用此对话框配置 Ini 编辑器的工作方式。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can access and localize Paradox databases</source>
          <target>Sisulizer 可以访问和本地化 Paradox 数据库</target>
        </trans-unit>
        <trans-unit>
          <source>String entities</source>
          <target>字符串实体</target>
        </trans-unit>
        <trans-unit>
          <source>Only Name, Capital and Description elements in use and germany section are localized. Population element is skipped and left intact. All elements of japan section are localized including Population.</source>
          <target>仅使用中的名称、大写和说明元素以及德国部分已本地化。人口元素被跳过并保持不变。日本部分的所有元素都已本地化，包括人口。</target>
        </trans-unit>
        <trans-unit>
          <source>In addition of giving you a flicker free language change it speeds up translation time by. However if you disable translation of integer properties TLaTranslator does not update Left, Top, Width and Height properties. This will disable any layout change done by your translator (e.g. in the case where translation did not fit to original space).</source>
          <target>除了为您提供无闪烁的语言更改之外，它还可以加快翻译时间。但是，如果您禁用整数属性的转换，TLaTranslator 不会更新 Left、Top、Width 和 Height 属性。这将禁用您的翻译所做的任何布局更改（例如，在翻译不适合原始空间的情况下）。</target>
        </trans-unit>
        <trans-unit>
          <source>Product name</source>
          <target>产品名称</target>
        </trans-unit>
        <trans-unit>
          <source>Status column tells the status of the keyword. The possible values are:</source>
          <target>状态栏告诉关键字的状态。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Large icons</source>
          <target>大图标</target>
        </trans-unit>
        <trans-unit>
          <source>Keep original name</source>
          <target>保留原名</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet set advanced options.</source>
          <target>使用此图纸集高级选项。</target>
        </trans-unit>
        <trans-unit>
          <source>The image appears near the right side of the button</source>
          <target>图像出现在按钮右侧附近</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the dictionary file that is used for spell checking. Type a file name or click ... to browse a dictionary file. In addition of dictionary file the spell checker might need some other files. Note that the following files are not used by all spell checker engines.</source>
          <target>指定用于拼写检查的字典文件。键入文件名或单击 ... 以浏览字典文件。除了字典文件，拼写检查器可能还需要一些其他文件。请注意，并非所有拼写检查引擎都使用以下文件。</target>
        </trans-unit>
        <trans-unit>
          <source>You can download original HTML files from the server.</source>
          <target>您可以从服务器下载原始 HTML 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Visual Studio .NET solution file (.sln)</source>
          <target>Visual Studio .NET 解决方案文件 (.sln)</target>
        </trans-unit>
        <trans-unit>
          <source>Embedded Visual Basic executable</source>
          <target>嵌入式 Visual Basic 可执行文件</target>
        </trans-unit>
        <trans-unit>
          <source>Localized appliction and library files</source>
          <target>本地化的应用程序和库文件</target>
        </trans-unit>
        <trans-unit>
          <source>Custom dictionary file</source>
          <target>自定义词典文件</target>
        </trans-unit>
        <trans-unit>
          <source>Write always empty</source>
          <target>写总是空的</target>
        </trans-unit>
        <trans-unit>
          <source>Zoom in</source>
          <target>放大</target>
        </trans-unit>
        <trans-unit>
          <source>If this dialog appears  choose the matching node for the import node and click OK. If you wan to skip importing of the node leave the original value in the combo box and click OK or Cancel.</source>
          <target>如果出现此对话框，请为导入节点选择匹配的节点，然后单击“确定”。如果您想跳过节点的导入，请在组合框中保留原始值，然后单击确定或取消。</target>
        </trans-unit>
        <trans-unit>
          <source>Duplicate meny short cut</source>
          <target>重复的捷径</target>
        </trans-unit>
        <trans-unit>
          <source>Use single tags</source>
          <target>使用单个标签</target>
        </trans-unit>
        <trans-unit>
          <source>Use the directory tree on right side to select the directory where the files are located.</source>
          <target>使用右侧的目录树选择文件所在的目录。</target>
        </trans-unit>
        <trans-unit>
          <source>Do not change the font</source>
          <target>不要改变字体</target>
        </trans-unit>
        <trans-unit>
          <source>You are about to exclude a row from the project. You can remove the exclude by choosing Project | Excluded Originals and remove the string from the list.</source>
          <target>您即将从项目中排除一行。您可以通过选择 Project | 来删除排除项。排除原件并从列表中删除字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Include only those rows that have been marked&lt;em&gt; Invalidated&lt;/em&gt;.</source>
          <target>仅包括那些已标记为&lt;em&gt;Invalidated 的&lt;/em&gt;行。</target>
        </trans-unit>
        <trans-unit>
          <source>Choose Edit | Undo to undo your most recent keystrokes or mouse actions.</source>
          <target>选择编辑 |撤消以撤消您最近的击键或鼠标操作。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies if  &lt;a href=&quot;DuplicateString.htm&quot;&gt;duplicated strings&lt;/a&gt; are exported. Possible options are:</source>
          <target>指定是否导出&lt;a href=&quot;DuplicateString.htm&quot;&gt;重复的字符串&lt;/a&gt;。可能的选项是：</target>
        </trans-unit>
        <trans-unit>
          <source>I want to continue my evaluation</source>
          <target>我要继续我的评价</target>
        </trans-unit>
        <trans-unit>
          <source>Open Sisulizer support pages in your default Internet browser.</source>
          <target>在您的默认 Internet 浏览器中打开 Sisulizer 支持页面。</target>
        </trans-unit>
        <trans-unit>
          <source>Use only solution&#x27;s parameters</source>
          <target>仅使用解决方案的参数</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure .NET settings that are common for both &lt;a href=&quot;WindowsFormsSettingsDialog.htm&quot;&gt;Windows Forms&lt;/a&gt; and &lt;a href=&quot;WpfSettingsDialog.htm&quot;&gt;WPF&lt;/a&gt;.</source>
          <target>使用此对话框配置&lt;a href=&quot;WindowsFormsSettingsDialog.htm&quot;&gt;Windows 窗体&lt;/a&gt;和&lt;a href=&quot;WpfSettingsDialog.htm&quot;&gt;WPF&lt;/a&gt;通用的 .NET 设置。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Original&lt;/em&gt; contains the original value of the string.</source>
          <target>&lt;em&gt;原始&lt;/em&gt;包含字符串的原始值。</target>
        </trans-unit>
        <trans-unit>
          <source>Include those items that has &lt;em&gt;For review&lt;/em&gt; status.</source>
          <target>包括那些具有&lt;em&gt;For review&lt;/em&gt;状态的项目。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked marked translations are written to the file.</source>
          <target>如果选中标记的翻译被写入文件。</target>
        </trans-unit>
        <trans-unit>
          <source>In order to compile the localized resources Sisulizer needs to know the location of the tools used by Qt.</source>
          <target>为了编译本地化资源，Sisulizer 需要知道 Qt 使用的工具的位置。</target>
        </trans-unit>
        <trans-unit>
          <source>Show this help window.</source>
          <target>显示此帮助窗口。</target>
        </trans-unit>
        <trans-unit>
          <source>Select the original language of the source item from the list. This is the language that the was used in original file or database. You can later change this value using the source dialog (right click the source name in the left side project tree and select Properties...).</source>
          <target>从列表中选择源项目的原始语言。这是在原始文件或数据库中使用的语言。您可以稍后使用源对话框更改此值（右键单击左侧项目树中的源名称并选择属性...）。</target>
        </trans-unit>
        <trans-unit>
          <source>Use following SQL statement to get the value</source>
          <target>使用以下 SQL 语句获取值</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer removes the country part from the language code when importing. For example if the import file contains German (Germany) data, the imported string will have German language property instead German (Germany).</source>
          <target>如果选中，Sisulizer 会在导入时从语言代码中删除国家/地区部分。例如，如果导入文件包含德语（德国）数据，则导入的字符串将具有德语语言属性，而不是德语（德国）。</target>
        </trans-unit>
        <trans-unit>
          <source>Signing applications</source>
          <target>签署申请</target>
        </trans-unit>
        <trans-unit>
          <source>Hints are not actual errors, but they will guide you.</source>
          <target>提示不是实际的错误，但它们会指导您。</target>
        </trans-unit>
        <trans-unit>
          <source>Each XLIFF file is multilingual containg source and target language. If you add an XLIFF fiel to a Sisulizer projct Project Wizard can automatically add the target language to the project and can import translation from XLIFF file.</source>
          <target>每个 XLIFF 文件都是多语言的，包含源语言和目标语言。如果您将 XLIFF 文件添加到 Sisulizer 项目项目向导可以自动将目标语言添加到项目中，并且可以从 XLIFF 文件导入翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer asks for the user to save the translations every time the project is saved.</source>
          <target>每次保存项目时，Sisulizer 都会要求用户保存翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Mark read only rows</source>
          <target>标记只读行</target>
        </trans-unit>
        <trans-unit>
          <source>Add context value before translation</source>
          <target>在翻译前添加上下文值</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;lt;!ENTITY vehicle SYSTEM &amp;quot;Sports.xml&amp;quot;&amp;gt;</source>
          <target>&amp;lt;!ENTITY 车辆系统“Sports.xml”&amp;gt;</target>
        </trans-unit>
        <trans-unit>
          <source>File in the project: Project1.exe&lt;br&gt;Import file: Project1&lt;strong&gt;DE&lt;/strong&gt;.exe</source>
          <target>项目中的文件：Project1.exe&lt;br&gt;导入文件：Project1 &lt;strong&gt;DE&lt;/strong&gt; .exe</target>
        </trans-unit>
        <trans-unit>
          <source>Translation comment</source>
          <target>翻译评论</target>
        </trans-unit>
        <trans-unit>
          <source>Selects the frame menu.</source>
          <target>选择框架菜单。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer parses string as source code.</source>
          <target>Sisulizer 将字符串解析为源代码。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the name of the file to be exported (e.g. C:\MyFiles\Export.xls).</source>
          <target>指定要导出的文件的名称（例如 C:\MyFiles\Export.xls）。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Create a report from the selected translation memory&lt;/em&gt; generates statistics for the current translation memory.</source>
          <target>&lt;em&gt;从选定的翻译记忆库创建报告&lt;/em&gt;生成当前翻译记忆库的统计信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify what Visual Basic resource types are localized. The list contains all the resource types used by Visual Basic. If you want to enable localization of a resource type check it. If you want to diasable localization of a resource type uncheck it. If a resource type is unchecked the localized file will use the original resource data.</source>
          <target>使用此表指定本地化的 Visual Basic 资源类型。该列表包含 Visual Basic 使用的所有资源类型。如果要启用资源类型的本地化，请检查它。如果您想禁用资源类型的本地化，请取消选中它。如果未选中资源类型，本地化文件将使用原始资源数据。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer writes to the localized resource file all those resource items that has a translation (i.e. a translation has been given in the edit sheet).&lt;br&gt;
    This is the default value.</source>
          <target>如果选中，Sisulizer 会将所有具有翻译的资源项写入本地化的资源文件（即已在编辑表中给出翻译）。&lt;br&gt;这是默认值。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the images that the main view shows. Possible values are:</source>
          <target>指定主视图显示的图像。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;RightToLeftLayout&lt;/em&gt; property specifies if the layout of the control should be mirrored before showing. If the value is True mirroring is done. Default value is False. Leave this to False. Sisulizer will change the value if needed.</source>
          <target>&lt;em&gt;RightToLeftLayout&lt;/em&gt;属性指定在显示之前是否应镜像控件的布局。如果值为 True，则完成镜像。默认值为假。将此保留为 False。如果需要，Sisulizer 将更改该值。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked translation defect ids are written to the file.</source>
          <target>如果检查的翻译缺陷 ID 被写入文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Guiliani file</source>
          <target>吉利亚尼档案</target>
        </trans-unit>
        <trans-unit>
          <source>Default virtual machine</source>
          <target>默认虚拟机</target>
        </trans-unit>
        <trans-unit>
          <source>Use segmentation</source>
          <target>使用分段</target>
        </trans-unit>
        <trans-unit>
          <source>Accept wild cards</source>
          <target>接受通配符</target>
        </trans-unit>
        <trans-unit>
          <source>More information</source>
          <target>更多信息</target>
        </trans-unit>
        <trans-unit>
          <source>Source code context method</source>
          <target>源代码上下文方法</target>
        </trans-unit>
        <trans-unit>
          <source>Press &lt;em&gt;Select All&lt;/em&gt; to check all validations. Press &lt;em&gt;Deselect All&lt;/em&gt; to uncheck all validations.</source>
          <target>按&lt;em&gt;全选&lt;/em&gt;以检查所有验证。按&lt;em&gt;取消全选&lt;/em&gt;以取消选中所有验证。</target>
        </trans-unit>
        <trans-unit>
          <source>Default user interface culture</source>
          <target>默认用户界面文化</target>
        </trans-unit>
        <trans-unit>
          <source>Auto layout</source>
          <target>自动布局</target>
        </trans-unit>
        <trans-unit>
          <source>If you have existing resource DLL&#x27;s of a VCL application that you add to a project Sisulizer can import translations from the resource DLL&#x27;s. For example if you have selected Project1.exe and there exists Project1.DE file Project Wizard will add German to the project and imports translations from Project1.DE. Resource DLL must locate on the same directory as the application or library file. &lt;!-- #BeginLibraryItem &quot;/Library/WindowsBinaryImport.lbi&quot; --&gt;Sisulizer can also import existing localized files if they are in a sub directories. For example if your original file is Project1.exe and you have de\Project1.exe Sisulizer will import German translations form that file. If you have Project1DE.exe Sisulizer will also import German translations from that file.</source>
          <target>如果您有添加到项目中的 VCL 应用程序的现有资源 DLL，Sisulizer 可以从资源 DLL 导入翻译。例如，如果您选择了 Project1.exe 并且存在 Project1.DE 文件，则项目向导会将德语添加到项目中并从 Project1.DE 导入翻译。资源 DLL 必须与应用程序或库文件位于同一目录中。&lt;!-- #BeginLibraryItem &quot;/Library/WindowsBinaryImport.lbi&quot; --&gt; Sisulizer 还可以导入位于子目录中的现有本地化文件。例如，如果您的原始文件是 Project1.exe 而您有 de\Project1.exe Sisulizer 将从该文件导入德语翻译。如果您有 Project1DE.exe，Sisulizer 还将从该文件导入德语翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>The localized TMX file contains only the original tuv where seg element and language attribute have been changed to match the target language.</source>
          <target>本地化的 TMX 文件仅包含原始 tuv，其中 seg 元素和语言属性已更改为匹配目标语言。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the selected control is read only and none of its properties can be changed.</source>
          <target>如果选中，则所选控件是只读的，并且它的任何属性都不能更改。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the translation memory runtime options. These options can be changed after the translation memory has been created.</source>
          <target>指定翻译记忆库运行时选项。创建翻译记忆库后可以更改这些选项。</target>
        </trans-unit>
        <trans-unit>
          <source>private void Form1_Load(object sender, EventArgs e)
{
  Left = 0;
  Top = 0;
  Width = Screen.PrimaryScreen.WorkingArea.Width;
  Height = Screen.PrimaryScreen.WorkingArea.Height;
  Text = Properties.Resources.Loading;
}</source>
          <target>private void Form1_Load(object sender, EventArgs e) { Left = 0;顶部 = 0;宽度 = Screen.PrimaryScreen.WorkingArea.Width;高度 = Screen.PrimaryScreen.WorkingArea.Height;文本 = Properties.Resources.Loading; }</target>
        </trans-unit>
        <trans-unit>
          <source>If checked makes the application to prompt the user each time before replacing the item.</source>
          <target>如果选中，则应用程序每次在替换项目之前都会提示用户。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the common options of the definition.</source>
          <target>指定定义的通用选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the type of the package.</source>
          <target>使用此表指定包裹的类型。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked translation defect ids column is added as after a a translation column.</source>
          <target>如果检查的翻译缺陷 ids 列被添加为翻译列之后。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to export data to a text file.</source>
          <target>使用此表将数据导出到文本文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Contains common definitions and contants.</source>
          <target>包含通用定义和内容。</target>
        </trans-unit>
        <trans-unit>
          <source>Long string</source>
          <target>长串</target>
        </trans-unit>
        <trans-unit>
          <source>will be expanded to</source>
          <target>将扩展到</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;a href=&quot;WorkingWithTranslationSheet.htm#Marked&quot;&gt;Marks&lt;/a&gt; the translation.</source>
          <target>&lt;a href=&quot;WorkingWithTranslationSheet.htm#Marked&quot;&gt;标记&lt;/a&gt;翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>When Sisulizer translates duplicate strings or translates using  translation engines it add certain characters to the translations if original string contains them but the existing translations do not. For example if the project contains two similar rows that differ only by punctuation marks:</source>
          <target>当 Sisulizer 翻译重复的字符串或使用翻译引擎进行翻译时，如果原始字符串包含某些字符但现有翻译不包含这些字符，则它会将某些字符添加到翻译中。例如，如果项目包含两个相似的行，仅标点符号不同：</target>
        </trans-unit>
        <trans-unit>
          <source>Translates images such as Picture property of TImage control.</source>
          <target>转换图像，例如 TImage 控件的 Picture 属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Lets you change the view mode of the workplace.</source>
          <target>允许您更改工作场所的视图模式。</target>
        </trans-unit>
        <trans-unit>
          <source>This dialog is shown when you a about to add an OpenOffice dictionary package (.oxt) into Sisulizer&#x27;s &lt;a href=&quot;SpellChecking.htm&quot;&gt;spell checker&lt;/a&gt;. A dictionary package contains several files where only two  (.dic and .aff) are needed for the &lt;a href=&quot;InstallHunspell.htm&quot;&gt;Hunspell&lt;/a&gt; spell checker engine. Use this dialog to select what dictionary to import and where to extract the dictionary files.</source>
          <target>当您准备将 OpenOffice 词典包 (.oxt) 添加到 Sisulizer 的&lt;a href=&quot;SpellChecking.htm&quot;&gt;拼写检查器&lt;/a&gt;时，将显示此对话框。字典包包含几个文件，其中&lt;a href=&quot;InstallHunspell.htm&quot;&gt;Hunspell&lt;/a&gt;拼写检查引擎只需要两个文件（.dic 和 .aff）。使用此对话框选择要导入的字典以及提取字典文件的位置。</target>
        </trans-unit>
        <trans-unit>
          <source>Unknown component</source>
          <target>未知组件</target>
        </trans-unit>
        <trans-unit>
          <source>String is cut in the middle and cut part is replaced with ...&lt;br&gt;&lt;samp&gt;This is a long string -&amp;gt; This i...string&lt;/samp&gt;</source>
          <target>字符串在中间被切断，切断的部分被替换为......&lt;br&gt;&lt;samp&gt;这是一个长字符串 -&amp;gt; 这个我...字符串&lt;/samp&gt;</target>
        </trans-unit>
        <trans-unit>
          <source>If checked  also those rows where original strings contains only white spaces are shown.</source>
          <target>如果选中，还会显示原始字符串仅包含空格的那些行。</target>
        </trans-unit>
        <trans-unit>
          <source>Windows binary file compiled by any C/C++ compiler such as Visual Studio</source>
          <target>由任何 C/C++ 编译器（如 Visual Studio）编译的 Windows 二进制文件</target>
        </trans-unit>
        <trans-unit>
          <source>Prompt first</source>
          <target>先提示</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the password.</source>
          <target>指定密码。</target>
        </trans-unit>
        <trans-unit>
          <source>When importing Sisulizer read two PO files, original and translated, to get original/translation language pairs and imports the translations to the project.</source>
          <target>导入 Sisulizer 时读取两个 PO 文件，原始和翻译，以获取原始/翻译语言对并将翻译导入到项目中。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the end character.</source>
          <target>指定结束字符。</target>
        </trans-unit>
        <trans-unit>
          <source>Update Charset-property when creating localized items</source>
          <target>创建本地化项目时更新 Charset-property</target>
        </trans-unit>
        <trans-unit>
          <source>Show How to Translate dialog</source>
          <target>显示如何翻译对话框</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer uses resource ids as context values. This is potentially dangerous because it is very likely that Delphi compiler will change the resource strings ids next time you compile your project. This will cause lost of translations or switching of existing translations. Both are very hard to fix.</source>
          <target>Sisulizer 使用资源 ID 作为上下文值。这是潜在的危险，因为 Delphi 编译器很可能会在您下次编译项目时更改资源字符串 id。这将导致丢失翻译或切换现有翻译。两者都很难修复。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies if the translation date is updated after certain operations. Possible operations are:</source>
          <target>指定在某些操作后是否更新翻译日期。可能的操作是：</target>
        </trans-unit>
        <trans-unit>
          <source>Check &lt;em&gt;Set layout property&lt;/em&gt; radio box to make Sisulizer to turn RightToLeftLayoyt property true  during the build process.</source>
          <target>选中&lt;em&gt;设置布局属性&lt;/em&gt;单选框以使 Sisulizer 在构建过程中将 RightToLeftLayoyt 属性设为 true。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer&#x27;s Text\Ini directory contains Ini samples.</source>
          <target>Sisulizer 的 Text\Ini 目录包含 Ini 示例。</target>
        </trans-unit>
        <trans-unit>
          <source>If you add a Mac file as platform file you must also specify &lt;a href=&quot;DrcFile.htm&quot;&gt;DRC file&lt;/a&gt;. Without it Sisulizer can no resolve the string resource names correctly. 32-bit and 64-bit Windows DRC files are identical so it enough that you specify the DRC file on the 32-bit output directory. However the Mac DRC is little bit different and it must be also specified. Use Project sheets to specify the both DRC files.</source>
          <target>如果您将 Mac 文件添加为平台文件，您还必须指定&lt;a href=&quot;DrcFile.htm&quot;&gt;DRC 文件&lt;/a&gt;。没有它 Sisulizer 无法正确解析字符串资源名称。 32 位和 64 位 Windows DRC 文件是相同的，因此您在 32 位输出目录中指定 DRC 文件就足够了。然而，Mac DRC 有点不同，它也必须被指定。使用项目表指定两个 DRC 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer shows only those rows where original and translated values are the same.</source>
          <target>如果选中 Sisulizer，则仅显示原始值和翻译值相同的那些行。</target>
        </trans-unit>
        <trans-unit>
          <source>HTML file</source>
          <target>HTML文件</target>
        </trans-unit>
        <trans-unit>
          <source>Contains the possible themes. Select the theme that you want to use.</source>
          <target>包含可能的主题。选择您要使用的主题。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies how the select XML item is treated when localizing the XML file.</source>
          <target>指定本地化 XML 文件时如何处理选择的 XML 项。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer shows visual XML editor whenever an XML node is selected in the project tree.</source>
          <target>如果选中，只要在项目树中选择了 XML 节点，Sisulizer 就会显示可视化 XML 编辑器。</target>
        </trans-unit>
        <trans-unit>
          <source>Best guess</source>
          <target>最佳的揣测</target>
        </trans-unit>
        <trans-unit>
          <source>File in the project: Project1.exe&lt;br&gt;Import file: Project1&lt;strong&gt;DE&lt;/strong&gt;.dll</source>
          <target>项目中的文件：Project1.exe&lt;br&gt;导入文件：Project1 &lt;strong&gt;DE&lt;/strong&gt; .dll</target>
        </trans-unit>
        <trans-unit>
          <source>LaTranslator.pas unit contains LaEnabledProperties variable.</source>
          <target>LaTranslator.pas 单元包含 LaEnabledProperties 变量。</target>
        </trans-unit>
        <trans-unit>
          <source>Changes the pane as a floating window.</source>
          <target>将窗格更改为浮动窗口。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the custom dictionary file. Even spell checker contains custom dictionary file, by default Sisulizer does not use it but stores custom words to Sisulizer project. If you wan to use stand alone custom dictionary you have to set &lt;em&gt;Custom dictionary type&lt;/em&gt; to &lt;em&gt;Use &amp;quot;&amp;lt;filename&amp;gt;&amp;quot; file&lt;/em&gt; in &lt;a href=&quot;LanguageDialog.htm&quot;&gt;Language dialog&lt;/a&gt; by choosing &lt;a href=&quot;LanguageDialog.htm&quot;&gt;Column | Language properties&lt;/a&gt;.</source>
          <target>指定自定义词典文件。甚至拼写检查器也包含自定义词典文件，默认情况下 Sisulizer 不使用它，而是将自定义单词存储到 Sisulizer 项目中。如果您想使用独立的自定义词典，您必须在&lt;a href=&quot;LanguageDialog.htm&quot;&gt;语言对话框中&lt;/a&gt;通过选择&lt;a href=&quot;LanguageDialog.htm&quot;&gt;列 |&lt;/a&gt;将&lt;em&gt;自定义词典类型&lt;/em&gt;设置为&lt;em&gt;使用“&amp;lt;文件名&amp;gt;”文件&lt;/em&gt;。&lt;a href=&quot;LanguageDialog.htm&quot;&gt;语言属性&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Import encoding</source>
          <target>导入编码</target>
        </trans-unit>
        <trans-unit>
          <source>Choose Edit | Redo to reverse the effects of your most recent Undo.</source>
          <target>选择编辑 |重做以逆转最近一次撤消的效果。</target>
        </trans-unit>
        <trans-unit>
          <source>If &lt;em&gt;Automatic format&lt;/em&gt; is checked you can not change the format.</source>
          <target>如果选中&lt;em&gt;自动格式，&lt;/em&gt;则不能更改格式。</target>
        </trans-unit>
        <trans-unit>
          <source>Image data in base64</source>
          <target>base64 中的图像数据</target>
        </trans-unit>
        <trans-unit>
          <source>Shows  translation history.</source>
          <target>显示翻译历史。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows information about the selected &lt;a href=&quot;http://www.worldlingo.com/&quot; target=&quot;_blank&quot;&gt;WorldLingo&lt;/a&gt; machine translator.</source>
          <target>显示有关所选&lt;a href=&quot;http://www.worldlingo.com/&quot; target=&quot;_blank&quot;&gt;WorldLingo&lt;/a&gt;机器翻译器的信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Minimum translation status that is accepted</source>
          <target>接受的最低翻译状态</target>
        </trans-unit>
        <trans-unit>
          <source>All similar files in a directory</source>
          <target>目录中的所有相似文件</target>
        </trans-unit>
        <trans-unit>
          <source>Your have excluded string data type. This will exclude most of the resource items. Use &lt;a href=&quot;ExcludeDataTypes.htm&quot;&gt;Exclude sheet&lt;/a&gt; to include string type.</source>
          <target>您已排除字符串数据类型。这将排除大部分资源项。使用&lt;a href=&quot;ExcludeDataTypes.htm&quot;&gt;排除表&lt;/a&gt;来包含字符串类型。</target>
        </trans-unit>
        <trans-unit>
          <source>Check &lt;em&gt;Check new items automatically&lt;/em&gt; if you want Sisulizer to localize (e.g. mark checked) all new sections that are added to the original file after the project has been created.</source>
          <target>如果您希望 Sisulizer 本地化（例如标记选中）在项目创建后添加到原始文件的所有新部分，请&lt;em&gt;选中自动检查新项目&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>If Sisulizer can access external service without an  library file either using linked code or direct Internet communication there is no need for add-on. Such services as &lt;a href=&quot;GoogleTranslate.htm&quot;&gt;Google Translate&lt;/a&gt; and &lt;a href=&quot;MicrosoftTranslator.htm&quot;&gt;Microsoft Translator&lt;/a&gt; machine translators do not appear on this list.</source>
          <target>如果 Sisulizer 可以使用链接代码或直接 Internet 通信在没有库文件的情况下访问外部服务，则不需要附加组件。 &lt;a href=&quot;GoogleTranslate.htm&quot;&gt;Google Translate&lt;/a&gt;和&lt;a href=&quot;MicrosoftTranslator.htm&quot;&gt;Microsoft Translator&lt;/a&gt;机器翻译器等服务不会出现在此列表中。</target>
        </trans-unit>
        <trans-unit>
          <source>Highlight untranslated strings</source>
          <target>突出显示未翻译的字符串</target>
        </trans-unit>
        <trans-unit>
          <source>You can set the default value to the original language list from the General Settings dialog. Choose Tools | General Settings menu and from there Language sheet.</source>
          <target>您可以从“常规设置”对话框将默认值设置为原始语言列表。选择工具 |常规设置菜单和那里的语言表。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer always keep the original new line encoding. This means if the original file uses LF the localized file also uses LF. This works even case by case. If the original data uses in some places LF and in some other places CR the localized file contains the same encoding at the same place as in the original data. The only exception is the situation where the original data does not contain any new lines but the translator has entered a new line. Then the default encoding is used. Use the &lt;a href=&quot;SourceDialogEncodingsSheet.htm&quot;&gt;Encoding sheet&lt;/a&gt; of the source dialog to set the default new line. The default value is CR+LF.</source>
          <target>Sisulizer 始终保持原来的换行编码。这意味着如果原始文件使用 LF，则本地化文件也使用 LF。这甚至逐案工作。如果原始数据在某些地方使用 LF 而在其他地方使用 CR，则本地化文件在与原始数据相同的地方包含相同的编码。唯一的例外是原始数据不包含任何新行但翻译人员输入了新行的情况。然后使用默认编码。使用源对话框的&lt;a href=&quot;SourceDialogEncodingsSheet.htm&quot;&gt;编码表&lt;/a&gt;设置默认的新行。默认值为 CR+LF。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer.Translator is a class that translates forms. Sisulizer.Resources ia a class works with satellite assembly files. Finally Sisulizer.SelectLanguage contains a dialog that show availabel languages and lets the use to select a new language.</source>
          <target>Sisulizer.Translator 是一个翻译表单的类。 Sisulizer.Resources 是一个处理附属程序集文件的类。最后，Sisulizer.SelectLanguage 包含一个对话框，显示可用语言并允许用户选择新语言。</target>
        </trans-unit>
        <trans-unit>
          <source>In general Sisulizer uses the same encoding in localized strings as in original strings. For example if the original form is in English most strings are encoded as short string using code page 1252. Strings that are longer than 255 characters are encoded as long strings using code page 1252. If a string contains non-ASCII characters (e.g. &amp;copy;, &amp;Auml; or &amp;Ouml;) it is encoded as UTF-8 or UTF-16, whichever takes less space.</source>
          <target>通常，Sisulizer 在本地化字符串中使用与原始字符串相同的编码。例如，如果原始形式是英文，大多数字符串使用代码页 1252 编码为短字符串。长度超过 255 个字符的字符串使用代码页 1252 编码为长字符串。如果字符串包含非 ASCII 字符（例如 ©、 Ä 或 Ö) 它被编码为 UTF-8 或 UTF-16，以占用较少空间的为准。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies what items are written to the output message pane</source>
          <target>指定将哪些项目写入输出消息窗格</target>
        </trans-unit>
        <trans-unit>
          <source>If you want to turn on the script neutral language codes choose the script that is the primary script. For example if you have Chinese Simplified and Chinese Traditional in your Sisulizer project Sisulizer  creates zh-Hans\assemblyname.resources.dll and  zh-Hant\assemblyname.resources.dll. If you set &lt;em&gt;Use neutral Chinese&lt;/em&gt; to &lt;em&gt;On Simplified Chinese&lt;/em&gt; Sisulizer creates zh\assemblyname.resources.dll and zh-Hant\assemblyname.resources.dll. If you check Traditional Chinese Sisulizer creates zh-Hans\assemblyname.resources.dll and  zh\assemblyname.resources.dll.</source>
          <target>如果要打开脚本中性语言代码，请选择作为主要脚本的脚本。例如，如果您的 Sisulizer 项目中有简体中文和繁体中文，Sisulizer 会创建 zh-Hans\assemblyname.resources.dll 和 zh-Hant\assemblyname.resources.dll。如果将&lt;em&gt;使用中性中文&lt;/em&gt;设置为&lt;em&gt;在简体中文上，&lt;/em&gt; Sisulizer 将创建 zh\assemblyname.resources.dll 和 zh-Hant\assemblyname.resources.dll。如果你勾选繁体中文 Sisulizer 创建 zh-Hans\assemblyname.resources.dll 和 zh\assemblyname.resources.dll。</target>
        </trans-unit>
        <trans-unit>
          <source>Assembly file localization</source>
          <target>装配文件本地化</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify how and when to add strings into  translation memories.</source>
          <target>使用此表指定将字符串添加到翻译记忆库的方式和时间。</target>
        </trans-unit>
        <trans-unit>
          <source>Check &lt;em&gt;Set reading order property&lt;/em&gt; check box to make Sisulizer to add RightToLeft attributes to bi-directional forms. This sets the reading order of all components of the forms. It also mirrors everything (form and its components) except container components (Panel, GroupBox, TabPage). To mirror container you have three choices:</source>
          <target>选中&lt;em&gt;设置阅读顺序属性&lt;/em&gt;复选框以使 Sisulizer 将 RightToLeft 属性添加到双向表单。这将设置表单所有组件的阅读顺序。除了容器组件（Panel、GroupBox、TabPage）之外，它还镜像所有内容（表单及其组件）。要镜像容器，您有三个选择：</target>
        </trans-unit>
        <trans-unit>
          <source>Localized value is less than the original value. Default color is red.</source>
          <target>本地化值小于原始值。默认颜色为红色。</target>
        </trans-unit>
        <trans-unit>
          <source>What file to deploy</source>
          <target>部署什么文件</target>
        </trans-unit>
        <trans-unit>
          <source>Translation Memory Exchage file  (.tmx)</source>
          <target>翻译记忆库交换文件 (.tmx)</target>
        </trans-unit>
        <trans-unit>
          <source>File uses single line comments that start with // string. Each line contains one record having an id and value separated by tab character. How to we specify this format using Sisulizer&#x27;s text definition rules. Rules define the format of a record. Each record contain two or more values. Possible values are:</source>
          <target>文件使用以 // 字符串开头的单行注释。每行包含一个记录，其 id 和值由制表符分隔。我们如何使用 Sisulizer 的文本定义规则指定这种格式。规则定义记录的格式。每个记录包含两个或多个值。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>If you use a component that is not present in the mappings collection you use an unmapped component. In that case Sisulizer tries to automatically map it based on keywords. For example every component that has word Label in its type name is most likely a label and it is mapped to label. You can add new items to the keyword list by choosing Tools | Platforms | &amp;lt;platform&amp;gt; and selecting Keywords sheet. If the automatic mapping goes wrong you can always correct it by using the mappings dialog. If Sisulizer can not automatically map a component it remain unmapped and it is drawn as a light pink box in the visual editor. An unmapped component also contains &amp;quot;Click to map component&amp;quot; text. You can map it by simple clicking it and the Map Component dialog appears. It lets you choose the right component mappings.</source>
          <target>如果您使用映射集合中不存在的组件，则使用未映射的组件。在这种情况下，Sisulizer 会尝试根据关键字自动映射它。例如，每个在其类型名称中包含单词 Label 的组件很可能是一个标签，它被映射到标签。您可以通过选择工具 | 将新项目添加到关键字列表中。平台 | &amp;lt;platform&amp;gt; 并选择关键字表。如果自动映射出错，您始终可以使用映射对话框进行更正。如果 Sisulizer 无法自动映射组件，则它保持未映射状态，并在可视化编辑器中绘制为浅粉色框。未映射的组件还包含“单击以映射组件”文本。您可以通过简单地单击来映射它，然后会出现“映射组件”对话框。它可以让您选择正确的组件映射。</target>
        </trans-unit>
        <trans-unit>
          <source>How to let Visual Studio to compile satellite assembly files</source>
          <target>如何让 Visual Studio 编译附属程序集文件</target>
        </trans-unit>
        <trans-unit>
          <source>Send project to translator</source>
          <target>将项目发送给翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Determines where the image or text appears on the speed button.</source>
          <target>确定图像或文本在速度按钮上的显示位置。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer supports two different methods to localize Silverlight applications. The methods are:</source>
          <target>Sisulizer 支持两种不同的方法来本地化 Silverlight 应用程序。方法是：</target>
        </trans-unit>
        <trans-unit>
          <source>If you leave this to &amp;quot;Use the language of the source&amp;quot;, Sisulizer uses the original language of the source where the string belongs.</source>
          <target>如果您将此保留为“使用源语言”，Sisulizer 将使用字符串所属的源的原始语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Windows dialog, forms and menus uses hotkey characters. They are marked with &amp;amp; character. For example &amp;amp;File contains an F hotkey. &lt;strong&gt;F&amp;amp;ile&lt;/strong&gt; contains I hotkey. It is recommended all items in the same form, dialog or menu have an unique hotkey. Sisulizer can automatically insert and check out hotkeys.</source>
          <target>Windows 对话框、窗体和菜单使用热键字符。它们用 &amp;amp; 字符标记。例如 &amp;amp;File 包含一个 F 热键。&lt;strong&gt;文件&amp;amp;文件&lt;/strong&gt;包含 I 热键。建议同一表单、对话框或菜单中的所有项目都具有唯一的热键。 Sisulizer 可以自动插入和检查热键。</target>
        </trans-unit>
        <trans-unit>
          <source>Resource table contains the unique resource ids. When adding localized strings to the database Sisulizer has to create new rows to the Country table. Each row has to have a unique id. If you want to control the way how Sisulizer creates new id write a SQL function and give that for Sisulizer&#x27;s database source.</source>
          <target>资源表包含唯一的资源 ID。将本地化字符串添加到数据库时，Sisulizer 必须在 Country 表中创建新行。每行必须有一个唯一的 id。如果您想控制 Sisulizer 创建新 ID 的方式，请编写一个 SQL 函数并将其提供给 Sisulizer 的数据库源。</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be a  &lt;a href=&quot;NetLocalization.htm#Assembly&quot;&gt;Silverlight  application file&lt;/a&gt; (e.g. C:\Samples\Project.xap).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是&lt;a href=&quot;NetLocalization.htm#Assembly&quot;&gt;Silverlight 应用程序文件&lt;/a&gt;（例如 C:\Samples\Project.xap）。</target>
        </trans-unit>
        <trans-unit>
          <source>This is an area for node comments. It contains the comments of the selected node.</source>
          <target>这是节点注释的区域。它包含所选节点的注释。</target>
        </trans-unit>
        <trans-unit>
          <source>Show as Text | Localized</source>
          <target>显示为文本 |本地化</target>
        </trans-unit>
        <trans-unit>
          <source>If your application is written in Delphi 5, C++Builder 5 or older and it contains Unicode enabled components such ad TNT or ElPack and you have not turned off Unicode writing you will get the following error when you try to run your localized application:</source>
          <target>如果您的应用程序是用 Delphi 5、C++Builder 5 或更早版本编写的，并且它包含启用 Unicode 的组件，例如广告 TNT 或 ElPack，并且您没有关闭 Unicode 写入，那么当您尝试运行本地化应用程序时，您将收到以下错误：</target>
        </trans-unit>
        <trans-unit>
          <source>If checked a translation comment column is added as after a a translation column.</source>
          <target>如果选中，则在翻译栏之后添加翻译注释栏。</target>
        </trans-unit>
        <trans-unit>
          <source>Tags usage</source>
          <target>标签使用</target>
        </trans-unit>
        <trans-unit>
          <source>Extensive information about regular expressions such as syntax and samples.</source>
          <target>有关正则表达式的大量信息，例如语法和示例。</target>
        </trans-unit>
        <trans-unit>
          <source>Tests the current segmentation rules.</source>
          <target>测试当前的分段规则。</target>
        </trans-unit>
        <trans-unit>
          <source>Before closing the file, the product prompts you to save any changes. If you have not previously saved the project, or any file, the product opens the &lt;a href=&quot;FileSaveAsMenu.htm&quot;&gt;Save As dialog box&lt;/a&gt;, where you can enter the new file name.</source>
          <target>在关闭文件之前，产品会提示您保存任何更改。如果您之前未保存项目或任何文件，产品将打开&lt;a href=&quot;FileSaveAsMenu.htm&quot;&gt;另存为对话框&lt;/a&gt;，您可以在其中输入新文件名。</target>
        </trans-unit>
        <trans-unit>
          <source>When Sisulizer creates localized satellite assembly files for a .NET project or assembly it need to use .NET framework tools. Without .NET framework Sisulizer can not compile resource files or create localized satellite assembly files. If you do not have .NET framework installed you can download it from Microsoft&#x27;s site.</source>
          <target>当 Sisulizer 为 .NET 项目或程序集创建本地化的附属程序集文件时，它需要使用 .NET 框架工具。没有 .NET 框架 Sisulizer 无法编译资源文件或创建本地化的附属程序集文件。如果您没有安装 .NET 框架，您可以从 Microsoft 的站点下载它。</target>
        </trans-unit>
        <trans-unit>
          <source>The most significant byte value is at the lowest address.</source>
          <target>最高有效字节值位于最低地址。</target>
        </trans-unit>
        <trans-unit>
          <source>Components sheet contains source specific component mappings.</source>
          <target>组件表包含特定于源的组件映射。</target>
        </trans-unit>
        <trans-unit>
          <source>A WIN32 application or library compiled with C++Builder using VCL or FireMonkey component library.</source>
          <target>使用 VCL 或 FireMonkey 组件库使用 C++Builder 编译的 WIN32 应用程序或库。</target>
        </trans-unit>
        <trans-unit>
          <source>Values file localization</source>
          <target>值文件本地化</target>
        </trans-unit>
        <trans-unit>
          <source>Change translation status</source>
          <target>更改翻译状态</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the resource types that are  localized. Possible values are:</source>
          <target>使用此表指定本地化的资源类型。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to select the properties that will be restored.</source>
          <target>使用此对话框可选择将要恢复的属性。</target>
        </trans-unit>
        <trans-unit>
          <source>The localization mode. Possible values are:</source>
          <target>本地化模式。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the name of the exchange package. If the package contains only the project file it has .sle file extension. If it contains also Sisulizer Free Edition setup it has .exe file extension. The edit box contains the filename of the package. If you have selected several packages to be created then the edit box contains the output directory where the package files are written.</source>
          <target>使用此表指定交换包的名称。如果包仅包含项目文件，则它具有 .sle 文件扩展名。如果它还包含 Sisulizer 免费版安装程序，则它具有 .exe 文件扩展名。编辑框包含包的文件名。如果您选择了多个要创建的包，则编辑框包含写入包文件的输出目录。</target>
        </trans-unit>
        <trans-unit>
          <source>Sheet Filter | Data types</source>
          <target>片式过滤器 |数据类型</target>
        </trans-unit>
        <trans-unit>
          <source>Finally we have defined all the element to describe the translation fallback process that Sisulizer used when building localized files. Your Sisulizer project can contain several language columns that that in actually are the same language but represent language&#x27;s different variations. The most common situation is American English and British English combination. The most of the words and strings are the same in both languages but there are situations where the spelling of American English differs from British English. How can you handle this in Sisulizer?</source>
          <target>最后，我们定义了所有元素来描述 Sisulizer 在构建本地化文件时使用的翻译回退过程。您的 Sisulizer 项目可以包含多个语言列，这些列实际上是相同的语言，但代表语言的不同变体。最常见的情况是美式英语和英式英语的组合。大多数单词和字符串在两种语言中都是相同的，但在某些情况下，美式英语的拼写与英式英语不同。您如何在 Sisulizer 中处理此问题？</target>
        </trans-unit>
        <trans-unit>
          <source>Find and Replace</source>
          <target>查找和替换</target>
        </trans-unit>
        <trans-unit>
          <source>Neutral Chinese coding</source>
          <target>中性中文编码</target>
        </trans-unit>
        <trans-unit>
          <source>Check this if you want to scan file name after #include
directive (e.g. &quot;#include &quot;file_name&quot;&quot;). Only the file name is
scanned and a string row created for the file name. The content of file is not scanned. This can be
used when there is need to use a localized include files.</source>
          <target>如果您想在 #include 指令之后扫描文件名，请选中此项（例如“#include“file_name””）。仅扫描文件名并为文件名创建字符串行。不扫描文件内容。这可以在需要使用本地化的包含文件时使用。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify the type of a custom resource. This specifies the type of all resources with the same resource type. If you have several resource items with same resource type but in different data format you have to specify the format in &lt;a href=&quot;WindowsCustomNodeDialog.htm&quot;&gt;each node&lt;/a&gt;.</source>
          <target>使用此对话框指定自定义资源的类型。这指定了具有相同资源类型的所有资源的类型。如果您有多个资源类型相同但数据格式不同的资源项，则必须在&lt;a href=&quot;WindowsCustomNodeDialog.htm&quot;&gt;每个节点中&lt;/a&gt;指定格式。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked white space characters (e.g. space, tab, line feed, carriage return) are added to the above exclude list when processing strings.</source>
          <target>如果在处理字符串时将选中的空白字符（例如空格、制表符、换行、回车）添加到上述排除列表中。</target>
        </trans-unit>
        <trans-unit>
          <source>Exclude current row from the project by the document context value.</source>
          <target>通过文档上下文值从项目中排除当前行。</target>
        </trans-unit>
        <trans-unit>
          <source>Use values in the line attribute as context ids. If there is no line attribute then use value in the original element.</source>
          <target>使用行属性中的值作为上下文 ID。如果没有 line 属性，则在原始元素中使用 value。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the expand percentage when the length of the original string is between 31 and 50 characters.</source>
          <target>指定原始字符串长度在 31 到 50 个字符之间时的扩展百分比。</target>
        </trans-unit>
        <trans-unit>
          <source>Multilingual file</source>
          <target>多语言文件</target>
        </trans-unit>
        <trans-unit>
          <source>export</source>
          <target>出口</target>
        </trans-unit>
        <trans-unit>
          <source>Only sheet is shown. Visual editor (if avilable) is hidden.</source>
          <target>仅显示工作表。可视化编辑器（如果可用）被隐藏。</target>
        </trans-unit>
        <trans-unit>
          <source>Mac OSX application file (.app) and Mach-O file (no extension) that has been compiled with Delphi and uses FireMonkey component library.</source>
          <target>使用 Delphi 编译并使用 FireMonkey 组件库的 Mac OSX 应用程序文件 (.app) 和 Mach-O 文件（无扩展名）。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies where  the strings are searched.  By default the strings are searched from original strings. If you want to search from translated strings set this to &lt;em&gt;Translated strings&lt;/em&gt;. If you want to seach from both original and translated strings set this to &lt;em&gt;Both strings&lt;/em&gt;.</source>
          <target>指定搜索字符串的位置。默认情况下，从原始字符串中搜索字符串。如果您想从已翻译的字符串中进行搜索，请将其设置为已&lt;em&gt;翻译的字符串&lt;/em&gt;。如果您想从原始字符串和翻译字符串中进行搜索，请将其设置为&lt;em&gt;Both strings&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit>
          <source>Importing from glossaries</source>
          <target>从词汇表导入</target>
        </trans-unit>
        <trans-unit>
          <source>Excluding rows</source>
          <target>排除行</target>
        </trans-unit>
        <trans-unit>
          <source>The final sample row, &amp;quot;This is &#x27;single&#x27; and &amp;quot;double&amp;quot; quote sample&amp;quot;, contains quote characters (&#x27; and &amp;quot;).</source>
          <target>最后一个示例行“这是‘单’和‘双’引号示例”，包含引号字符（&amp;#39; 和 &amp;quot;）。</target>
        </trans-unit>
        <trans-unit>
          <source>HTML localization is very simple in Sisulizer because it is visual, safe and you only need one single file - the .CHM file. Sisulizer extracts the HTML, contents and index files from the compiled CHM file, localizes them and finally creates a localized CHM file.</source>
          <target>HTML 本地化在 Sisulizer 中非常简单，因为它是可视化的、安全的，您只需要一个文件 - .CHM 文件。 Sisulizer 从编译的 CHM 文件中提取 HTML、内容和索引文件，对它们进行本地化，最后创建一个本地化的 CHM 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Importing from existing localized files</source>
          <target>从现有的本地化文件导入</target>
        </trans-unit>
        <trans-unit>
          <source>Invalidated translations</source>
          <target>无效翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Recreate manifest file every time</source>
          <target>每次都重新创建清单文件</target>
        </trans-unit>
        <trans-unit>
          <source>Delphi or C++Builder file (.exe or .dll)</source>
          <target>Delphi 或 C++Builder 文件（.exe 或 .dll）</target>
        </trans-unit>
        <trans-unit>
          <source>Connection sheet</source>
          <target>连接表</target>
        </trans-unit>
        <trans-unit>
          <source>Empty translation</source>
          <target>空译</target>
        </trans-unit>
        <trans-unit>
          <source>Creates the localized items (e.g. localized files or database items) for the selected language.</source>
          <target>为所选语言创建本地化项目（例如本地化文件或数据库项目）。</target>
        </trans-unit>
        <trans-unit>
          <source>Import also those items that are empty</source>
          <target>还导入那些空的项目</target>
        </trans-unit>
        <trans-unit>
          <source>When Sisulizer creates localized files it creates each localized .ui file in a language related sub directory. For example if you have C:\Sample\Main.ui and you build German files Sisulizer creates C:\Sample\de\Main.ui. Qt can not load localized .ui data on run time as it can load localized .ts data. Instead on compile time Qt tools read the .ui files and creates a C-header that contains the same data (dialog.ui -&amp;gt; ui_dialog.h). This makes all data from .ui hard coded to the compiled application. This sets a limitation for application: you have to create one application file for each language. It is not possible to create one application file that can support several language as in the traditional localization method. When you build you application replace the original .ui file with a localized .ui file. Delete the UI files header file and build the application. Qt tools create a new header file and build localized application file.</source>
          <target>当 Sisulizer 创建本地化文件时，它会在与语言相关的子目录中创建每个本地化的 .ui 文件。例如，如果您有 C:\Sample\Main.ui 并且您构建德语文件，Sisulizer 将创建 C:\Sample\de\Main.ui。 Qt 不能在运行时加载本地化的 .ui 数据，因为它可以加载本地化的 .ts 数据。相反，在编译时 Qt 工具读取 .ui 文件并创建一个包含相同数据的 C 头文件（dialog.ui -&amp;gt; ui_dialog.h）。这使得 .ui 中的所有数据都硬编码到已编译的应用程序中。这对应用程序设置了限制：您必须为每种语言创建一个应用程序文件。无法像传统的本地化方法那样创建一个可以支持多种语言的应用程序文件。构建应用程序时，将原始 .ui 文件替换为本地化的 .ui 文件。删除 UI 文件头文件并构建应用程序。 Qt 工具创建一个新的头文件并构建本地化的应用程序文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Language id field</source>
          <target>语言 ID 字段</target>
        </trans-unit>
        <trans-unit>
          <source>By default Sisulizer extracts all string-typed properties and the properties that needs to be extract to get the visual information. Such kind of properties are for example left, top, width, height, color, font, input method and reading order. In most cases this is just enough to properly localize a component. However in some cases the component could contain a non-string-typed property that needs to be localized as well.</source>
          <target>默认情况下，Sisulizer 提取所有字符串类型的属性以及需要提取以获得视觉信息的属性。此类属性例如左、上、宽度、高度、颜色、字体、输入法和阅读顺序。在大多数情况下，这足以正确定位组件。但是，在某些情况下，组件可能包含也需要本地化的非字符串类型属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Warning messages are shown</source>
          <target>显示警告消息</target>
        </trans-unit>
        <trans-unit>
          <source>Translation fallback</source>
          <target>翻译后备</target>
        </trans-unit>
        <trans-unit>
          <source>Some languages uses different spellings in different countries. For example American English and United Kingdom English differ in spelling. If the list contains more that one configuration of a language the topmost is used first. For example if you have two English spell checkers: English (US) and English (GB) and you have a project that has neutral English target language (without country part) Sisulizer will use the English spell checker that is first in the list.</source>
          <target>有些语言在不同的国家使用不同的拼写。例如，美国英语和英国英语在拼写上有所不同。如果列表包含不止一种语言配置，则首先使用最上面的配置。例如，如果您有两个英语拼写检查器：英语（美国）和英语（GB），并且您的项目具有中性英语目标语言（不含国家/地区部分），则 Sisulizer 将使用列表中第一个的英语拼写检查器。</target>
        </trans-unit>
        <trans-unit>
          <source>This list show the word or sentence that has a spelling or grammar error. Click &lt;em&gt;Ignore Once&lt;/em&gt; to ignore this item. Click &lt;em&gt;Ignore All&lt;/em&gt; to ignore all similar items in the project. Click &lt;em&gt;Add to Dictionary&lt;/em&gt; to add the word to the &lt;a href=&quot;SpellChecking.htm#CustomDictionary&quot;&gt;custom dictionary&lt;/a&gt;.</source>
          <target>此列表显示有拼写或语法错误的单词或句子。单击&lt;em&gt;忽略一次&lt;/em&gt;忽略此项。单击&lt;em&gt;全部忽略&lt;/em&gt;以忽略项目中的所有相似项。单击&lt;em&gt;添加到词典&lt;/em&gt;将单词添加到&lt;a href=&quot;SpellChecking.htm#CustomDictionary&quot;&gt;自定义词典&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the database localization method. This option is enabled only for databases that support database cloning  (e.g. Microsoft Access).</source>
          <target>指定数据库本地化方法。此选项仅对支持数据库克隆的数据库启用（例如 Microsoft Access）。</target>
        </trans-unit>
        <trans-unit>
          <source>Set the &lt;a href=&quot;ExchangeWizardOptionsSheet.htm&quot;&gt;exchange options&lt;/a&gt;</source>
          <target>设置&lt;a href=&quot;ExchangeWizardOptionsSheet.htm&quot;&gt;交换选项&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit>
          <source>Check &lt;em&gt;Row comments&lt;/em&gt; if you want to include only those rows that have Row comment.</source>
          <target>检查&lt;em&gt;行的意见&lt;/em&gt;，如果你想只包含有行注释的行。</target>
        </trans-unit>
        <trans-unit>
          <source>Description of the assembly</source>
          <target>装配说明</target>
        </trans-unit>
        <trans-unit>
          <source>Carriage return character (CR, 0x0D)</source>
          <target>回车符 (CR, 0x0D)</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer supports several databases. The following table contains the supported databases:</source>
          <target>Sisulizer 支持多个数据库。下表包含支持的数据库：</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;nbsp;This is the second extension for US description.</source>
          <target>这是美国描述的第二个扩展。</target>
        </trans-unit>
        <trans-unit>
          <source>The file name can contain wild cards (* and ?). When wild cards are used Sisulizer localizes all files matching the file name.</source>
          <target>文件名可以包含通配符（* 和 ?）。当使用通配符时，Sisulizer 本地化所有与文件名匹配的文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Header lines are shown</source>
          <target>显示标题行</target>
        </trans-unit>
        <trans-unit>
          <source>Component mapping is a custom mapping added by the user.</source>
          <target>组件映射是用户添加的自定义映射。</target>
        </trans-unit>
        <trans-unit>
          <source>Include those rows that has &lt;em&gt;Unused&lt;/em&gt; status.</source>
          <target>包括那些具有&lt;em&gt;未使用&lt;/em&gt;状态的行。</target>
        </trans-unit>
        <trans-unit>
          <source>In above screenshot dialog, string and data (form data) resources are enabled and all other disabled.</source>
          <target>在上面的屏幕截图对话框中，字符串和数据（表单数据）资源被启用，所有其他资源被禁用。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the package contains the source files of the project (i.e. files being localized).&lt;br&gt;
      &lt;strong&gt;Note!&lt;/strong&gt; If your source is a project source such as Visual Studio project file and you check this the exchange package will contain full source code of your project.</source>
          <target>如果选中，则包包含项目的源文件（即正在本地化的文件）。&lt;br&gt;&lt;strong&gt;笔记！&lt;/strong&gt;如果您的源是项目源，例如 Visual Studio 项目文件，并且您选中此项，则交换包将包含项目的完整源代码。</target>
        </trans-unit>
        <trans-unit>
          <source>If &lt;em&gt;Confirm overwrite&lt;/em&gt; is checked Sisulizer shows a confirmation dialog before trying to overwrite the current value. If unchecked no confirmation dialog is shown.</source>
          <target>如果选中&lt;em&gt;确认覆盖&lt;/em&gt;，Sisulizer 在尝试覆盖当前值之前会显示一个确认对话框。如果未选中，则不会显示确认对话框。</target>
        </trans-unit>
        <trans-unit>
          <source>Maximum pixels</source>
          <target>最大像素</target>
        </trans-unit>
        <trans-unit>
          <source>Click this to extract item from the string.</source>
          <target>单击此选项可从字符串中提取项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Project Wizard - PO file</source>
          <target>项目向导 - PO 文件</target>
        </trans-unit>
        <trans-unit>
          <source>Some compilers can compile the same project for two or more platforms. Platforms are for different CPU or for different operating system. For example Visual C++ can compile projects for 32-bit and 64-bit Windows. Delphi can compile VCL applications for 32-bit and 64-bit Windows. Delphi can compile &lt;a href=&quot;FireMonkeyLocalization.htm&quot;&gt;FireMonkey&lt;/a&gt; application even more platform such as &lt;a href=&quot;MacLocalization.htm&quot;&gt;OSX&lt;/a&gt; and iOS. The common things for platform files are they each platform file for same project contains the same resource items. Only the code part of the platform files differ. When dealing with multiple platform files one choice would be to add each platform file into Sisulizer project. However this approach is not good because it causes every resource and strings to appear multiple times. By adding only one file into the project and then configuring that file to have one or more platform files is a much better solution. First is brings each item only once to the project and secondly the same settings are used for each platform files.</source>
          <target>一些编译器可以为两个或多个平台编译同一个项目。平台适用于不同的 CPU 或不同的操作系统。例如，Visual C++ 可以为 32 位和 64 位 Windows 编译项目。 Delphi 可以为 32 位和 64 位 Windows 编译 VCL 应用程序。 Delphi 甚至可以编译&lt;a href=&quot;MacLocalization.htm&quot;&gt;OSX&lt;/a&gt;和 iOS 等更多平台的&lt;a href=&quot;FireMonkeyLocalization.htm&quot;&gt;FireMonkey&lt;/a&gt;应用程序。平台文件的共同点是同一项目的每个平台文件都包含相同的资源项。只有平台文件的代码部分不同。处理多个平台文件时，一种选择是将每个平台文件添加到 Sisulizer 项目中。但是这种方法并不好，因为它会导致每个资源和字符串出现多次。只将一个文件添加到项目中，然后将该文件配置为具有一个或多个平台文件是一种更好的解决方案。首先是将每个项目只带一次到项目中，其次为每个平台文件使用相同的设置。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the Visual Basic localization options.</source>
          <target>使用此表指定 Visual Basic 本地化选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Update product version field</source>
          <target>更新产品版本字段</target>
        </trans-unit>
        <trans-unit>
          <source>Importing existing translations</source>
          <target>导入现有翻译</target>
        </trans-unit>
        <trans-unit>
          <source>will extract &lt;code&gt;&amp;quot; This is a sample&amp;quot;&lt;/code&gt; if the check box is unchecked and &lt;code&gt;&amp;quot;This is a sample&amp;quot;&lt;/code&gt; if it is checked.</source>
          <target>将提取&lt;code&gt;&amp;quot; This is a sample&amp;quot;&lt;/code&gt;如果未选中此复选框和&lt;code&gt;&amp;quot;This is a sample&amp;quot;&lt;/code&gt; ，如果它被选中。</target>
        </trans-unit>
        <trans-unit>
          <source>Opens a Replace dialog that lets you replace text.</source>
          <target>打开可让您替换文本的替换对话框。</target>
        </trans-unit>
        <trans-unit>
          <source>Project Wizard - XML file</source>
          <target>项目向导 - XML 文件</target>
        </trans-unit>
        <trans-unit>
          <source>Select a directory from the directory tree and press OK.</source>
          <target>从目录树中选择一个目录，然后按 OK。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the type of the translation engine.</source>
          <target>显示翻译引擎的类型。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the original string. This is read-only. You can mark and copy parts of the native text, and paste it in the translation.</source>
          <target>显示原始字符串。这是只读的。您可以标记和复制部分本地文本，并将其粘贴到翻译中。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer automatically select the node where a row belongs to when showing a row matching the search parameters.</source>
          <target>如果选中 Sisulizer，则在显示与搜索参数匹配的行时，会自动选择该行所属的节点。</target>
        </trans-unit>
        <trans-unit>
          <source>Form translation requires little bit more explanation. LaDialog.SelectResourceLocale calls LaResource.SetNewResourceFile function that performs the resource loading. It load the resource DLL of the selected language (e.g. Project1.DE). After loading new resources SelectResourceLocale calls TLaTranslator.TranslateForms function that translates all existing forms. It is very important to understand what happens here. Sisulizer reads the form data from localized resource DLL and assigns all properties of every component on every form. This means that after the process all components and properties of all forms have the values that the localized resource DLL contains. If you application contains any dynamic property (e.g. value set on run time) you have to update them after language change. If you used OnCreate to initialize the dynamic properties call the event again. Note that now the resourcestring values contain value in different language so you can use them in the same way as in your original code. Let&#x27;s have an example.</source>
          <target>形式翻译需要多一点解释。 LaDialog.SelectResourceLocale 调用执行资源加载的 LaResource.SetNewResourceFile 函数。它加载所选语言的资源DLL（例如Project1.DE）。加载新资源后 SelectResourceLocale 调用 TLaTranslator.TranslateForms 函数来翻译所有现有表单。了解这里发生的事情非常重要。 Sisulizer 从本地化的资源 DLL 中读取表单数据，并在每个表单上分配每个组件的所有属性。这意味着在处理之后，所有表单的所有组件和属性都具有本地化资源 DLL 包含的值。如果您的应用程序包含任何动态属性（例如在运行时设置的值），您必须在语言更改后更新它们。如果您使用 OnCreate 来初始化动态属性，请再次调用该事件。请注意，现在资源字符串值包含不同语言的值，因此您可以像在原始代码中一样使用它们。让我们举个例子。</target>
        </trans-unit>
        <trans-unit>
          <source>Imports data from a Borland Translation Repository file. Use this if you want to import data from ITE&#x27;s translation storage (.xml).</source>
          <target>从 Borland Translation Repository 文件导入数据。如果要从 ITE 的翻译存储 (.xml) 导入数据，请使用此选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Select all cells on the project.</source>
          <target>选择项目中的所有单元格。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the language if format. Possible values are:</source>
          <target>指定格式时的语言。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Restores the selected property to the default value defined in the global settings.</source>
          <target>将所选属性恢复为全局设置中定义的默认值。</target>
        </trans-unit>
        <trans-unit>
          <source>String and memo fields can contain structured strings</source>
          <target>字符串和备注字段可以包含结构化字符串</target>
        </trans-unit>
        <trans-unit>
          <source>PO file pair</source>
          <target>PO 文件对</target>
        </trans-unit>
        <trans-unit>
          <source>Easiest way to send project to translator is to send the &lt;a href=&quot;Files.htm&quot;&gt;project file&lt;/a&gt; (.slp). It contains all the data needed.</source>
          <target>将项目发送给翻译人员的最简单方法是发送&lt;a href=&quot;Files.htm&quot;&gt;项目文件&lt;/a&gt;(.slp)。它包含所有需要的数据。</target>
        </trans-unit>
        <trans-unit>
          <source>File extension</source>
          <target>文件扩展名</target>
        </trans-unit>
        <trans-unit>
          <source>Improved support for XAML, WPF and Silverlight</source>
          <target>改进了对 XAML、WPF 和 Silverlight 的支持</target>
        </trans-unit>
        <trans-unit>
          <source>Let&#x27;s have an example. MyApplication.exe is the main assembly of your application. It contains the original English resources. If we want to localize the application into German we have to create a DLL called MyApplication.resources.dll that contains German resources and place that into &amp;quot;de&amp;quot; sub directory. The Japanese satellite assembly file will have the same name but it will be placed in &amp;quot;ja&amp;quot; sub directory. So our final file and directory structure will be:</source>
          <target>让我们举个例子。 MyApplication.exe 是应用程序的主要程序集。它包含原始英文资源。如果我们要将应用程序本地化为德语，我们必须创建一个名为 MyApplication.resources.dll 的 DLL，其中包含德语资源并将其放入“de”子目录中。日语附属程序集文件将具有相同的名称，但将放置在“ja”子目录中。所以我们的最终文件和目录结构将是：</target>
        </trans-unit>
        <trans-unit>
          <source>After original</source>
          <target>原版后</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies how rows are included as visible based on their row status. Those rows that have one of the selected statuses will be included as visible to the in the package. Uncheck those statuses that you do not want to include. Possible values are:</source>
          <target>指定如何根据行状态将行包含为可见。具有选定状态之一的那些行将作为对包中的 可见而包含在内。取消选中您不想包括的那些状态。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Enter the name of the translation engine. It must be unique.</source>
          <target>输入翻译引擎的名称。它必须是独一无二的。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;a name=&quot;ApplicationCommands&quot;&gt;ApplicationsCommands&lt;/a&gt; class</source>
          <target>&lt;a name=&quot;ApplicationCommands&quot;&gt;ApplicationsCommands&lt;/a&gt;类</target>
        </trans-unit>
        <trans-unit>
          <source>Because multilingual .exe contains the same resource in many times the size of the .exe can be much higher compared to the single language .exe. However on most cases the size of the resource blocks in the .exe is much smaller than the size of the code blocks. This means that even having a dozen languages in the same .exe won&#x27;t double the size of the .exe.</source>
          <target>由于多语言 .exe 包含多次相同的资源，因此与单语言 .exe 相比，.exe 的大小可能要大得多。然而，在大多数情况下，.exe 中资源块的大小远小于代码块的大小。这意味着即使在同一个 .exe 中有十几种语言也不会使 .exe 的大小增加一倍。</target>
        </trans-unit>
        <trans-unit>
          <source>Ini file (.ini) and other file that uses section/key format such as InstallShield string table file (.shl)</source>
          <target>Ini 文件 (.ini) 和其他使用部分/密钥格式的文件，例如 InstallShield 字符串表文件 (.shl)</target>
        </trans-unit>
        <trans-unit>
          <source>Because both alternative context methods have their limitation and dangers it is very much recommended to specify a DRC file. To create a .drc file choose Project | Options | Linking from Delphi and select &lt;em&gt; Detailed&lt;/em&gt; in the &lt;em&gt;Map file&lt;/em&gt; selection. In Delphi XE2 or later you can also turn  DRC files on by checking &lt;em&gt;Output resource string .drc file&lt;/em&gt; check box.</source>
          <target>因为这两种可选的上下文方法都有其局限性和危险，所以非常建议指定 DRC 文件。要创建 .drc 文件，请选择 Project |选项 |从 Delphi 链接并在&lt;em&gt;地图文件&lt;/em&gt;选择中选择&lt;em&gt;详细&lt;/em&gt;。在 Delphi XE2 或更高版本中，您还可以通过选中&lt;em&gt;输出资源字符串 .drc 文件&lt;/em&gt;复选框来打开 DRC 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Include empty translations into MO files</source>
          <target>将空翻译包含到 MO 文件中</target>
        </trans-unit>
        <trans-unit>
          <source>Exact match -&amp;gt; Partial match -&amp;gt; Default language -&amp;gt; Original language</source>
          <target>完全匹配 -&amp;gt; 部分匹配 -&amp;gt; 默认语言 -&amp;gt; 原始语言</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure how the XML editor works.</source>
          <target>使用此对话框配置 XML 编辑器的工作方式。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked version number values from version resource are extracted.</source>
          <target>如果从版本资源中提取选中的版本号值。</target>
        </trans-unit>
        <trans-unit>
          <source>Grid size</source>
          <target>网格大小</target>
        </trans-unit>
        <trans-unit>
          <source>Write row status</source>
          <target>写入行状态</target>
        </trans-unit>
        <trans-unit>
          <source>Embedding resource DLLs into application or library file</source>
          <target>将资源 DLL 嵌入到应用程序或库文件中</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer creates a language specific sub directory that contains &amp;lt;projectname&amp;gt;.app directory. For example if your project is Project1 the German output directory is generated into OSX32\Debug\de\Project1.app directory. The .app directory then contains Project1 (Mach-o) file, .dylib (library) files and resource files in Contents sub directory.&lt;br&gt;
      Each output directory contains support for one language.</source>
          <target>Sisulizer 创建一个特定于语言的子目录，其中包含 &amp;lt;projectname&amp;gt;.app 目录。例如，如果您的项目是 Project1，则德语输出目录会生成到 OSX32\Debug\de\Project1.app 目录中。然后 .app 目录在 Contents 子目录中包含 Project1 (Mach-o) 文件、.dylib (library) 文件和资源文件。&lt;br&gt;每个输出目录都包含对一种语言的支持。</target>
        </trans-unit>
        <trans-unit>
          <source>Interbase database.&lt;br&gt;
      Server group specifies the server type. Select Local server if your Interbase server running on this computer. Select Remote server if your Interbase server is running on some other computer.&lt;br&gt;
      SQL dialect specifies the SQL dialect that your Interbase server uses.</source>
          <target>Interbase 数据库。&lt;br&gt;服务器组指定服务器类型。如果您的 Interbase 服务器在这台计算机上运行，​​请选择本地服务器。如果您的 Interbase 服务器正在其他计算机上运行，​​请选择远程服务器。&lt;br&gt; SQL 方言指定您的 Interbase 服务器使用的 SQL 方言。</target>
        </trans-unit>
        <trans-unit>
          <source>To set a string required right click on the left side of the row and choose Row | Required Strings. Enter the required string(s) to the dialog that appears.</source>
          <target>要设置所需的字符串，请右键单击该行的左侧并选择 Row |必需的字符串。在出现的对话框中输入所需的字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Both language and country parts are written in upper case.&lt;br&gt;For example EN-US</source>
          <target>语言和国家/地区部分均以大写形式书写。&lt;br&gt;例如 EN-US</target>
        </trans-unit>
        <trans-unit>
          <source>Import from existing localized files</source>
          <target>从现有的本地化文件导入</target>
        </trans-unit>
        <trans-unit>
          <source>Original language is the language that is used in the original file. For example if an American software company writes a software they usually use American English in user interfaces and help files. Similarly a German company uses German. It is essential that Sisulizer know the original language. This is why &lt;a href=&quot;ProjectWizard.htm&quot;&gt;Project Wizard&lt;/a&gt; asks that information.</source>
          <target>原始语言是原始文件中使用的语言。例如，如果一家美国软件公司编写一个软件，他们通常在用户界面和帮助文件中使用美国英语。同样，一家德国公司使用德语。 Sisulizer 必须了解原始语言。这就是&lt;a href=&quot;ProjectWizard.htm&quot;&gt;项目向导&lt;/a&gt;询问该信息的原因。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;DatabaseLocalization.htm&quot;&gt;database is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;DatabaseLocalization.htm&quot;&gt;数据库的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>The combo box on the upper side of the dialog contains the configured definition. Select the definition you want to edit. Click + button to add a new. Click - to remove the selected one. Click notepad image to rename the selected definition.</source>
          <target>对话框上方的组合框包含已配置的定义。选择要编辑的定义。单击 + 按钮添加一个新的。单击 - 删除选定的一项。单击记事​​本图像以重命名所选定义。</target>
        </trans-unit>
        <trans-unit>
          <source>Change row status from New to In use automatically before scanning</source>
          <target>扫描前自动将行状态从新建更改为使用中</target>
        </trans-unit>
        <trans-unit>
          <source>Whole project</source>
          <target>整个项目</target>
        </trans-unit>
        <trans-unit>
          <source>Send to Back</source>
          <target>发送到后面</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to filter what items are shown in the translation sheet. Sisulizer has very flexible way to specify the filter. It makes you possible to show only those items that you really need. The dialog contains the following sheets:</source>
          <target>使用此对话框过滤翻译表中显示的项目。 Sisulizer 有非常灵活的方式来指定过滤器。它使您可以只显示您真正需要的那些项目。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Add Silverlight package file (.xap) into Sisulizer project.</source>
          <target>将 Silverlight 包文件 (.xap) 添加到 Sisulizer 项目中。</target>
        </trans-unit>
        <trans-unit>
          <source>Japanese input method</source>
          <target>日语输入法</target>
        </trans-unit>
        <trans-unit>
          <source>Click &lt;em&gt;Export&lt;/em&gt; to export languages and locales to the selected file using the Sisulizer language file format (.sll). This is an XML file that contains all languages and locales.</source>
          <target>单击&lt;em&gt;导出&lt;/em&gt;以使用 Sisulizer 语言文件格式 (.sll) 将语言和区域设置&lt;em&gt;导出&lt;/em&gt;到所选文件。这是一个包含所有语言和区域设置的 XML 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Translated strings compared to originals</source>
          <target>翻译后的字符串与原始字符串的比较</target>
        </trans-unit>
        <trans-unit>
          <source>Making your own installation</source>
          <target>自己安装</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer supports several &lt;a href=&quot;SpellChecking.htm&quot;&gt;spell checker&lt;/a&gt; engines. However out of the box only one of them, Polar spell checker, is enabled. This is because both license and size reasons. In order to use another spell checkers you  have to install a spell checker  dictionaries and in some case spell checker engines. In most cases the engine is a DLL and dictionary is a file.</source>
          <target>Sisulizer 支持多种&lt;a href=&quot;SpellChecking.htm&quot;&gt;拼写检查&lt;/a&gt;引擎。然而，开箱即用，仅启用了其中之一，即 Polar 拼写检查器。这是因为许可证和大小的原因。为了使用其他拼写检查器，您必须安装拼写检查器字典，在某些情况下还需要安装拼写检查器引擎。在大多数情况下，引擎是一个 DLL，而字典是一个文件。</target>
        </trans-unit>
        <trans-unit>
          <source>This edit contains the characters that the &lt;em&gt;Missing symbol&lt;/em&gt; validation uses. If the original string contains any of these characters but the translation does not then a validation item is generated in the validation list. This is useful for instance if some string contain the copyright character</source>
          <target>此编辑包含&lt;em&gt;缺失符号&lt;/em&gt;验证使用的字符。如果原始字符串包含这些字符中的任何一个，但翻译不包含，则在验证列表中生成验证项。例如，如果某些字符串包含版权字符，这很有用</target>
        </trans-unit>
        <trans-unit>
          <source>The following item contains maximum length of the string in characters and a comment value.</source>
          <target>以下项目包含字符串的最大长度（以字符为单位）和注释值。</target>
        </trans-unit>
        <trans-unit>
          <source>Clear New status from the selected row.</source>
          <target>从所选行中清除新状态。</target>
        </trans-unit>
        <trans-unit>
          <source>Include those items that has &lt;em&gt;Auto translated&lt;/em&gt; status.</source>
          <target>包括那些具有&lt;em&gt;自动翻译&lt;/em&gt;状态的项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to turn columns visible or hidden. Check thos columns that you want to be visible in the edit grid. Click &lt;em&gt;Select All&lt;/em&gt; to show all columns. Click &lt;em&gt;Deselect all&lt;/em&gt; to hide all columns.</source>
          <target>使用此对话框可显示或隐藏列。选中您希望在编辑网格中可见的列。单击&lt;em&gt;全选&lt;/em&gt;以显示所有列。单击&lt;em&gt;取消全选&lt;/em&gt;以隐藏所有列。</target>
        </trans-unit>
        <trans-unit>
          <source>Set the culture in the initialization section.</source>
          <target>在初始化部分设置文化。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the original resource data of selected node in a text format.</source>
          <target>以文本格式显示选定节点的原始资源数据。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Output files&lt;/em&gt; lets you specify the format and name of the output files. Some platforms support several different output formats. For example when you localize Delphi application the default output file is localized EXE but you can make Sisulizer to create also resource DLLs and/or multilingual EXE. Check the check box of output files that you want to create. Each output file types contains a combo box that is used to specify the name of the output file. You can select a pattern from the combo box list or you can type your own pattern. Each pattern  contains file and language parameters.</source>
          <target>&lt;em&gt;输出文件&lt;/em&gt;允许您指定&lt;em&gt;输出文件&lt;/em&gt;的格式和名称。某些平台支持多种不同的输出格式。例如，当您本地化 Delphi 应用程序时，默认输出文件是本地化的 EXE，但您可以使 Sisulizer 也创建资源 DLL 和/或多语言 EXE。选中要创建的输出文件的复选框。每个输出文件类型都包含一个组合框，用于指定输出文件的名称。您可以从组合框列表中选择一种模式，也可以键入自己的模式。每个模式都包含文件和语言参数。</target>
        </trans-unit>
        <trans-unit>
          <source>Null terminared</source>
          <target>空终止</target>
        </trans-unit>
        <trans-unit>
          <source>developer &amp;lt;- translator</source>
          <target>开发人员 &amp;lt;- 翻译</target>
        </trans-unit>
        <trans-unit>
          <source>This dialog is shown after you have tried to use &lt;a href=&quot;SpellChecking.htm&quot;&gt;spell or grammar checking&lt;/a&gt; for a language that you have not yet configured to be used in Sisulizer. By default Sisulizer setup installs spell checking support (not grammar) for most European languages. If your language is not among those languages or you want to use grammar checking you have to manually install dictionary and possible spell checker engine to your computer and configure Sisulizer to use it.</source>
          <target>在您尝试对尚未配置为在 Sisulizer 中使用的语言进行&lt;a href=&quot;SpellChecking.htm&quot;&gt;拼写或语法检查&lt;/a&gt;后，将显示此对话框。默认情况下，Sisulizer 安装程序为大多数欧洲语言安装拼写检查支持（不是语法）。如果您的语言不在这些语言中，或者您想使用语法检查，您必须手动将字典和可能的拼写检查引擎安装到您的计算机并配置 Sisulizer 以使用它。</target>
        </trans-unit>
        <trans-unit>
          <source>If this is checked and a component is inherited from the parent form a small icon will indicate that it is a inherited component.</source>
          <target>如果选中此选项并且组件是从父窗体继承的，则小图标将指示它是继承的组件。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies if Sisulizer includes the byte order mark (BOM) in the beginning of UTF-8 or UTF-16 file when writing files. The following table contains BOM used with each file format:</source>
          <target>指定 Sisulizer 在写入文件时是否在 UTF-8 或 UTF-16 文件的开头包含字节顺序标记 (BOM)。下表包含用于每种文件格式的 BOM：</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer tries to map the unknown components using the keyword list.</source>
          <target>如果选中 Sisulizer 尝试使用关键字列表映射未知组件。</target>
        </trans-unit>
        <trans-unit>
          <source>When building the Japanese files Sisulizer creates the following source code:</source>
          <target>在构建日语文件时，Sisulizer 创建以下源代码：</target>
        </trans-unit>
        <trans-unit>
          <source>Localized files</source>
          <target>本地化文件</target>
        </trans-unit>
        <trans-unit>
          <source>When applying to the original files you can check that your original file do not contain duplicate hotkeys. If they do you can fix them before you start localization work.</source>
          <target>应用于原始文件时，您可以检查原始文件是否不包含重复的热键。如果他们这样做，您可以在开始本地化工作之前修复它们。</target>
        </trans-unit>
        <trans-unit>
          <source>Create images</source>
          <target>创建图像</target>
        </trans-unit>
        <trans-unit>
          <source>Add this unit to your project to make common dialogs multilingual.</source>
          <target>将此单元添加到您的项目中，使常用对话框多语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Icon layout</source>
          <target>图标布局</target>
        </trans-unit>
        <trans-unit>
          <source>Click &lt;em&gt;Add sub&lt;/em&gt;  to add a new country to the selected language. &lt;a href=&quot;SystemCountryDialog.htm&quot;&gt;System Country&lt;/a&gt; dialog box will appear. All Set the values and press OK.</source>
          <target>单击&lt;em&gt;添加子项&lt;/em&gt;以将新国家/地区添加到所选语言。将出现&lt;a href=&quot;SystemCountryDialog.htm&quot;&gt;系统国家&lt;/a&gt;对话框。全部 设置值并按 OK。</target>
        </trans-unit>
        <trans-unit>
          <source>Basic or VB Script source code</source>
          <target>基本或 VB 脚本源代码</target>
        </trans-unit>
        <trans-unit>
          <source>Only rows of the current view</source>
          <target>仅当前视图的行</target>
        </trans-unit>
        <trans-unit>
          <source>Support for Visual Studio 2015</source>
          <target>支持 Visual Studio 2015</target>
        </trans-unit>
        <trans-unit>
          <source>Preceding length word</source>
          <target>前置长度字</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks if there are any  original strings that have not translation given.</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查是否有任何未提供翻译的原始字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Support for .NET Compact 3.9</source>
          <target>支持 .NET Compact 3.9</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies if Ansi strings are converted to Unicode strings when creating localized forms. Possible values are:</source>
          <target>指定在创建本地化表单时是否将 Ansi 字符串转换为 Unicode 字符串。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Localizes all similar files in a directory and optionally on its sub directories as well.</source>
          <target>本地化一个目录中的所有类似文件，也可以选择在其子目录中本地化。</target>
        </trans-unit>
        <trans-unit>
          <source>32-bit and 64-bit Windows.</source>
          <target>32 位和 64 位 Windows。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the expand percentage when the length of the original string is over 50 characters.</source>
          <target>指定原始字符串长度超过 50 个字符时的扩展百分比。</target>
        </trans-unit>
        <trans-unit>
          <source>LaTranslator units contains following events.</source>
          <target>LaTranslator 单元包含以下事件。</target>
        </trans-unit>
        <trans-unit>
          <source>Show size of image</source>
          <target>显示图像大小</target>
        </trans-unit>
        <trans-unit>
          <source>When translator has completed the translation task he or she sends back the project file. Choose File | Exchange, click Import project file to import the file sent by the translator. You can also import project using the &lt;a href=&quot;ImportWizard.htm&quot;&gt;Import Wizard&lt;/a&gt;. &lt;!-- #BeginLibraryItem &quot;/Library/ImportTranslations.lbi&quot; --&gt;Choose File | Import or right click column header and choose Import to start &lt;a href=&quot;ImportWizard.htm&quot;&gt;Import Wizard&lt;/a&gt; that lets you import translations from the file that you translator sent you.</source>
          <target>译员完成翻译任务后，将项目文件发回。选择文件 |交换，点击导入项目文件，导入翻译者发送的文件。您还可以使用&lt;a href=&quot;ImportWizard.htm&quot;&gt;导入向导&lt;/a&gt;导入项目。&lt;!-- #BeginLibraryItem &quot;/Library/ImportTranslations.lbi&quot; --&gt;选择文件 |导入或右键单击列标题并选择导入以启动&lt;a href=&quot;ImportWizard.htm&quot;&gt;导入向导&lt;/a&gt;，该&lt;a href=&quot;ImportWizard.htm&quot;&gt;向导&lt;/a&gt;可让您从译员发送给您的文件中导入翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>File mappings bind file extensions to a specific Sisulizer scanner. Basically a mapping tells Sisulizer what kind of scanner should be used with certain kind of files. Sisulizer has several build-in mappings. They contains the mappings of the standard file extensions.</source>
          <target>文件映射将文件扩展名绑定到特定的 Sisulizer 扫描仪。基本上，映射会告诉 Sisulizer 应该对某些类型的文件使用哪种扫描仪。 Sisulizer 有几个内置映射。它们包含标准文件扩展名的映射。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the maximum string length in bytes that translation memory can store.&lt;strong&gt; &lt;/strong&gt; The length is in bytes but strings are stored as UTF-8 strings. This makes the actual string length in bytes longer than in characters. The length is much longer if string contains non-European characters. Most database engines have a length limitation of a indexed string. If you enter larger value than the maximum value allowed by the database engine Sisulizer will use the maximum value.</source>
          <target>指定翻译记忆库可以存储的最大字符串长度（以字节为单位）。&lt;strong&gt; &lt;/strong&gt;长度以字节为单位，但字符串存储为 UTF-8 字符串。这使得以字节为单位的实际字符串长度比以字符为单位长。如果字符串包含非欧洲字符，则长度要长得多。大多数数据库引擎都有索引字符串的长度限制。如果您输入的值大于数据库引擎允许的最大值，Sisulizer 将使用最大值。</target>
        </trans-unit>
        <trans-unit>
          <source>Depending on the selected data type some of the above values might not be available. Header fields can only contain ignore and count fields.</source>
          <target>根据所选的数据类型，上述某些值可能不可用。标题字段只能包含忽略和计数字段。</target>
        </trans-unit>
        <trans-unit>
          <source>Check this if the application uses Microsoft Foundation library (MFC).</source>
          <target>如果应用程序使用 Microsoft Foundation 库 (MFC)，请检查此项。</target>
        </trans-unit>
        <trans-unit>
          <source>This contain the version data of the application.</source>
          <target>这包含应用程序的版本数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Read more about &lt;a href=&quot;NetLocalizable.htm&quot;&gt;Localizable property&lt;/a&gt;.</source>
          <target>阅读有关&lt;a href=&quot;NetLocalizable.htm&quot;&gt;Localizable 属性的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Download and install OpenOffice 3.0 dictionary</source>
          <target>下载并安装 OpenOffice 3.0 词典</target>
        </trans-unit>
        <trans-unit>
          <source>Silverlight  file</source>
          <target>银光文件</target>
        </trans-unit>
        <trans-unit>
          <source>Use Project Wizard to create a Sisulizer project containing the database. After you have selected the database on the Database sheet you have to set the field properties.&lt;!-- #EndLibraryItem --&gt;Right click the ResourceId and check Id Field menu item to mark that field as id field.&lt;!-- #BeginLibraryItem &quot;/Library/LanguageField.lbi&quot; --&gt;
If you use the standard field name convention for language field Sisulizer will automatically detect the field to be a language field. The standard language field name is either &amp;quot;language&amp;quot;, &amp;quot;languageid&amp;quot;, &amp;quot;lang&amp;quot;, &amp;quot;langid&amp;quot;, &amp;quot;locale&amp;quot; or &amp;quot;localeid&amp;quot;. If you do not use the standard language field name convention you must mark the field to be a language field by right clicking and checking the Language Id Field menu. Finally check (double click) those fields that you want to localize.</source>
          <target>使用项目向导创建包含数据库的 Sisulizer 项目。在数据库表上选择数据库后，您必须设置字段属性。&lt;!-- #EndLibraryItem --&gt;右键单击 ResourceId 并检查 Id Field 菜单项以将该字段标记为 id 字段。&lt;!-- #BeginLibraryItem &quot;/Library/LanguageField.lbi&quot; --&gt;如果对语言字段使用标准字段命名约定，Sisulizer 将自动检测该字段为语言字段。标准语言字段名称是“language”、“languageid”、“lang”、“langid”、“locale”或“localeid”。如果您不使用标准语言字段名称约定，则必须通过右键单击并选中语言 ID 字段菜单来将该字段标记为语言字段。最后检查（双击）您要本地化的字段。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the message dialog usage. Possible values are:</source>
          <target>指定消息对话框用法。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Runtime options</source>
          <target>运行时选项</target>
        </trans-unit>
        <trans-unit>
          <source>If the import status is higher than the current status</source>
          <target>如果导入状态高于当前状态</target>
        </trans-unit>
        <trans-unit>
          <source>Source type</source>
          <target>来源类型</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the script options of HTML localization options.</source>
          <target>使用此表指定 HTML 本地化选项的脚本选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Vista, Windows 7, Windows 8.x and Windows 10 Installation</source>
          <target>Vista、Windows 7、Windows 8.x 和 Windows 10 安装</target>
        </trans-unit>
        <trans-unit>
          <source>Keep original resource language id</source>
          <target>保留原始资源语言 ID</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the &lt;a href=&quot;BinaryLocalization.htm&quot;&gt;format of the binary file&lt;/a&gt;.</source>
          <target>使用此表指定&lt;a href=&quot;BinaryLocalization.htm&quot;&gt;二进制文件&lt;/a&gt;的&lt;a href=&quot;BinaryLocalization.htm&quot;&gt;格式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Application class is passed in a JAD file to the emulator.</source>
          <target>应用程序类在 JAD 文件中传递给模拟器。</target>
        </trans-unit>
        <trans-unit>
          <source>The tag is applied only to the next strings following the tag.tag.</source>
          <target>该标签仅应用于 tag.tag 之后的下一个字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>If you add a Qt file (.ts) to a Sisulizer project, Project Wizard can import translations from localized  files. For example if you have selected MyFile_en.ts file and there exists MyFile_de.ts file, Project Wizard will add German to the project and imports translations from MyFile_de.ts. Localized  files must locate on the same directory as original one(s).</source>
          <target>如果您将 Qt 文件 (.ts) 添加到 Sisulizer 项目，项目向导可以从本地化文件导入翻译。例如，如果您选择了 MyFile_en.ts 文件并且存在 MyFile_de.ts 文件，项目向导将向项目添加德语并从 MyFile_de.ts 导入翻译。本地化文件必须与原始文件位于同一目录中。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked translations linked to external files are visually marked.</source>
          <target>如果链接到外部文件的已检查翻译被视觉标记。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to browse the project to be imported. It is the file that you received from the translator.</source>
          <target>使用此表浏览要导入的项目。这是您从翻译人员那里收到的文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Zoom percentage. Show the current zoom value. 100% means that form editor show the items in actual size.</source>
          <target>缩放百分比。显示当前缩放值。 100% 表示表单编辑器以实际大小显示项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Display grid</source>
          <target>显示网格</target>
        </trans-unit>
        <trans-unit>
          <source>If checked empty strings are not scanned.</source>
          <target>如果选中，则不扫描空字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Resource options</source>
          <target>资源选项</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to find text in the project.</source>
          <target>使用此对话框在项目中查找文本。</target>
        </trans-unit>
        <trans-unit>
          <source>This group lets you include and exclude items based on their data types. Check those data types that you want to export.</source>
          <target>该组允许您根据数据类型包括和排除项目。检查要导出的数据类型。</target>
        </trans-unit>
        <trans-unit>
          <source>Following &lt;a href=&quot;Sources.htm&quot;&gt;sources&lt;/a&gt; can contain custom data:</source>
          <target>以下&lt;a href=&quot;Sources.htm&quot;&gt;来源&lt;/a&gt;可以包含自定义数据：</target>
        </trans-unit>
        <trans-unit>
          <source>Loads translation data from a file.</source>
          <target>从文件加载翻译数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Tools menu</source>
          <target>工具菜单</target>
        </trans-unit>
        <trans-unit>
          <source>Check &lt;em&gt;Do not change&lt;/em&gt; radio box to not change the layout.</source>
          <target>选中&lt;em&gt;不更改&lt;/em&gt;单选框以不更改布局。</target>
        </trans-unit>
        <trans-unit>
          <source>Specified the default localized fonts to be used in .NET applications.</source>
          <target>指定要在 .NET 应用程序中使用的默认本地化字体。</target>
        </trans-unit>
        <trans-unit>
          <source>Possible extra format string</source>
          <target>可能的额外格式字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Selects the previously selected form. This makes it easy to go back to the form where you came from.</source>
          <target>选择先前选择的表单。这使您可以轻松返回到原来的表单。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer uses also translations of the same language but different country in the case there is no country specific translations.&lt;br&gt;
    For example if this is checked and you are translating a German (Austria) column and there is not translation having de-AT language code but there is a translation having German (Switzerland) language code then Sisulizer will use it.</source>
          <target>如果选中 Sisulizer，则在没有特定国家/地区的翻译的情况下，也使用相同语言但不同国家/地区的翻译。&lt;br&gt;例如，如果选中此项并且您正在翻译德语（奥地利）列，并且没有带有 de-AT 语言代码的翻译，但有带有德语（瑞士）语言代码的翻译，那么 Sisulizer 将使用它。</target>
        </trans-unit>
        <trans-unit>
          <source>Custom Windows resource are resource data that do not use any predefined Windows resource type but use named a resource type. For example:</source>
          <target>自定义 Windows 资源是不使用任何预定义 Windows 资源类型但使用命名资源类型的资源数据。例如：</target>
        </trans-unit>
        <trans-unit>
          <source>Retain the XML file original format in localized files.</source>
          <target>在本地化文件中保留 XML 文件的原始格式。</target>
        </trans-unit>
        <trans-unit>
          <source>The reduce pseudo translation type has to two variation. They are:</source>
          <target>reduce 伪翻译类型有两种变体。他们是：</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;a href=&quot;WorkingWithTranslationSheet.htm#Invalidated&quot;&gt;Invalidates&lt;/a&gt; the translation.</source>
          <target>使翻译&lt;a href=&quot;WorkingWithTranslationSheet.htm#Invalidated&quot;&gt;无效&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Language code is a unique code that identifies a language in Sisulizer. The three kinds of language codes:</source>
          <target>语言代码是在 Sisulizer 中识别语言的唯一代码。三种语言代码：</target>
        </trans-unit>
        <trans-unit>
          <source>White spaces</source>
          <target>空格</target>
        </trans-unit>
        <trans-unit>
          <source>Use always UTF-8</source>
          <target>始终使用 UTF-8</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be a &lt;a href=&quot;WindowsLocalization.htm#Binary&quot;&gt;Windows binary file&lt;/a&gt; created by C/C++ compiler (e.g. C:\Windows\Notepad.exe) and using the standard WIN32 resources or MFC resources.</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是由 C/C++ 编译器（例如 C:\Windows\Notepad.exe）创建并使用标准 WIN32 资源或 MFC 资源创建的&lt;a href=&quot;WindowsLocalization.htm#Binary&quot;&gt;Windows 二进制文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Carriage return and line feed characters are used to mark a new line</source>
          <target>回车和换行符用于标记新行</target>
        </trans-unit>
        <trans-unit>
          <source>Duplicate rows which has been translated in different ways</source>
          <target>以不同方式翻译的重复行</target>
        </trans-unit>
        <trans-unit>
          <source>Translation engine dialog boxes</source>
          <target>翻译引擎对话框</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Byte order&lt;/em&gt; (&lt;a href=&quot;http://en.wikipedia.org/wiki/Byte_order&quot; target=&quot;_blank&quot;&gt;endianess&lt;/a&gt;) specifies in which order data containing multiple bytes is written. Possible values are:</source>
          <target>&lt;em&gt;字节顺序&lt;/em&gt;( &lt;a href=&quot;http://en.wikipedia.org/wiki/Byte_order&quot; target=&quot;_blank&quot;&gt;endianess&lt;/a&gt; ) 指定写入包含多个字节的数据的顺序。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>This option is not enabled if database cloning used.</source>
          <target>如果使用数据库克隆，则不会启用此选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Click &lt;em&gt;Test&lt;/em&gt; to test if engine is working properly. Check &lt;em&gt;Enabled&lt;/em&gt; to enable engine. Uncheck &lt;em&gt;Enabled&lt;/em&gt; to disable engine.</source>
          <target>单击&lt;em&gt;测试&lt;/em&gt;以测试引擎是否正常工作。选中&lt;em&gt;启用&lt;/em&gt;以启用引擎。取消选中&lt;em&gt;启用&lt;/em&gt;以禁用引擎。</target>
        </trans-unit>
        <trans-unit>
          <source>Check those platfroms where segmentation is used. This only specifies the default value. You can turn segmentation on or off in a source case by case.</source>
          <target>检查那些使用分段的平台。这仅指定默认值。您可以逐个在源中打开或关闭分段。</target>
        </trans-unit>
        <trans-unit>
          <source>You are about to exclude a row from the project. You can remove the exclude by choosing Project | Excluded Contexts and remove the context from the list.</source>
          <target>您即将从项目中排除一行。您可以通过选择 Project | 来删除排除项。排除的上下文并从列表中删除上下文。</target>
        </trans-unit>
        <trans-unit>
          <source>Import Wizard imports data to a Sisulizer project or to translation memory. Wizard consists of the following steps:</source>
          <target>导入向导将数据导入 Sisulizer 项目或翻译记忆库。向导包括以下步骤：</target>
        </trans-unit>
        <trans-unit>
          <source>Each PO/POT file contains header value that contains one or more fields.</source>
          <target>每个 PO/POT 文件都包含包含一个或多个字段的标题值。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;SilverlightLocalization.htm&quot;&gt;Silverlight application is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;SilverlightLocalization.htm&quot;&gt;Silverlight 应用程序的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Any combination of LF/CR characters</source>
          <target>LF/CR 字符的任意组合</target>
        </trans-unit>
        <trans-unit>
          <source>Sometims XML contains source code. For example there might be script code emebedded inside an XML tag. In such case Sisulizer can use its source code parser to extract only strings from the code. Transalating only strings of the source code is much easier and safer that translating the whole source code. Sisulizer can detect if an XML element contains source code. If the detection result is not right or it fails you can set the source code type by right clicking the node in the &lt;a href=&quot;XmlSourceDialogTagsSheet.htm&quot;&gt;Tags sheet&lt;/a&gt; and choosing the source code type from the popup menu.</source>
          <target>有时 XML 包含源代码。例如，可能在 XML 标记中嵌入了脚本代码。在这种情况下，Sisulizer 可以使用其源代码解析器仅从代码中提取字符串。仅翻译源代码的字符串比翻译整个源代码更容易、更安全。 Sisulizer 可以检测 XML 元素是否包含源代码。如果检测结果不正确或失败，您可以通过右键单击&lt;a href=&quot;XmlSourceDialogTagsSheet.htm&quot;&gt;标签页中&lt;/a&gt;的节点并从弹出菜单中选择源代码类型来设置源代码类型。</target>
        </trans-unit>
        <trans-unit>
          <source>String contains &lt;a href=&quot;EmbeddedXml.htm&quot;&gt;XML data&lt;/a&gt; and it is scanned as XML file. User can select what elements are localized and what elements are ignored.</source>
          <target>字符串包含&lt;a href=&quot;EmbeddedXml.htm&quot;&gt;XML 数据，&lt;/a&gt;并作为 XML 文件进行扫描。用户可以选择本地化哪些元素以及忽略哪些元素。</target>
        </trans-unit>
        <trans-unit>
          <source>You start spell checking by choosing Column |  Spelling menu. Sisulizer checks spelling of all words in the selected column.</source>
          <target>您可以通过选择 Column | 开始拼写检查。拼写菜单。 Sisulizer 检查所选列中所有单词的拼写。</target>
        </trans-unit>
        <trans-unit>
          <source>File and Language Code Parameters</source>
          <target>文件和语言代码参数</target>
        </trans-unit>
        <trans-unit>
          <source>Affixes definition file</source>
          <target>词缀定义文件</target>
        </trans-unit>
        <trans-unit>
          <source>Select the root directory of the installed .NET SDK. The root directory is the directory that contains the .NET version numbers.</source>
          <target>选择已安装的 .NET SDK 的根目录。根目录是包含 .NET 版本号的目录。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Language&lt;/em&gt; specifies the language of the above dictionary. When you set the dictionary Sisulizer tries to detect the language of the dictionary. If the result is false set the language to the correct value.</source>
          <target>&lt;em&gt;Language&lt;/em&gt;指定上述词典的语言。当您设置词典时，Sisulizer 会尝试检测词典的语言。如果结果为 false，则将语言设置为正确的值。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer language file</source>
          <target>Sisulizer 语言文件</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;NetLocalization.htm&quot;&gt;XAML file is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;NetLocalization.htm&quot;&gt;XAML 文件的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Ansi string with maximum length of 255 characters</source>
          <target>Ansi 字符串，最大长度为 255 个字符</target>
        </trans-unit>
        <trans-unit>
          <source>There are two kind of keys:</source>
          <target>有两种键：</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer does not set the language but keeps resource neutral.</source>
          <target>Sisulizer 不设置语言但保持资源中立。</target>
        </trans-unit>
        <trans-unit>
          <source>Some import files contains additional information that can also be imported. They are:</source>
          <target>一些导入文件包含也可以导入的附加信息。他们是：</target>
        </trans-unit>
        <trans-unit>
          <source>If you select this Sisulizer localizes or imports .NET text resource file.</source>
          <target>如果您选择此 Sisulizer 本地化或导入 .NET 文本资源文件。</target>
        </trans-unit>
        <trans-unit>
          <source>A single file</source>
          <target>单个文件</target>
        </trans-unit>
        <trans-unit>
          <source>Spelling and Grammar Dialog</source>
          <target>拼写和语法对话框</target>
        </trans-unit>
        <trans-unit>
          <source>By context</source>
          <target>按上下文</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer escaping is used. # is the escape character. Following code are used:</source>
          <target>使用 Sisulizer 逃逸。 # 是转义字符。使用以下代码：</target>
        </trans-unit>
        <trans-unit>
          <source>Use Project Wizard to create a Sisulizer project containing the database. After you have selected the database on the Database sheet you have to set the field properties.&lt;!-- #EndLibraryItem --&gt;If you use the standard table name convention for localized tables Sisulizer will automatically detect the tables to be localized ones. The standard localized table name is a combination of the original table name and the language code (e.g. German table name of Description table would be Description&lt;strong&gt;_de&lt;/strong&gt; or Description&lt;strong&gt;De&lt;/strong&gt;). If you do not use the standard localized table name convention you must drag localized table as a child table of the original table and set the language of the table by right clicking and choosing the language from the Languages menu.</source>
          <target>使用项目向导创建包含数据库的 Sisulizer 项目。在数据库表上选择数据库后，您必须设置字段属性。&lt;!-- #EndLibraryItem --&gt;如果您对本地化表使用标准表名约定，Sisulizer 将自动检测要本地化的表。标准的本地化表名是原始表名和语言代码的组合（例如，Description 表的德语表名将是Description &lt;strong&gt;_de&lt;/strong&gt;或Description &lt;strong&gt;De&lt;/strong&gt; ）。如果您不使用标准的本地化表命名约定，您必须将本地化表作为原始表的子表拖动，并通过右键单击并从语言菜单中选择语言来设置表的语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to control how fonts are localized. Read first more about &lt;a href=&quot;FontLocalization.htm&quot;&gt;font localization&lt;/a&gt;.</source>
          <target>使用此表来控制字体的本地化方式。首先阅读有关&lt;a href=&quot;FontLocalization.htm&quot;&gt;字体本地化的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>For example</source>
          <target>例如</target>
        </trans-unit>
        <trans-unit>
          <source>Other issues</source>
          <target>其他事宜</target>
        </trans-unit>
        <trans-unit>
          <source>In case #1 and #2 translator needs to have Sisulizer installed. If he or she does not have it, a free Sisulizer Free Edition can be downloaded from &lt;a href=&quot;http://www.sisulizer.com/downloads.shtml&quot; target=&quot;_blank&quot;&gt;Sisulizer download page&lt;/a&gt;.</source>
          <target>如果 #1 和 #2 转换器需要安装 Sisulizer。如果他或她没有，可以从&lt;a href=&quot;http://www.sisulizer.com/downloads.shtml&quot; target=&quot;_blank&quot;&gt;Sisulizer 下载页面&lt;/a&gt;下载免费的 Sisulizer 免费版。</target>
        </trans-unit>
        <trans-unit>
          <source>Click this to break the sample text into the segments.</source>
          <target>单击此按钮可将示例文本分成多个段。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer&#x27;s Android\Converter directory contains a sample that shows how to localize an Android application.</source>
          <target>Sisulizer 的 Android\Converter 目录包含一个展示如何本地化 Android 应用程序的示例。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies how Qt project is localized. Possible values are:</source>
          <target>指定 Qt 项目的本地化方式。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>The user has to compile the localized resource files to .res files and then link them to the application to get the localized application.</source>
          <target>用户必须将本地化的资源文件编译为 .res 文件，然后将它们链接到应用程序以获取本地化的应用程序。</target>
        </trans-unit>
        <trans-unit>
          <source>Multilizer project file.&lt;br&gt;&lt;strong&gt;Note!&lt;/strong&gt; When opening Sisulizer converts the file into Sisulizer project file format (.slp).</source>
          <target>乘法器项目文件。&lt;br&gt;&lt;strong&gt;笔记！&lt;/strong&gt;打开 Sisulizer 时会将文件转换为 Sisulizer 项目文件格式 (.slp)。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the expansion percentage. Expand percentage is enabled if the &lt;em&gt;Expand&lt;/em&gt; check box in the &lt;em&gt;Methods&lt;/em&gt; group is checked. Different percentages are used for different string lengths. The following table contains the expansion percentages:</source>
          <target>指定扩展百分比。如果选中&lt;em&gt;方法&lt;/em&gt;组中的&lt;em&gt;扩展&lt;/em&gt;复选框，则启用扩展百分比。不同的百分比用于不同的字符串长度。下表包含扩展百分比：</target>
        </trans-unit>
        <trans-unit>
          <source>The best was is to include a neutral English (e.g. en) and use this column as a American English column. Then include also English (United Kingdom) column for British English. Translate all rows in the American English but only those rows in British English where the spelling differs from the American English. When Sisulizer creates localized files for British English it first uses translation from the British English column. If there are not translation then Sisulizer uses the translation in the American English column. If there is no translation then Sisulizer uses the translation in the column of default language. Finally if no translation is found Sisulizer uses the original value.</source>
          <target>最好的办法是包括一个中性的英语（例如 en），并将此栏用作美式英语栏。然后还包括英式英语的英语（英国）栏。翻译美式英语中的所有行，但只翻译英式英语中拼写与美式英语不同的那些行。当 Sisulizer 为英国英语创建本地化文件时，它首先使用来自英国英语列的翻译。如果没有翻译，则 Sisulizer 使用美国英语栏中的翻译。如果没有翻译，则 Sisulizer 使用默认语言栏中的翻译。最后，如果没有找到翻译，Sisulizer 使用原始值。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify language codes.</source>
          <target>使用此表指定语言代码。</target>
        </trans-unit>
        <trans-unit>
          <source>Line feed + Carriage return</source>
          <target>换行 + 回车</target>
        </trans-unit>
        <trans-unit>
          <source>Edits a property.</source>
          <target>编辑属性。</target>
        </trans-unit>
        <trans-unit>
          <source>DRC file name</source>
          <target>DRC 文件名</target>
        </trans-unit>
        <trans-unit>
          <source>Google Translate is a paid serivice. You have to first get an Google Translate account and then you can take Google Translate in use in your Sisulizer. The fee is very reasonable and your are chared only on the actual amount of translations you have done. You can get your own account by opening &lt;a href=&quot;http://code.google.com/apis/language/translate/v2/pricing.html&quot; target=&quot;_blank&quot;&gt;this&lt;/a&gt; page and clicking  to the &lt;em&gt;Google APIs console&lt;/em&gt; link.</source>
          <target>谷歌翻译是一项付费服务​​。您必须先获得一个 Google 翻译帐户，然后才能在您的 Sisulizer 中使用 Google 翻译。费用非常合理，您只需按您完成的实际翻译量收费。您可以通过打开&lt;a href=&quot;http://code.google.com/apis/language/translate/v2/pricing.html&quot; target=&quot;_blank&quot;&gt;此&lt;/a&gt;页面并单击&lt;em&gt;Google API 控制台&lt;/em&gt;链接来获取自己的帐户。</target>
        </trans-unit>
        <trans-unit>
          <source>If no entry is found from the registry or the file matching the entry value does not exist then VCL is going to look for file matching the default locale of the user. This setting is specified in Regional and Language Options in Control Panel.</source>
          <target>如果没有从注册表中找到条目或者匹配条目值的文件不存在，那么 VCL 将寻找匹配用户默认语言环境的文件。此设置在控制面板的区域和语言选项中指定。</target>
        </trans-unit>
        <trans-unit>
          <source>Java source code</source>
          <target>Java源代码</target>
        </trans-unit>
        <trans-unit>
          <source>Exports items from the selected node in the project tree.</source>
          <target>从项目树中的选定节点导出项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Many file can have a resource data that can contain any kind of data. Such data should be parsed in  different way depending on the format of data. By default Sisulizer tries to detect the format. In most cases it this can be done. For example Sisulizer detects picture, XML and HTML data. However some data can not be detected or it might be detected incorrectly. In such case you have to select the format. Possible values are:</source>
          <target>许多文件可以有一个资源数据，可以包含任何类型的数据。这些数据应该根据数据的格式以不同的方式解析。默认情况下，Sisulizer 会尝试检测格式。在大多数情况下，这是可以做到的。例如 Sisulizer 检测图片、XML 和 HTML 数据。但是，有些数据无法检测或可能检测不正确。在这种情况下，您必须选择格式。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>No cutting is done</source>
          <target>没有切割</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer compiles resource files one by one instead of multiple together. Check this if either XAML or ResX compilation fails.</source>
          <target>如果勾选 Sisulizer 一个一个编译资源文件，而不是多个一起编译。如果 XAML 或 ResX 编译失败，请检查此项。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer reads  data by using binary format that you specify. This makes it possible to parse simple proprietary binary data.</source>
          <target>Sisulizer 使用您指定的二进制格式读取数据。这使得解析简单的专有二进制数据成为可能。</target>
        </trans-unit>
        <trans-unit>
          <source>HTML file (.html, .htm) and other file that uses HTML markup language such as ASP, JSP and PHP files.</source>
          <target>HTML 文件（.html、.htm）和其他使用 HTML 标记语言的文件，如 ASP、JSP 和 PHP 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Test for clipped text</source>
          <target>测试剪切文本</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer copies all the resources to the localized resource DLLs. If this is unchecked Sisulizer copies only those resources that has been selected to the Sisulizer project file and has not been excluded.</source>
          <target>如果选中 Sisulizer，则将所有资源复制到本地化的资源 DLL。如果未选中此项，则 Sisulizer 仅复制那些已选择到 Sisulizer 项目文件且未被排除的资源。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to set the editor options.</source>
          <target>使用此表设置编辑器选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Machine translator that uses &lt;a href=&quot;http://www.sunda.fi/eng/tuotteet_seramenterprise.html&quot; target=&quot;_blank&quot;&gt;Sunda&#x27;s&lt;/a&gt; translation service to translate strings. Sunda supports translation between English and Finnish.</source>
          <target>使用&lt;a href=&quot;http://www.sunda.fi/eng/tuotteet_seramenterprise.html&quot; target=&quot;_blank&quot;&gt;Sunda 的&lt;/a&gt;翻译服务来翻译字符串的机器翻译器。 Sunda 支持英语和芬兰语之间的翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Importing manually</source>
          <target>手动导入</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet configure how XLIFF file is localized.</source>
          <target>使用此表配置 XLIFF 文件的本地化方式。</target>
        </trans-unit>
        <trans-unit>
          <source>File name</source>
          <target>文件名</target>
        </trans-unit>
        <trans-unit>
          <source>Create a new project by choosing &lt;a href=&quot;FileNewMenu.htm&quot;&gt;File | New&lt;/a&gt; menu or clicking &lt;em&gt;Create New&lt;/em&gt; button on the recent project files list. Sisulizer  starts a &lt;a href=&quot;ProjectWizard.htm&quot;&gt;Project Wizard&lt;/a&gt; that lets you choose files you want to localize, select target languages and set other options. If you have existing localized files Project Wizard can in most cases import them automatically. Of course you can &lt;a href=&quot;ImportExistingTranslations.htm&quot;&gt;import existing data&lt;/a&gt; manually at any time after you have created your project. After Project Wizard has created the project it scans the files you have selected importing items that need to be localized. All project data is stored into single &lt;a href=&quot;Files.htm&quot;&gt;Sisulizer project file&lt;/a&gt;.</source>
          <target>通过选择&lt;a href=&quot;FileNewMenu.htm&quot;&gt;File |&lt;/a&gt;创建一个新项目&lt;a href=&quot;FileNewMenu.htm&quot;&gt;新建&lt;/a&gt;菜单或单击最近项目文件列表上的&lt;em&gt;新建&lt;/em&gt;按钮。 Sisulizer 启动一个&lt;a href=&quot;ProjectWizard.htm&quot;&gt;项目向导&lt;/a&gt;，让您选择要本地化的文件、选择目标语言并设置其他选项。如果您有现有的本地化文件，项目向导在大多数情况下可以自动导入它们。当然，您可以在创建项目后随时手动&lt;a href=&quot;ImportExistingTranslations.htm&quot;&gt;导入现有数据&lt;/a&gt;。项目向导创建项目后，它会扫描您选择的文件，导入需要本地化的项目。所有项目数据都存储在单个&lt;a href=&quot;Files.htm&quot;&gt;Sisulizer 项目文件中&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows information about the selected &lt;a href=&quot;MicrosoftTranslator.htm&quot;&gt;Microsoft Translator&lt;/a&gt; machine translator.</source>
          <target>显示有关所选&lt;a href=&quot;MicrosoftTranslator.htm&quot;&gt;Microsoft Translator&lt;/a&gt;机器翻译器的信息。</target>
        </trans-unit>
        <trans-unit>
          <source>SlMake exchange -h</source>
          <target>SlMake 交换 -h</target>
        </trans-unit>
        <trans-unit>
          <source>When you start Sisulizer various panes are shown. They are the recent project list, recent news list and tip of day list. Each pane contains &lt;img src=&quot;Images/RecentClose.PNG&quot;&gt; on the right side. If you click that the pane will be removed. You can turn it back visible by right clicking on the main form and checking the corresponding menu item.</source>
          <target>当您启动 Sisulizer 时，会显示各种窗格。它们是最近的项目列表、最近的新闻列表和每日提示列表。每个窗格包含&lt;img src=&quot;Images/RecentClose.PNG&quot;&gt;在右侧。如果单击该窗格将被删除。您可以通过右键单击主窗体并检查相应的菜单项将其恢复可见。</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks if a menu string contains hotkey that is also used by some other string in the same menu.&lt;!-- #BeginLibraryItem &quot;/Library/Hotkey.lbi&quot; --&gt;
Hotkey is special character that marks another character that specifies what character actives that item. Ampersand (&amp;amp;) is used as hotkey mark character  on most platforms (Visual C++, VCL and .NET). WPF uses underscore (_). Duplicate hotkey prevents using the  hotkey on second item and on some platforms it might disable hotkeys on all items. Change all hotkeys but the first one to remove duplicates. Sisulizer suggest you the available hotkey characters that do not conflict. If you validating translations Sisulizer can automatically fix duplicate hotkey if you click Fix button.&lt;!-- #EndLibraryItem --&gt;For example if you have two menu items : &amp;quot;&lt;strong&gt;&amp;amp;S&lt;/strong&gt;ave&amp;quot; and &amp;quot;Check and  &lt;strong&gt;&amp;amp;s&lt;/strong&gt;ave&amp;quot; on your menu you have duplicate S hotkey.</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查菜单字符串是否包含也被同一菜单中的其他字符串使用的热键。&lt;!-- #BeginLibraryItem &quot;/Library/Hotkey.lbi&quot; --&gt;热键是特殊字符，它标记另一个字符，指定哪个字符激活该项目。与号 (&amp;amp;) 在大多数平台（Visual C++、VCL 和 .NET）上用作热键标记字符。 WPF 使用下划线 (_)。重复的热键防止在第二个项目上使用热键，在某些平台上它可能会禁用所有项目的热键。更改除第一个热键以外的所有热键以删除重复项。 Sisulizer 建议您使用不冲突的可用热键字符。如果您验证翻译，如果您单击“修复”按钮，Sisulizer 可以自动修复重复的热键。&lt;!-- #EndLibraryItem --&gt;例如，如果您的菜单上有两个菜单项：“ &lt;strong&gt;&amp;amp;S&lt;/strong&gt; ave”和“Check and &lt;strong&gt;&amp;amp;s&lt;/strong&gt; ave”，则您有重复的 S 热键。</target>
        </trans-unit>
        <trans-unit>
          <source>Remove pseudo translation</source>
          <target>删除伪翻译</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Output directory&lt;/em&gt; specifies the root directory where the output file is created. By default output directory is the directory of  your original file. You can change this by typing a new directory or by clicking ... and browsing a new directory.</source>
          <target>&lt;em&gt;输出目录&lt;/em&gt;指定创建输出文件的根目录。默认情况下，输出目录是原始文件的目录。您可以通过键入新目录或单击 ... 并浏览新目录来更改此设置。</target>
        </trans-unit>
        <trans-unit>
          <source>Now the database is ready for localization.</source>
          <target>现在数据库已准备好进行本地化。</target>
        </trans-unit>
        <trans-unit>
          <source>The is the old way to localize Windows applications. resource file localization works in the following way. Sisulizer reads the original resource files (.rc) to create the items in the projects. When creating the localized files Sisulizer creates localized RC files that have identical structure to the original RC files but the files have been localized.</source>
          <target>这是本地化 Windows 应用程序的旧方法。资源文件本地化的工作方式如下。 Sisulizer 读取原始资源文件 (.rc) 以在项目中创建项目。创建本地化文件时，Sisulizer 会创建与原始 RC 文件具有相同结构但文件已本地化的本地化 RC 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;QtLocalization.htm&quot;&gt;Qt translation file is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;QtLocalization.htm&quot;&gt;Qt 翻译文件的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>The localized German Country table will look like this after Sisulizer has updated the localized field values:</source>
          <target>在 Sisulizer 更新本地化字段值后，本地化的德国国家/地区表将如下所示：</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks       if original string includes a colon at the end and also the translation does. This is important, because label captions generally should include colon, and corresponding buttons should not. If original software follows these guidelines, this validation ensures good consistency in translated software too.</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查原始字符串的末尾是否包含冒号，并且翻译也包含冒号。这很重要，因为标签标题通常应包含冒号，而相应的按钮不应包含。如果原始软件遵循这些准则，则此验证也可确保翻译软件具有良好的一致性。</target>
        </trans-unit>
        <trans-unit>
          <source>Add resource id and language fields to those database tables that you want to localize. This requires you to change the table structure.</source>
          <target>将资源 ID 和语言字段添加到要本地化的那些数据库表中。这需要您更改表结构。</target>
        </trans-unit>
        <trans-unit>
          <source>Output assembly file does not exist</source>
          <target>输出汇编文件不存在</target>
        </trans-unit>
        <trans-unit>
          <source>TBX file</source>
          <target>.TBX 文件</target>
        </trans-unit>
        <trans-unit>
          <source>This dialog shows the status of all &lt;a href=&quot;SupportedDatabases.htm&quot;&gt;supported database&lt;/a&gt; types. You can select one database type to be the default database by selecting the database type and pressing Set default or by double clicking it.</source>
          <target>此对话框显示所有&lt;a href=&quot;SupportedDatabases.htm&quot;&gt;支持的数据库&lt;/a&gt;类型的状态。您可以通过选择数据库类型并按 Set default 或双击它来选择一种数据库类型作为默认数据库。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies what kind of output files Sisulizer creates and what kind of file name it uses when creating those files. You can check one or more output file types.</source>
          <target>指定 Sisulizer 创建的输出文件类型以及创建这些文件时使用的文件名类型。您可以检查一种或多种输出文件类型。</target>
        </trans-unit>
        <trans-unit>
          <source>Selects the bottom cell of the currently selected cell.</source>
          <target>选择当前选定单元格的底部单元格。</target>
        </trans-unit>
        <trans-unit>
          <source>Context is the  string value of the original tuv.</source>
          <target>上下文是原始 tuv 的字符串值。</target>
        </trans-unit>
        <trans-unit>
          <source>Excludes files</source>
          <target>排除文件</target>
        </trans-unit>
        <trans-unit>
          <source>Fills the selected column with pseudo translations. If there is currently pseudo translation in the project use the same settings. Otherwise shows &lt;a href=&quot;PseudoTranslationDialog.htm&quot;&gt;Pseudo Translation dialog box&lt;/a&gt;.</source>
          <target>用伪翻译填充选定的列。如果项目中当前存在伪翻译，请使用相同的设置。否则显示&lt;a href=&quot;PseudoTranslationDialog.htm&quot;&gt;伪翻译对话框&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Use both local and solution&#x27;s parameters</source>
          <target>使用本地和解决方案的参数</target>
        </trans-unit>
        <trans-unit>
          <source>Change an untranslated font name if the font name matches to the default original font name.</source>
          <target>如果字体名称与默认原始字体名称匹配，请更改未翻译的字体名称。</target>
        </trans-unit>
        <trans-unit>
          <source>Open your new Sisulizer project.</source>
          <target>打开您的新 Sisulizer 项目。</target>
        </trans-unit>
        <trans-unit>
          <source>File in the project: Sample.xml&lt;br&gt;Import file: de\Sample.xml</source>
          <target>项目中的文件：Sample.xml&lt;br&gt;导入文件：de\Sample.xml</target>
        </trans-unit>
        <trans-unit>
          <source>Select the field that contains the translated strings.</source>
          <target>选择包含已翻译字符串的字段。</target>
        </trans-unit>
        <trans-unit>
          <source>/* First line
   Second line */

key=This is a value</source>
          <target>/* 第一行 第二行 */ key=这是一个值</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the project information.  All values are optional.</source>
          <target>使用此表指定项目信息。所有值都是可选的。</target>
        </trans-unit>
        <trans-unit>
          <source>Plain binary</source>
          <target>纯二进制</target>
        </trans-unit>
        <trans-unit>
          <source>Contains a list of available validation types. Check those validations from the list you want 
  to apply to the project. Press &lt;em&gt;Select All&lt;/em&gt; to check all validations. Press &lt;em&gt;Deselect All&lt;/em&gt; to uncheck all validations. The possible validations are:</source>
          <target>包含可用验证类型的列表。从要应用于项目的列表中检查这些验证。按&lt;em&gt;全选&lt;/em&gt;以检查所有验证。按&lt;em&gt;取消全选&lt;/em&gt;以取消选中所有验证。可能的验证是：</target>
        </trans-unit>
        <trans-unit>
          <source>Check &lt;em&gt;Show only rows that have message string&lt;/em&gt; if you want to show only those rows  that are message strings.</source>
          <target>如果您只想显示那些是消息字符串的行，请选中&lt;em&gt;仅显示具有消息字符串的&lt;/em&gt;行。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the environment settings</source>
          <target>指定环境设置</target>
        </trans-unit>
        <trans-unit>
          <source>will be expanded to &amp;quot;Downhill skiing is very fast sport&amp;quot;.</source>
          <target>将扩展为“速降滑雪是一项非常快的运动”。</target>
        </trans-unit>
        <trans-unit>
          <source>Export project and send exported file to translator</source>
          <target>导出项目并将导出的文件发送给翻译器</target>
        </trans-unit>
        <trans-unit>
          <source>To attach spell checkers for a project choose Column | Languages properties menu to open &lt;a href=&quot;LanguageDialog.htm&quot;&gt;language dialog&lt;/a&gt; and set the speller in the Language sheet. You can also choose Project | Options menu to open &lt;a href=&quot;ProjectDialog.htm&quot;&gt;project dialog&lt;/a&gt; and set the default speller in the Spelling sheet. To attach a spell checker for original language use spelling sheet of source dialog (Project | Edit Source).</source>
          <target>要为项目附加拼写检查器，请选择列 |语言属性菜单打开&lt;a href=&quot;LanguageDialog.htm&quot;&gt;语言对话框&lt;/a&gt;并在语言表中设置拼写器。您也可以选择项目 |用于打开&lt;a href=&quot;ProjectDialog.htm&quot;&gt;项目对话框&lt;/a&gt;并在拼写表中设置默认拼写器的选项菜单。要为原始语言附加拼写检查器，请使用源对话框的拼写表（项目 | 编辑源）。</target>
        </trans-unit>
        <trans-unit>
          <source>Wide string</source>
          <target>宽弦</target>
        </trans-unit>
        <trans-unit>
          <source>Other programming language source code</source>
          <target>其他编程语言源代码</target>
        </trans-unit>
        <trans-unit>
          <source>As a command line parameter</source>
          <target>作为命令行参数</target>
        </trans-unit>
        <trans-unit>
          <source>If enabled Sisulizer changes the translation statuses of all translations automatically to the selected status after the project has been loaded.&lt;br&gt;Be careful with this feature. If this feature enabled Sisulizer will set every single status value to the specific value after the project has been loaded.</source>
          <target>如果启用，Sisulizer 会在项目加载后自动将所有翻译的翻译状态更改为选定状态。&lt;br&gt;小心使用此功能。如果启用此功能，Sisulizer 将在项目加载后将每个状态值设置为特定值。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to select what kind of message are shown on the output pane. Possible values are:</source>
          <target>使用此表选择在输出窗格中显示的消息类型。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>If checked all string properties of component will be excluded.</source>
          <target>如果选中，将排除组件的所有字符串属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Importing to translation memory</source>
          <target>导入翻译记忆库</target>
        </trans-unit>
        <trans-unit>
          <source>This dialog lets you register the product by entering a license key. Enter your license key to the edit field and click Add. &lt;em&gt;Current license&lt;/em&gt; show your current license. &lt;em&gt;Current license key&lt;/em&gt; shows your current license key.</source>
          <target>此对话框允许您通过输入许可证密钥来注册产品。在编辑字段中输入您的许可证密钥，然后单击添加。&lt;em&gt;当前许可证&lt;/em&gt;显示您当前的许可证。&lt;em&gt;当前许可证密钥&lt;/em&gt;显示您当前的许可证密钥。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer translation memory</source>
          <target>Sisulizer 翻译记忆库</target>
        </trans-unit>
        <trans-unit>
          <source>By default Sisulizer contains mappings for all the standard component of the platform plus the most common 3rd party components. Sisulizer can localize any other component as well even if has not been mapped. However if the component is unmapped Sisulizer can not show it visually correct on the form editor but it shows the component and a pink box having &amp;quot;Click to map&amp;quot; text.</source>
          <target>默认情况下，Sisulizer 包含平台所有标准组件以及最常见的 3rd 方组件的映射。即使尚未映射，Sisulizer 也可以定位任何其他组件。但是，如果组件未映射，Sisulizer 无法在表单编辑器上正确显示它，但它会显示组件和带有“单击以映射”文本的粉红色框。</target>
        </trans-unit>
        <trans-unit>
          <source>Row is not found in a project any more.&lt;br&gt;You can remove it by choosing &lt;a href=&quot;ProjectRemoveUnusedMenu.htm&quot;&gt;Project | Remove Unused Items&lt;/a&gt;.</source>
          <target>不再在项目中找到行。&lt;br&gt;您可以通过选择&lt;a href=&quot;ProjectRemoveUnusedMenu.htm&quot;&gt;Project |&lt;/a&gt;来删除它&lt;a href=&quot;ProjectRemoveUnusedMenu.htm&quot;&gt;。删除未使用的项目&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Id field requires a foreign key&lt;/em&gt; check box is used when &lt;a href=&quot;DatabaseLocalization.htm#RowLocalization2&quot;&gt;row localization where id and language id are not part of the primary id&lt;/a&gt; is used. If checked the id field  has a foreign key. In that case the above tree view does not show integer fields except they have foreign key. If unchecked the id field does not have a foreign key. In that case the above tree shows all integer fields and you have to select what one is the id field. In either way you have to select one field to be as an id field. If there is at least one non-string field that has foreign key Sisulizer will select that as default.</source>
          <target>当使用&lt;a href=&quot;DatabaseLocalization.htm#RowLocalization2&quot;&gt;id 和语言 id 不是主要 id 的一部分的行本地化时，&lt;/a&gt;使用&lt;em&gt;id 字段需要外键&lt;/em&gt;复选框。如果选中，则 id 字段有一个外键。在这种情况下，上面的树视图不显示整数字段，除非它们有外键。如果未选中，则 id 字段没有外键。在这种情况下，上面的树会显示所有整数字段，您必须选择 id 字段。无论哪种方式，您都必须选择一个字段作为 id 字段。如果至少有一个具有外键的非字符串字段，Sisulizer 将选择它作为默认值。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer will modify some of the strings of the localized items.&lt;br&gt;For example: &lt;code&gt;&amp;quot;Application Title&amp;quot; -&amp;gt; &amp;quot;[Sisulizer trial] Application Title&amp;quot;&lt;/code&gt;</source>
          <target>Sisulizer 将修改本地化项目的一些字符串。&lt;br&gt;例如： &lt;code&gt;&amp;quot;Application Title&amp;quot; -&amp;gt; &amp;quot;[Sisulizer trial] Application Title&amp;quot;&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to set the language properties.</source>
          <target>使用此对话框设置语言属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer contains several sample applications that generate localized reports. See the table below to see sample location for your reporting tool.</source>
          <target>Sisulizer 包含几个生成本地化报告的示例应用程序。请参阅下表以查看报告工具的示例位置。</target>
        </trans-unit>
        <trans-unit>
          <source>Comment column. It will be picked up when scanning.</source>
          <target>评论栏。扫描时会被拾取。</target>
        </trans-unit>
        <trans-unit>
          <source>For example C:\Program Files\Microsoft SDKs\Windows\&lt;strong&gt;v6.0A &lt;/strong&gt;is the root SDK directory for .NET 2.0.</source>
          <target>例如 C:\Program Files\Microsoft SDKs\Windows\ &lt;strong&gt;v6.0A&lt;/strong&gt;是 .NET 2.0 的根 SDK 目录。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Clears the selected translation memory&lt;/em&gt; clears the entire content of the translation memory.</source>
          <target>&lt;em&gt;清除选定的翻译记忆库会&lt;/em&gt;清除&lt;em&gt;翻译记忆库&lt;/em&gt;的全部内容。</target>
        </trans-unit>
        <trans-unit>
          <source>Check &lt;em&gt;Do not show this any more&lt;/em&gt; if you do not want this dialog to be shown any more.</source>
          <target>如果您不想再显示此对话框，请选中&lt;em&gt;不再显示此&lt;/em&gt;内容。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the character set that the file uses. Possible values are:</source>
          <target>指定文件使用的字符集。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>over 50</source>
          <target>超过 50</target>
        </trans-unit>
        <trans-unit>
          <source>You can remove the initial translation engine, edit it, and add new ones.</source>
          <target>您可以删除初始翻译引擎，对其进行编辑并添加新引擎。</target>
        </trans-unit>
        <trans-unit>
          <source>You can exclude files by a file externsion.</source>
          <target>您可以通过文件扩展排除文件。</target>
        </trans-unit>
        <trans-unit>
          <source>If selected Sisulizer includes the project file and the &lt;a href=&quot;Licenses.htm&quot;&gt;Sisulizer Free Edition&lt;/a&gt; setup files to the exchange package.&lt;br&gt;
    With this option Exchange Wizard will create a single-file setup that installs Sisulizer Free Edition and unpacks translations in installation folder. Upon running Sisulizer Free Edition the project is opened automatically, and translator can start working immediately.</source>
          <target>如果选择 Sisulizer，则将项目文件和&lt;a href=&quot;Licenses.htm&quot;&gt;Sisulizer 免费版&lt;/a&gt;安装文件包含到交换包中。&lt;br&gt;使用此选项 Exchange 向导将创建一个单文件安装程序，用于安装 Sisulizer 免费版并在安装文件夹中解压缩翻译。运行 Sisulizer 免费版后，项目会自动打开，翻译人员可以立即开始工作。</target>
        </trans-unit>
        <trans-unit>
          <source>Combine Run, Span and text elements</source>
          <target>组合运行、跨度和文本元素</target>
        </trans-unit>
        <trans-unit>
          <source>Write header row</source>
          <target>写标题行</target>
        </trans-unit>
        <trans-unit>
          <source>Many HTML files and almost all ASP/PHP/JSP files contains embedded scripts. If you scripts contains string that need to be localized you should turn on script localization and possible also add &lt;a href=&quot;Tagging.htm&quot;&gt;tags&lt;/a&gt; into script code. You can turn script parsing on from the &lt;a href=&quot;HtmlSourceDialogScriptsSheet.htm&quot;&gt;Scripts sheet&lt;/a&gt; of HTML source dialog.</source>
          <target>许多 HTML 文件和几乎所有 ASP/PHP/JSP 文件都包含嵌入式脚本。如果您的脚本包含需要本地化的字符串，您应该打开脚本本地化，并且还可能将&lt;a href=&quot;Tagging.htm&quot;&gt;标签&lt;/a&gt;添加到脚本代码中。您可以从 HTML 源对话框的&lt;a href=&quot;HtmlSourceDialogScriptsSheet.htm&quot;&gt;脚本表&lt;/a&gt;中打开脚本解析。</target>
        </trans-unit>
        <trans-unit>
          <source>Help | Check for Update</source>
          <target>帮助 |检查更新</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer contains both generic segmentation rules (e.g. language indecent rules) and language specific rules. You can add your own rules or remove build in rules.</source>
          <target>Sisulizer 包含通用分割规则（例如语言不雅规则）和语言特定规则。您可以添加自己的规则或删除内置规则。</target>
        </trans-unit>
        <trans-unit>
          <source>In order to use this you have to &lt;a href=&quot;InstallLingsoft.htm&quot;&gt;purchase the product&lt;/a&gt;.</source>
          <target>为了使用它，您必须&lt;a href=&quot;InstallLingsoft.htm&quot;&gt;购买该产品&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked enables the string excluding based on the exclude characters. The edit below the check box contains the exclude characters.&lt;br&gt;For instance specifying &#x27;0123456789&#x27; in the list will prevent Sisulizer from adding strings in the project that contain only digits.</source>
          <target>如果选中，则启用基于排除字符的字符串排除。复选框下方的编辑包含排除字符。&lt;br&gt;例如，在列表中指定“0123456789”将阻止 Sisulizer 在项目中添加仅包含数字的字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to customize how the toolbar of the menu editor looks like.</source>
          <target>使用此表可自定义菜单编辑器工具栏的外观。</target>
        </trans-unit>
        <trans-unit>
          <source>Localize the item.</source>
          <target>本地化项目。</target>
        </trans-unit>
        <trans-unit>
          <source>When using the values file localization user selects a values file (.xml) to be localized. On the build process Sisulizer creates the localized values files. You have to add the localized folders into your Android project and recompile your project.</source>
          <target>使用值文件本地化时，用户选择要本地化的值文件 (.xml)。在构建过程中，Sisulizer 创建本地化的值文件。您必须将本地化的文件夹添加到您的 Android 项目中并重新编译您的项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Lines up the bottom edges of the selected components (vertical only)</source>
          <target>排列所选组件的底部边缘（仅限垂直）</target>
        </trans-unit>
        <trans-unit>
          <source>Works with any database</source>
          <target>适用于任何数据库</target>
        </trans-unit>
        <trans-unit>
          <source>.NET Assembly Source | Run settings</source>
          <target>.NET 程序集源 |运行设置</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be a &lt;a href=&quot;WindowsLocalization.htm#Resource&quot;&gt;windows resource file&lt;/a&gt; (e.g. C:\Samples\Sample.rc).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是&lt;a href=&quot;WindowsLocalization.htm#Resource&quot;&gt;Windows 资源文件&lt;/a&gt;（例如 C:\Samples\Sample.rc）。</target>
        </trans-unit>
        <trans-unit>
          <source>Item contains original value.</source>
          <target>项目包含原始值。</target>
        </trans-unit>
        <trans-unit>
          <source>Original has three periods but translation does not have.</source>
          <target>原文有三个时期，但翻译没有。</target>
        </trans-unit>
        <trans-unit>
          <source>will become</source>
          <target>会变成</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog for translating a picture instead of the editing in the grid.</source>
          <target>使用此对话框翻译图片而不是在网格中进行编辑。</target>
        </trans-unit>
        <trans-unit>
          <source>Edit properties</source>
          <target>编辑属性</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer restores the desktop settings when starting the application.</source>
          <target>如果选中 Sisulizer 会在启动应用程序时恢复桌面设置。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer does not contain &lt;a href=&quot;SpellChecking.htm&quot;&gt;spell checking&lt;/a&gt; support for selected language. The reason might be that your language is very rare or it uses ideographic characters instead of alphabets. In either cases please contact Sisulizer support to check the status of spell checking for your language.</source>
          <target>Sisulizer 不包含对所选语言的&lt;a href=&quot;SpellChecking.htm&quot;&gt;拼写检查&lt;/a&gt;支持。原因可能是您的语言非常罕见，或者它使用表意字符而不是字母。在任何一种情况下，请联系 Sisulizer 支持以检查您的语言的拼写检查状态。</target>
        </trans-unit>
        <trans-unit>
          <source>Supported platforms</source>
          <target>支持的平台</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies how VCL forms are localized. Possible options are:</source>
          <target>指定 VCL 表单的本地化方式。可能的选项是：</target>
        </trans-unit>
        <trans-unit>
          <source>Localized text file</source>
          <target>本地化的文本文件</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer sets the TForm.Scaled property to False. This disables the build-in form scaling of VCL.</source>
          <target>如果选中 Sisulizer，则将 TForm.Scaled 属性设置为 False。这将禁用 VCL 的内置表单缩放。</target>
        </trans-unit>
        <trans-unit>
          <source>Whenever an XML element contains &amp;amp;sports; it will be expanded to content of Sports.xml file. For example:</source>
          <target>每当 XML 元素包含 &amp;amp;sports;它将扩展为 Sports.xml 文件的内容。例如：</target>
        </trans-unit>
        <trans-unit>
          <source>Let&#x27;s have an example. We have a string resource item that contains the following HTML data:</source>
          <target>让我们举个例子。我们有一个包含以下 HTML 数据的字符串资源项：</target>
        </trans-unit>
        <trans-unit>
          <source>UTF-8 string with preceding length byte</source>
          <target>带有前面长度字节的 UTF-8 字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to download a spell checker dictionary (&lt;a href=&quot;http://en.wikipedia.org/wiki/OpenOffice&quot; target=&quot;_blank&quot;&gt;OpenOffice&lt;/a&gt; and &lt;a href=&quot;http://en.wikipedia.org/wiki/Hunspell&quot; target=&quot;_blank&quot;&gt;Hunspell&lt;/a&gt;) and to install the dictionary into Sisulizer.</source>
          <target>使用此对话框下载拼写检查词典（ &lt;a href=&quot;http://en.wikipedia.org/wiki/OpenOffice&quot; target=&quot;_blank&quot;&gt;OpenOffice&lt;/a&gt;和&lt;a href=&quot;http://en.wikipedia.org/wiki/Hunspell&quot; target=&quot;_blank&quot;&gt;Hunspell&lt;/a&gt; ）并将词典安装到 Sisulizer。</target>
        </trans-unit>
        <trans-unit>
          <source>Starts &lt;a href=&quot;ValidationTranslationDialog.htm&quot;&gt;validation&lt;/a&gt; for the selected node.</source>
          <target>开始对选定节点的&lt;a href=&quot;ValidationTranslationDialog.htm&quot;&gt;验证&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Windows forms</source>
          <target>窗体</target>
        </trans-unit>
        <trans-unit>
          <source>Diacritics are added to the characters. This method tests the ability of the user interface to handle correctly diacritic and accented characters that are used in most European languages.&lt;br&gt;For example &lt;samp&gt;&amp;quot;Hello World&amp;quot;&lt;/samp&gt; becomes &lt;samp&gt;&amp;quot;H&amp;eacute;ll&amp;ouml; W&amp;ouml;rld&amp;quot;&lt;/samp&gt;.</source>
          <target>变音符号被添加到字符中。此方法测试用户界面正确处理大多数欧洲语言中使用的变音符号和重音字符的能力。&lt;br&gt;例如， &lt;samp&gt;&amp;quot;Hello World&amp;quot;&lt;/samp&gt;变为&lt;samp&gt;&amp;quot;Héllö Wörld&amp;quot;&lt;/samp&gt; 。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked all translations but the selected will be deleted from the translation memory after you press OK.</source>
          <target>如果选中所有翻译，但选中的翻译将在您按下 OK 后从翻译记忆库中删除。</target>
        </trans-unit>
        <trans-unit>
          <source>By pressing the Default button Sisulizer tries to detect the location of the files.</source>
          <target>通过按下默认按钮 Sisulizer 尝试检测文件的位置。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows a dialog box that lets you edit the properties of a pane.</source>
          <target>显示一个对话框，可让您编辑窗格的属性。</target>
        </trans-unit>
        <trans-unit>
          <source>If you install Sisulizer on Windows XP Sisulizer setup installs all files into the target directory that you specify (e.g. &lt;!-- #BeginLibraryItem &quot;/Library/InstallDir.lbi&quot; --&gt; C:\Program files (x86)\Sisulizer 4&lt;!-- #EndLibraryItem --&gt;). No files are installed outside this directory or its sub directories.</source>
          <target>如果您在 Windows XP 上安装 Sisulizer Sisulizer 安装程序会将所有文件安装到您指定的目标目录中（例如&lt;!-- #BeginLibraryItem &quot;/Library/InstallDir.lbi&quot; --&gt;C:\程序文件 (x86)\Sisulizer 4&lt;!-- #EndLibraryItem --&gt; ）。在此目录或其子目录之外没有安装任何文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Click &lt;em&gt;Add&lt;/em&gt; to add a new spell checker dictionary. This adds a new spell checker configuration into the list. Before clicking Add button make sure that you have copied the dictionary file into any directory. You can add following dictionary files:</source>
          <target>单击&lt;em&gt;添加&lt;/em&gt;以添加新的拼写检查词典。这会在列表中添加一个新的拼写检查器配置。在单击添加按钮之前，请确保您已将字典文件复制到任何目录中。您可以添加以下字典文件：</target>
        </trans-unit>
        <trans-unit>
          <source>User defined text</source>
          <target>用户定义文本</target>
        </trans-unit>
        <trans-unit>
          <source>Can be localized without changing the database structure</source>
          <target>可以在不改变数据库结构的情况下进行本地化</target>
        </trans-unit>
        <trans-unit>
          <source>For a complete set of documentation pages for SRX go to &lt;a href=&quot;http://www.lisa.org/standards/srx/srx.html&quot; target=&quot;_blank&quot;&gt;http://www.lisa.org/standards/srx/srx.html&lt;/a&gt;.</source>
          <target>有关 SRX 的完整文档页面，请访问&lt;a href=&quot;http://www.lisa.org/standards/srx/srx.html&quot; target=&quot;_blank&quot;&gt;http://www.lisa.org/standards/srx/srx.html&lt;/a&gt; 。</target>
        </trans-unit>
        <trans-unit>
          <source>Before item</source>
          <target>项目前</target>
        </trans-unit>
        <trans-unit>
          <source>This dialog is shown when Sisulizer is importing a project file into current project file and can not find a matching node for an import node. the most common reason for this is that you have changed the original file and then rescanned your project. The project file that was originally sent to translator still contains the old names.</source>
          <target>当 Sisulizer 正在将项目文件导入当前项目文件并且找不到与导入节点匹配的节点时，将显示此对话框。最常见的原因是您更改了原始文件，然后重新扫描了您的项目。最初发送给翻译人员的项目文件仍包含旧名称。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies filter based on priorities</source>
          <target>根据优先级指定过滤器</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer shows a message dialog before running a .NET application.</source>
          <target>如果选中 Sisulizer，则在运行 .NET 应用程序之前会显示一个消息对话框。</target>
        </trans-unit>
        <trans-unit>
          <source>Show detailed help about a task.</source>
          <target>显示有关任务的详细帮助。</target>
        </trans-unit>
        <trans-unit>
          <source>There are several ways you can control what forms, components and properties are translated.</source>
          <target>您可以通过多种方式控制转换哪些表单、组件和属性。</target>
        </trans-unit>
        <trans-unit>
          <source>JDK directory</source>
          <target>JDK目录</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies how XML entities are processed. Sisulizer &lt;u&gt;always&lt;/u&gt; decodes predefined XML entities when reading an XML file. The following table contains the predefined entities:</source>
          <target>指定如何处理 XML 实体。 Sisulizer 在读取 XML 文件时&lt;u&gt;总是&lt;/u&gt;解码预定义的 XML 实体。下表包含预定义的实体：</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Start&lt;/em&gt; and &lt;em&gt;End&lt;/em&gt; specify if the file uses block comments. If both start and end comment strings are given all chracters between these strings (and including) are skipped. For example:</source>
          <target>&lt;em&gt;Start&lt;/em&gt;和&lt;em&gt;End&lt;/em&gt;指定文件是否使用块注释。如果开始和结束注释字符串都给出，则这些字符串之间（包括）的所有字符都将被跳过。例如：</target>
        </trans-unit>
        <trans-unit>
          <source>Now you are ready to process. Choose Project | Scan for changes. You will see that one additional string node (Macapi) is added in to the Strings folder. It contains the mac specified resource strings of FireMonkey. All other resources are identical in all three platforms.</source>
          <target>现在您已准备好进行处理。选择项目 |扫描更改。您将看到在 Strings 文件夹中添加了一个额外的字符串节点 (Macapi)。它包含 mac 指定的 FireMonkey 资源字符串。所有其他资源在所有三个平台中都相同。</target>
        </trans-unit>
        <trans-unit>
          <source>tuid value</source>
          <target>tuid 值</target>
        </trans-unit>
        <trans-unit>
          <source>Workplace is splitted vertically. Visual editor (if any) is show on the top side. Sheet on the bottom side.</source>
          <target>工作场所是垂直分割的。可视化编辑器（如果有）显示在顶部。底部的表。</target>
        </trans-unit>
        <trans-unit>
          <source>The &#x27;EN&#x27; parameter in function specifies the original language of the application. The original language is the language that you used in the forms and menu when you wrote the application. When you run the application and click Button1 button the following dialog will be shown.</source>
          <target>函数中的“EN”参数指定应用程序的原始语言。原始语言是您在编写应用程序时在表单和菜单中使用的语言。当您运行应用程序并单击 Button1 按钮时，将显示以下对话框。</target>
        </trans-unit>
        <trans-unit>
          <source>Localize all similar files in a directory</source>
          <target>本地化目录中的所有相似文件</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify single field in the binary file definition. Field is a part of the header or record  of a binary file.</source>
          <target>使用此对话框指定二进制文件定义中的单个字段。字段是二进制文件的头或记录的一部分。</target>
        </trans-unit>
        <trans-unit>
          <source>New Source Wizard add a new source to a Sisulizer project. The Wizard consists of the following steps:</source>
          <target>新建源向导向 Sisulizer 项目添加新源。向导包括以下步骤：</target>
        </trans-unit>
        <trans-unit>
          <source>Click &lt;em&gt;Download&lt;/em&gt; button to go to the dictionary file download page. Select the dictionary you want to use. Download it and save it to a locale hard drive. Click &lt;em&gt;Browse&lt;/em&gt; button to select the dictionary file you just downloaded and click OK to install the dictionary.</source>
          <target>点击&lt;em&gt;下载&lt;/em&gt;按钮进入词典文件下载页面。选择要使用的词典。下载并保存到本地硬盘。单击“&lt;em&gt;浏览”&lt;/em&gt;按钮选择刚刚下载的词典文件，然后单击“确定”安装词典。</target>
        </trans-unit>
        <trans-unit>
          <source>Translate settings</source>
          <target>翻译设置</target>
        </trans-unit>
        <trans-unit>
          <source>When Sisulizer creates localized satellite assembly files for a .NET project or assembly it need to use .NET framework tools. Without .NET framework tools Sisulizer can not compile resource files or create localized satellite assembly files. If you do not have .NET framework installed you can download it from Microsoft&#x27;s site. If SDK is installed Sisulizer can extract complete menu and container hierarchies when localizing .NET assembly files.</source>
          <target>当 Sisulizer 为 .NET 项目或程序集创建本地化的附属程序集文件时，它需要使用 .NET 框架工具。如果没有 .NET 框架工具，Sisulizer 无法编译资源文件或创建本地化的附属程序集文件。如果您没有安装 .NET 框架，您可以从 Microsoft 的站点下载它。如果安装了 SDK，Sisulizer 可以在本地化 .NET 程序集文件时提取完整的菜单和容器层次结构。</target>
        </trans-unit>
        <trans-unit>
          <source>Adding runtime language change is very easy. At minimum it only requires that you make Sisulizer to create resource DLLs instead of localized files and you add two lines of code into your application (shown in italic typeface).</source>
          <target>添加运行时语言更改非常容易。至少它只需要您让 Sisulizer 创建资源 DLL 而不是本地化文件，并且您将两行代码添加到您的应用程序中（以斜体显示）。</target>
        </trans-unit>
        <trans-unit>
          <source>.NET resource file (.resx) or files.</source>
          <target>.NET 资源文件 (.resx) 或文件。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked and a form would not fit to the editor area the form is zoomed.</source>
          <target>如果选中并且表单不适合编辑器区域，则表单将被缩放。</target>
        </trans-unit>
        <trans-unit>
          <source>Use these check boxes to specify if untranslated rows should be translated using existing translations. If either check box is checked Sisulizer translates untranslated rows. The check boxes specify the source where existing translations are looked from. Possible values are:</source>
          <target>使用这些复选框指定是否应使用现有翻译来翻译未翻译的行。如果选中任一复选框，Sisulizer 将翻译未翻译的行。复选框指定查看现有翻译的来源。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>For example &amp;quot;en&amp;quot; is for English, &amp;quot;en-US&amp;quot; is fo English (United States), and &amp;quot;zh-Hant&amp;quot; is for Traditional Chinese. In .NET 2 and 3.x &amp;quot;zh-CHT&amp;quot; is for Traditional Chinese.</source>
          <target>例如“en”代表英语，“en-US”代表英语（美国），“zh-Hant”代表繁体中文。在 .NET 2 和 3.x 中，“zh-CHT”是繁体中文。</target>
        </trans-unit>
        <trans-unit>
          <source>validate</source>
          <target>证实</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks if   the original string contains vertical bar (|), the translated value also has it.</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查原始字符串是否包含竖线 (|)，翻译后的值也包含竖线 (|)。</target>
        </trans-unit>
        <trans-unit>
          <source>To get for information about the file parser read more about &lt;a href=&quot;SupportedFiles.htm&quot;&gt;supported platforms&lt;/a&gt;.</source>
          <target>要获取有关文件解析器的信息，请阅读有关&lt;a href=&quot;SupportedFiles.htm&quot;&gt;支持平台的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>If there is no translation value an empty string is written.</source>
          <target>如果没有翻译值，则写入一个空字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Empty translations</source>
          <target>空翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Use Sisulizer &lt;a href=&quot;MainFormOpen.htm&quot;&gt;translation sheet&lt;/a&gt; to &lt;a href=&quot;WorkingWithTranslationSheet.htm&quot;&gt;enter translations&lt;/a&gt;. Use &lt;a href=&quot;TranslationEngines.htm&quot;&gt;translation engines&lt;/a&gt; to automate the translation. Use the &lt;a href=&quot;Exchanging.htm&quot;&gt;exchange&lt;/a&gt; feature to send the project or part if it to a translator to be translated. Use &lt;a href=&quot;ImportingData.htm&quot;&gt;import&lt;/a&gt; feature to import data from existing files or files sent by your translator. Use &lt;a href=&quot;SpellChecking.htm&quot;&gt;spell checking&lt;/a&gt; to check spelling and grammar of your translations. Use &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; feature to check that the translations are valid. Use &lt;a href=&quot;PseudoTranslation.htm&quot;&gt;pseudo translation&lt;/a&gt; or machine translation to test your files in the target language without needing to translate anything. Use &lt;a href=&quot;WorkingWithTranslationSheet.htm#Filter&quot;&gt;filter&lt;/a&gt; to show only those items that are needed at the moment.</source>
          <target>使用 Sisulizer&lt;a href=&quot;MainFormOpen.htm&quot;&gt;翻译表&lt;/a&gt;&lt;a href=&quot;WorkingWithTranslationSheet.htm&quot;&gt;输入翻译&lt;/a&gt;。使用&lt;a href=&quot;TranslationEngines.htm&quot;&gt;翻译引擎&lt;/a&gt;自动翻译。使用&lt;a href=&quot;Exchanging.htm&quot;&gt;交换&lt;/a&gt;功能将项目或部分发送给翻译人员进行翻译。使用&lt;a href=&quot;ImportingData.htm&quot;&gt;导入&lt;/a&gt;功能从现有文件或译员发送的文件中导入数据。使用&lt;a href=&quot;SpellChecking.htm&quot;&gt;拼写检查&lt;/a&gt;检查翻译的拼写和语法。使用&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;功能检查翻译是否有效。使用&lt;a href=&quot;PseudoTranslation.htm&quot;&gt;伪翻译&lt;/a&gt;或机器翻译以目标语言测试您的文件，而无需翻译任何内容。使用&lt;a href=&quot;WorkingWithTranslationSheet.htm#Filter&quot;&gt;过滤器&lt;/a&gt;仅显示当前需要的项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Compares the original and localized resource data of selected node in a text format.</source>
          <target>以文本格式比较所选节点的原始和本地化资源数据。</target>
        </trans-unit>
        <trans-unit>
          <source>For example in the case of XML files the XML schema or DTD must be the same. In the case of INI files the files must contain same set of sections and sections must contain same sets of idents. However the actual values can be different.</source>
          <target>例如，对于 XML 文件，XML 模式或 DTD 必须相同。在 INI 文件的情况下，文件必须包含相同的节集，节必须包含相同的标识集。然而，实际值可能不同。</target>
        </trans-unit>
        <trans-unit>
          <source>Bring to Front</source>
          <target>带到前面</target>
        </trans-unit>
        <trans-unit>
          <source>First VCL looks from system registry under HKEY_CURRENT_USER\Software\Borland\Locales a string entry whose name matches the full path name of the application or library. If VCL finds such an entry it load a resource DLL matching data of the entry.</source>
          <target>首先 VCL 从 HKEY_CURRENT_USER\Software\Borland\Locales 下的系统注册表中查找名称与应用程序或库的完整路径名匹配的字符串条目。如果 VCL 找到这样的条目，它会加载与该条目的数据匹配的资源 DLL。</target>
        </trans-unit>
        <trans-unit>
          <source>Control validations</source>
          <target>控制验证</target>
        </trans-unit>
        <trans-unit>
          <source>If the translation engine finds two or more translations for the same string this dialog is shown. The dialog is used to select the preferred translation for the string.</source>
          <target>如果翻译引擎发现同一字符串的两个或多个翻译，则会显示此对话框。该对话框用于选择字符串的首选翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Save even if the translation equals the original value</source>
          <target>即使翻译等于原始值也保存</target>
        </trans-unit>
        <trans-unit>
          <source>Build localized file before run if needed</source>
          <target>如果需要，在运行前构建本地化文件</target>
        </trans-unit>
        <trans-unit>
          <source>This dialog shows the computer system information e.g. operating system name and version, used locales and installed compilers.</source>
          <target>此对话框显示计算机系统信息，例如操作系统名称和版本、使用的语言环境和安装的编译器。</target>
        </trans-unit>
        <trans-unit>
          <source>Show items that need to be completed</source>
          <target>显示需要完成的项目</target>
        </trans-unit>
        <trans-unit>
          <source>Language part is lower case. Country part is upper case. For example en-US and de-DE.</source>
          <target>语言部分是小写的。国家/地区部分为大写。例如 en-US 和 de-DE。</target>
        </trans-unit>
        <trans-unit>
          <source>A &quot;fake&quot; language with the 3-letter code LOC.</source>
          <target>带有 3 个字母代码 LOC 的“假”语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Clean syntax</source>
          <target>干净的语法</target>
        </trans-unit>
        <trans-unit>
          <source>Project menu</source>
          <target>项目菜单</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the whole component will be excluded. You have to add the properties that are scanned.</source>
          <target>如果选中，将排除整个组件。您必须添加扫描的属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Custom dictionaries</source>
          <target>自定义词典</target>
        </trans-unit>
        <trans-unit>
          <source>Each script has the default font to be used in the localized items. This list contains the default fonts.</source>
          <target>每个脚本都有用于本地化项目的默认字体。此列表包含默认字体。</target>
        </trans-unit>
        <trans-unit>
          <source>If your VCL version is 5 or later Sisulizer can fully create localized files for bidirectional languages. Leave BiDiMode and ParentBidiMode properties to their default values. If you check &lt;em&gt;Mirror forms&lt;/em&gt; check box do not call FlipChildren. When building localized files Sisulizer will change the values of these properties to match the target language.</source>
          <target>如果您的 VCL 版本是 5 或更高版本，Sisulizer 可以完全为双向语言创建本地化文件。将 BiDiMode 和 ParentBidiMode 属性保留为其默认值。如果您选中&lt;em&gt;Mirror forms&lt;/em&gt;复选框，则不要调用 FlipChildren。在构建本地化文件时，Sisulizer 将更改这些属性的值以匹配目标语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Marking rows Do not translate</source>
          <target>标记行 不翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer language file (.sll) is an XML based file that contains exported Sisulizer languages.</source>
          <target>Sisulizer 语言文件 (.sll) 是一个基于 XML 的文件，其中包含导出的 Sisulizer 语言。</target>
        </trans-unit>
        <trans-unit>
          <source>or</source>
          <target>要么</target>
        </trans-unit>
        <trans-unit>
          <source>Missing translation</source>
          <target>缺少翻译</target>
        </trans-unit>
        <trans-unit>
          <source>lupdate,&lt;br&gt;
      lrelease</source>
          <target>更新，&lt;br&gt;释放</target>
        </trans-unit>
        <trans-unit>
          <source>Message strings</source>
          <target>消息字符串</target>
        </trans-unit>
        <trans-unit>
          <source>DISTRIBUTION&lt;br&gt;
  This software may be distributed freely in its original unmodified and unregistered form. The distribution has to include all files of its original distribution. Distributors may not charge any money for it. Anyone distributing this software for any kind of remuneration must first contact us for authorization.</source>
          <target>分配&lt;br&gt;该软件可以以其原始未修改和未注册的形式自由分发。该发行版必须包含其原始发行版的所有文件。经销商不得为此收取任何费用。任何以任何形式的报酬分发此软件的人都必须先与我们联系以获得授权。</target>
        </trans-unit>
        <trans-unit>
          <source>Show items that can be translated</source>
          <target>显示可以翻译的项目</target>
        </trans-unit>
        <trans-unit>
          <source>exchange</source>
          <target>交换</target>
        </trans-unit>
        <trans-unit>
          <source>Compile main assembly file if it does not exist</source>
          <target>如果主程序集文件不存在则编译它</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer extracts two strings: &amp;quot;Hello&amp;quot; and &amp;quot;How are you?&amp;quot;. When building the Finnish files Sisulizer creates the following source code:</source>
          <target>Sisulizer 提取两个字符串：“你好”和“你好吗？”。在构建芬兰文件时，Sisulizer 创建以下源代码：</target>
        </trans-unit>
        <trans-unit>
          <source>Localize attribute is used in some XML files to control what element to localize and what element not to localize.</source>
          <target>Localize 属性在一些 XML 文件中用于控制要本地化的元素和不本地化的元素。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer uses also country neutral translations in the case there is no country specific translation.&lt;br&gt;
    For example if this is checked and you are translating a German (Switzerland) column and there is no translation having de-CH language code but there is a translation having de language code then Sisulizer will use it.</source>
          <target>如果选中 Sisulizer，则在没有特定国家/地区的翻译的情况下也使用国家/地区中性翻译。&lt;br&gt;例如，如果选中此项并且您正在翻译德语（瑞士）列，并且没有带有 de-CH 语言代码的翻译，但有带有 de 语言代码的翻译，则 Sisulizer 将使用它。</target>
        </trans-unit>
        <trans-unit>
          <source>This is just like #2 but instead of creating .sle file, Exchange Wizard creates .exe file that installs Sisulizer translation edition and the exchanged project file. Use this only if your translator does not have Sisulizer installed and you want to provide it with your project.</source>
          <target>这就像#2，但不是创建 .sle 文件，Exchange Wizard 创建安装 Sisulizer 翻译版本和交换项目文件的 .exe 文件。仅当您的翻译人员未安装 Sisulizer 并且您希望随项目一起提供时才使用此选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the password used when logging in to the FTP server.</source>
          <target>指定登录FTP服务器时使用的密码。</target>
        </trans-unit>
        <trans-unit>
          <source>The editor can show 1000 translations at the time. If the selected document and language pair contains more translations they are grouped into pages each containing maximum 1000 translations. If this visible select the page you want to show in the editor. If this is not visible then the selected document and language pair does not contain more than 1000 translation and they are all automatically shown in the list.</source>
          <target>编辑器可以同时显示 1000 个翻译。如果选定的文档和语言对包含更多翻译，它们将被分组到每页最多包含 1000 个翻译的页面中。如果此可见，请选择要在编辑器中显示的页面。如果这不可见，则所选文档和语言对包含的翻译不超过 1000 个，它们都会自动显示在列表中。</target>
        </trans-unit>
        <trans-unit>
          <source>Variable is replaced with the original file name with extension.&lt;br&gt;&lt;code&gt;C:\MyFiles\&lt;span class=&quot;style2&quot;&gt;Sample.exe&lt;/span&gt; -&amp;gt; Sample.exe&lt;/code&gt;</source>
          <target>变量被替换为带有扩展名的原始文件名。&lt;br&gt; &lt;code&gt;C:\MyFiles\ &lt;span class=&quot;style2&quot;&gt;Sample.exe&lt;/span&gt; -&amp;gt; Sample.exe&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit>
          <source>Private resources in satellite assemblies</source>
          <target>附属程序集中的私有资源</target>
        </trans-unit>
        <trans-unit>
          <source>This list contains the installed translation engines.</source>
          <target>此列表包含已安装的翻译引擎。</target>
        </trans-unit>
        <trans-unit>
          <source>Check &lt;em&gt;Database is  case sensitive&lt;/em&gt; if your database used case sensitive collation. Uncheck this is the databases uses case insensitive collation.</source>
          <target>如果您的数据库使用区分大小写的排序规则，请检查&lt;em&gt;数据库是否区分大小写&lt;/em&gt;。取消选中这是数据库使用不区分大小写的排序规则。</target>
        </trans-unit>
        <trans-unit>
          <source>TMX localization is very simple in Sisulizer because it is safe.</source>
          <target>Sisulizer 中的 TMX 定位非常简单，因为它是安全的。</target>
        </trans-unit>
        <trans-unit>
          <source>The following table contains the development tools supported by Sisulizer that can create multiple target files:</source>
          <target>下表包含了Sisulizer支持的可以创建多个目标文件的开发工具：</target>
        </trans-unit>
        <trans-unit>
          <source>The traditional way to localize Qt application is to store all strings (even those that are already defined in .ui files) into translations file. Whenever you used to have a hard code string replace it with TR function</source>
          <target>本地化 Qt 应用程序的传统方法是将所有字符串（甚至那些已经在 .ui 文件中定义的字符串）存储到翻译文件中。每当您使用硬编码字符串时，将其替换为 TR 函数</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify what Windows resource types are localized. The list contains all resource types found from the original binary file. If you want to enable localization of a resource type check it. If you want disable localization of a resource type uncheck it. If a resource type is unchecked the localized file will use the original resource data.</source>
          <target>使用此表指定本地化的 Windows 资源类型。该列表包含从原始二进制文件中找到的所有资源类型。如果要启用资源类型的本地化，请检查它。如果您想禁用资源类型的本地化，请取消选中它。如果未选中资源类型，本地化文件将使用原始资源数据。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;a href=&quot;http://en.wikipedia.org/wiki/UTF-8&quot; target=&quot;_blank&quot;&gt;UTF-8&lt;/a&gt; strings are used.</source>
          <target>&lt;a href=&quot;http://en.wikipedia.org/wiki/UTF-8&quot; target=&quot;_blank&quot;&gt;使用 UTF-8&lt;/a&gt;字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the class name of the component to be mapped</source>
          <target>指定要映射的组件的类名</target>
        </trans-unit>
        <trans-unit>
          <source>DRC file name, project file name and resource string tags are visible only if the selected file is a Delphi binary file. C++Builder does not use resourcestrings or DRC and DPR files.</source>
          <target>仅当所选文件是 Delphi 二进制文件时，DRC 文件名、项目文件名和资源字符串标签才可见。 C++Builder 不使用资源字符串或 DRC 和 DPR 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>resourcestring&lt;br&gt;
  SMsg = &#x27;Hello world&#x27;; //slz A message that is shown when the application starts</source>
          <target>资源串&lt;br&gt;短信 = &amp;#39;你好世界&amp;#39;; //slz 应用程序启动时显示的消息</target>
        </trans-unit>
        <trans-unit>
          <source>Run parameters</source>
          <target>运行参数</target>
        </trans-unit>
        <trans-unit>
          <source>Tables and field</source>
          <target>表和字段</target>
        </trans-unit>
        <trans-unit>
          <source>This is available only when importing data. If you select this Sisulizer will show &lt;a href=&quot;ImportWizardTextFrame.htm&quot;&gt;Text file sheet&lt;/a&gt; that lets you specify the format of the file. If the format of the file is the same as the file included to the current project select &lt;em&gt;Localized text file&lt;/em&gt; in above.</source>
          <target>这仅在导入数据时可用。如果您选择此 Sisulizer 将显示&lt;a href=&quot;ImportWizardTextFrame.htm&quot;&gt;文本文件表&lt;/a&gt;，让您指定文件的格式。如果文件的格式与包含在当前项目中的文件相同，请选择上面的&lt;em&gt;本地化文本文件&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Ansi string with no length restriction</source>
          <target>无长度限制的 Ansi 字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Borland Translation Repository file</source>
          <target>Borland 翻译存储库文件</target>
        </trans-unit>
        <trans-unit>
          <source>You are using a 3rd party or your own custom controls that has not yet been mappeed. Read more about &lt;a href=&quot;ComponentMapping.htm&quot;&gt;mapping components&lt;/a&gt;.</source>
          <target>您正在使用尚未映射的第 3 方或您自己的自定义控件。阅读有关&lt;a href=&quot;ComponentMapping.htm&quot;&gt;映射组件的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked translation statuses are written to the file.</source>
          <target>如果检查的翻译状态被写入文件。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer always creates manifest file in the localized directory and uses that when writing localized XAP file. If unchecked Sisulizer do not create manifest file if it already exists but uses the existing manifest file. Use this if you want to use your own manifest file.</source>
          <target>如果选中 Sisulizer，则始终在本地化目录中创建清单文件，并在编写本地化 XAP 文件时使用该文件。如果未选中 Sisulizer 如果它已经存在但使用现有的清单文件，则不创建清单文件。如果您想使用自己的清单文件，请使用此选项。</target>
        </trans-unit>
        <trans-unit>
          <source>New line characters are a bit problematic. This is because some platforms use Carriage Return character (CR, 0D), some platforms Line Feed character (LF, 0A), and some combination of them. The following table contains the possible combinations:</source>
          <target>换行符有点问题。这是因为有些平台使用回车符 (CR, 0D)，有些平台使用换行符 (LF, 0A) 以及它们的某些组合。下表包含可能的组合：</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Windows code&lt;/em&gt; specifies the Windows code of the variant. This is a three character code. It is used as a file extension when creating resource DLLs. Type the value.</source>
          <target>&lt;em&gt;Windows 代码&lt;/em&gt;指定变体的 Windows 代码。这是一个三字符代码。它在创建资源 DLL 时用作文件扩展名。键入值。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer shows only those rows that have spelling errors in translations.</source>
          <target>如果选中 Sisulizer，则仅显示那些在翻译中存在拼写错误的行。</target>
        </trans-unit>
        <trans-unit>
          <source>Every time</source>
          <target>每次</target>
        </trans-unit>
        <trans-unit>
          <source>Project file localization</source>
          <target>项目文件本地化</target>
        </trans-unit>
        <trans-unit>
          <source>DRC file name of &amp;amp;OSX (required if OSX platform file exists)</source>
          <target>&amp;amp;OSX 的 DRC 文件名（如果 OSX 平台文件存在，则为必需）</target>
        </trans-unit>
        <trans-unit>
          <source>This group lets you include and exclude items based on their translation status. Strings having a status belonging to those statuses that have been checked will be exported to the file. All other will not be exported.</source>
          <target>该组允许您根据翻译状态包括和排除项目。具有属于已检查状态的状态的字符串将导出到文件中。所有其他将不会被导出。</target>
        </trans-unit>
        <trans-unit>
          <source>Lines up the top edges of the selected components (vertical only)</source>
          <target>排列选定组件的顶部边缘（仅限垂直）</target>
        </trans-unit>
        <trans-unit>
          <source>There is only one database source type: &lt;a href=&quot;DatabaseSourceDialog.htm&quot;&gt;Database source&lt;/a&gt;. Use this source type when you want to localize a database. To create a project containing a database source, start &lt;a href=&quot;ProjectWizard.htm&quot;&gt;Project Wizard&lt;/a&gt;, check &lt;em&gt;Localize database data&lt;/em&gt; and go through Project Wizard.</source>
          <target>只有一种数据库源类型： &lt;a href=&quot;DatabaseSourceDialog.htm&quot;&gt;Database source&lt;/a&gt; 。当您要本地化数据库时，请使用此源类型。要创建包含数据库源的&lt;a href=&quot;ProjectWizard.htm&quot;&gt;项目&lt;/a&gt;，请启动&lt;a href=&quot;ProjectWizard.htm&quot;&gt;Project Wizard&lt;/a&gt; ，选中&lt;em&gt;Localize database data&lt;/em&gt;并通过 Project Wizard。</target>
        </trans-unit>
        <trans-unit>
          <source>Input method</source>
          <target>输入法</target>
        </trans-unit>
        <trans-unit>
          <source>Use &lt;a href=&quot;ExchangeWizard.htm&quot;&gt;Exchange Wizard&lt;/a&gt; to create an exchange package. This takes some time but let you include only those languages and items that are needed. You can also include Sisulizer Free Edition setup to the exchange package.</source>
          <target>使用&lt;a href=&quot;ExchangeWizard.htm&quot;&gt;Exchange 向导&lt;/a&gt;创建交换包。这需要一些时间，但让您只包括那些需要的语言和项目。您还可以将 Sisulizer 免费版设置包含在交换包中。</target>
        </trans-unit>
        <trans-unit>
          <source>Importing from other localizaton tool</source>
          <target>从其他本地化工具导入</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to set the options how to localize a .NET solution file.</source>
          <target>使用此表设置如何本地化 .NET 解决方案文件的选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Inconsistent format string Validation</source>
          <target>不一致的格式字符串验证</target>
        </trans-unit>
        <trans-unit>
          <source>Multilizer dictionary file</source>
          <target>乘法器字典文件</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer uses compatible language id when creating localized CHM file. This means that if the target language is not English but uses Western code page 1252 such as German or French, Sisulizer sets the language id of the CHM to English (United States),</source>
          <target>如果在创建本地化 CHM 文件时选中 Sisulizer 使用兼容的语言 ID。这意味着如果目标语言不是英语而是使用西方代码页 1252（例如德语或法语），Sisulizer 会将 CHM 的语言 ID 设置为英语（美国），</target>
        </trans-unit>
        <trans-unit>
          <source>The sheet shows all elements of the item (e.g. project, source or node) that has been selected in the project tree. Each element is located on its own row. Translation sheet contains several &lt;a href=&quot;Shortcuts.htm&quot;&gt;shortcuts&lt;/a&gt; that make working faster. As the project tree the translation grid also has a context sensitive menu. You can configure the sheet by choosing the context sensitive menu. To access menu right click sheet. Read more about &lt;a href=&quot;WorkingWithTranslationSheet.htm&quot;&gt;working with translation sheet&lt;/a&gt;.</source>
          <target>该工作表显示项目树中已选择的项目（例如项目、源或节点）的所有元素。每个元素都位于自己的行上。翻译表包含几个使工作更快的&lt;a href=&quot;Shortcuts.htm&quot;&gt;快捷方式&lt;/a&gt;。作为项目树，翻译网格也有一个上下文相关的菜单。您可以通过选择上下文相关菜单来配置工作表。要访问菜单右键单击工作表。阅读有关&lt;a href=&quot;WorkingWithTranslationSheet.htm&quot;&gt;使用翻译表的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>These contain data of embedded HTML files.</source>
          <target>这些包含嵌入的 HTML 文件的数据。</target>
        </trans-unit>
        <trans-unit>
          <source>A Sisulizer project contains one of more target languages. These are languages that the user adds to the project and purpose is to translate the original file(s) into those languages.</source>
          <target>Sisulizer 项目包含更多目标语言之一。这些是用户添加到项目中的语言，目的是将原始文件翻译成这些语言。</target>
        </trans-unit>
        <trans-unit>
          <source>The source file contains several languages. Select which languages you want to import to the project.</source>
          <target>源文件包含多种语言。选择要导入项目的语言。</target>
        </trans-unit>
        <trans-unit>
          <source>If there is no translation value the original value is written.</source>
          <target>如果没有翻译值，则写入原始值。</target>
        </trans-unit>
        <trans-unit>
          <source>Translates &lt;a href=&quot;DuplicateString.htm&quot;&gt;duplicated items&lt;/a&gt; in selected language column and view.</source>
          <target>翻译所选语言列和视图中的&lt;a href=&quot;DuplicateString.htm&quot;&gt;重复项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>This English translation uses full-width alphabets that is incorrect. Even it looks just all right it might be that end users computer can not render it correctly.</source>
          <target>这个英文翻译使用了不正确的全角字母。即使它看起来没问题，也可能是最终用户的计算机无法正确呈现它。</target>
        </trans-unit>
        <trans-unit>
          <source>Delphi 6 and later. C++Builder 6 and later.</source>
          <target>德尔福 6 及更高版本。 C++Builder 6 及更高版本。</target>
        </trans-unit>
        <trans-unit>
          <source>Imports data from a CSV file (.csv).&lt;br&gt;&lt;strong&gt;Note!&lt;/strong&gt; This has the same file extension as &lt;em&gt;Microsoft Glossary files&lt;/em&gt; but the format is different. Read more about &lt;a href=&quot;ImportingTextAndCsvFiles.htm&quot;&gt;importing text and CSV files&lt;/a&gt;.</source>
          <target>从 CSV 文件 (.csv) 导入数据。&lt;br&gt;&lt;strong&gt;笔记！&lt;/strong&gt;这与&lt;em&gt;Microsoft Glossary 文件&lt;/em&gt;具有相同的文件扩展名，但格式不同。阅读有关&lt;a href=&quot;ImportingTextAndCsvFiles.htm&quot;&gt;导入文本和 CSV 文件的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>You can install Sisulizer on a DVD/CD disk. Just install Sisulizer on your DVD/CD drive and run it on any computer. Samples files are installed on the installation directory on DVD/CD but settings and translation memory files are installed on your personal directory of the computer when you run Sisulizer. When you run CD on some other computer but the one where you original installed it Sisulizer will create new settings and translation memory files on the personal directory of that computer.</source>
          <target>您可以在 DVD/CD 磁盘上安装 Sisulizer。只需在您的 DVD/CD 驱动器上安装 Sisulizer 并在任何计算机上运行它。示例文件安装在 DVD/CD 的安装目录中，但当您运行 Sisulizer 时，设置和翻译记忆库文件安装在您计算机的个人目录中。当您在其他计算机上运行 CD 时，Sisulizer 将在该计算机的个人目录中创建新的设置和翻译记忆库文件。</target>
        </trans-unit>
        <trans-unit>
          <source>File uses code pages. Each string uses the default Windows code pages of the language.</source>
          <target>文件使用代码页。每个字符串都使用该语言的默认 Windows 代码页。</target>
        </trans-unit>
        <trans-unit>
          <source>Now our application works. After language change you have to remember to resets any dynamic properties. This might seem a bit complicated but in most cases your language change routine is on the main menu or on the main form. In a situation like that you only have one form existing at that moment so you only have to take care if resetting dynamic properties of that form. All the other forms that you create after language change will automatically use the new language.</source>
          <target>现在我们的应用程序可以工作了。语言更改后，您必须记住重置任何动态属性。这可能看起来有点复杂，但在大多数情况下，您的语言更改例程位于主菜单或主窗体上。在这种情况下，此时您只有一个表单，因此您只需在重置该表单的动态属性时注意。您在语言更改后创建的所有其他表单将自动使用新语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file can be any  &lt;a href=&quot;TextLocalization.htm&quot;&gt;text file&lt;/a&gt;  (e.g. C:\Samples\Project.txt).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件可以是任何&lt;a href=&quot;TextLocalization.htm&quot;&gt;文本文件&lt;/a&gt;（例如 C:\Samples\Project.txt）。</target>
        </trans-unit>
        <trans-unit>
          <source>This is a sample string&amp;lt;tab&amp;gt;T&amp;auml;m&amp;auml; on esimerkkimerkkijono</source>
          <target>这是一个示例字符串 &amp;lt;tab&amp;gt; 这是一个示例字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Framework and SDK requirements</source>
          <target>框架和 SDK 要求</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Original language&lt;/em&gt; specifies the original language of the database. If the original item contains two or more languages mixed together set the language that is most widely used.</source>
          <target>&lt;em&gt;原始语言&lt;/em&gt;指定数据库的原始语言。如果原始项目包含混合在一起的两种或多种语言，请设置使用最广泛的语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the PO file options.</source>
          <target>使用此表指定 PO 文件选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Item contains the length of the string in bytes.</source>
          <target>Item 包含字符串的长度（以字节为单位）。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies if &lt;a href=&quot;Segmentation.htm&quot;&gt;segmentation&lt;/a&gt; is used. More information about segmentation is found from &lt;a href=&quot;XmlSourceDialog.htm&quot;&gt;XML Source Dialog&lt;/a&gt;.</source>
          <target>指定是否使用&lt;a href=&quot;Segmentation.htm&quot;&gt;分段&lt;/a&gt;。从&lt;a href=&quot;XmlSourceDialog.htm&quot;&gt;XML Source Dialog 中&lt;/a&gt;可以找到有关分段的更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>MFC locale code is used. It contains three upper case characters.&lt;br&gt;For example &amp;quot;ENE&amp;quot; is for English, &amp;quot;ENG&amp;quot; is for English (United Kingdom), and &amp;quot;CHT&amp;quot; is for Traditional Chinese.</source>
          <target>使用 MFC 区域设置代码。它包含三个大写字符。&lt;br&gt;例如，“ENE”代表英文，“ENG”代表英文（英国），“CHT”代表繁体中文。</target>
        </trans-unit>
        <trans-unit>
          <source>Read more about &lt;a href=&quot;TextSettingsDialog.htm&quot;&gt;definitions&lt;/a&gt; and &lt;a href=&quot;TextRuleDialog.htm&quot;&gt;definition rules&lt;/a&gt;.</source>
          <target>阅读有关&lt;a href=&quot;TextSettingsDialog.htm&quot;&gt;定义&lt;/a&gt;和&lt;a href=&quot;TextRuleDialog.htm&quot;&gt;定义规则的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Check grammar as you type</source>
          <target>键入时检查语法</target>
        </trans-unit>
        <trans-unit>
          <source>Where each record is three lines. The first line contains start string (##), id of the country, some other information and name of the country all separated by semicolon character. Second line contains country code and third line is empty.</source>
          <target>每条记录是三行。第一行包含起始字符串 (##)、国家 ID、其他一些信息和国家名称，均以分号分隔。第二行包含国家代码，第三行为空。</target>
        </trans-unit>
        <trans-unit>
          <source>Fills the selected column with pseudo translations using new pseudo settings. Shows &lt;a href=&quot;PseudoTranslationDialog.htm&quot;&gt;Pseudo Translation dialog box&lt;/a&gt;.</source>
          <target>使用新的伪设置用伪翻译填充选定的列。显示&lt;a href=&quot;PseudoTranslationDialog.htm&quot;&gt;伪翻译对话框&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Plain text files</source>
          <target>纯文本文件</target>
        </trans-unit>
        <trans-unit>
          <source>Status bar</source>
          <target>状态栏</target>
        </trans-unit>
        <trans-unit>
          <source>If selected paragraphs are not segmented.</source>
          <target>如果所选段落未分段。</target>
        </trans-unit>
        <trans-unit>
          <source>Sets or clears the file associations for Sisulizer files. To associate the a file type to this application press the corresponding &lt;em&gt;Associate&lt;/em&gt; button. After this double-clicking a file of that type in Windows Explorer will open the file in Sisulizer. If the file has already associated to this application you can unassociated it by pressing the corresponding &lt;em&gt;Remove&lt;/em&gt; button. Possible file associations are:</source>
          <target>设置或清除 Sisulizer 文件的文件关联。要将文件类型关联到此应用程序，请按相应的&lt;em&gt;关联&lt;/em&gt;按钮。在此之后，在 Windows 资源管理器中双击该类型的文件将在 Sisulizer 中打开该文件。如果文件已与此应用程序关联，您可以通过按相应的&lt;em&gt;删除&lt;/em&gt;按钮&lt;em&gt;取消&lt;/em&gt;关联。可能的文件关联是：</target>
        </trans-unit>
        <trans-unit>
          <source>Selects all cells of the active row.</source>
          <target>选择活动行的所有单元格。</target>
        </trans-unit>
        <trans-unit>
          <source>If you use the default resource type and names the only thing that you have to do is to call one function in the beginning of the application.</source>
          <target>如果您使用默认资源类型和名称，您唯一需要做的就是在应用程序开始时调用一个函数。</target>
        </trans-unit>
        <trans-unit>
          <source>Scan images</source>
          <target>扫描图像</target>
        </trans-unit>
        <trans-unit>
          <source>To edit the selected mapping press the Edit button.</source>
          <target>要编辑选定的映射，请按编辑按钮。</target>
        </trans-unit>
        <trans-unit>
          <source>Show translation complete when</source>
          <target>显示翻译完成时</target>
        </trans-unit>
        <trans-unit>
          <source>Application uses MFC library</source>
          <target>应用程序使用 MFC 库</target>
        </trans-unit>
        <trans-unit>
          <source>Set status of translated strings</source>
          <target>设置已翻译字符串的状态</target>
        </trans-unit>
        <trans-unit>
          <source>If checked these settings specified in the folder (parent node) are used. If unchecked you can specify custom settings for this node.</source>
          <target>如果选中，则使用文件夹（父节点）中指定的这些设置。如果取消选中，您可以为此节点指定自定义设置。</target>
        </trans-unit>
        <trans-unit>
          <source>Lines up the centers of the selected components</source>
          <target>排列所选组件的中心</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies how the localized forms are scaled. VCL has a build-in form scaling. It works like this: When VCL loads a form it checks if the runtime height of the font is different to the design time height of the form. If it is VCL scales the components on the form. Unfortunately it does not scale the width and height of the form if the BorderStyle property is set to &lt;code&gt;bsDialog&lt;/code&gt;. As a result some of the components may be cut off. To fix this Sisulizer has a form scaling option. Possible values are:</source>
          <target>指定本地化表单的缩放方式。 VCL 具有内置的表单缩放功能。它是这样工作的：当 VCL 加载表单时，它会检查字体的运行时高度是否与表单的设计时高度不同。如果是 VCL，则缩放表单上的组件。不幸的是，如果 BorderStyle 属性设置为&lt;code&gt;bsDialog&lt;/code&gt;它不会缩放表单的宽度和高度。因此，某些组件可能会被切断。为了解决这个问题，Sisulizer 有一个表格缩放选项。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Sort items</source>
          <target>排序项目</target>
        </trans-unit>
        <trans-unit>
          <source>Normally when you map your own Label-control the default value is usually taLeftJustify. On the other hand if you have a component that&#x27;s default value should be laCenter you should define Default Value as 1 (the ordinal value of taCenter). If not defined Sisulizer will use taLeftJustify as a default value.</source>
          <target>通常，当您映射自己的标签控件时，默认值通常是 taLeftJustify。另一方面，如果您有一个默认值应该是 laCenter 的组件，您应该将默认值定义为 1（taCenter 的序数值）。如果未定义，Sisulizer 将使用 taLeftJustify 作为默认值。</target>
        </trans-unit>
        <trans-unit>
          <source>No filter</source>
          <target>没有过滤器</target>
        </trans-unit>
        <trans-unit>
          <source>Contains most of the Sisulizer features and platforms. The following features are not enabled:</source>
          <target>包含大部分 Sisulizer 功能和平台。以下功能未启用：</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies filter based on translation statuses.</source>
          <target>根据翻译状态指定过滤器。</target>
        </trans-unit>
        <trans-unit>
          <source>Show as Text | Both</source>
          <target>显示为文本 |两个都</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet configure how forms are localized.</source>
          <target>使用此表配置表单的本地化方式。</target>
        </trans-unit>
        <trans-unit>
          <source>This dialog shows the translation history of the selected row.</source>
          <target>此对话框显示所选行的翻译历史记录。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to customize how the toolbar of the project tree looks like.</source>
          <target>使用此表自定义项目树的工具栏的外观。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer localizes script files  (e.g .js file).</source>
          <target>如果选中 Sisulizer 本地化脚本文件（例如 .js 文件）。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;PoLocalization.htm&quot;&gt;PO file is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;PoLocalization.htm&quot;&gt;PO 文件的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>The following item contains exclude tag inside the resource name.</source>
          <target>以下项目在资源名称中包含 exclude 标记。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure Qt settings.</source>
          <target>使用此对话框配置 Qt 设置。</target>
        </trans-unit>
        <trans-unit>
          <source>Disable scaling</source>
          <target>禁用缩放</target>
        </trans-unit>
        <trans-unit>
          <source>Your private key that is used to sign your application before publishing them.</source>
          <target>用于在发布应用程序之前对其进行签名的私钥。</target>
        </trans-unit>
        <trans-unit>
          <source>Any other &amp;quot;CSV&amp;quot; file. Most commonly exported from Excel. Each line can contain any number of fields and both translations and other data. Sometimes very difficult to import but can be done when using regular expressions.</source>
          <target>任何其他“CSV”文件。最常从 Excel 导出。每行可以包含任意数量的字段以及翻译和其他数据。有时很难导入，但可以在使用正则表达式时完成。</target>
        </trans-unit>
        <trans-unit>
          <source>Check &lt;em&gt;Message patterns&lt;/em&gt; if you want  to preserve placeholder of message patterns during translation.</source>
          <target>如果要在翻译期间保留消息模式的占位符，请选中&lt;em&gt;消息模式&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>You can clear both new and changed statuses on every rows of the project and remove unused item by choosing &lt;a href=&quot;ProjectClearAllMenu.htm&quot;&gt;Project | Clear All Statuses&lt;/a&gt;.</source>
          <target>您可以清除项目每一行的新状态和更改状态，并通过选择&lt;a href=&quot;ProjectClearAllMenu.htm&quot;&gt;项目 |&lt;/a&gt;删除未使用的&lt;a href=&quot;ProjectClearAllMenu.htm&quot;&gt;项目。清除所有状态&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Windows resource file</source>
          <target>视窗资源文件</target>
        </trans-unit>
        <trans-unit>
          <source>Language match</source>
          <target>语言匹配</target>
        </trans-unit>
        <trans-unit>
          <source>Highlight messages</source>
          <target>突出显示消息</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer automatically turns on the default IME mode of the editing language (if the language uses IME)</source>
          <target>如果勾选 Sisulizer 自动开启编辑语言的默认 IME 模式（如果语言使用 IME）</target>
        </trans-unit>
        <trans-unit>
          <source>The following items are used only when the language is a European language.</source>
          <target>以下项目仅在语言为欧洲语言时使用。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked limits the search to text that matches the whole string. Searched text must match one text item (e.g. original or translated text) completely. It can not be part of the text.&lt;br&gt;
    For example, if you search for &lt;em&gt;Press this button&lt;/em&gt;, you will not find &lt;em&gt;Press this button first&lt;/em&gt;.</source>
          <target>如果选中，则将搜索限制为与整个字符串匹配的文本。搜索的文本必须完全匹配一个文本项目（例如原始文本或翻译文本）。它不能是文本的一部分。&lt;br&gt;例如，如果您搜索&lt;em&gt;Press this button&lt;/em&gt; ，您将不会找到&lt;em&gt;Press this button first&lt;/em&gt; 。</target>
        </trans-unit>
        <trans-unit>
          <source>Learn more about &lt;a href=&quot;HtmlLocalization.htm&quot;&gt;HTML localization&lt;/a&gt;.</source>
          <target>了解有关&lt;a href=&quot;HtmlLocalization.htm&quot;&gt;HTML 本地化的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>For example he following SQL returns the next available row id:</source>
          <target>例如，他下面的 SQL 返回下一个可用的行 ID：</target>
        </trans-unit>
        <trans-unit>
          <source>Only read only strings are visible.</source>
          <target>只有只读字符串可见。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;http://www.ncore.fi/products/nres/&quot; target=&quot;_blank&quot;&gt;nRes&lt;/a&gt; file is localized. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;http://www.ncore.fi/products/nres/&quot; target=&quot;_blank&quot;&gt;nRes&lt;/a&gt;文件的本地化方式。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer shows a message dialog before excluding row by original.</source>
          <target>如果选中 Sisulizer 在按原始排除行之前显示消息对话框。</target>
        </trans-unit>
        <trans-unit>
          <source>To avoid this Sisulizer by default does not create  binary index when creating localized CHM file that would require different code page. Not having a binary index does not prevent the user to use index, it just makes index little bit slower. If you want to turn off this default and force Sisulizer to always use the binary index (if the original CHM uses binary index) you have to uncheck &lt;em&gt;Use compatible index&lt;/em&gt; check box from the &lt;a href=&quot;ChmSourceDialogOptionsSheet.htm&quot;&gt;Options sheet&lt;/a&gt;  of the &lt;a href=&quot;ChmSourceDialog.htm&quot;&gt;HTML Help source dialog&lt;/a&gt;.</source>
          <target>为了避免这种情况，在创建需要不同代码页的本地化 CHM 文件时，Sisulizer 默认不创建二进制索引。没有二进制索引不会阻止用户使用索引，它只会使索引变慢。如果您想关闭此默认设置并强制 Sisulizer 始终使用二进制索引（如果原始 CHM 使用二进制索引），您必须从&lt;a href=&quot;ChmSourceDialog.htm&quot;&gt;HTML 帮助源对话框&lt;/a&gt;的&lt;a href=&quot;ChmSourceDialogOptionsSheet.htm&quot;&gt;选项表&lt;/a&gt;中取消选中&lt;em&gt;使用兼容索引&lt;/em&gt;复选框。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to search items from  the translation memory. Once found you can edit or remove the items. You can also add new items into the translation memory.</source>
          <target>使用此表从翻译记忆库中搜索项目。找到后，您可以编辑或删除项目。您还可以将新项目添加到翻译记忆库中。</target>
        </trans-unit>
        <trans-unit>
          <source>Comma Separated Value file</source>
          <target>逗号分隔值文件</target>
        </trans-unit>
        <trans-unit>
          <source>Shows if the selected contril is visible or not. To toggle the state selected the menu.</source>
          <target>显示所选控制是否可见。要切换状态选择菜单。</target>
        </trans-unit>
        <trans-unit>
          <source>Unicode enceded as big endian UTF-16.</source>
          <target>Unicode 被定义为大端 UTF-16。</target>
        </trans-unit>
        <trans-unit>
          <source>Variable is replaced with the original file extension without period.&lt;br&gt;
        &lt;code&gt;C:\MyFiles\Sample.&lt;span class=&quot;style2&quot;&gt;exe&lt;/span&gt; -&amp;gt; exe&lt;/code&gt;</source>
          <target>变量被替换为没有句点的原始文件扩展名。&lt;br&gt; &lt;code&gt;C:\MyFiles\Sample. &lt;span class=&quot;style2&quot;&gt;exe&lt;/span&gt; -&amp;gt; exe&lt;/code&gt;</target>
        </trans-unit>
        <trans-unit>
          <source>String to search</source>
          <target>要搜索的字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the configuration that Sisulizer uses to read property properties. For example most project files has both debug and release configuration. Each configuration has typically a different ouput directory. Choose the configuration that you want to use.</source>
          <target>指定 Sisulizer 用于读取属性属性的配置。例如，大多数项目文件都有调试和发布配置。每个配置通常具有不同的输出目录。选择要使用的配置。</target>
        </trans-unit>
        <trans-unit>
          <source>HTML and CHM</source>
          <target>HTML 和 CHM</target>
        </trans-unit>
        <trans-unit>
          <source>  // This is a comment

key=This is a value</source>
          <target>// 这是一个注释键=这是一个值</target>
        </trans-unit>
        <trans-unit>
          <source>Check &lt;em&gt;Localize database data&lt;/em&gt; and click &lt;em&gt;Next&lt;/em&gt; to localize a &lt;a href=&quot;SupportedDatabases.htm&quot;&gt;database&lt;/a&gt;.</source>
          <target>选中&lt;em&gt;Localize database data&lt;/em&gt;并单击&lt;em&gt;Next&lt;/em&gt;以本地化&lt;a href=&quot;SupportedDatabases.htm&quot;&gt;数据库&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the name of the file to be exported (e.g. C:\MyFiles\Export.tmx).</source>
          <target>指定要导出的文件的名称（例如 C:\MyFiles\Export.tmx）。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer found an XAML component that has no name attribute. This kind on component can be localized but it may be that its context will change if you add another similar component on the form. This is why it is recommended that you give a name attribute to each component you have.</source>
          <target>Sisulizer 发现了一个没有名称属性的 XAML 组件。这种组件可以本地化，但如果您在表单上添加另一个类似的组件，它的上下文可能会发生变化。这就是为什么建议您为您拥有的每个组件指定一个名称属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Select the language to be edited in the project sheet</source>
          <target>在项目表中选择要编辑的语言</target>
        </trans-unit>
        <trans-unit>
          <source>Project Wizard - .NET assembly file</source>
          <target>项目向导 - .NET 程序集文件</target>
        </trans-unit>
        <trans-unit>
          <source>Shows componets of the selected dialog or form in a tree structure.</source>
          <target>以树状结构显示所选对话框或表单的组件。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to configure &lt;a href=&quot;SpellChecking.htm&quot;&gt;spell checker&lt;/a&gt; of this language.</source>
          <target>使用此表配置该语言的&lt;a href=&quot;SpellChecking.htm&quot;&gt;拼写检查器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Code page</source>
          <target>代码页</target>
        </trans-unit>
        <trans-unit>
          <source>In order to build localized HTML Help files you need to install Microsoft HTML Help workshop that is freely downloadable from Microsoft&#x27;s web site. When creating localized files Sisulizer automatically call HTML Help Workshop to create the file. You only have to install HTML Help Workshop.</source>
          <target>为了构建本地化的 HTML 帮助文件，您需要安装可从 Microsoft 网站免费下载的 Microsoft HTML 帮助研讨会。创建本地化文件时，Sisulizer 会自动调用 HTML Help Workshop 来创建文件。您只需要安装 HTML Help Workshop。</target>
        </trans-unit>
        <trans-unit>
          <source>Default original language of the source</source>
          <target>源的默认原始语言</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer imports the value even if the import value is empty. If unchecked also empty values are not imported. If this options is turn on and if the import item is empty and if the overwrite options is turned on this will remove the existing translation.</source>
          <target>如果选中 Sisulizer，即使导入值为空，也会导入该值。如果未选中，也不会导入空值。如果打开此选项且导入项为空且打开覆盖选项，这将删除现有翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Write a backup file for the selected translation memory&lt;/em&gt; backups the translation memory contents to the file.</source>
          <target>&lt;em&gt;为所选翻译记忆库写入备份文件&lt;/em&gt;会将翻译记忆库内容备份到文件中。</target>
        </trans-unit>
        <trans-unit>
          <source>Ｆｉｌｅ</source>
          <target>文件</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the format of the imported text file. It is very important that the format specified on this sheet matches the actual file format. Otherwise Sisulizer fails to import data correctly.</source>
          <target>使用此表指定导入的文本文件的格式。此工作表上指定的格式与实际文件格式相匹配非常重要。否则 Sisulizer 无法正确导入数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Row values</source>
          <target>行值</target>
        </trans-unit>
        <trans-unit>
          <source>Scan the selected &lt;a href=&quot;Sources.htm&quot;&gt;source&lt;/a&gt; to find new and changed items.</source>
          <target>扫描选定的&lt;a href=&quot;Sources.htm&quot;&gt;源&lt;/a&gt;以查找新的和更改的项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Select the character encoding that is used in the import field.</source>
          <target>选择导入字段中使用的字符编码。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to set  Android specific settings.</source>
          <target>使用此表设置 Android 特定设置。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies a ISO-3166 country code. This is optional.</source>
          <target>指定 ISO-3166 国家/地区代码。这是可选的。</target>
        </trans-unit>
        <trans-unit>
          <source>Visual Basic project file</source>
          <target>Visual Basic 项目文件</target>
        </trans-unit>
        <trans-unit>
          <source>You select what rows contain combined string. Right click on the left side of a row in the translation sheet and choose Set Format | Combined and enter the regular expression in a dialog that appears.</source>
          <target>您选择哪些行包含组合字符串。右键单击翻译表中一行的左侧，然后选择设置格式 |在出现的对话框中组合并输入正则表达式。</target>
        </trans-unit>
        <trans-unit>
          <source>You can edit shot cuts by using &lt;a href=&quot;ShortCutsDialog.htm&quot;&gt;short cut dialog&lt;/a&gt; (Tools | Short Cuts).</source>
          <target>您可以使用&lt;a href=&quot;ShortCutsDialog.htm&quot;&gt;快捷方式对话框&lt;/a&gt;（工具 | 快捷方式）来编辑镜头剪辑。</target>
        </trans-unit>
        <trans-unit>
          <source>Strings are encoded with &lt;a href=&quot;http://en.wikipedia.org/wiki/Category:Mac_OS_character_encodings&quot; target=&quot;_blank&quot;&gt;Mac code pages&lt;/a&gt;.</source>
          <target>字符串使用&lt;a href=&quot;http://en.wikipedia.org/wiki/Category:Mac_OS_character_encodings&quot; target=&quot;_blank&quot;&gt;Mac 代码页&lt;/a&gt;进行编码。</target>
        </trans-unit>
        <trans-unit>
          <source>In this method Sisulizer creates a copy of database for each language. This method is the only localization method that does not require changing of the table structure. Database cloning is available for local file based databases such as Access, SQL Server Compact, and SQLite.</source>
          <target>在这种方法中，Sisulizer 为每种语言创建一个数据库副本。此方法是唯一不需要更改表结构的本地化方法。数据库克隆可用于基于本地文件的数据库，例如 Access、SQL Server Compact 和 SQLite。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows menu options for the selected column.</source>
          <target>显示所选列的菜单选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Default directory</source>
          <target>默认目录</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;WindowsLocalization.htm&quot;&gt;Visual Basic project is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;WindowsLocalization.htm&quot;&gt;Visual Basic 项目的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Removes the selected source from the project.</source>
          <target>从项目中删除选定的源。</target>
        </trans-unit>
        <trans-unit>
          <source>Click + to create a new global definition. Click x to remove the selected global definition. Click &lt;em&gt;Notepad&lt;/em&gt; to rename the selected global definition. To edit an existing global definition select it and modify the rules and/or other options.</source>
          <target>单击 + 以创建新的全局定义。单击 x 以删除选定的全局定义。单击&lt;em&gt;记事本&lt;/em&gt;重命名选定的全局定义。要编辑现有的全局定义，请选择它并修改规则和/或其他选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Removes current machine translations from the selected column.</source>
          <target>从所选列中删除当前机器翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Duplicate rows with translations</source>
          <target>带有翻译的重复行</target>
        </trans-unit>
        <trans-unit>
          <source>When clicking either &lt;a href=&quot;SystemLanguageDialog.htm&quot;&gt;System Language&lt;/a&gt; dialog box, &lt;a href=&quot;SystemCountryDialog.htm&quot;&gt;System Country&lt;/a&gt; dialog box or &lt;a href=&quot;SystemVariantDialog.htm&quot;&gt;System Variant&lt;/a&gt; dialog box will appear. If the selected item is a standard one you can only view the properties. You can not change them. If the selected item is a custom one the dialog can be used to change the properties of the selected language, country or variant.</source>
          <target>单击“&lt;a href=&quot;SystemLanguageDialog.htm&quot;&gt;系统语言”&lt;/a&gt;对话框时，将出现“&lt;a href=&quot;SystemCountryDialog.htm&quot;&gt;系统国家/地区”&lt;/a&gt;对话框或“&lt;a href=&quot;SystemVariantDialog.htm&quot;&gt;系统变体”&lt;/a&gt;对话框。如果所选项目是标准项目，则您只能查看属性。你不能改变它们。如果所选项目是自定义项目，该对话框可用于更改所选语言、国家或变体的属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows a dialog that lets you edit the properties of the selected node.</source>
          <target>显示一个对话框，可让您编辑所选节点的属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the translation settings</source>
          <target>指定翻译设置</target>
        </trans-unit>
        <trans-unit>
          <source>This dialog is shown to select the &lt;a href=&quot;Exchanging.htm&quot;&gt;exchange&lt;/a&gt; method to be used. Select an appropriate method and press OK. Possible methods are:</source>
          <target>显示此对话框以选择要使用的&lt;a href=&quot;Exchanging.htm&quot;&gt;交换&lt;/a&gt;方法。选择适当的方法，然后按 OK。可能的方法有：</target>
        </trans-unit>
        <trans-unit>
          <source>Replace project translations with existing translations in database</source>
          <target>用数据库中的现有翻译替换项目翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Select the original language.</source>
          <target>选择原始语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Project file</source>
          <target>项目文件</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks   if the both the original string and its translation include the same numbers of white spaces in the string start and string end.</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查原始字符串及其翻译在字符串开始和字符串结束中是否包含相同数量的空格。</target>
        </trans-unit>
        <trans-unit>
          <source>Select Directory sheet lets you select the directory where the files will be localized.</source>
          <target>选择目录表让您选择文件将被本地化的目录。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this translation for all similar translations</source>
          <target>将此翻译用于所有类似的翻译</target>
        </trans-unit>
        <trans-unit>
          <source>If you use Assembly or Project localization select a language column in Sisulizer translations sheet and choose Column | Import. Import Wizard appears. Select an existing satellite assembly files matching the language (e.g. de\MySample.resources.dll for German) and finnish the wizard. Sisulizer will import the translations from the satellite assembly file the your project.</source>
          <target>如果您使用汇编或项目本地化，请在 Sisulizer 翻译表中选择一个语言列，然后选择列 |进口。出现导入向导。选择与语言匹配的现有附属程序集文件（例如，德语的 de\MySample.resources.dll）并完成向导。 Sisulizer 将从您的项目的附属程序集文件中导入翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Check this if you want to scan multi line text into separate rows in the project. By default this is unchecked and multi line text is scanned as one entity.</source>
          <target>如果您想将多行文本扫描到项目中的单独行中，请选中此项。默认情况下，这是未选中的，多行文本作为一个实体进行扫描。</target>
        </trans-unit>
        <trans-unit>
          <source>Items that localized resource files contain</source>
          <target>本地化资源文件包含的项目</target>
        </trans-unit>
        <trans-unit>
          <source>You can enter here custom string(s) that you like to exclude. The strings can contain wild cards (* and ?). For example &quot;Number*&quot; will excluded all string rows that start with string &quot;Number&quot;. &quot;*Test*&quot; will excluded all rows that have string &quot;Test&quot; somewhere.</source>
          <target>您可以在此处输入要排除的自定义字符串。字符串可以包含通配符（* 和 ?）。例如，“Number*”将排除所有以字符串“Number”开头的字符串行。 &amp;quot;*Test*&amp;quot; 将排除在某处具有字符串 &amp;quot;Test&amp;quot; 的所有行。</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;lt;TextBlock&amp;gt;This is a &amp;lt;Span&amp;gt;simple&amp;lt;/Span&amp;gt; &amp;lt;Run&amp;gt;sample&amp;lt;/Run&amp;gt;.&amp;lt;/TextBlock&amp;gt;</source>
          <target>&amp;lt;TextBlock&amp;gt;这是一个&amp;lt;Span&amp;gt;简单&amp;lt;/Span&amp;gt; &amp;lt;Run&amp;gt;sample&amp;lt;/Run&amp;gt;。&amp;lt;/TextBlock&amp;gt;</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the default translation status value that Sisulizer sets  in the &lt;a href=&quot;ImportWizard.htm&quot;&gt;Import Wizard&lt;/a&gt;.</source>
          <target>指定 Sisulizer 在&lt;a href=&quot;ImportWizard.htm&quot;&gt;导入向导中&lt;/a&gt;设置的默认翻译状态值。</target>
        </trans-unit>
        <trans-unit>
          <source>Normal messages are shown</source>
          <target>显示正常消息</target>
        </trans-unit>
        <trans-unit>
          <source>You should abort converting and follow the instructions in the table below to create localized files:</source>
          <target>您应该中止转换并按照下表中的说明创建本地化文件：</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the property names that are not localized. You have to include the component and property names together separated by period. Wild cards can be used.</source>
          <target>使用此表指定未本地化的属性名称。您必须将组件和属性名称包含在一起，以句点分隔。可以使用通配符。</target>
        </trans-unit>
        <trans-unit>
          <source>Grammar file</source>
          <target>语法文件</target>
        </trans-unit>
        <trans-unit>
          <source>Totally moved control</source>
          <target>完全移动控制</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer searches for that separator and splits the DRC-name to unit and resource string names (e.g MainFrm and SHelloWorld).</source>
          <target>Sisulizer 搜索该分隔符并将 DRC 名称拆分为单元和资源字符串名称（例如 MainFrm 和 SHelloWorld）。</target>
        </trans-unit>
        <trans-unit>
          <source>Type the project file that you want to merge. Click ... to browse the file.</source>
          <target>键入要合并的项目文件。单击 ... 浏览文件。</target>
        </trans-unit>
        <trans-unit>
          <source>When creating a localized file the user has several other options how to create localized files. One option is to create a single multilingual file that contains each resource in many languages. Another option is to create resource only DLLs that contains no code segments but only resource data. When you deploy the original application with these resource DLLs the application will become multilingual.</source>
          <target>创建本地化文件时，用户还有其他几种创建本地化文件的选项。一种选择是创建一个多语言文件，其中包含多种语言的每个资源。另一种选择是创建不包含代码段而只包含资源数据的仅资源 DLL。当您使用这些资源 DLL 部署原始应用程序时，应用程序将变为多语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to export data to a TMX file.</source>
          <target>使用此表将数据导出到 TMX 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>In some case several HTML tags should be translated as a single entry. For example you might have text data that contains formatting tags. The following tag contains a plain text:</source>
          <target>在某些情况下，应将多个 HTML 标记翻译为单个条目。例如，您可能有包含格式标签的文本数据。以下标签包含纯文本：</target>
        </trans-unit>
        <trans-unit>
          <source>Ignored characters</source>
          <target>忽略的字符</target>
        </trans-unit>
        <trans-unit>
          <source>Select the default original language of the source. Leave this to Select each time if you want to want to use the default language but want to select the original language each item you add a new source.</source>
          <target>选择源的默认原始语言。如果您想使用默认语言但想在添加新源的每个项目中选择原始语言，请每次都选择此选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Because there are several similar files it might be a bit confusing to choose what one to add to Sisulizer project. You can add any one but no more that one. When you add one file Sisulizer will import existing translations from all similar files. When you build items Sisulizer updates each file to contain new translations. Sisulizer creates a new translation file if it does not already exist.</source>
          <target>因为有几个类似的文件，所以选择要添加到 Sisulizer 项目的文件可能有点混乱。您可以添加任何一个，但不能添加更多。当您添加一个文件时，Sisulizer 将从所有类似文件中导入现有翻译。当您构建项目时，Sisulizer 更新每个文件以包含新的翻译。如果不存在，Sisulizer 会创建一个新的翻译文件。</target>
        </trans-unit>
        <trans-unit>
          <source>You can give Marked status to any row or translation. Sisulizer does not use the status but it can be used by user for example to mark that translation is not complete. You can turn row &lt;em&gt;Marked&lt;/em&gt; by choosing Row | Marked. If a row has been marked it has &lt;img src=&quot;Images/Marked.png&quot;&gt; image on flags column on the left side of the sheet. If a translation has been marked there is no visual image.</source>
          <target>您可以为任何行或翻译赋予已标记状态。 Sisulizer 不使用状态，但用户可以使用它来标记翻译未完成等。您可以通过选择 Row | 来转动&lt;em&gt;Marked&lt;/em&gt;行。标记。如果一行已被标记，则它有&lt;img src=&quot;Images/Marked.png&quot;&gt;工作表左侧的标志列上的图像。如果翻译已被标记，则没有视觉图像。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies filter based on other properties</source>
          <target>根据其他属性指定过滤器</target>
        </trans-unit>
        <trans-unit>
          <source>This is a&lt;br&gt;
      simple&lt;br&gt;
    sample</source>
          <target>这是一个&lt;br&gt;简单的&lt;br&gt;样本</target>
        </trans-unit>
        <trans-unit>
          <source>The standard coding is always used, even with .NET 3.5 or older.</source>
          <target>始终使用标准编码，即使是 .NET 3.5 或更早版本。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify the report file name.</source>
          <target>使用此对话框指定报告文件名。</target>
        </trans-unit>
        <trans-unit>
          <source>Marked translations</source>
          <target>标记翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Contains a buildin dialig that shows the current language, shows the available resource languages and lets you select a new language.&lt;br&gt;
      Main function is SelectResourceLocale</source>
          <target>包含一个内置对话框，可显示当前语言、可用资源语言并让您选择新语言。&lt;br&gt;主要功能是 SelectResourceLocale</target>
        </trans-unit>
        <trans-unit>
          <source>This dialog shows the unused items you are about to remove. Press OK to remove the items premanetly from the project. Press Cancel to abort removing.</source>
          <target>此对话框显示您将要删除的未使用项目。按确定从项目中预先删除项目。按取消中止删除。</target>
        </trans-unit>
        <trans-unit>
          <source>Resource string tags</source>
          <target>资源字符串标签</target>
        </trans-unit>
        <trans-unit>
          <source>Choose between file and database source</source>
          <target>在文件和数据库源之间进行选择</target>
        </trans-unit>
        <trans-unit>
          <source>Line feed and carriage return characters are used to mark a new line</source>
          <target>换行符和回车符用于标记新行</target>
        </trans-unit>
        <trans-unit>
          <source>Overlapped controls</source>
          <target>重叠控件</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer scans the following fields:</source>
          <target>Sisulizer 扫描以下字段：</target>
        </trans-unit>
        <trans-unit>
          <source>For example if the project contains English, German and German (Switzerland) and the build language is German (Switzerland) and the default language is English the search order is German (Switzerland) - German - English - original.</source>
          <target>例如，如果项目包含英语、德语和德语（瑞士）并且构建语言是德语（瑞士）并且默认语言是英语，则搜索顺序是德语（瑞士）-德语-英语-原始。</target>
        </trans-unit>
        <trans-unit>
          <source>Select Translation dialog box</source>
          <target>选择翻译对话框</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;lt;data name=&amp;quot;String3&amp;quot; xml:space=&amp;quot;preserve&amp;quot;&amp;gt;
  &amp;lt;value&amp;gt;This is a sample&amp;lt;/value&amp;gt;
  &amp;lt;comment&amp;gt;&lt;span class=&quot;style1&quot;&gt;This is a comment MaxPixels=20&lt;/span&gt;&amp;lt;/comment&amp;gt;
&amp;lt;/data&amp;gt; </source>
          <target>&amp;lt;data name=&amp;quot;String3&amp;quot; xml:space=&amp;quot;preserve&amp;quot;&amp;gt; &amp;lt;value&amp;gt;这是一个示例&amp;lt;/value&amp;gt; &amp;lt;comment&amp;gt;&lt;span class=&quot;style1&quot;&gt;这是一个评论 MaxPixels=20&lt;/span&gt; &amp;lt;/comment&amp;gt; &amp;lt;/data&amp;gt;</target>
        </trans-unit>
        <trans-unit>
          <source>Check &lt;em&gt;Import translations from a file&lt;/em&gt; and press &lt;em&gt;Next&lt;/em&gt; to import translations from a file such as an application file, a project file, a source code file, a resource file, or a data file.</source>
          <target>选中&lt;em&gt;从文件导入翻译&lt;/em&gt;并按&lt;em&gt;下一步&lt;/em&gt;从文件导入翻译，例如应用程序文件、项目文件、源代码文件、资源文件或数据文件。</target>
        </trans-unit>
        <trans-unit>
          <source>If the Available languages list does not contain a language that you want to use, you can to add the language to the System languages list. Choose Tools | General menu and select the &lt;em&gt;Language&lt;/em&gt; sheet to add a new main or sub language.</source>
          <target>如果可用语言列表中没有您要使用的语言，您可以将该语言添加到系统语言列表中。选择工具 |常规菜单并选择&lt;em&gt;语言&lt;/em&gt;表以添加新的主语言或子语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Length in characters</source>
          <target>字符长度</target>
        </trans-unit>
        <trans-unit>
          <source>Sets a custom width for the selected components. To use this option, you must set Horizontal to Enter Value.</source>
          <target>为所选组件设置自定义宽度。要使用此选项，您必须将水平设置为输入值。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;strong&gt;Note!&lt;/strong&gt; It is highly recommended that Sisulizer is used as translation tool. It is several advantages over TMX, Excel and text files such as visual editors, validations, context sensitive import/export and so on.</source>
          <target>&lt;strong&gt;笔记！&lt;/strong&gt;强烈推荐使用 Sisulizer 作为翻译工具。与 TMX、Excel 和文本文件相比，它有几个优点，例如可视化编辑器、验证、上下文敏感的导入/导出等。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the project options, what kind of strings are always excluded, and some validation symbols.</source>
          <target>使用此表指定项目选项、始终排除的字符串类型以及一些验证符号。</target>
        </trans-unit>
        <trans-unit>
          <source>File associations</source>
          <target>文件关联</target>
        </trans-unit>
        <trans-unit>
          <source>When .NET runtime starts an application it looks for a possible satellite assembly file. A satellite assembly file is a resource only assembly file that has .resources.dll extension instead of .exe ir .dll (if the main assembly is a library). Satellite assembly files always locate on a language specific sub directory of the applciation&#x27;s main directory. If application file is Converter.exe then the Japanese satellite assembly file is ja\Converter.resources.dll.</source>
          <target>当 .NET 运行时启动应用程序时，它会查找可能的附属程序集文件。附属程序集文件是仅资源程序集文件，扩展名为 .resources.dll 而不是 .exe ir .dll（如果主程序集是库）。附属程序集文件始终位于应用程序主目录的特定于语言的子目录中。如果应用程序文件是 Converter.exe，那么日语附属程序集文件是 ja\Converter.resources.dll。</target>
        </trans-unit>
        <trans-unit>
          <source>Linux/GNU gettext PO files (.po, .pot)</source>
          <target>Linux/GNU gettext PO 文件（.po、.pot）</target>
        </trans-unit>
        <trans-unit>
          <source>Project Wizard - Windows binary file</source>
          <target>项目向导 - Windows 二进制文件</target>
        </trans-unit>
        <trans-unit>
          <source>Single line feed character (0A or 000A) are used to mark a new line</source>
          <target>单换行符（0A 或 000A）用于标记新行</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer adds the resource items alphabetically to the resource string node. If unchecked the items are added in the same order as they appear in the original file. Only used with .resx resources.</source>
          <target>如果选中 Sisulizer，则按字母顺序将资源项添加到资源字符串节点。如果未选中，项目将按照它们在原始文件中出现的相同顺序添加。仅用于 .resx 资源。</target>
        </trans-unit>
        <trans-unit>
          <source>Write translation comment</source>
          <target>写翻译评论</target>
        </trans-unit>
        <trans-unit>
          <source>Note messages are shown</source>
          <target>显示注释消息</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify additional binary files that are the same as the main file but compiled for different CPU. For example there might be to version of the executable file: one from 32-bit Windows and another for 64-bit Windows. In that case use the 32-bit executable file in the main file of the source and add the 64-bit file to this platform file list.</source>
          <target>使用此表指定与主文件相同但针对不同 CPU 编译的其他二进制文件。例如，可能存在可执行文件的版本：一个来自 32 位 Windows，另一个用于 64 位 Windows。在这种情况下，使用源主文件中的 32 位可执行文件并将 64 位文件添加到此平台文件列表中。</target>
        </trans-unit>
        <trans-unit>
          <source>HTML scripts</source>
          <target>HTML 脚本</target>
        </trans-unit>
        <trans-unit>
          <source>When you import a resource file (.resx) to a .NET assembly file (.exe or .dll) Sisulizer tries to read the full resource name (e.g. namespace + resource name) from the imported resource file (.resx) and options source code file (.cs or .vb). If Sisulizer can not read the full resource name then this item is shown. It contains all the resource name of the assembly file. Select the resource where you want to import the selected resource file.</source>
          <target>当您将资源文件 (.resx) 导入 .NET 程序集文件（.exe 或 .dll）时，Sisulizer 会尝试从导入的资源文件 (.resx) 和选项源中读取完整的资源名称（例如命名空间 + 资源名称）代码文件（.cs 或 .vb）。如果 Sisulizer 无法读取完整的资源名称，则会显示此项目。它包含程序集文件的所有资源名称。选择要将所选资源文件导入到的资源。</target>
        </trans-unit>
        <trans-unit>
          <source>Your translator can visually translate all your projects &lt;a href=&quot;ComponentMapping.htm&quot;&gt;without needing to install any add-on, DLL or runtime&lt;/a&gt;. This means that the translator can visually edits .NET forms even if he or she does not have .NET runtime installed. Translators can modify all resource data including &lt;a href=&quot;FontLocalization.htm&quot;&gt;fonts&lt;/a&gt; and images.</source>
          <target>您的翻译器可以直观地翻译您的所有项目，&lt;a href=&quot;ComponentMapping.htm&quot;&gt;而无需安装任何附加组件、DLL 或运行时&lt;/a&gt;。这意味着即使翻译人员没有安装 .NET 运行时，也可以直观地编辑 .NET 表单。翻译人员可以修改包括&lt;a href=&quot;FontLocalization.htm&quot;&gt;字体&lt;/a&gt;和图像在内的所有资源数据。</target>
        </trans-unit>
        <trans-unit>
          <source>In order to use &lt;a href=&quot;http://www.worldlingo.com/&quot;&gt;WorldLingo&lt;/a&gt; machine translator you need to purchase user account for WorldLingo service. Without a proper user account Sisulizer is using WorldLingo&#x27;s test mode. The test mode translates strings but the translated strings are in random language and not the language is specified. This means that id you are translating from German column you end up getting French, Spanish, Swedish, Dutch, etc translations instead of German translations.</source>
          <target>为了使用&lt;a href=&quot;http://www.worldlingo.com/&quot;&gt;WorldLingo&lt;/a&gt;机器翻译，您需要购买 WorldLingo 服务的用户帐户。没有正确的用户帐户 Sisulizer 正在使用 WorldLingo 的测试模式。测试模式翻译字符串，但翻译的字符串是随机语言，而不是指定语言。这意味着您从德语专栏翻译的 id 最终会得到法语、西班牙语、瑞典语、荷兰语等翻译，而不是德语翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;TmxLocalization.htm&quot;&gt;TMX file is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;TmxLocalization.htm&quot;&gt;TMX 文件的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Skip the row and does not write anything.</source>
          <target>跳过该行并且不写任何内容。</target>
        </trans-unit>
        <trans-unit>
          <source>Translation defect status</source>
          <target>翻译缺陷状态</target>
        </trans-unit>
        <trans-unit>
          <source>Add white space to the list</source>
          <target>将空白添加到列表</target>
        </trans-unit>
        <trans-unit>
          <source>If you use PFX key follow these &lt;a href=&quot;PfxSigning.htm&quot;&gt;instructions&lt;/a&gt;.</source>
          <target>如果您使用 PFX 键，请遵循这些&lt;a href=&quot;PfxSigning.htm&quot;&gt;说明&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;strong&gt;Note!&lt;/strong&gt; If the list is empty no files will be copied. If you want to copy all files, check &lt;em&gt;Copy all files&lt;/em&gt; check box.</source>
          <target>&lt;strong&gt;笔记！&lt;/strong&gt;如果列表为空，则不会复制任何文件。如果要复制所有文件，请选中&lt;em&gt;复制所有文件&lt;/em&gt;复选框。</target>
        </trans-unit>
        <trans-unit>
          <source>If the width of translated text is much longer than original the difference will be marked by percentages.</source>
          <target>如果翻译文本的宽度比原始文本长得多，则差异将以百分比表示。</target>
        </trans-unit>
        <trans-unit>
          <source>MFC&#x27;s resource DLLs</source>
          <target>MFC 的资源 DLL</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure how the HTML editor works.</source>
          <target>使用此对话框配置 HTML 编辑器的工作方式。</target>
        </trans-unit>
        <trans-unit>
          <source>Clear all new status of every row in the project.</source>
          <target>清除项目中每一行的所有新状态。</target>
        </trans-unit>
        <trans-unit>
          <source>BLOB fields can contain any data</source>
          <target>BLOB 字段可以包含任何数据</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to edit &lt;a href=&quot;CombinedStrings.htm&quot;&gt;combined string expression&lt;/a&gt;.</source>
          <target>使用此对话框编辑&lt;a href=&quot;CombinedStrings.htm&quot;&gt;组合字符串表达式&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>If original XML files contains hex or integer encoding that do not belong to the above predefined entities Sisulizer does never use any encoding when writing characters to the localized XML file. Plain character is written instead.</source>
          <target>如果原始 XML 文件包含不属于上述预定义实体的十六进制或整数编码，Sisulizer 在将字符写入本地化 XML 文件时从不使用任何编码。改为写入普通字符。</target>
        </trans-unit>
        <trans-unit>
          <source>Visual Basic executable</source>
          <target>Visual Basic 可执行文件</target>
        </trans-unit>
        <trans-unit>
          <source>If checked only string values are imported. Layout, color, image, etc. data is ignored.</source>
          <target>如果选中，则仅导入字符串值。布局、颜色、图像等数据被忽略。</target>
        </trans-unit>
        <trans-unit>
          <source>Translates duplicated items in the project.</source>
          <target>翻译项​​目中的重复项。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can access and localize NexusDB databases</source>
          <target>Sisulizer 可以访问和本地化 NexusDB 数据库</target>
        </trans-unit>
        <trans-unit>
          <source>If checked row status of the item is shown with a dot in the same way as corresponding row status in the translation grid:</source>
          <target>如果项目的选中行状态以与翻译网格中相应行状态相同的方式显示为一个点：</target>
        </trans-unit>
        <trans-unit>
          <source>The user has changed property value from the default value</source>
          <target>用户已更改默认值的属性值</target>
        </trans-unit>
        <trans-unit>
          <source>Contains a list of disabled engines. If engine is disabled it is not used for this source. To disable an engine select an enabled engine in the right side list and press the left arrow button or drag the engine to the left side list.</source>
          <target>包含禁用引擎的列表。如果引擎被禁用，则不用于此源。要禁用引擎，请在右侧列表中选择一个已启用的引擎，然后按左箭头按钮或将引擎拖到左侧列表中。</target>
        </trans-unit>
        <trans-unit>
          <source>Data format can also be fixed.</source>
          <target>数据格式也可以固定。</target>
        </trans-unit>
        <trans-unit>
          <source>Add &lt;a href=&quot;ProjectWizardLanguagesFrame.htm&quot;&gt;languages&lt;/a&gt; to the project</source>
          <target>向项目添加&lt;a href=&quot;ProjectWizardLanguagesFrame.htm&quot;&gt;语言&lt;/a&gt;</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure how the form editor works.</source>
          <target>使用此对话框配置表单编辑器的工作方式。</target>
        </trans-unit>
        <trans-unit>
          <source>Copy all resources</source>
          <target>复制所有资源</target>
        </trans-unit>
        <trans-unit>
          <source>System languages</source>
          <target>系统语言</target>
        </trans-unit>
        <trans-unit>
          <source>Windows binary file compiled by Visual Basic 6</source>
          <target>Visual Basic 6 编译的 Windows 二进制文件</target>
        </trans-unit>
        <trans-unit>
          <source>Do not use &lt;em&gt;Do not tranlate&lt;/em&gt; state when filtering rows.</source>
          <target>过滤行时不要使用&lt;em&gt;不翻译&lt;/em&gt;状态。</target>
        </trans-unit>
        <trans-unit>
          <source>For example the following line contains SQL statement and it should not be localized. To disable its localization an exclude tag has been added:</source>
          <target>例如，以下行包含 SQL 语句，不应对其进行本地化。为了禁用它的本地化，添加了一个 exclude 标签：</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be a &lt;a href=&quot;XmlLocalization.htm&quot;&gt;XML file&lt;/a&gt; (e.g. C:\Samples\Sample.xml).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是&lt;a href=&quot;XmlLocalization.htm&quot;&gt;XML 文件&lt;/a&gt;（例如 C:\Samples\Sample.xml）。</target>
        </trans-unit>
        <trans-unit>
          <source>Standard resources</source>
          <target>标准资源</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the country. This lets you specify a country dependent language. &amp;#147;Neutral&amp;#148; means that the language is country independent. For example if the language is &amp;#147;German&amp;#148;, the sub-language combo-box contains &amp;#147;Neutral&amp;#148;, &amp;#147;Austria&amp;#148;, &amp;#147;Germany&amp;#148;, &amp;#147;Liechtenstein&amp;#148;, &amp;#147;Luxembourg&amp;#148;, and &amp;#147;Switzerland&amp;#148;.</source>
          <target>指定国家。这使您可以指定国家相关语言。 “中立”意味着语言是独立于国家的。例如，如果语言是“德语”，则子语言组合框包含“中性”、“奥地利”、“德国”、“列支敦士登”、“卢森堡”和“瑞士”。</target>
        </trans-unit>
        <trans-unit>
          <source>Stretch controls automatically by text</source>
          <target>按文本自动拉伸控件</target>
        </trans-unit>
        <trans-unit>
          <source>ISO 15924 script code</source>
          <target>ISO 15924 脚本代码</target>
        </trans-unit>
        <trans-unit>
          <source>Project | Scan for Changes</source>
          <target>项目 |扫描更改</target>
        </trans-unit>
        <trans-unit>
          <source>DRC file out of date</source>
          <target>DRC 文件已过期</target>
        </trans-unit>
        <trans-unit>
          <source>msgid &amp;quot;&amp;quot;
msgstr &amp;quot;&amp;quot;
&amp;quot;Project-Id-Version: PACKAGE VERSION\n&amp;quot;
&amp;quot;Report-Msgid-Bugs-To: \n&amp;quot;
&amp;quot;POT-Creation-Date: 2005-05-07 10:20+0200\n&amp;quot;
&amp;quot;PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n&amp;quot;
&lt;strong&gt;&amp;quot;Last-Translator: FULL NAME &amp;lt;EMAIL@ADDRESS&amp;gt;\n&amp;quot;&lt;/strong&gt;
&lt;strong&gt;&amp;quot;Language-Team: LANGUAGE &amp;lt;LL@li.org&amp;gt;\n&amp;quot;&lt;/strong&gt;
&amp;quot;MIME-Version: 1.0\n&amp;quot;
&lt;strong&gt;&amp;quot;Content-Type: text/plain; charset=CHARSET\n&amp;quot;&lt;/strong&gt;
&lt;strong&gt;&amp;quot;Content-Transfer-Encoding: 8bit\n&amp;quot;&lt;/strong&gt;</source>
          <target>msgid &amp;quot;&amp;quot; msgstr &amp;quot;&amp;quot; &amp;quot;Project-Id-Version: PACKAGE VERSION\n&amp;quot; &amp;quot;Report-Msgid-Bugs-To: \n&amp;quot; &amp;quot;POT-Creation-Date: 2005-05-07 10:20+0200\n&amp;quot; &amp;quot;PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n&amp;quot; &lt;strong&gt;&amp;quot;Last-Translator: FULL NAME &amp;lt;EMAIL@ADDRESS&amp;gt;\n&amp;quot;&lt;/strong&gt; &lt;strong&gt;&amp;quot;Language-Team: LANGUAGE &amp;lt;LL@li.org&amp;gt;\n &amp;quot;&lt;/strong&gt; &amp;quot;MIME-Version: 1.0\n&amp;quot; &lt;strong&gt;&amp;quot;Content-Type: text/plain; charset=CHARSET\n&amp;quot;&lt;/strong&gt; &lt;strong&gt;&amp;quot;Content-Transfer-Encoding: 8bit\n&amp;quot;&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit>
          <source>Line feed character  (LF, 0x0A)</source>
          <target>换行符 (LF, 0x0A)</target>
        </trans-unit>
        <trans-unit>
          <source>The structure of a binary file is:</source>
          <target>二进制文件的结构是：</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the code page that is used. This is visible only of text format is Ansi.</source>
          <target>指定使用的代码页。这仅在文本格式为 Ansi 时可见。</target>
        </trans-unit>
        <trans-unit>
          <source>If you want to change the &lt;a href=&quot;Licenses.htm&quot;&gt;edition&lt;/a&gt; that you are &lt;a href=&quot;Evaluation.htm&quot;&gt;evaluating&lt;/a&gt; select a new edition in &lt;em&gt;Select Sisulizer edition&lt;/em&gt; combo box. Click &lt;em&gt;Evaluate&lt;/em&gt; to continue evaluation.  Click &lt;em&gt;Quit&lt;/em&gt; to close Sisulizer. This option is not available after your 30 days evaluation period has been expired.</source>
          <target>如果您想更改您正在&lt;a href=&quot;Evaluation.htm&quot;&gt;评估&lt;/a&gt;的&lt;a href=&quot;Licenses.htm&quot;&gt;版本&lt;/a&gt;，请在&lt;em&gt;选择 Sisulizer 版本&lt;/em&gt;组合框中选择一个新版本。单击&lt;em&gt;评估&lt;/em&gt;以继续评估。单击&lt;em&gt;退出&lt;/em&gt;以关闭 Sisulizer。在您的 30 天评估期到期后，此选项将不可用。</target>
        </trans-unit>
        <trans-unit>
          <source>Blue dot</source>
          <target>蓝点</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure validation pane settings.</source>
          <target>使用此对话框配置验证窗格设置。</target>
        </trans-unit>
        <trans-unit>
          <source>Sets the version options. Possible values are:</source>
          <target>设置版本选项。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Both read only and editable rows are visible.</source>
          <target>只读和可编辑行都是可见的。</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be a  &lt;a href=&quot;QtLocalization.htm&quot;&gt;Qt translation file&lt;/a&gt; (e.g. C:\Samples\Sample_de.ts). Usually you have a set of similar files, one for each language. For example you might have Sample_de.ts (German), Sample_fr.ts (French) and Samples_ja.ts (Japanese). Select one of those.</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是&lt;a href=&quot;QtLocalization.htm&quot;&gt;Qt 翻译文件&lt;/a&gt;（例如 C:\Samples\Sample_de.ts）。通常您有一组类似的文件，每种语言一个。例如，您可能有 Sample_de.ts（德语）、Sample_fr.ts（法语）和 Samples_ja.ts（日语）。选择其中之一。</target>
        </trans-unit>
        <trans-unit>
          <source>XML Localization Interchange File Format file (.xlf)</source>
          <target>XML 本地化交换文件格式文件 (.xlf)</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to customize how the selected toolbar looks like.</source>
          <target>使用此对话框自定义所选工具栏的外观。</target>
        </trans-unit>
        <trans-unit>
          <source>In DRC-file the &amp;quot;_&amp;quot;-character is a separator between unit and resource string names. For example:</source>
          <target>在 DRC 文件中，“_”字符是单元和资源字符串名称之间的分隔符。例如：</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer localizes server side scripts such as JSP, ASP and PHP codes.&lt;br&gt;This is available only on dynamic web pages (e.g. .jsp, .asp, .php).</source>
          <target>如果选中 Sisulizer 本地化服务器端脚本，例如 JSP、ASP 和 PHP 代码。&lt;br&gt;这仅适用于动态网页（例如 .jsp、.asp、.php）。</target>
        </trans-unit>
        <trans-unit>
          <source>Unnamed component</source>
          <target>未命名的组件</target>
        </trans-unit>
        <trans-unit>
          <source>Prepare table structure for localization</source>
          <target>为本地化准备表结构</target>
        </trans-unit>
        <trans-unit>
          <source>Scan only forms from RcData</source>
          <target>仅扫描来自 RcData 的表单</target>
        </trans-unit>
        <trans-unit>
          <source>Use whatever viewer that is set default XAML file viewer in your system.</source>
          <target>使用系统中设置为默认 XAML 文件查看器的任何查看器。</target>
        </trans-unit>
        <trans-unit>
          <source>Through a JAD file</source>
          <target>通过 JAD 文件</target>
        </trans-unit>
        <trans-unit>
          <source>If checked context values are written to the file.</source>
          <target>如果检查的上下文值写入文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Localized table</source>
          <target>本地化表</target>
        </trans-unit>
        <trans-unit>
          <source>You have two or more resource string ids with the same name in the same unit. All ids should be unique within the unit. For example:</source>
          <target>您在同一单元中有两个或多个同名的资源字符串 ID。所有 id 在单元内都应该是唯一的。例如：</target>
        </trans-unit>
        <trans-unit>
          <source>First line&lt;strong&gt;\r\n&lt;/strong&gt;Second line&amp;lt;tab&amp;gt;Ensimm&amp;auml;inen rivi&lt;strong&gt;\r\n&lt;/strong&gt;Toinen rivi</source>
          <target>第一行&lt;strong&gt;\r\n&lt;/strong&gt;第二行&amp;lt;tab&amp;gt; 第一行&lt;strong&gt;\r\n&lt;/strong&gt;第二行</target>
        </trans-unit>
        <trans-unit>
          <source>Use the Options sheet of the .NET source to enter assembly linker parameters.</source>
          <target>使用 .NET 源的选项表输入程序集链接器参数。</target>
        </trans-unit>
        <trans-unit>
          <source>You have not given a &lt;a href=&quot;DrcFile.htm&quot;&gt;DRC&lt;/a&gt; file for Delphi source. Without it the resourcestring IDs are not stable.</source>
          <target>您尚未提供 Delphi 源代码的&lt;a href=&quot;DrcFile.htm&quot;&gt;DRC&lt;/a&gt;文件。没有它，资源字符串 ID 不稳定。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the column structure of the data. It can contain any number of following kinds of columns:</source>
          <target>指定数据的列结构。它可以包含任意数量的以下类型的列：</target>
        </trans-unit>
        <trans-unit>
          <source>Country depend language</source>
          <target>国家依赖语言</target>
        </trans-unit>
        <trans-unit>
          <source>This is &#x27;single&#x27; and &amp;quot;double&amp;quot; quote sample</source>
          <target>这是“单”和“双”引号样本</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the XML data options.</source>
          <target>使用此表指定 XML 数据选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer&#x27;s HTMLHelp directory contains HTML Help samples.</source>
          <target>Sisulizer 的 HTMLHelp 目录包含 HTML 帮助示例。</target>
        </trans-unit>
        <trans-unit>
          <source>The resource name that is used when adding embedded resources to the output file. Default is SISULIZER.</source>
          <target>将嵌入资源添加到输出文件时使用的资源名称。默认值为 SISULIZER。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the comments from original property files are copied to the localized property files. If unchecked comments are not written to the localization property files.</source>
          <target>如果选中，则原始属性文件中的注释将复制到本地化的属性文件中。如果未选中的注释未写入本地化属性文件。</target>
        </trans-unit>
        <trans-unit>
          <source>*) Firebird and Interbase are mutually exclusive. If you already have one in use Sisulizer disables the other. For example if you have a Firebird translation memory Sisulizer can not add an Interbase translation memory or localize Interbase database.</source>
          <target>*) Firebird 和 Interbase 是互斥的。如果您已经使用了一个，Sisulizer 将禁用另一个。例如，如果您有 Firebird 翻译记忆库，Sisulizer 无法添加 Interbase 翻译记忆库或本地化 Interbase 数据库。</target>
        </trans-unit>
        <trans-unit>
          <source>Source code localization is supposed to be used only with the platform that do not use resource files. Such platforms are J2ME applications and embedded system applications. Source code parser is also used together with other parsers such as XML and HTML to localize scripts that are embedded into these files.</source>
          <target>源代码本地化应该只用于不使用资源文件的平台。这样的平台是 J2ME 应用程序和嵌入式系统应用程序。源代码解析器还与其他解析器（例如 XML 和 HTML）一起使用，以本地化嵌入到这些文件中的脚本。</target>
        </trans-unit>
        <trans-unit>
          <source>A Java source code file. If you select this Sisulizer either localizes the source code file making localized copies from the original file, or imports translations from the file.</source>
          <target>一个 Java 源代码文件。如果您选择此 Sisulizer，要么本地化源代码文件，从原始文件制作本地化副本，要么从文件导入翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>File in the project: MyApplication.dll&lt;br&gt;Import file: &lt;strong&gt;de&lt;/strong&gt;\MyApplications.&lt;strong&gt;resources.dll&lt;/strong&gt;</source>
          <target>项目中的文件：MyApplication.dll&lt;br&gt;导入文件： &lt;strong&gt;de&lt;/strong&gt; \MyApplications。&lt;strong&gt;资源文件&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit>
          <source>Source code file (.c, .cpp, .pas, .vb, .java, etc)</source>
          <target>源代码文件（.c、.cpp、.pas、.vb、.java 等）</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the existing translation will be replaced with the values in the original file when scanning the file. Possible options are:</source>
          <target>指定扫描文件时，现有翻译将替换为原始文件中的值。可能的选项是：</target>
        </trans-unit>
        <trans-unit>
          <source>Borland/CogeGear Developer Studio project file (.bdsproj)</source>
          <target>Borland/CogeGear Developer Studio 项目文件 (.bdsproj)</target>
        </trans-unit>
        <trans-unit>
          <source>Original language is the language that is used in the original files (e.g. those files that you localized). In most cases the original language is also the source language where the translator translates from. For example if your original files are in English and you want to localize to German and Japanese you need to have a translator that can translate from English to German and another translator that can translate from English to Japanese. Usually English is the best choice for original language because it is likely that you can find much more translator from English to your target language as for example from French to your target languages. By setting alternative original language to some other than none Sisulizer does not show the original strings in the original column but translated string in the selected language. This makes it possible to change the translator language pair suitable for your translator.</source>
          <target>原始语言是原始文件（例如您本地化的文件）中使用的语言。在大多数情况下，原始语言也是译者翻译的源语言。例如，如果您的原始文件是英语，而您想本地化为德语和日语，则您需要有一个可以从英语翻译成德语的翻译器和另一个可以从英语翻译成日语的翻译器。通常英语是原始语言的最佳选择，因为您可能会找到更多从英语到目标语言的翻译，例如从法语到目标语言。通过将替代原始语言设置为无以外的其他语言，Sisulizer 不会在原始列中显示原始字符串，而是以所选语言显示翻译后的字符串。这使得更改适合您的翻译器的翻译器语言对成为可能。</target>
        </trans-unit>
        <trans-unit>
          <source>You can also import existing translations into existing project (e.g. after you have created the project). Use &lt;a href=&quot;FileImportMenu.htm&quot;&gt;File | Import&lt;/a&gt; or Column | Import menus to start &lt;a href=&quot;ImportWizard.htm&quot;&gt;Import Wizard&lt;/a&gt; that lets you select the file you want to import.</source>
          <target>您还可以将现有翻译导入现有项目（例如，在您创建项目之后）。使用&lt;a href=&quot;FileImportMenu.htm&quot;&gt;文件 |导入&lt;/a&gt;或列 |用于启动&lt;a href=&quot;ImportWizard.htm&quot;&gt;导入向导的&lt;/a&gt;导入菜单，可让您选择要导入的文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Imports translations from existing localized files. Use this if you modify the localized files using some other tool. For example in some cases the developers might use Visual Studio to modify the localized resource files. In that case you can either manually import file by file or choose this command to import translations from all localized files.</source>
          <target>从现有的本地化文件导入翻译。如果您使用其他工具修改本地化文件，请使用此选项。例如，在某些情况下，开发人员可能会使用 Visual Studio 来修改本地化的资源文件。在这种情况下，您可以手动逐个文件导入，也可以选择此命令从所有本地化文件导入翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Whenever you see a misspelled word, right click it and choose Add &amp;quot;word&amp;quot; to Dictionary to add the word to the custom dictionary, or Ignore &amp;quot;word&amp;quot; to ignore it on this location, or Ignore All &amp;quot;word&amp;quot; to ignore all instances of the word.</source>
          <target>每当您看到拼写错误的单词时，右键单击它并选择将“单词”添加到词典以将该单词添加到自定义词典中，或忽略“单词”以在此位置忽略它，或忽略所有“单词”以忽略所有实例这个单词。</target>
        </trans-unit>
        <trans-unit>
          <source>The list view in the middle shows the files that Sisulizer can localize. Select those files that you want to localize or import.</source>
          <target>中间的列表视图显示了 Sisulizer 可以本地化的文件。选择要本地化或导入的文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Remove from the list</source>
          <target>从列表中删除</target>
        </trans-unit>
        <trans-unit>
          <source>Multilizer project file</source>
          <target>乘法器项目文件</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify the login parameters.</source>
          <target>使用此对话框指定登录参数。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows a dialog box that lets you edit the properties of a platform.</source>
          <target>显示一个对话框，可让您编辑平台的属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Creates a validation list report that contains every validation errors.</source>
          <target>创建包含每个验证错误的验证列表报告。</target>
        </trans-unit>
        <trans-unit>
          <source>Import data to project</source>
          <target>导入数据到项目</target>
        </trans-unit>
        <trans-unit>
          <source>Selects the next page in the page control.</source>
          <target>在页面控件中选择下一页。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;strong&gt;Note!&lt;/strong&gt; Unchecking this does not completely remove the source code data from the project file. Even if you uncheck this source code can be extracted from the project file even it is not trivial. If you want to be 100% sure that your source code does not leak do not send Sisulizer project files (.slp) to translators but use TMX or Excel as exchange format.</source>
          <target>&lt;strong&gt;笔记！&lt;/strong&gt;取消选中此项不会从项目文件中完全删除源代码数据。即使取消选中此源代码也可以从项目文件中提取，即使它不是微不足道的。如果您想 100% 确保源代码不会泄露，请不要将 Sisulizer 项目文件 (.slp) 发送给翻译人员，而是使用 TMX 或 Excel 作为交换格式。</target>
        </trans-unit>
        <trans-unit>
          <source>Sometimes it is necessary to differentiate language based on some other way but country. For example the are might be profession based slang of a language. For example Engineering English or Medical English. In these cases a language can have a variant or variants. Also a country depend language can have variants.</source>
          <target>有时有必要根据国家以外的其他方式区分语言。例如， are 可能是一种语言的基于职业的俚语。例如工程英语或医学英语。在这些情况下，语言可以有一个或多个变体。一个国家依赖的语言也可以有变体。</target>
        </trans-unit>
        <trans-unit>
          <source>If this is checked, the children outside of their parent client are will not be shown.</source>
          <target>如果选中此项，则不会显示其父客户端之外的子项。</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;lt;!ENTITY sportname &amp;quot;Downhill skiing&amp;quot;&amp;gt;</source>
          <target>&amp;lt;!ENTITY sportname &amp;quot;速降滑雪&amp;quot;&amp;gt;</target>
        </trans-unit>
        <trans-unit>
          <source>String size in byte following an UTF-8 string</source>
          <target>UTF-8 字符串后的字符串大小（以字节为单位）</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer compiles the main assembly file before building localized files if the main assembly files does not exist.</source>
          <target>如果选中 Sisulizer，则在主汇编文件不存在的情况下，在构建本地化文件之前编译主汇编文件。</target>
        </trans-unit>
        <trans-unit>
          <source>This sheets contains information about installed .NET runtimes and SDKs.</source>
          <target>此表包含有关已安装的 .NET 运行时和 SDK 的信息。</target>
        </trans-unit>
        <trans-unit>
          <source>The options for Horizontal or Vertical alignment are:</source>
          <target>水平或垂直对齐的选项是：</target>
        </trans-unit>
        <trans-unit>
          <source>private void Form1_Shown(object sender, EventArgs e)
{
  webBrowser1.Url = new Uri(&amp;quot;http://&amp;quot; + Properties.Resources.Url);
}</source>
          <target>private void Form1_Shown(object sender, EventArgs e) { webBrowser1.Url = new Uri(&amp;quot;http://&amp;quot; + Properties.Resources.Url); }</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer contains most 3rd party components pre mapped so you do not have to map them. However if you use some rare or new 3rd party component you have to map them. You can also contact Sisulizer&#x27;s support to ask us to pre map the component.</source>
          <target>Sisulizer 包含大多数预先映射的第 3 方组件，因此您不必映射它们。但是，如果您使用一些稀有或新的 3rd 方组件，则必须映射它们。您也可以联系 Sisulizer 的支持，要求我们预先映射组件。</target>
        </trans-unit>
        <trans-unit>
          <source>Project Wizard - Text file</source>
          <target>项目向导 - 文本文件</target>
        </trans-unit>
        <trans-unit>
          <source>Row statuses</source>
          <target>行状态</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify how to localize the script elements in the HTML file.</source>
          <target>使用此表指定如何本地化 HTML 文件中的脚本元素。</target>
        </trans-unit>
        <trans-unit>
          <source>Polar spell checker</source>
          <target>极地拼写检查器</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to configure text format rules. Sisulizer can localize and import data from various text based files. In order to properly scan the text file you need to specify the format. It is done by defining text rules. It is possible to specify the rules case by case but if you need to constantly work with certain file type you can define the set of rules and give it a name. Finally you can attach the rules to a file extension.</source>
          <target>使用此表配置文本格式规则。 Sisulizer 可以从各种基于文本的文件中本地化和导入数据。为了正确扫描文本文件，您需要指定格式。它是通过定义文本规则来完成的。可以逐个指定规则，但如果您需要经常使用某些文件类型，您可以定义规则集并为其命名。最后，您可以将规则附加到文件扩展名。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;strong&gt;Note!&lt;/strong&gt; Runtime language change works only if you use Windows Forms. It does not support WPF.</source>
          <target>&lt;strong&gt;笔记！&lt;/strong&gt;仅当您使用 Windows 窗体时，运行时语言更改才有效。它不支持 WPF。</target>
        </trans-unit>
        <trans-unit>
          <source>When the resource compiler compiles the above resource it gives the string id. The id is an integer number 101. This is stored to the resource data of EXE file with the actually string. When Sisulizer scans the resource data it gives the string id that is 101. Unfortunately this id does not tell much about the string and its context. If you give the resource id file Sisulizer uses the symbolic name of the id (IDS_ABOUTBOX ) as context. This gives more information to the translator than plain number of 101 would give.</source>
          <target>当资源编译器编译上述资源时，它会给出字符串 id。 id是一个整数101。这个是和实际字符串一起存储到EXE文件的资源数据中的。当 Sisulizer 扫描资源数据时，它给出的字符串 id 是 101。不幸的是，这个 id 并没有告诉我们很多关于字符串及其上下文的信息。如果您提供资源 id 文件，Sisulizer 使用 id 的符号名称 (IDS_ABOUTBOX) 作为上下文。这比简单的 101 数字给翻译者提供了更多的信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Missing question</source>
          <target>缺少问题</target>
        </trans-unit>
        <trans-unit>
          <source>Context attributes are XML attributes that contain unique ids. If your file does not contain such attributes you can add them. Sisulizer can use the value of that attribute as the context value of the element. This makes it possible to modify the file (e.g. change the order of the elements in the XML file) without changing the context data. We can add id attributes to sport elements.</source>
          <target>上下文属性是包含唯一 ID 的 XML 属性。如果您的文件不包含此类属性，您可以添加它们。 Sisulizer 可以使用该属性的值作为元素的上下文值。这使得可以在不更改上下文数据的情况下修改文件（例如，更改 XML 文件中元素的顺序）。我们可以为运动元素添加 id 属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Enter the alias of the key.</source>
          <target>输入密钥的别名。</target>
        </trans-unit>
        <trans-unit>
          <source>Icon size</source>
          <target>图标大小</target>
        </trans-unit>
        <trans-unit>
          <source>You can exclude or include any data type by using the &lt;a href=&quot;SourceDialogExcludedTypesSheet.htm&quot;&gt;Excluded types sheet&lt;/a&gt; of source property dialog. Right click the source file in the project tree and choose Properties. Select &lt;a href=&quot;SourceDialogExcludedTypesSheet.htm&quot;&gt;Excluded types sheet&lt;/a&gt;. Uncheck those resource types that you want to localize.</source>
          <target>您可以使用源属性对话框的&lt;a href=&quot;SourceDialogExcludedTypesSheet.htm&quot;&gt;排除类型表&lt;/a&gt;排除或包含任何数据类型。右键单击项目树中的源文件并选择“属性”。选择&lt;a href=&quot;SourceDialogExcludedTypesSheet.htm&quot;&gt;排除类型表&lt;/a&gt;。取消选中要本地化的资源类型。</target>
        </trans-unit>
        <trans-unit>
          <source>Import from project file</source>
          <target>从项目文件导入</target>
        </trans-unit>
        <trans-unit>
          <source>Less than original</source>
          <target>低于原版</target>
        </trans-unit>
        <trans-unit>
          <source>Both user interface and translations files (.ui + .ts)</source>
          <target>用户界面和翻译文件 (.ui + .ts)</target>
        </trans-unit>
        <trans-unit>
          <source>Localize a file or files</source>
          <target>本地化一个或多个文件</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the data of the selected item in a binary view.</source>
          <target>以二进制视图显示所选项目的数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Run settings</source>
          <target>运行设置</target>
        </trans-unit>
        <trans-unit>
          <source>Item has been translated but should be reviewed.</source>
          <target>项目已翻译，但应进行审核。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked translation defect comments are written to the file.</source>
          <target>如果检查的翻译缺陷注释被写入文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the &lt;a href=&quot;PoLocalization.htm&quot;&gt;PO file&lt;/a&gt; options.</source>
          <target>使用此表指定&lt;a href=&quot;PoLocalization.htm&quot;&gt;PO 文件&lt;/a&gt;选项。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer deletes the created .resources files after the build process.</source>
          <target>如果选中 Sisulizer 会在构建过程后删除创建的 .resources 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Serbian&lt;/em&gt; also uses two scripts: Cyrillic and Latin. Unlike Chinese both scripts are used on every country using Serbian language. This is why a culture code with only language and country (e.g. sr-RS) is not enough. It is not unique but needs a script part (e.g. sr-Cyrl-RS).</source>
          <target>&lt;em&gt;塞尔维亚语&lt;/em&gt;还使用两种文字：西里尔文和拉丁文。与中文不同，这两种文字都在使用塞尔维亚语的每个国家/地区使用。这就是为什么只有语言和国家（例如 sr-RS）的文化代码是不够的。它不是唯一的，但需要一个脚本部分（例如 sr-Cyrl-RS）。</target>
        </trans-unit>
        <trans-unit>
          <source>System code page and CHM compilation</source>
          <target>系统代码页和 CHM 编译</target>
        </trans-unit>
        <trans-unit>
          <source>Why does my localized CHM window show the title &quot;HTML Help&quot; instead of my title?</source>
          <target>为什么我的本地化 CHM 窗口显示标题“HTML 帮助”而不是我的标题？</target>
        </trans-unit>
        <trans-unit>
          <source>When the user want to add a new translation engine &lt;a href=&quot;NewTranslationEngineDialog.htm&quot;&gt;New Translation Engine dialog box&lt;/a&gt; is show to the user to let him or her select the translation engine type and to configure it.</source>
          <target>当用户想要添加新的翻译引擎时，会向用户显示“&lt;a href=&quot;NewTranslationEngineDialog.htm&quot;&gt;新建翻译引擎”对话框&lt;/a&gt;，让他或她选择翻译引擎类型并对其进行配置。</target>
        </trans-unit>
        <trans-unit>
          <source>For example the following stored procedure returns the next available row id.</source>
          <target>例如，以下存储过程返回下一个可用的行 ID。</target>
        </trans-unit>
        <trans-unit>
          <source>Programming language</source>
          <target>编程语言</target>
        </trans-unit>
        <trans-unit>
          <source>In addition of normal hard drive installation you can install Sisulizer on a removable drive, on a network drive, on a USB stick or even on DVD/CD disk. You can even install multiple copies of Sisulizer on a single computer.</source>
          <target>除了普通的硬盘驱动器安装之外，您还可以在可移动驱动器、网络驱动器、USB 记忆棒甚至 DVD/CD 磁盘上安装 Sisulizer。您甚至可以在一台计算机上安装多份 Sisulizer。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked spell checking is used for this language.</source>
          <target>如果检查拼写检查用于此语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the name of the file to be exported (e.g. C:\MyFiles\Export.txt).</source>
          <target>指定要导出的文件的名称（例如 C:\MyFiles\Export.txt）。</target>
        </trans-unit>
        <trans-unit>
          <source>Check project file version</source>
          <target>检查项目文件版本</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer translation memory file (.stm) is an XML based file that contains back-up data of the internal translation memory.</source>
          <target>Sisulizer 翻译记忆库文件 (.stm) 是一个基于 XML 的文件，包含内部翻译记忆库的备份数据。</target>
        </trans-unit>
        <trans-unit>
          <source>In order to use this you need to &lt;a href=&quot;InstallHunspell.htm&quot;&gt;download dictionary files&lt;/a&gt; for your languages.</source>
          <target>为了使用它，您需要为您的语言&lt;a href=&quot;InstallHunspell.htm&quot;&gt;下载字典文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>JBuilder project file</source>
          <target>JBuilder 项目文件</target>
        </trans-unit>
        <trans-unit>
          <source>This sheet specifies the strings that have been excluded from all projects by the native value.</source>
          <target>此表指定已被本地值从所有项目中排除的字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked and if Sisulizer will set Font.Charset property on localized forms, Vietnamese 163 is used.</source>
          <target>如果选中并且 Sisulizer 将在本地化表单上设置 Font.Charset 属性，则使用越南语 163。</target>
        </trans-unit>
        <trans-unit>
          <source>UTF-8 string</source>
          <target>UTF-8 字符串</target>
        </trans-unit>
        <trans-unit>
          <source>.NET 4.0 helper library</source>
          <target>.NET 4.0 帮助程序库</target>
        </trans-unit>
        <trans-unit>
          <source>Form editor shows visually the selected form or dialog. The editor has two purposes: making the translation easier by showing the form visually and making it possible to change the layout of the localized form.</source>
          <target>表单编辑器直观地显示选定的表单或对话框。编辑器有两个目的：通过直观地显示表单使翻译更容易，并且可以更改本地化表单的布局。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer remembers the last directory and uses that on the next time.&lt;br&gt;The current value is shown in the radio box below. You can change the value by pressing ... on the right side of the radio box.</source>
          <target>Sisulizer 会记住上一个目录并在下次使用它。&lt;br&gt;当前值显示在下面的单选框中。您可以通过按单选框右侧的 ... 来更改值。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the code page of localized language is used drawing the dialog and its elements. Otherwise the default code page is used.</source>
          <target>如果选中，则使用本地化语言的代码页来绘制对话框及其元素。否则使用默认代码页。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer shows &lt;em&gt;How to Translate&lt;/em&gt; dialog after you have created a new project.</source>
          <target>如果选中 Sisulizer &lt;em&gt;，&lt;/em&gt;则会在您创建新项目后显示“&lt;em&gt;如何翻译”&lt;/em&gt;对话框。</target>
        </trans-unit>
        <trans-unit>
          <source>Show rows status</source>
          <target>显示行状态</target>
        </trans-unit>
        <trans-unit>
          <source>Java files (*.java)</source>
          <target>Java 文件 (*.java)</target>
        </trans-unit>
        <trans-unit>
          <source>Excel file</source>
          <target>Excel文件</target>
        </trans-unit>
        <trans-unit>
          <source>Bring translations from the original file to the project only if the current value in the project is empty.</source>
          <target>仅当项目中的当前值为空时，才将翻译从原始文件带到项目中。</target>
        </trans-unit>
        <trans-unit>
          <source>Android application file (.apk)</source>
          <target>Android 应用程序文件 (.apk)</target>
        </trans-unit>
        <trans-unit>
          <source>You can automate build process by using &lt;a href=&quot;SlMake.htm&quot;&gt;Sisulizer&#x27;s command line tool&lt;/a&gt;.</source>
          <target>您可以使用&lt;a href=&quot;SlMake.htm&quot;&gt;Sisulizer 的命令行工具&lt;/a&gt;自动化构建过程。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the toolbar of the project tree is visible.</source>
          <target>如果选中，项目树的工具栏是可见的。</target>
        </trans-unit>
        <trans-unit>
          <source>Import only if context and original value match</source>
          <target>仅当上下文和原始值匹配时才导入</target>
        </trans-unit>
        <trans-unit>
          <source>Include those items that has &lt;em&gt;Not translated&lt;/em&gt; status.</source>
          <target>包括那些&lt;em&gt;没有翻译&lt;/em&gt;状态的项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer reads tags from the name of the resource item</source>
          <target>Sisulizer 从资源项的名称中读取标签</target>
        </trans-unit>
        <trans-unit>
          <source>Download and install OpenOffice 2.x dictionary</source>
          <target>下载并安装 OpenOffice 2.x 词典</target>
        </trans-unit>
        <trans-unit>
          <source>Use source dialog to specify that item to localize and how to localize.</source>
          <target>使用源对话框指定要本地化的项目以及如何本地化。</target>
        </trans-unit>
        <trans-unit>
          <source>You can export the font data to a font file by pressing the Export button.</source>
          <target>您可以通过按“导出”按钮将字体数据导出到字体文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Easier way it to use common font change rules. The source dialog contains &lt;a href=&quot;SourceDialogFontsSheet.htm&quot;&gt;fonts sheet&lt;/a&gt; that let&#x27;s you specify how the font changing is done. The basic idea is to change all certain fonts in a similar way.</source>
          <target>使用通用字体更改规则的更简单方法。源对话框包含&lt;a href=&quot;SourceDialogFontsSheet.htm&quot;&gt;字体表&lt;/a&gt;，可让您指定如何完成字体更改。基本思想是以类似的方式更改所有某些字体。</target>
        </trans-unit>
        <trans-unit>
          <source>sma</source>
          <target>高中</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure a &lt;a href=&quot;SpellChecking.htm&quot;&gt;spell checker&lt;/a&gt;.</source>
          <target>使用此对话框配置&lt;a href=&quot;SpellChecking.htm&quot;&gt;拼写检查器&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the properties of the selected component.</source>
          <target>显示所选组件的属性。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Update Statuses&lt;/em&gt; specifies if and how the statuses of &lt;a href=&quot;DuplicateString.htm&quot;&gt;duplicate strings&lt;/a&gt; are updates after the status of one of the strings has been changed.</source>
          <target>&lt;em&gt;更新状态&lt;/em&gt;指定&lt;a href=&quot;DuplicateString.htm&quot;&gt;重复字符串&lt;/a&gt;的状态是否以及如何在其中一个字符串的状态已更改后更新。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer creates localized CHM file.&lt;br&gt;
      If unchecked Sisulizer creates localized HTML files. The user has to use HTML Help Compiler to compile localized HTML files into localized CHM file.</source>
          <target>如果选中 Sisulizer，则会创建本地化的 CHM 文件。&lt;br&gt;如果未选中 Sisulizer，则会创建本地化的 HTML 文件。用户必须使用 HTML Help Compiler 将本地化的 HTML 文件编译为本地化的 CHM 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be an iOS/OSX strings file (e.g. C:\Samples\sample.strings)</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是 iOS/OSX 字符串文件（例如 C:\Samples\sample.strings）</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure find pane settings.</source>
          <target>使用此对话框配置查找窗格设置。</target>
        </trans-unit>
        <trans-unit>
          <source>If your old project contained several files choose &lt;a href=&quot;ProjectAddSourceMenu.htm&quot;&gt;Project | Add Source&lt;/a&gt; to add additional source files or databases.</source>
          <target>如果您的旧项目包含多个文件，请选择&lt;a href=&quot;ProjectAddSourceMenu.htm&quot;&gt;Project |添加源&lt;/a&gt;以添加其他源文件或数据库。</target>
        </trans-unit>
        <trans-unit>
          <source>Similarly .exe file extension has been bound to the following scanners:</source>
          <target>同样 .exe 文件扩展名已绑定到以下扫描仪：</target>
        </trans-unit>
        <trans-unit>
          <source>Windows uses its own NLS language ids and code pages.</source>
          <target>Windows 使用自己的 NLS 语言 ID 和代码页。</target>
        </trans-unit>
        <trans-unit>
          <source>To be written.</source>
          <target>待写。</target>
        </trans-unit>
        <trans-unit>
          <source>Add language field to those database tables that you want to localize. This requires you to change the table structure. Make sure that the language field is part of primary key.</source>
          <target>将语言字段添加到要本地化的那些数据库表。这需要您更改表结构。确保语言字段是主键的一部分。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer setup (Sisu.exe) does &lt;strong&gt;not&lt;/strong&gt; install Lingsoft spell checker engine (lsproof.dll) and dictionary files. In order to use Lingsoft spell and grammar checker you have to close Sisulizer, purchase &lt;em&gt;Lingsoft Proofreader for Sisulizer&lt;/em&gt; product for your language from &lt;a href=&quot;http://www.lingsoft.fi/products/sisulizer&quot; target=&quot;_blank&quot;&gt;Lingsoft online store&lt;/a&gt;, install it, and start Sisulizer again. &lt;em&gt;Lingsoft Proofreader for Sisulizer&lt;/em&gt; is available for following languages:</source>
          <target>Sisulizer的设置（Sisu.exe）&lt;strong&gt;不&lt;/strong&gt;安装Lingsoft拼写检查引擎（lsproof.dll）和字典文件。要使用Lingsoft 拼写和语法检查器，您必须关闭Sisulizer，从&lt;a href=&quot;http://www.lingsoft.fi/products/sisulizer&quot; target=&quot;_blank&quot;&gt;Lingsoft 在线商店&lt;/a&gt;为您的语言购买&lt;em&gt;Lingsoft Proofreader for Sisulizer&lt;/em&gt;产品，安装它，然后再次启动Sisulizer。 &lt;em&gt;Lingsoft Proofreader for Sisulizer&lt;/em&gt;可用于以下语言：</target>
        </trans-unit>
        <trans-unit>
          <source>In addition of the usage of script neutral Chinese you can choose how country neutral Chinese is coded. There are two methods:</source>
          <target>除了使用脚本中性中文之外，您还可以选择国家中性中文的编码方式。有两种方法：</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify how the resource are created.</source>
          <target>使用此表指定资源的创建方式。</target>
        </trans-unit>
        <trans-unit>
          <source>Speficies the 32-bit resource only DLL file that is used basic for the localized resource DLLs. If this is left empty the built-in resource file is used.</source>
          <target>指定用于本地化资源 DLL 的基本 32 位纯资源 DLL 文件。如果将其留空，则使用内置资源文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Qt&amp;nbsp;Creator,&lt;br&gt;
    text editor</source>
          <target>Qt 创造者，&lt;br&gt;文本编辑器</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the localized RC file.</source>
          <target>显示本地化的 RC 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Write translation defect status</source>
          <target>写入翻译缺陷状态</target>
        </trans-unit>
        <trans-unit>
          <source>Use the Open dialog box to open an existing project.</source>
          <target>使用“打开”对话框打开现有项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Generic CSV file</source>
          <target>通用 CSV 文件</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the translation memory creation options. These options can not be changed after the translation memory has been created.</source>
          <target>指定翻译记忆库创建选项。创建翻译记忆库后无法更改这些选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Scale forms</source>
          <target>秤表</target>
        </trans-unit>
        <trans-unit>
          <source>However if you have to constantly switch between to keyboard it might be too slow to manually change or even use shortcuts. This is why Sisulizer can automatically change the keyboard layout to match the selected language. To turn that on choose Column | Properties.</source>
          <target>但是，如果您必须不断地在键盘之间切换，手动更改甚至使用快捷方式可能会太慢。这就是为什么 Sisulizer 可以自动更改键盘布局以匹配所选语言的原因。要打开它，请选择 Column |特性。</target>
        </trans-unit>
        <trans-unit>
          <source>Elements can contain combined strings or source code</source>
          <target>元素可以包含组合字符串或源代码</target>
        </trans-unit>
        <trans-unit>
          <source>Shows information about the selected translation memory.</source>
          <target>显示有关所选翻译记忆库的信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Create one package that contains all selected languages</source>
          <target>创建一个包含所有选定语言的包</target>
        </trans-unit>
        <trans-unit>
          <source>Saves spell checker&#x27;s in-memory custom dictionary into a custom dictionary file.</source>
          <target>将拼写检查器的内存自定义词典保存到自定义词典文件中。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify the font options.</source>
          <target>使用此对话框指定字体选项。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked marked flags  are written to the file.</source>
          <target>如果选中标记的标志被写入文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the last character.</source>
          <target>指定最后一个字符。</target>
        </trans-unit>
        <trans-unit>
          <source>You have to choices to import the localized language files to Flash. The first is to use the String panel and import each localized language file to the project. Another is to copy the localized files to their localziation. For example copy the Finnish file en\fi\Sample_en.xml to fi\Sample_fi.xml. Next time you start Flash it uses the updated strings.</source>
          <target>您必须选择将本地化语言文件导入 Flash。第一种是使用字符串面板并将每个本地化的语言文件导入到项目中。另一种方法是将本地化文件复制到它们的本地化。例如，将芬兰语文件 en\fi\Sample_en.xml 复制到 fi\Sample_fi.xml。下次启动 Flash 时，它将使用更新后的字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Components sheet contains the &lt;a href=&quot;ComponentMapping.htm&quot;&gt;component mapping&lt;/a&gt; list. Sisulizer uses its own visual components to render visual components, forms and dialogs. In order to properly draw the components Sisulizer needs to know the type of the component (i.e. label or button or check box). Component mapping performs this. It is used with platforms using components such as .NET, Delphi, C++Builder and Visual Basic. The purpose of the mapping is to give Sisulizer information about components that applications use.</source>
          <target>组件表包含&lt;a href=&quot;ComponentMapping.htm&quot;&gt;组件映射&lt;/a&gt;列表。 Sisulizer 使用自己的可视化组件来渲染可视化组件、表单和对话框。为了正确绘制组件，Sisulizer 需要知道组件的类型（即标签或按钮或复选框）。组件映射执行此操作。它与使用 .NET、Delphi、C++Builder 和 Visual Basic 等组件的平台一起使用。映射的目的是为 Sisulizer 提供有关应用程序使用的组件的信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Correct index</source>
          <target>正确索引</target>
        </trans-unit>
        <trans-unit>
          <source>Empty value is written into the target element.</source>
          <target>空值被写入目标元素。</target>
        </trans-unit>
        <trans-unit>
          <source>These are libraries that Sisulizer setup applications installs. These add-on should be registered by the Sisulizer setup application. If add-on is not registered, select the add-on and press Register.</source>
          <target>这些是 Sisulizer 安装应用程序安装的库。这些附加组件应由 Sisulizer 设置应用程序注册。如果加载项未注册，请选择加载项并按注册。</target>
        </trans-unit>
        <trans-unit>
          <source>Development tool</source>
          <target>开发工具</target>
        </trans-unit>
        <trans-unit>
          <source>Import Wizard - .NET assembly file</source>
          <target>导入向导 - .NET 程序集文件</target>
        </trans-unit>
        <trans-unit>
          <source>Incorrect spelling</source>
          <target>拼写错误</target>
        </trans-unit>
        <trans-unit>
          <source>Read more about global component mappings, keywords and properties from platform specific settings:</source>
          <target>从平台特定设置中阅读有关全局组件映射、关键字和属性的更多信息：</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer contains functions that let you change the language of .NET application on run time. &amp;lt;sldir&amp;gt;\NET contains the source code of C# library project that contains the classes. If you compile this project you will have Sisulizer.dll library assembly file. It contains all the classes.</source>
          <target>Sisulizer 包含可让您在运行时更改 .NET 应用程序语言的功能。 &amp;lt;sldir&amp;gt;\NET 包含包含类的 C# 库项目的源代码。如果编译此项目，您将拥有 Sisulizer.dll 库程序集文件。它包含所有类。</target>
        </trans-unit>
        <trans-unit>
          <source>.tra is added to zh because the default Chinese is Simplified Chinese.</source>
          <target>.tra 被添加到 zh 中，因为默认中文是简体中文。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies if the localized TMX file(s) contains multiple tuv elements or just one tuv element in each tu element. Possible values are:</source>
          <target>指定本地化的 TMX 文件是包含多个 tuv 元素还是每个 tu 元素中只包含一个 tuv 元素。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Different platforms support bidirectional languages in different way. The following paragraphs describe the bidirectional support of the most important platforms.</source>
          <target>不同的平台以不同的方式支持双向语言。以下段落描述了最重要平台的双向支持。</target>
        </trans-unit>
        <trans-unit>
          <source>If you have original  source code of CHM file such as .hhp, .hhc, .hhk and HTML files you can also add HTML Help project file (.hhp) into Sisulizer instead of .chm file.</source>
          <target>如果您有 CHM 文件的原始源代码，例如 .hhp、.hhc、.hhk 和 HTML 文件，您还可以将 HTML 帮助项目文件 (.hhp) 添加到 Sisulizer 中，而不是 .chm 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to set the message settings.</source>
          <target>使用此表设置消息设置。</target>
        </trans-unit>
        <trans-unit>
          <source>Redoes the last undo action.</source>
          <target>重做上次撤消操作。</target>
        </trans-unit>
        <trans-unit>
          <source>Custom dictionary location</source>
          <target>自定义词典位置</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies what parameters are passed to assembly linker when linking satellite assembly files. You can give parameters that are solution wide and you can give parameters that are only used for this project. Depending on the value of the combo box either solutions&#x27;s, local or both are used. Possible values are:</source>
          <target>指定链接附属程序集文件时传递给程序集链接器的参数。您可以提供解决方案范围内的参数，也可以提供仅用于该项目的参数。根据组合框的值，使用解决方案、本地或两者。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;strong&gt;VCL:&lt;/strong&gt; In VCL for example the most used values of properties are not saved. Those values are defined as default values. When a property of a certain component is read the default value will be used if no other value has been saved. The default Alignment property of TLabel control is taLeftJustify. This value is not written to the resource file. The other possible values are taCenter and taRightJustify. If value is one of those it will be written to the resource file.</source>
          <target>&lt;strong&gt;VCL：&lt;/strong&gt;例如，在 VCL 中，不保存最常用的属性值。这些值被定义为默认值。当读取某个组件的属性时，如果没有保存其他值，则将使用默认值。 TLabel 控件的默认对齐属性是 taLeftJustify。此值不会写入资源文件。其他可能的值是 taCenter 和 taRightJustify。如果 value 是其中之一，它将被写入资源文件。</target>
        </trans-unit>
        <trans-unit>
          <source>The system&#x27;s default UI language. On Windows 2000 or higher, this is returned from the GetSystemDefaultUILanguage() API. On other platforms, this is the language of the OS itself.</source>
          <target>系统的默认 UI 语言。在 Windows 2000 或更高版本上，这是从 GetSystemDefaultUILanguage() API 返回的。在其他平台上，这是操作系统本身的语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the resource options.</source>
          <target>使用此表指定资源选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Works with Other Windows applications</source>
          <target>适用于其他 Windows 应用程序</target>
        </trans-unit>
        <trans-unit>
          <source>Use these check box to specify if translation status is showed as complete if the translation has a specific property. Possible values are:</source>
          <target>使用这些复选框来指定如果翻译具有特定属性，翻译状态是否显示为完成。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>XLIFF file</source>
          <target>XLIFF 文件</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer extract the selected dictionary files (.dic and .aff) and saves them to a directory. Use this edit to specify where to extract the files.</source>
          <target>Sisulizer 提取选定的字典文件（.dic 和 .aff）并将它们保存到一个目录中。使用此编辑指定提取文件的位置。</target>
        </trans-unit>
        <trans-unit>
          <source>Some &lt;a href=&quot;Sources.htm&quot;&gt;sources&lt;/a&gt; contain nodes that can be visually edited. In such a case Sisulizer shows the selected item on a visual editor. It is located on the upper right side of the main view.</source>
          <target>一些&lt;a href=&quot;Sources.htm&quot;&gt;源&lt;/a&gt;包含可以可视化编辑的节点。在这种情况下，Sisulizer 在可视化编辑器上显示所选项目。它位于主视图的右上角。</target>
        </trans-unit>
        <trans-unit>
          <source>Let&#x27;s have an example. We have a simple text file containing country information. The file is</source>
          <target>让我们举个例子。我们有一个包含国家信息的简单文本文件。该文件是</target>
        </trans-unit>
        <trans-unit>
          <source>Ignore country part in the language codes</source>
          <target>忽略语言代码中的国家/地区部分</target>
        </trans-unit>
        <trans-unit>
          <source>Supported spell checker engines</source>
          <target>支持的拼写检查引擎</target>
        </trans-unit>
        <trans-unit>
          <source>The default build output in Windows binary localization is to create localized PE files. Sisulizer takes the original .exe or .dll and makes one copy for each language is a sub directory. For example if the original file is C:\Files\Application.exe, and Sisulizer project contains Finnish, German and Japanese as target languages, then the build process creates C:\Files\fi\Application.exe, C:\Files\de\Application.exe and C:\Files\ja\Application.exe. Each file is identical to the original file except the resource data in each file has been localized.</source>
          <target>Windows 二进制本地化中的默认构建输出是创建本地化的 PE 文件。 Sisulizer 将原始的 .exe 或 .dll 并为每种语言制作一个副本作为一个子目录。例如，如果原始文件是 C:\Files\Application.exe，并且 Sisulizer 项目包含芬兰语、德语和日语作为目标语言，那么构建过程会创建 C:\Files\fi\Application.exe、C:\Files\ de\Application.exe 和 C:\Files\ja\Application.exe。除了每个文件中的资源数据已本地化外，每个文件都与原始文件相同。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can access and localize SQL Server databases</source>
          <target>Sisulizer 可以访问和本地化 SQL Server 数据库</target>
        </trans-unit>
        <trans-unit>
          <source>Remove items from the project that have no reference to any of the targets.</source>
          <target>从项目中删除不引用任何目标的项目。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer uses checked language ids. This means that if you have a country and script neutral language id on a language that uses two ore more scripts and the platforms language id&#x27;s do not support scripts Sisulizer when building automatically adds a country part that matches the default country of that language. For example if you have Simplified Chinese id, zh-Hans. When building zh-Hans becomes to zh-CH.</source>
          <target>如果选中的 Sisulizer 使用选中的语言 ID。这意味着，如果您在使用两个或更多脚本的语言上具有国家和脚本中性语言 ID，并且平台语言 ID 不支持脚本，Sisulizer 在构建时会自动添加与该语言的默认国家/地区匹配的国家/地区部分。例如，如果您有简体中文 id，zh-Hans。当构建 zh-Hans 时变为 zh-CH。</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be a  &lt;a href=&quot;QtLocalization.htm&quot;&gt;Qt project file&lt;/a&gt; (e.g. C:\Samples\Sample.pro).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是&lt;a href=&quot;QtLocalization.htm&quot;&gt;Qt 项目文件&lt;/a&gt;（例如 C:\Samples\Sample.pro）。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer shows only those rows that have spelling errors in original strings.</source>
          <target>如果选中 Sisulizer，则仅显示原始字符串中有拼写错误的那些行。</target>
        </trans-unit>
        <trans-unit>
          <source>To support several visual platforms without platform&#x27;s runtime code Sisulizer uses its own component to show user interface elements such as labels, edit fields, buttons, check boxes, etc. Sisulizer has over 100 build in component types covering all kind of components from basic labels to complex grids. When drawing component on the visual editor Sisulizer needs to know the type of the component. Component mappings is for this. It is a collection of mappings where each mapping maps the original component to Sisulizer&#x27;s own component. For example .NET&#x27;s label System.Windows.Forms.Label, VCL&#x27;s label TLabel, and Visual Basic&#x27;s Label are all mapped to Sisulizer&#x27;s Label component. Every platform such as .NET, VCL, Visual Basic, etc. has its own mappings collections. By default Sisulizer&#x27;s mappings collections contain all the standard components of the platform (e.g. VCL components or .NET components) and the most popular 3rd party components. You can add new items to the mappings collection by choosing Tools | Platforms | &amp;lt;platform&amp;gt; and selecting Components sheet. This contains global mappings collection. A project releated mapings collaction can be edited by choosing Project | Components.</source>
          <target>为了支持多个没有平台运行时代码的可视化平台，Sisulizer 使用自己的组件来显示用户界面元素，如标签、编辑字段、按钮、复选框等。 Sisulizer 有超过 100 种内置组件类型，涵盖从基本标签到所有类型的组件。复杂的网格。在可视化编辑器上绘制组件时，Sisulizer 需要知道组件的类型。组件映射就是为此。它是一个映射集合，其中每个映射将原始组件映射到 Sisulizer 自己的组件。比如.NET的标签System.Windows.Forms.Label、VCL的标签TLabel、Visual Basic的Label都映射到Sisulizer的Label组件。每个平台（如 .NET、VCL、Visual Basic 等）都有自己的映射集合。默认情况下，Sisulizer 的映射集合包含平台的所有标准组件（例如 VCL 组件或 .NET 组件）和最流行的 3rd 方组件。您可以通过选择工具 | 向映射集合添加新项目。平台 | &amp;lt;平台&amp;gt; 并选择组件表。这包含全局映射集合。可以通过选择 Project | 编辑与项目相关的映射集合。组件。</target>
        </trans-unit>
        <trans-unit>
          <source>Choose File | Import or right click column header and choose Import to start &lt;a href=&quot;ImportWizard.htm&quot;&gt;Import Wizard&lt;/a&gt; that lets you import translations from the file that you translator sent you.</source>
          <target>选择文件 |导入或右键单击列标题并选择导入以启动&lt;a href=&quot;ImportWizard.htm&quot;&gt;导入向导&lt;/a&gt;，该&lt;a href=&quot;ImportWizard.htm&quot;&gt;向导&lt;/a&gt;可让您从译员发送给您的文件中导入翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Update by primary language only</source>
          <target>仅按主要语言更新</target>
        </trans-unit>
        <trans-unit>
          <source>Check updates automatically</source>
          <target>自动检查更新</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog box to resize multiple components to be exactly the same height or width. The Horizontal options align the width of the selected components. The Vertical options align the height of the selected components.</source>
          <target>使用此对话框将多个组件的大小调整为完全相同的高度或宽度。水平选项对齐所选组件的宽度。垂直选项对齐所选组件的高度。</target>
        </trans-unit>
        <trans-unit>
          <source>Export, backup, restore and clear the selected translation memory.</source>
          <target>导出、备份、恢复和清除选定的翻译记忆库。</target>
        </trans-unit>
        <trans-unit>
          <source>You can filter items based on their &lt;a href=&quot;WorkingWithTranslationSheet.htm#Invalidated&quot;&gt;Invalidated state&lt;/a&gt;. Possible values are:</source>
          <target>您可以根据项目的&lt;a href=&quot;WorkingWithTranslationSheet.htm#Invalidated&quot;&gt;Invalidated 状态&lt;/a&gt;过滤项目。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Status bar is the most bottom side of the main view.</source>
          <target>状态栏是主视图的最底部。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to set the general settings.</source>
          <target>使用此表设置常规设置。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer detects the format of the file. If it can not be detected the file is read as a Windows code page encoded file.</source>
          <target>Sisulizer 检测文件的格式。如果无法检测到该文件，则会将其作为 Windows 代码页编码文件读取。</target>
        </trans-unit>
        <trans-unit>
          <source>Keystore password</source>
          <target>密钥库密码</target>
        </trans-unit>
        <trans-unit>
          <source>Exports segmentation rules to the file.</source>
          <target>将分段规则导出到文件。</target>
        </trans-unit>
        <trans-unit>
          <source>where  tag is a tag string (e.g. slz), mc is the maximum length of the translation in characters, mp is the maximum length of the translation is pixels, and expression is the &lt;a href=&quot;CombinedStrings.htm&quot;&gt;combined string&lt;/a&gt; expression.</source>
          <target>其中 tag 是标签字符串（例如 slz），mc 是翻译的最大长度（以字符为单位），mp 是翻译的最大长度（像素），expression 是&lt;a href=&quot;CombinedStrings.htm&quot;&gt;组合字符串&lt;/a&gt;表达式。</target>
        </trans-unit>
        <trans-unit>
          <source>Clear validation results.</source>
          <target>清除验证结果。</target>
        </trans-unit>
        <trans-unit>
          <source>Makes the currently selected cell in the sheet to be the origin.</source>
          <target>使工作表中当前选定的单元格成为原点。</target>
        </trans-unit>
        <trans-unit>
          <source>Property is localized</source>
          <target>属性已本地化</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer automatically changes row status from &lt;em&gt;New&lt;/em&gt; to &lt;em&gt;In use&lt;/em&gt; when rescanning the project.</source>
          <target>如果选中 Sisulizer，则&lt;em&gt;在&lt;/em&gt;重新扫描项目时会自动将行状态从“&lt;em&gt;新建”&lt;/em&gt;更改为“&lt;em&gt;正在使用&lt;/em&gt;”。</target>
        </trans-unit>
        <trans-unit>
          <source>Project Wizard - RC file</source>
          <target>项目向导 - RC 文件</target>
        </trans-unit>
        <trans-unit>
          <source>Language variant</source>
          <target>语言变体</target>
        </trans-unit>
        <trans-unit>
          <source>Use, SlXamlViewer.exe, Sisulizer XAML viewer</source>
          <target>使用，SlXamlViewer.exe，Sisulizer XAML 查看器</target>
        </trans-unit>
        <trans-unit>
          <source>Embedded XML and HTML data can be used in the following source types:</source>
          <target>嵌入的 XML 和 HTML 数据可用于以下源类型：</target>
        </trans-unit>
        <trans-unit>
          <source>[germany]
Name=&lt;strong&gt;Germany&lt;/strong&gt;
Population=82
Capital=&lt;strong&gt;Berlin&lt;/strong&gt;
Description=&lt;strong&gt;Germany or the Federal Republic of Germany is one of the world&#x27;s leading industrialized countries, located in the heart of Europe.&lt;/strong&gt;</source>
          <target>[德国] 名称=&lt;strong&gt;德国&lt;/strong&gt;人口=82 首都=&lt;strong&gt;柏林&lt;/strong&gt;描述=&lt;strong&gt;德国或德意志联邦共和国是世界领先的工业化国家之一，位于欧洲的中心。&lt;/strong&gt;</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer validates only those rows that are set visible by the current filter. If unchecked Sisulizer validates all rows, even those set hidden by the current filter.</source>
          <target>如果选中 Sisulizer，则仅验证当前过滤器设置为可见的那些行。如果未选中 Sisulizer 验证所有行，即使是那些被当前过滤器隐藏的行。</target>
        </trans-unit>
        <trans-unit>
          <source>create</source>
          <target>创建</target>
        </trans-unit>
        <trans-unit>
          <source>Delete all but selected</source>
          <target>删除所有未选中的</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify if and how the selected XML item (e.g. tag or attribute) is localized.</source>
          <target>使用此对话框指定是否以及如何本地化选定的 XML 项（例如标记或属性）。</target>
        </trans-unit>
        <trans-unit>
          <source>Add context before the value.</source>
          <target>在值之前添加上下文。</target>
        </trans-unit>
        <trans-unit>
          <source>Project | Clear Saved to Translation Memory Status</source>
          <target>项目 |清除保存到翻译记忆库状态</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer has build-in support for spell and grammar checking. You can check spelling of both original strings and translated strings. Spelling can be used either on real time or started by a menu command. You can configure any number of spell checkers with different language and dictionary combinations. Finally you can use the spell checkers that best suites the needs of your project.</source>
          <target>Sisulizer 内置了对拼写和语法检查的支持。您可以检查原始字符串和翻译字符串的拼写。拼写可以实时使用，也可以通过菜单命令启动。您可以使用不同的语言和字典组合配置任意数量的拼写检查器。最后，您可以使用最适合您项目需求的拼写检查器。</target>
        </trans-unit>
        <trans-unit>
          <source>By default Sisulizer read all string resources as plain string. Some strings actually contains structure data such as XML, HTML or combined strings. Use this menu to set the string format of a row. Possible string formats are:</source>
          <target>默认情况下，Sisulizer 将所有字符串资源读取为纯字符串。有些字符串实际上包含结构数据，例如 XML、HTML 或组合字符串。使用此菜单设置行的字符串格式。可能的字符串格式有：</target>
        </trans-unit>
        <trans-unit>
          <source>Item has been changed in original file or database.</source>
          <target>原始文件或数据库中的项目已更改。</target>
        </trans-unit>
        <trans-unit>
          <source>String values</source>
          <target>字符串值</target>
        </trans-unit>
        <trans-unit>
          <source>The following table shows how the context is generated in each context method.</source>
          <target>下表显示了如何在每个上下文方法中生成上下文。</target>
        </trans-unit>
        <trans-unit>
          <source>Microsoft Old CSV file</source>
          <target>Microsoft 旧 CSV 文件</target>
        </trans-unit>
        <trans-unit>
          <source>Working with translation sheet</source>
          <target>使用翻译表</target>
        </trans-unit>
        <trans-unit>
          <source>Localize database data</source>
          <target>本地化数据库数据</target>
        </trans-unit>
        <trans-unit>
          <source>If selected toolbar uses small icons.</source>
          <target>如果选择的工具栏使用小图标。</target>
        </trans-unit>
        <trans-unit>
          <source>Grammar dictionary file</source>
          <target>语法词典文件</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure text settings. Text settings are used with &lt;a href=&quot;TextLocalization.htm&quot;&gt;text file localization&lt;/a&gt;.</source>
          <target>使用此对话框配置文本设置。文本设置与&lt;a href=&quot;TextLocalization.htm&quot;&gt;文本文件本地化一起使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer does not write resource items to the localized resource file if the value of the item is the same as the original value. Value is not written even if the user has entered the value in the edit sheet if it equals to the original value.</source>
          <target>如果勾选Sisulizer，如果项目的值与原始值相同，则不会将资源项目写入本地化的资源文件。即使用户已在编辑表中输入值，如果它等于原始值，也不会写入值。</target>
        </trans-unit>
        <trans-unit>
          <source>Original resources</source>
          <target>原创资源</target>
        </trans-unit>
        <trans-unit>
          <source>Does not change the alignment of the component</source>
          <target>不改变组件的对齐方式</target>
        </trans-unit>
        <trans-unit>
          <source>Lupdate executable</source>
          <target>Lupdate 可执行文件</target>
        </trans-unit>
        <trans-unit>
          <source>When Sisulizer localizes VCL forms it can also update the TFont.Charset property to match the target language. The property values is updated if the character set updating is not turned off and the original value of the Charset property is the default one (DEFAULT_CHARSET).</source>
          <target>当 Sisulizer 本地化 VCL 表单时，它还可以更新 TFont.Charset 属性以匹配目标语言。如果未关闭字符集更新并且 Charset 属性的原始值为默认值 (DEFAULT_CHARSET)，则会更新属性值。</target>
        </trans-unit>
        <trans-unit>
          <source>Prompt key file if not specified</source>
          <target>如果未指定，则提示密钥文件</target>
        </trans-unit>
        <trans-unit>
          <source>This column is ignored.</source>
          <target>此列被忽略。</target>
        </trans-unit>
        <trans-unit>
          <source>Result code is 2 if errors, 1 if warnings, and 0 if successful. Otherwise result code is 1 if errors and 0 in other cases.</source>
          <target>结果代码为 2 表示错误，1 表示警告，0 表示成功。否则结果代码在错误时为 1，在其他情况下为 0。</target>
        </trans-unit>
        <trans-unit>
          <source>Each row is a separate translation entity and it is translated independently. The advantage of splitting XML data is that in most cases the XML format must be exactly right. If XML data is shows on the translation sheet as it is, it is possible that translator will enter invalid XML format. To prevent that you can make Sisulizer to parse string data as XML.</source>
          <target>每一行都是一个单独的翻译实体，它是独立翻译的。拆分 XML 数据的优点是在大多数情况下 XML 格式必须完全正确。如果 XML 数据按原样显示在翻译表上，则翻译人员可能会输入无效的 XML 格式。为了防止这种情况，您可以让 Sisulizer 将字符串数据解析为 XML。</target>
        </trans-unit>
        <trans-unit>
          <source>Displays dots on the form to make the grid visible.</source>
          <target>在表单上显示点以使网格可见。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer localizes both report data embedded to the form and ReportBuilder report files (.rtm).</source>
          <target>Sisulizer 将嵌入到表单中的报告数据和 ReportBuilder 报告文件 (.rtm) 本地化。</target>
        </trans-unit>
        <trans-unit>
          <source>Clip children to the client area of parent</source>
          <target>将子项剪辑到父项的客户区</target>
        </trans-unit>
        <trans-unit>
          <source>Clears the log pane.</source>
          <target>清除日志窗格。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Localize only those elements that have enabled localize attribute&lt;/em&gt; if checked make Sisulizer to localize only those XML elements that contain positive &lt;a href=&quot;XmlLocalizeAttribute.htm&quot;&gt;localize attribute&lt;/a&gt;.</source>
          <target>如果选中&lt;em&gt;，只本地化那些启用了本地化属性的元素，&lt;/em&gt;使 Sisulizer 只本地化那些包含正&lt;a href=&quot;XmlLocalizeAttribute.htm&quot;&gt;本地化属性的&lt;/a&gt;XML 元素。</target>
        </trans-unit>
        <trans-unit>
          <source>Most reports contains data that need to be localized. For example if we create a product report the report might contains &amp;quot;How to use&amp;quot; field that describes how to use the product. This data contains text that needs to be localized. in order to do that you have to localize the database itself. This is called &lt;a href=&quot;DatabaseLocalization.htm&quot;&gt;database localization&lt;/a&gt;. Sisulizer support several different ways to localize database data. We recommend to use row localization because then you don&#x27;t have to modify your SQL queries that much. It is enough that you add WHERE part to your query.</source>
          <target>大多数报告包含需要本地化的数据。例如，如果我们创建产品报告，报告可能包含描述如何使用产品的“如何使用”字段。此数据包含需要本地化的文本。为此，您必须本地化数据库本身。这称为&lt;a href=&quot;DatabaseLocalization.htm&quot;&gt;数据库本地化&lt;/a&gt;。 Sisulizer 支持多种不同的方式来本地化数据库数据。我们建议使用行本地化，因为这样您就不必对 SQL 查询进行太多修改。将 WHERE 部分添加到查询中就足够了。</target>
        </trans-unit>
        <trans-unit>
          <source>This is the easiest and safest localization method. Binary localization works in the following way. Each Windows application or library file (.exe, .dll or .ocx) contain resource data. Sisulizer reads the resource data and adds items that need to be localized. When creating localized files Sisulizer copies the original binary file to a new locations and replaces the original resources with the localized resources. The result binary file are identical to the original files except the resources have been localized. Windows application and library files are also called PE files (portable executable). Sisulizer can localize all known of Windows resource types such as  dialog, menu, bitmap and VCL&#x27;s form resources. In addition Sisulizer can localize any &lt;a href=&quot;CustomWindowsResources.htm&quot;&gt;custom resource type&lt;/a&gt;.</source>
          <target>这是最简单、最安全的定位方法。二进制本地化的工作方式如下。每个 Windows 应用程序或库文件（.exe、.dll 或 .ocx）都包含资源数据。 Sisulizer 读取资源数据并添加需要本地化的项目。创建本地化文件时，Sisulizer 将原始二进制文件复制到新位置，并将原始资源替换为本地化资源。结果二进制文件与原始文件相同，只是资源已本地化。 Windows 应用程序和库文件也称为 PE 文件（便携式可执行文件）。 Sisulizer 可以本地化所有已知的 Windows 资源类型，例如对话框、菜单、位图和 VCL 的表单资源。此外，Sisulizer 可以本地化任何&lt;a href=&quot;CustomWindowsResources.htm&quot;&gt;自定义资源类型&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>View the report after generation</source>
          <target>查看生成后的报告</target>
        </trans-unit>
        <trans-unit>
          <source>HTML localization is very simple in Sisulizer because it is visual, safe and it uses segmentation. Sisulizer extracts the visual HTML data and adds them to the project. When creating localized file Sisulizer creates an identical copy of the original HTML file except it contains is in the target language.</source>
          <target>Sisulizer 中的 HTML 本地化非常简单，因为它是可视化的、安全的并且使用分段。 Sisulizer 提取可视化 HTML 数据并将它们添加到项目中。创建本地化文件时，Sisulizer 会创建与原始 HTML 文件相同的副本，但它包含的内容是目标语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Determines the toolbar options.</source>
          <target>确定工具栏选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Text files</source>
          <target>文本文件</target>
        </trans-unit>
        <trans-unit>
          <source>Select the language column where to import to</source>
          <target>选择要导入到的语言列</target>
        </trans-unit>
        <trans-unit>
          <source>The following image contain original non sorted table of contents.</source>
          <target>下图包含原始未排序的目录。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can directly open project files of other localization tools. When you open such a file (&lt;a href=&quot;FileOpenMenu.htm&quot;&gt;File | Open&lt;/a&gt;) Sisulizer first creates a new Sisulizer project file that contains the same source file and then imports data from localized files created by you previous localization tool or from project file of you previous localization tool.</source>
          <target>Sisulizer 可以直接打开其他本地化工具的项目文件。当您打开这样的文件 ( &lt;a href=&quot;FileOpenMenu.htm&quot;&gt;File | Open&lt;/a&gt; ) 时，Sisulizer 首先创建一个包含相同源文件的新 Sisulizer 项目文件，然后从您之前的本地化工具创建的本地化文件或您之前的本地化工具的项目文件中导入数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Enter a sample text that contains text data to be segmented and click Process button to break the text into segments.</source>
          <target>输入包含要分段的文本数据的示例文本，然后单击“处理”按钮将文本分成多个段。</target>
        </trans-unit>
        <trans-unit>
          <source>Selecting a node</source>
          <target>选择节点</target>
        </trans-unit>
        <trans-unit>
          <source>SlMake - Command line tool</source>
          <target>SlMake - 命令行工具</target>
        </trans-unit>
        <trans-unit>
          <source>If you want to disable localization of a string, add an exclude tag to the comment field or include the tag into resource name. Use this edit to specify the strings(s) that are used a exclude tags.</source>
          <target>如果要禁用字符串的本地化，请在注释字段中添加排除标记或将该标记包含在资源名称中。使用此编辑来指定使用排除标签的字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Currently no platform uses this combination</source>
          <target>目前没有平台使用这种组合</target>
        </trans-unit>
        <trans-unit>
          <source>You can filter items based on the row status. Check those statuses that you want to be visible in the sheet. Possible values are:</source>
          <target>您可以根据行状态过滤项目。检查您希望在工作表中显示的那些状态。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Shows a version history file that contains a list of new and improved features and bug fixes.</source>
          <target>显示包含新功能和改进功能以及错误修复列表的版本历史文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Press Skip to skip the translation of this string.</source>
          <target>按 Skip 跳过此字符串的翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Statistics will be calculated in words.</source>
          <target>统计数据将以文字计算。</target>
        </trans-unit>
        <trans-unit>
          <source>Output files</source>
          <target>输出文件</target>
        </trans-unit>
        <trans-unit>
          <source>If you try to save a project that has an unsaved project file, the product opens the &lt;a href=&quot;FileSaveAsMenu.htm&quot;&gt;Save As dialog box&lt;/a&gt; &lt;a href=&quot;FileSaveAsMenu.htm&quot;&gt;&lt;/a&gt; where you enter the new file name.</source>
          <target>如果您尝试保存具有未保存项目文件的项目，产品将打开&lt;a href=&quot;FileSaveAsMenu.htm&quot;&gt;另存为对话框&lt;/a&gt;&lt;a href=&quot;FileSaveAsMenu.htm&quot;&gt;&lt;/a&gt;在其中输入新文件名。</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be a  &lt;a href=&quot;QtLocalization.htm&quot;&gt;Qt user interface file&lt;/a&gt; (e.g. C:\Samples\Sample.ui).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是&lt;a href=&quot;QtLocalization.htm&quot;&gt;Qt 用户界面文件&lt;/a&gt;（例如 C:\Samples\Sample.ui）。</target>
        </trans-unit>
        <trans-unit>
          <source>Provides a space for you to type the text you want to find.</source>
          <target>提供一个空间供您键入要查找的文本。</target>
        </trans-unit>
        <trans-unit>
          <source>Never overwrite the current value.</source>
          <target>永远不要覆盖当前值。</target>
        </trans-unit>
        <trans-unit>
          <source>Use Name, x:Name or x:Uid attributes to give a name for a component.</source>
          <target>使用 Name、x:Name 或 x:Uid 属性为组件命名。</target>
        </trans-unit>
        <trans-unit>
          <source>Imports translations from existing localized files. Use this if you have some old localized files that you want to import into the project.</source>
          <target>从现有的本地化文件导入翻译。如果您有一些旧的本地化文件要导入到项目中，请使用此选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Click Import to import properties from a property file. Click Export to export current properties to a property file.</source>
          <target>单击导入以从属性文件导入属性。单击导出将当前属性导出到属性文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to set the original language of the source and add the initial languages to the project. A project must contain at least one language. Depending on your Sisulizer license there might be a limit in the number of languages in a project.</source>
          <target>使用此表设置源的原始语言并将初始语言添加到项目中。一个项目必须至少包含一种语言。根据您的 Sisulizer 许可证，项目中的语言数量可能有限制。</target>
        </trans-unit>
        <trans-unit>
          <source>Choose the Version sheet of &lt;a href=&quot;NetSettingsDialog.htm&quot;&gt;Tools | Platforms | .NET dialog&lt;/a&gt; to view installed .NET runtimes and to configure SDK directories.</source>
          <target>选择&lt;a href=&quot;NetSettingsDialog.htm&quot;&gt;工具&lt;/a&gt;的版本表&lt;a href=&quot;NetSettingsDialog.htm&quot;&gt;|平台 | .NET 对话框&lt;/a&gt;以查看已安装的 .NET 运行时和配置 SDK 目录。</target>
        </trans-unit>
        <trans-unit>
          <source>Key container name of key to sign assembly</source>
          <target>签名程序集的密钥的密钥容器名称</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer translation memory working on local DBISAM database</source>
          <target>Sisulizer 翻译记忆库在本地 DBISAM 数据库上工作</target>
        </trans-unit>
        <trans-unit>
          <source>Null terminated UTF-8 string</source>
          <target>空终止的 UTF-8 字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Writes the list of properties to the external XML-based file.</source>
          <target>将属性列表写入基于 XML 的外部文件。</target>
        </trans-unit>
        <trans-unit>
          <source>In addition of localization method there are other database localization issues:</source>
          <target>除了本地化方法之外，还有其他数据库本地化问题：</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to customize how the toolbar of the HTML editor looks like.</source>
          <target>使用此表可自定义 HTML 编辑器工具栏的外观。</target>
        </trans-unit>
        <trans-unit>
          <source>Character case</source>
          <target>字符大小写</target>
        </trans-unit>
        <trans-unit>
          <source>Bring translations from the database to the project only if the current value in the project is empty.</source>
          <target>仅当项目中的当前值为空时，才将翻译从数据库带到项目中。</target>
        </trans-unit>
        <trans-unit>
          <source>If the row has been translated automatically (auto translated status is on) and the original value of the row will be modified in the source file. Then during the next scanning process the row will get a new original value, but the translations keep same. After scanning the translations will not match to the original value any more.&lt;br&gt;If checked all such automatically translated rows where the original values changes during the scan process will be retranslated and the existing value will be overwritten.</source>
          <target>如果该行已被自动翻译（自动翻译状态为开启）并且该行的原始值将在源文件中被修改。然后在下一次扫描过程中，该行将获得一个新的原始值，但翻译保持不变。扫描后，翻译将不再与原始值匹配。&lt;br&gt;如果选中所有此类自动转换的行，其中原始值在扫描过程中发生变化，则将重新转换并覆盖现有值。</target>
        </trans-unit>
        <trans-unit>
          <source>Copies the content of log window to the clipboard.</source>
          <target>将日志窗口的内容复制到剪贴板。</target>
        </trans-unit>
        <trans-unit>
          <source>Java list resource file (.java)</source>
          <target>Java 列表资源文件 (.java)</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can safely localize also the embedded client and sever side scripts. Use the &lt;a href=&quot;HtmlSourceDialogScriptsSheet.htm&quot;&gt;Scripts sheet&lt;/a&gt; of &lt;a href=&quot;HtmlSourceDialog.htm&quot;&gt;HTML Source Dialog&lt;/a&gt; to select what scripts you want to translate and how to translate them.</source>
          <target>Sisulizer 还可以安全地本地化嵌入式客户端和服务器端脚本。使用&lt;a href=&quot;HtmlSourceDialog.htm&quot;&gt;HTML 源对话框&lt;/a&gt;的&lt;a href=&quot;HtmlSourceDialogScriptsSheet.htm&quot;&gt;脚本表&lt;/a&gt;来选择要翻译的脚本以及如何翻译它们。</target>
        </trans-unit>
        <trans-unit>
          <source>Directory where the files will be extracted to</source>
          <target>文件将被提取到的目录</target>
        </trans-unit>
        <trans-unit>
          <source>Import file might contain status information (e.g. Sisulizer project file). In that case you can specify how to import translation statuses.</source>
          <target>导入文件可能包含状态信息（例如 Sisulizer 项目文件）。在这种情况下，您可以指定如何导入翻译状态。</target>
        </trans-unit>
        <trans-unit>
          <source>Name and email of the tanslation team</source>
          <target>翻译团队的姓名和电子邮件</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer does not scan it unless you tag it. A tag is a slz comment on the same line as the string.</source>
          <target>除非您标记它，否则 Sisulizer 不会扫描它。标记是与字符串位于同一行的 slz 注释。</target>
        </trans-unit>
        <trans-unit>
          <source>Import Wizard - Text file</source>
          <target>导入向导 - 文本文件</target>
        </trans-unit>
        <trans-unit>
          <source>Yellow dot</source>
          <target>黄点</target>
        </trans-unit>
        <trans-unit>
          <source>If you have OpenOffice installed you already have several .oxt files installed on your computer. Look at &lt;em&gt;C:\Program Files\OpenOffice.org 3\share\extension\install&lt;/em&gt; directory for dictionary files.</source>
          <target>如果您安装了 OpenOffice，则您的计算机上已经安装了多个 .oxt 文件。查看&lt;em&gt;C:\Program Files\OpenOffice.org 3\share\extension\install&lt;/em&gt;目录中的字典文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can access and localize Firebird databases</source>
          <target>Sisulizer 可以访问和本地化 Firebird 数据库</target>
        </trans-unit>
        <trans-unit>
          <source>Ignore hotkey characters</source>
          <target>忽略热键字符</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to configure the default settings for XML sources.</source>
          <target>使用此对话框配置 XML 源的默认设置。</target>
        </trans-unit>
        <trans-unit>
          <source>The default action is to do nothing. Then the localized files will have the same font data as the original files. If the computer where the localized file is run does not have that font installed the operating system will use some other.</source>
          <target>默认操作是什么都不做。然后本地化的文件将具有与原始文件相同的字体数据。如果运行本地化文件的计算机没有安装该字体，操作系统将使用其他字体。</target>
        </trans-unit>
        <trans-unit>
          <source>Press Restore to restore the default properties to the selected mapping. Press Restore All to restore the default mappings values.</source>
          <target>按“恢复”将默认属性恢复到所选映射。按“全部恢复”以恢复默认映射值。</target>
        </trans-unit>
        <trans-unit>
          <source>When importing data from a database all above databases are available. Localize column shows those databases that Sisulizer can localize. TM column shows databases that can work as a translation memory. Depending on the current &lt;a href=&quot;Licenses.htm&quot;&gt;license&lt;/a&gt; some addtional databases may not be available.</source>
          <target>从数据库导入数据时，上述所有数据库都可用。本地化列显示了 Sisulizer 可以本地化的那些数据库。 TM 列显示可用作翻译记忆库的数据库。根据当前的&lt;a href=&quot;Licenses.htm&quot;&gt;许可证，&lt;/a&gt;某些附加数据库可能不可用。</target>
        </trans-unit>
        <trans-unit>
          <source>Java resource file</source>
          <target>Java资源文件</target>
        </trans-unit>
        <trans-unit>
          <source>UTF-8 encoding is always used on any language.</source>
          <target>UTF-8 编码始终用于任何语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Qt project file</source>
          <target>Qt项目文件</target>
        </trans-unit>
        <trans-unit>
          <source>Imports data from a Microsoft Glossary file (.csv).&lt;br&gt;&lt;strong&gt;Note!&lt;/strong&gt; This has the same file extension as &lt;em&gt;Comma Separated Value files&lt;/em&gt; but the format is different. Read more about &lt;a href=&quot;ImportingTextAndCsvFiles.htm&quot;&gt;importing text and CSV files&lt;/a&gt;.</source>
          <target>从 Microsoft Glossary 文件 (.csv) 导入数据。&lt;br&gt;&lt;strong&gt;笔记！&lt;/strong&gt;这与&lt;em&gt;逗号分隔值文件&lt;/em&gt;具有相同的文件扩展名，但格式不同。阅读有关&lt;a href=&quot;ImportingTextAndCsvFiles.htm&quot;&gt;导入文本和 CSV 文件的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Specified the default localized fonts to be used in XLIFF files.</source>
          <target>指定要在 XLIFF 文件中使用的默认本地化字体。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer will disable those  projects of  solutions that do not contain any resources to be localized.</source>
          <target>如果选中 Sisulizer 将禁用那些不包含任何本地化资源的解决方案项目。</target>
        </trans-unit>
        <trans-unit>
          <source>You can filter items based on their string value.</source>
          <target>您可以根据项目的字符串值过滤项目。</target>
        </trans-unit>
        <trans-unit>
          <source>A string that describes the organization of the author.</source>
          <target>描述作者组织的字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Check this if you want to scan also those version numbers that contain only excluded characters.</source>
          <target>如果您还想扫描那些仅包含排除字符的版本号，请选中​​此项。</target>
        </trans-unit>
        <trans-unit>
          <source>There are three kind of text files all having .txt file extension. They are:</source>
          <target>三种文本文件都具有 .txt 文件扩展名。他们是：</target>
        </trans-unit>
        <trans-unit>
          <source>You can check the available add-on by choosing &lt;a href=&quot;GeneralSettingsDialog.htm&quot;&gt;Tools | General Settings&lt;/a&gt; and selecting &lt;a href=&quot;GeneralSettingsDialogAddOnSheet.htm&quot;&gt;Add-ons sheet&lt;/a&gt;.</source>
          <target>您可以通过选择&lt;a href=&quot;GeneralSettingsDialog.htm&quot;&gt;工具 |&lt;/a&gt;查看可用的附加组件&lt;a href=&quot;GeneralSettingsDialog.htm&quot;&gt;。常规设置&lt;/a&gt;并选择&lt;a href=&quot;GeneralSettingsDialogAddOnSheet.htm&quot;&gt;附加组件表&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Add localized tables for those tables that you want to localize. The localized tables only contains the primary key and those fields that will be localized.</source>
          <target>为要本地化的表添加本地化表。本地化的表只包含主键和那些将被本地化的字段。</target>
        </trans-unit>
        <trans-unit>
          <source>When Sisulizer scans XAML data (either .xaml file or BAML resource inside assembly file) it needs a context information for each component. To get this context information Sisulizer looks for special name/context attributes that contain the name of the control. There are three possible attributes: x:Uid, x:Name and Name. If your XAML data does not contain name attributes Sisulizer will write the following hint to the log file:</source>
          <target>当 Sisulizer 扫描 XAML 数据（.xaml 文件或程序集文件中的 BAML 资源）时，它需要每个组件的上下文信息。为了获取此上下文信息，Sisulizer 会查找包含控件名称的特殊名称/上下文属性。存在三个可能的属性：x:Uid、x:Name 和 Name。如果您的 XAML 数据不包含名称属性，Sisulizer 会将以下提示写入日志文件：</target>
        </trans-unit>
        <trans-unit>
          <source>Add Header attribute into it:</source>
          <target>将 Header 属性添加到其中：</target>
        </trans-unit>
        <trans-unit>
          <source>Now you have added two platforms files, 64-bit Windows  file and 32-bit Mac file. The main file of the source is specified in the File sheet and it is 32-bit Windows file. All three files contains the same sources and are localized in the same way. This is why we add only one source and it contains additional files. If we added three different sources (one for 32-bit Windows, one for 64-bit Windows and one for Mac) we would get all strings, forms, etc three times. That would make localization more difficult and expensive.</source>
          <target>现在您已经添加了两个平台文件，64 位 Windows 文件和 32 位 Mac 文件。源的主文件在文件表中指定，它是 32 位 Windows 文件。所有三个文件都包含相同的来源并且以相同的方式本地化。这就是我们只添加一个源并且它包含其他文件的原因。如果我们添加三种不同的源（一种用于 32 位 Windows，一种用于 64 位 Windows，一种用于 Mac），我们将获得所有字符串、表单等 3 次。这将使本地化更加困难和昂贵。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked expands a node automatically when it is selected.</source>
          <target>如果选中，则在选择节点时自动展开节点。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked table of contents is sorted alphabetically. This means that if original file contains a sub folder having single character as its name all the sub pages will be placed on sub folders where the name of the folder matched the first characters of the page name.</source>
          <target>如果选中的目录按字母顺序排序。这意味着如果原始文件包含一个以单个字符作为名称的子文件夹，则所有子页面都将放置在文件夹名称与页面名称的第一个字符匹配的子文件夹中。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the programming language that was used in the application that uses PO files.</source>
          <target>指定在使用 PO 文件的应用程序中使用的编程语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Enter the password of the key.</source>
          <target>输入密钥的密码。</target>
        </trans-unit>
        <trans-unit>
          <source>Windows code page</source>
          <target>Windows 代码页</target>
        </trans-unit>
        <trans-unit>
          <source>Translation defect comment</source>
          <target>翻译缺陷评论</target>
        </trans-unit>
        <trans-unit>
          <source>Anrdroid application contains several resource types. Check the types that you want to localize.</source>
          <target>Android 应用程序包含多种资源类型。检查要本地化的类型。</target>
        </trans-unit>
        <trans-unit>
          <source>Use segmentation also with rows that contain sub tags</source>
          <target>对包含子标签的行也使用分段</target>
        </trans-unit>
        <trans-unit>
          <source>Specifying the output directory and file</source>
          <target>指定输出目录和文件</target>
        </trans-unit>
        <trans-unit>
          <source>A word value that specifies the size of the record in bytes. This can only be as the first field of the record.</source>
          <target>一个字值，以字节为单位指定记录的大小。这只能作为记录的第一个字段。</target>
        </trans-unit>
        <trans-unit>
          <source>Specified the default localized fonts to be used in Windows applications.</source>
          <target>指定要在 Windows 应用程序中使用的默认本地化字体。</target>
        </trans-unit>
        <trans-unit>
          <source>Localized user interface files</source>
          <target>本地化的用户界面文件</target>
        </trans-unit>
        <trans-unit>
          <source>Depending on the selected translation memory type and the access rights some of the features are disabled.</source>
          <target>根据所选的翻译记忆库类型和访问权限，某些功能会被禁用。</target>
        </trans-unit>
        <trans-unit>
          <source>Strong name key file</source>
          <target>强名称密钥文件</target>
        </trans-unit>
        <trans-unit>
          <source>Some source files may contain several sub files. For example if the source is a project file source it usually contains several other files in addition of the project file (.csproj contains several .resx files), or the source can contain wild cards that specify several files (e.g. *.resx). By default Sisulizer localizes all files and sub files belonging to the source. If you want to disable localization of a certain file add it to the exclude list.</source>
          <target>某些源文件可能包含多个子文件。例如，如果源是项目文件源，除了项目文件之外，它通常还包含多个其他文件（.csproj 包含多个 .resx 文件），或者源可以包含指定多个文件的通配符（例如 *.resx）。默认情况下，Sisulizer 本地化属于源的所有文件和子文件。如果您想禁用某个文件的本地化，请将其添加到排除列表中。</target>
        </trans-unit>
        <trans-unit>
          <source>No Change Does not change the size of the components.</source>
          <target>No Change 不更改组件的大小。</target>
        </trans-unit>
        <trans-unit>
          <source>Application id of Bing Translator</source>
          <target>必应翻译应用id</target>
        </trans-unit>
        <trans-unit>
          <source>If checked row states are written to the file.</source>
          <target>如果选中的行状态写入文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Combined string expression</source>
          <target>组合字符串表达式</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer uses HTTP protocol to get information from Sisulizer server and to communicate with 3rd party services such as  machine translators. If you use a proxy server enter the address of the proxy server to &lt;em&gt;Address&lt;/em&gt; field and port of the proxy server to &lt;em&gt;Port&lt;/em&gt; field, and select the type of the proxy server from the &lt;em&gt;Type&lt;/em&gt; combo. If your proxy requires user name and password enter them in &lt;em&gt;User Name&lt;/em&gt; and &lt;em&gt;Password&lt;/em&gt; fields.</source>
          <target>Sisulizer 使用 HTTP 协议从 Sisulizer 服务器获取信息，并与机器翻译器等 3rd 方服务进行通信。如果您使用代理服务器，请在“&lt;em&gt;地址”&lt;/em&gt;字段中输入代理服务器的地址，在“端口”字段中输入代理服务器的&lt;em&gt;端口&lt;/em&gt;，然后从“&lt;em&gt;类型”&lt;/em&gt;组合中选择代理服务器的&lt;em&gt;类型&lt;/em&gt;。如果您的代理需要用户名和密码，请在&lt;em&gt;用户名&lt;/em&gt;和&lt;em&gt;密码&lt;/em&gt;字段中输入它们。</target>
        </trans-unit>
        <trans-unit>
          <source>Duplicate accelerator</source>
          <target>重复加速器</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the field name of  the extended table that contain key values matching the key value of the main table. The default value is &lt;em&gt;Use same key fields as main table&lt;/em&gt; that means the extended data field uses same key field names as the main table. Select a specific field name only if the key field name is not the same as in the main field. If your main table contains key that is a combination of several fields this option is disabled.</source>
          <target>指定包含与主表键值匹配的键值的扩展表的字段名称。默认值为&lt;em&gt;使用与主表相同的关键字段，&lt;/em&gt;即扩展数据字段使用与主表相同的关键字段名称。仅当关键字段名称与主字段中的名称不同时才选择特定字段名称。如果您的主表包含由多个字段组合而成的键，则此选项将被禁用。</target>
        </trans-unit>
        <trans-unit>
          <source>.NET 2.0 helper library</source>
          <target>.NET 2.0 帮助程序库</target>
        </trans-unit>
        <trans-unit>
          <source>Enter a string that must be in the translated value in order the row to be visible in the sheet. If &lt;em&gt;Excluded&lt;/em&gt; is checked matching rows are not shown.</source>
          <target>输入必须在翻译值中的字符串，以便该行在工作表中可见。如果选中“&lt;em&gt;排除”，&lt;/em&gt;则不会显示匹配的行。</target>
        </trans-unit>
        <trans-unit>
          <source>Row | Copy Language to Translation</source>
          <target>行 |将语言复制到翻译</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer adds all translations to the translation memory when saving the project to the translation memory. If unchecked items will be added only once. Uncheck this to optimize and make saving faster.</source>
          <target>如果选中 Sisulizer，则在将项目保存到翻译记忆库时会将所有翻译添加到翻译记忆库中。如果未选中的项目将只添加一次。取消选中此项以优化并加快保存速度。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer turns on the IME of the language if any.</source>
          <target>如果选中 Sisulizer 打开语言的 IME（如果有的话）。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify a text rule. Text rules are used with &lt;a href=&quot;TextLocalization.htm&quot;&gt;text file localization&lt;/a&gt;.</source>
          <target>使用此对话框指定文本规则。文本规则与&lt;a href=&quot;TextLocalization.htm&quot;&gt;文本文件本地化一起使用&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to find &lt;a href=&quot;SpellChecking.htm&quot;&gt;spelling and grammar&lt;/a&gt; errors one by one.</source>
          <target>使用此对话框可以一一查找&lt;a href=&quot;SpellChecking.htm&quot;&gt;拼写和语法&lt;/a&gt;错误。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;WindowsLocalization.htm&quot;&gt;Visual C++ binary file is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;WindowsLocalization.htm&quot;&gt;Visual C++ 二进制文件的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>Custom dictionary is a standalone file. Each spell checker configuration can contain one and only one custom dictionary. Use this if you want to share the same custom dictionary between several Sisulizer projects or other applications using the same spell checker engine.</source>
          <target>自定义词典是一个独立的文件。每个拼写检查器配置可以包含一个且仅一个自定义词典。如果您想在多个 Sisulizer 项目或使用相同拼写检查引擎的其他应用程序之间共享相同的自定义词典，请使用此选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Jump to previous untranslated item in the &lt;a href=&quot;MainFormOpen.htm#TranslationSheet&quot;&gt;translation sheet&lt;/a&gt;.</source>
          <target>跳转到&lt;a href=&quot;MainFormOpen.htm#TranslationSheet&quot;&gt;翻译表中&lt;/a&gt;上一个未翻译的项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Localized resources have the same name as the original resource.</source>
          <target>本地化资源与原始资源同名。</target>
        </trans-unit>
        <trans-unit>
          <source>Delphi 2009 and later. C++Builder 2009 and later.</source>
          <target>德尔福 2009 及更高版本。 C++Builder 2009 及更高版本。</target>
        </trans-unit>
        <trans-unit>
          <source>// This sample contains country descriptions. Each line contains one record. 
// id&amp;lt;tab&amp;gt;value
usa	The United States of America is a federal republic of 50 states, located primary on central North America.
germany	Germany or the Federal Republic of Germany is one of the world&#x27;s leading industrialized countries, located in the heart of Europe.
japan	Japan is a country on the western edge of the Pacific Ocean.</source>
          <target>// 此示例包含国家/地区描述。每行包含一个记录。 // id&amp;lt;tab&amp;gt;value usa 美国是一个由 50 个州组成的联邦共和国，主要位于北美中部。德国 德国或德意志联邦共和国是世界领先的工业化国家之一，位于欧洲的中心。日本 日本是太平洋西部边缘的一个国家。</target>
        </trans-unit>
        <trans-unit>
          <source>Preceding length byte</source>
          <target>前置长度字节</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies what to do if there is no translation for trans-unit. Possible options are:</source>
          <target>指定在 trans-unit 没有翻译时要做什么。可能的选项是：</target>
        </trans-unit>
        <trans-unit>
          <source>You select that strings contains combined string as you write you resources or source code. Add &lt;a href=&quot;Tagging.htm&quot;&gt;tags&lt;/a&gt; into your source code or resource file to make Sisulizer automatically apply regular expressions.</source>
          <target>您在编写资源或源代码时选择包含组合字符串的字符串。将&lt;a href=&quot;Tagging.htm&quot;&gt;标签&lt;/a&gt;添加到您的源代码或资源文件中，使 Sisulizer 自动应用正则表达式。</target>
        </trans-unit>
        <trans-unit>
          <source>Translate the selected column in the selected view using &lt;a href=&quot;TranslationEnginesDialogInternalTranslationMemory.htm&quot;&gt;translation engines&lt;/a&gt;.</source>
          <target>使用&lt;a href=&quot;TranslationEnginesDialogInternalTranslationMemory.htm&quot;&gt;翻译引擎翻译&lt;/a&gt;选定视图中的选定列。</target>
        </trans-unit>
        <trans-unit>
          <source>PE-file padding</source>
          <target>PE文件填充</target>
        </trans-unit>
        <trans-unit>
          <source>Depending on the above selection one or more following items are visible.</source>
          <target>根据上述选择，可以看到以下一项或多项。</target>
        </trans-unit>
        <trans-unit>
          <source>If you want to save translation to the translation engine check the check box in the begining of each row that you want to save. This makes Sisulizer to add the translations from these items to the translation memory before removing them. They can be reused later. You can check all rows by clicking &lt;em&gt;Select all&lt;/em&gt; button and uncheck all rows by clicking &lt;em&gt;Deselect all&lt;/em&gt; button.</source>
          <target>如果要将翻译保存到翻译引擎，请选中要保存的每一行开头的复选框。这使得 Sisulizer 在删除它们之前将这些项目的翻译添加到翻译记忆库中。它们可以在以后重复使用。您可以通过单击全&lt;em&gt;选&lt;/em&gt;按钮选中所有行，并通过单击&lt;em&gt;取消全&lt;/em&gt;&lt;em&gt;选&lt;/em&gt;按钮取消选中所有行。</target>
        </trans-unit>
        <trans-unit>
          <source>When writing localized XML file Sisulizer does never use string entities but writes plain characters.</source>
          <target>在编写本地化的 XML 文件时，Sisulizer 从不使用字符串实体，而是编写纯字符。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the options.</source>
          <target>使用此表指定选项。</target>
        </trans-unit>
        <trans-unit>
          <source>A Sisulizer project contains one or more sources. Each source specifies an item or items to be localized. A source can be one of the following types:</source>
          <target>Sisulizer 项目包含一个或多个源。每个源指定一个或多个要本地化的项目。源可以是以下类型之一：</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer prompts user before clearing rows statuses of every row in the project.</source>
          <target>如果选中 Sisulizer 在清除项目中每一行的行状态之前提示用户。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the administrative language that is written in the TMX header. For example:</source>
          <target>指定编写在 TMX 标头中的管理语言。例如：</target>
        </trans-unit>
        <trans-unit>
          <source>DRC file is missing</source>
          <target>缺少 DRC 文件</target>
        </trans-unit>
        <trans-unit>
          <source>Row status column</source>
          <target>行状态列</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer can access and localize PostgreSQL databases</source>
          <target>Sisulizer 可以访问和本地化 PostgreSQL 数据库</target>
        </trans-unit>
        <trans-unit>
          <source>File | Save to Translation Memory</source>
          <target>档案 |保存到翻译记忆库</target>
        </trans-unit>
        <trans-unit>
          <source>Show source code to translators in visual editor</source>
          <target>在可视化编辑器中向翻译人员显示源代码</target>
        </trans-unit>
        <trans-unit>
          <source>Exchanging is a process where developer or localization engineer and translator send data to each other. Sisulizer has very powerful exchange methods. There are several ways to exchange data depending on the exchange direction and translation tool that translators uses (either Sisulizer or some other tool).</source>
          <target>交换是开发人员或本地化工程师和翻译人员相互发送数据的过程。 Sisulizer 具有非常强大的交换方法。根据翻译人员使用的交换方向和翻译工具（Sisulizer 或其他一些工具），有多种数据交换方式。</target>
        </trans-unit>
        <trans-unit>
          <source>Keywords sheet contains the keyword list. Keywords are used in component mapping. By default Sisulizer contains mapping list that contains the most common 3rd party components. However if you use some other component library you have to map these components. To make this easy Sisulizer contains automatic component mapping feature that makes it possible to automatically detect the component type from the component class name. Sisulizer uses keywords to perform the automatic mapping. The mapping algorithm uses the keyword list. When Sisulizer finds an unmapped component it check if any keyword in the keyword list equals the tail of the component class name. If a match is found Sisulizer maps the component to the component type specified in the keyword list. Sisulizer searches keywords in the order they appear in this list.</source>
          <target>关键字表包含关键字列表。关键字用于组件映射。默认情况下，Sisulizer 包含映射列表，其中包含最常见的 3rd 方组件。但是，如果您使用其他组件库，则必须映射这些组件。为了使这变得容易，Sisulizer 包含自动组件映射功能，可以从组件类名称中自动检测组件类型。 Sisulizer 使用关键字来执行自动映射。映射算法使用关键字列表。当 Sisulizer 找到一个未映射的组件时，它会检查关键字列表中的任何关键字是否等于组件类名的尾部。如果找到匹配项，Sisulizer 会将组件映射到关键字列表中指定的组件类型。 Sisulizer 按关键字出现在此列表中的顺序搜索关键字。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the format of the user defined binary resource.</source>
          <target>指定用户定义的二进制资源的格式。</target>
        </trans-unit>
        <trans-unit>
          <source>Delphi binary file</source>
          <target>德尔福二进制文件</target>
        </trans-unit>
        <trans-unit>
          <source>The user has changed keyword value from the default value.</source>
          <target>用户已更改默认值的关键字值。</target>
        </trans-unit>
        <trans-unit>
          <source>Compile on by one</source>
          <target>逐一编译</target>
        </trans-unit>
        <trans-unit>
          <source>Lines up the selected components with the center of the window</source>
          <target>将所选组件与窗口中心对齐</target>
        </trans-unit>
        <trans-unit>
          <source>Update image sizes</source>
          <target>更新图像大小</target>
        </trans-unit>
        <trans-unit>
          <source>private void languageToolStripMenuItem_Click(object sender, EventArgs e)
{
  SelectLanguage.Select(&amp;quot;en&amp;quot;);
}</source>
          <target>private void languageToolStripMenuItem_Click(object sender, EventArgs e) { SelectLanguage.Select(&amp;quot;en&amp;quot;); }</target>
        </trans-unit>
        <trans-unit>
          <source>Select the document that you want to edit. If you want to edit the whole translation memory select &lt;em&gt;All documents&lt;/em&gt;.</source>
          <target>选择要编辑的文档。如果要编辑整个翻译记忆库，请选择&lt;em&gt;所有文档&lt;/em&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the sheet displays a Help Hint when the mouse pointer rests momentarily on the left of row.</source>
          <target>如果选中，当鼠标指针暂时停留在行的左侧时，工作表会显示帮助提示。</target>
        </trans-unit>
        <trans-unit>
          <source>Update sizes in image styles</source>
          <target>更新图像样式中的大小</target>
        </trans-unit>
        <trans-unit>
          <source>Japan is a country on the western edge of the Pacific Ocean.</source>
          <target>日本是一个位于太平洋西部边缘的国家。</target>
        </trans-unit>
        <trans-unit>
          <source>Restores bounds of the selected component to the original values.</source>
          <target>将选定组件的边界恢复为原始值。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked and the project contains the same string again this dialog is not shown but the same translation is used for each instance of the string.</source>
          <target>如果选中并且项目再次包含相同的字符串，则不会显示此对话框，但对字符串的每个实例使用相同的翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the toolbar of the sheet is visible.</source>
          <target>如果选中，工作表的工具栏是可见的。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows a sample binary data of a file using the current definition. The file contains three records.</source>
          <target>使用当前定义显示文件的示例二进制数据。该文件包含三个记录。</target>
        </trans-unit>
        <trans-unit>
          <source>Some XML files contains the same element several times. This makes the context generation and maintaining little bit hard. Let&#x27;s have an example:</source>
          <target>一些 XML 文件多次包含相同的元素。这使得上下文生成和维护有点困难。让我们举个例子：</target>
        </trans-unit>
        <trans-unit>
          <source>System messages are shown</source>
          <target>显示系统消息</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;BiDiMode&lt;/em&gt; property specifies the reading order of the control. Default value is bdLeftToRight. Leave this to bdLeftToRight. Sisulizer will change the value if needed.</source>
          <target>&lt;em&gt;BiDiMode&lt;/em&gt;属性指定控件的读取顺序。默认值为 bdLeftToRight。将此留给 bdLeftToRight。如果需要，Sisulizer 将更改该值。</target>
        </trans-unit>
        <trans-unit>
          <source>All duplicate rows</source>
          <target>所有重复的行</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer ignores original and translation comparison.</source>
          <target>如果选中 Sisulizer，则忽略原始和翻译比较。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the maximum number of translations per matched native returned by the Translation Memory. If this is one Sisulizer always uses the first translation found from the translation engine even if it contains several translations.</source>
          <target>指定翻译记忆库返回的每个匹配的母语的最大翻译数。如果这是一个 Sisulizer 总是使用从翻译引擎找到的第一个翻译，即使它包含多个翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>By default the package contains the project file. The package also constains Sisulizer application files if the user chose the package including Sisulizer Free Edition setup. Use this sheet to include additional files to the package. An additional file can be any file such as setup files or manual file for your application. To add a file press +, browse the file and press OK. To remove already included file select the file from the list and press -.</source>
          <target>默认情况下，包包含项目文件。如果用户选择包含 Sisulizer 免费版安装程序的软件包，则该软件包还包含 Sisulizer 应用程序文件。使用此表将附加文件包含到包中。附加文件可以是任何文件，例如应用程序的安装文件或手册文件。要添加文件，请按 +，浏览文件并按 OK。要删除已包含的文件，请从列表中选择文件并按 -。</target>
        </trans-unit>
        <trans-unit>
          <source>Closes active project.</source>
          <target>关闭活动项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Add context column after the original column.</source>
          <target>在原始列之后添加上下文列。</target>
        </trans-unit>
        <trans-unit>
          <source>For example System.Windows.Forms.Button.Color disables localization of the Color property of the Button component. *.Color disables scanning of the Color property of all components.</source>
          <target>例如 System.Windows.Forms.Button.Color 禁用 Button 组件的 Color 属性的本地化。 *.Color 禁用扫描所有组件的 Color 属性。</target>
        </trans-unit>
        <trans-unit>
          <source>To import mappings from a mappings file press the Import button.</source>
          <target>要从映射文件导入映射，请按导入按钮。</target>
        </trans-unit>
        <trans-unit>
          <source>Click this button to show the tester part of the dialog.</source>
          <target>单击此按钮可显示对话框的测试器部分。</target>
        </trans-unit>
        <trans-unit>
          <source>The default expansion percentage values may seem a bit high in the first sight. It is true that most translations are only slightly longer than the original English word. However there are exceptions. The exceptions in different languages are different. There is no way to predict when the expansion is really going to happed. That why it is good to prepare for worst.</source>
          <target>乍一看，默认的扩展百分比值可能有点高。确实，大多数翻译仅比原始英文单词略长。不过也有例外。不同语言的例外情况不同。没有办法预测扩张何时真正发生。这就是为什么最好为最坏的情况做准备。</target>
        </trans-unit>
        <trans-unit>
          <source>Read more about spell checker &lt;a href=&quot;SpellChecking.htm#Engines&quot;&gt;engines&lt;/a&gt;.</source>
          <target>阅读有关拼写检查&lt;a href=&quot;SpellChecking.htm#Engines&quot;&gt;引擎的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the height of the editor is adjusted automatically to fit the selected source code.</source>
          <target>如果选中，编辑器的高度会自动调整以适合所选的源代码。</target>
        </trans-unit>
        <trans-unit>
          <source>Scan spin control</source>
          <target>扫描自旋控制</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;NetLocalization.htm&quot;&gt;Visual Studio .NET project is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;NetLocalization.htm&quot;&gt;Visual Studio .NET 项目的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>The resource name that is used when adding embedded resources to the output file. The string can contain &lt;a href=&quot;../LanguageCodeVariables.htm&quot;&gt;language code variables&lt;/a&gt;. Default is &amp;lt;sl&amp;gt;.</source>
          <target>将嵌入资源添加到输出文件时使用的资源名称。该字符串可以包含&lt;a href=&quot;../LanguageCodeVariables.htm&quot;&gt;语言代码变量&lt;/a&gt;。默认为 &amp;lt;sl&amp;gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Keep case</source>
          <target>保留案例</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks if  the amount of HTML tags in translation differs from original.</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查翻译中的 HTML 标签数量是否与原始标签不同。</target>
        </trans-unit>
        <trans-unit>
          <source>You do not have .NET framework installed.</source>
          <target>您没有安装 .NET 框架。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer automatically clears translation comments when rescanning the project. Turn this on if you want automatically clear the translation comments written by translators.&lt;br&gt;&lt;strong&gt; Note!&lt;/strong&gt; When this is turned on application clear all translation comments when performing scanning.</source>
          <target>如果选中 Sisulizer 会在重新扫描项目时自动清除翻译注释。如果您想自动清除翻译人员编写的翻译注释，请启用此选项。&lt;br&gt;&lt;strong&gt;笔记！&lt;/strong&gt;当此应用程序打开时，在执行扫描时清除所有翻译注释。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked  Sisulizer  imports the Read Only state. This state spacifies  that  string should not be translated.</source>
          <target>如果选中 Sisulizer 导入只读状态。此状态说明不应翻译字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Language, script and country</source>
          <target>语言、文字和国家</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the untranslated strings are shown in red color.</source>
          <target>如果选中，未翻译的字符串以红色显示。</target>
        </trans-unit>
        <trans-unit>
          <source>Click &lt;em&gt;Test&lt;/em&gt; to test if Sisulizer can access Microsoft Translator.</source>
          <target>单击&lt;em&gt;测试&lt;/em&gt;以测试 Sisulizer 是否可以访问 Microsoft Translator。</target>
        </trans-unit>
        <trans-unit>
          <source>Signing assemblies with strong names</source>
          <target>使用强名称签署程序集</target>
        </trans-unit>
        <trans-unit>
          <source>Include those items that has &lt;em&gt;Complete&lt;/em&gt; status.</source>
          <target>包括那些状态为“&lt;em&gt;完成”的&lt;/em&gt;项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Do not change marked flag of any translation.</source>
          <target>不要更改任何翻译的标记标志。</target>
        </trans-unit>
        <trans-unit>
          <source>Check this and click Next to create an exchange package for translator.&lt;br&gt;Use this when you want to send data to translator.</source>
          <target>选中此项并单击下一步为翻译器创建交换包。&lt;br&gt;当您想将数据发送到转换器时使用此选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Every assembly file in .NET has a version number. If the assembly is strong name signed then the version number gets really important because the version number of the satellite assembly must match the version number of the main assembly. How to make sure that the version match. In most cases Sisulizer makes this fully automatic. First Sisulizer tries to read the version number of the main assembly from AssemblyInfo.cs. If that cannot be done then Sisulizer reads the version from the main assembly itself. If the main assembly has a satellite contract attribute then Sisulizer tries to read that and if succesfull uses that instead of the version of the main assembly. If all these fail you have to manually set the version number. Open source dialog.</source>
          <target>.NET 中的每个程序集文件都有一个版本号。如果程序集是强名称签名的，那么版本号就变得非常重要，因为附属程序集的版本号必须与主程序集的版本号匹配。如何确保版本匹配。在大多数情况下，Sisulizer 使这完全自动化。首先 Sisulizer 尝试从 AssemblyInfo.cs 中读取主程序集的版本号。如果不能这样做，则 Sisulizer 从主程序集本身读取版本。如果主程序集具有附属合同属性，则 Sisulizer 会尝试读取该属性，如果成功则使用该属性而不是主程序集的版本。如果所有这些都失败了，您必须手动设置版本号。开源对话框。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifying the format manually</source>
          <target>手动指定格式</target>
        </trans-unit>
        <trans-unit>
          <source>Delphi XE2 and C++Builder XE2 or later using VCL</source>
          <target>Delphi XE2 和 C++Builder XE2 或更高版本，使用 VCL</target>
        </trans-unit>
        <trans-unit>
          <source>A final note. Delphi IDE will add form creation code in the initialization section of the application for each form that you add to the project. You better keep only main form there and create all other forms yourself at the moment when they are first needed.</source>
          <target>最后一点。 Delphi IDE 将在应用程序的初始化部分为您添加到项目中的每个表单添加表单创建代码。您最好只保留主窗体，并在第一次需要它们时自己创建所有其他窗体。</target>
        </trans-unit>
        <trans-unit>
          <source>Choose between file and database localization</source>
          <target>在文件和数据库本地化之间进行选择</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Right to left layout&lt;/em&gt; radio group is disabled.</source>
          <target>&lt;em&gt;从右到左布局&lt;/em&gt;无线电组被禁用。</target>
        </trans-unit>
        <trans-unit>
          <source>&amp;lt;sldir&amp;gt;\VCL contains the full source code of all Sisulizer functions and several sample applications showing how to make both localized and multilingual VCL applications.</source>
          <target>&amp;lt;sldir&amp;gt;\VCL 包含所有 Sisulizer 功能的完整源代码和几个展示如何制作本地化和多语言 VCL 应用程序的示例应用程序。</target>
        </trans-unit>
        <trans-unit>
          <source>If you want to localize the Country table to German and Japanese add localized Name, Capital and Description fields for each language.</source>
          <target>如果要将 Country 表本地化为德语和日语，请为每种语言添加本地化的 Name、Capital 和 Description 字段。</target>
        </trans-unit>
        <trans-unit>
          <source>The above examples always import German data from the import file to Sisulizer project.</source>
          <target>以上示例始终将德国数据从导入文件导入到 Sisulizer 项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Excluded files</source>
          <target>排除的文件</target>
        </trans-unit>
        <trans-unit>
          <source>Fill pseudo translation</source>
          <target>填写伪翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Digital signature command line</source>
          <target>数字签名命令行</target>
        </trans-unit>
        <trans-unit>
          <source>For example if the original file is &lt;code&gt;C:\MyFiles\Sample.exe&lt;/code&gt; and the pattern is &lt;code&gt;&amp;lt;sl&amp;gt;\&amp;lt;filename&amp;gt;&lt;/code&gt; the Chinese (Taiwan) file will be &lt;code&gt;C:\MyFiles\zh.tra\Sample.exe&lt;/code&gt;.</source>
          <target>例如，如果原始文件是&lt;code&gt;C:\MyFiles\Sample.exe&lt;/code&gt;并且模式是&lt;code&gt;&amp;lt;sl&amp;gt;\&amp;lt;filename&amp;gt;&lt;/code&gt;中文（台湾）文件将是&lt;code&gt;C:\MyFiles\zh.tra\Sample.exe&lt;/code&gt; 。</target>
        </trans-unit>
        <trans-unit>
          <source>Whenever an XML element contains &amp;amp;sportname; it will be expanded to Downhill skiing. For example:</source>
          <target>每当 XML 元素包含 &amp;amp;sportname;它将扩展到速降滑雪。例如：</target>
        </trans-unit>
        <trans-unit>
          <source>IETF language tag code is used. It is combination of language, script and country. The syntax is:&lt;br&gt;
          &lt;code&gt;la[-script][-co]&lt;/code&gt;&lt;br&gt;
      where</source>
          <target>使用 IETF 语言标记代码。它是语言、文字和国家的组合。语法是：&lt;br&gt; &lt;code&gt;la[-script][-co]&lt;/code&gt;&lt;br&gt;在哪里</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to create a project report.</source>
          <target>使用此对话框创建项目报告。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;code&gt;SubFiles\&lt;/code&gt;&lt;br&gt;
    If the file locates in the same directory as the source directory this parameter is ignored.</source>
          <target>&lt;code&gt;SubFiles\&lt;/code&gt;&lt;br&gt;如果文件与源目录位于同一目录中，则忽略此参数。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;String encoding&lt;/em&gt; and &lt;em&gt;string length&lt;/em&gt; specify what is the default string encoding. When you add a string field into header or record you can either specify a generic string field or encoding and length depend string field. The difference is that generic string always uses the default string encoding. Specific string fields use hard coded string encoding. If you binary file encodes all string values in the same way it is better to use generig strings. If the file contains two or more different string encodings you have to use specific strings or you can use generic string for the most common field and specific string for other fields.</source>
          <target>&lt;em&gt;字符串编码&lt;/em&gt;和&lt;em&gt;字符串长度&lt;/em&gt;指定默认字符串编码是什么。当您将字符串字段添加到标题或记录中时，您可以指定通用字符串字段或编码和长度取决于字符串字段。不同之处在于通用字符串始终使用默认字符串编码。特定的字符串字段使用硬编码的字符串编码。如果二进制文件以相同的方式对所有字符串值进行编码，最好使用通用字符串。如果文件包含两个或多个不同的字符串编码，您必须使用特定字符串，或者您可以对最常见的字段使用通用字符串，对其他字段使用特定字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Specify the original assembly file (.exe or .dll).</source>
          <target>指定原始程序集文件（.exe 或 .dll）。</target>
        </trans-unit>
        <trans-unit>
          <source>User interface files (.ui) are created using Qt Designer. A file define one form or dialog. Qt project file can contain any number of UI files. UI files are XML files.</source>
          <target>用户界面文件 (.ui) 是使用 Qt Designer 创建的。一个文件定义一个表单或对话框。 Qt 项目文件可以包含任意数量的 UI 文件。 UI 文件是 XML 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Defined text</source>
          <target>定义的文本</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer setup install dozens of samples applications and projects for different platforms and project type. Sisulizer readme file contains the list of available samples.</source>
          <target>Sisulizer 安装程序为不同的平台和项目类型安装了数十个示例应用程序和项目。 Sisulizer 自述文件包含可用示例的列表。</target>
        </trans-unit>
        <trans-unit>
          <source>Write marked translation</source>
          <target>写有标记的翻译</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies how exact language match must be when finding translations. Possible options are:</source>
          <target>指定查找翻译时语言匹配的准确程度。可能的选项是：</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer mirrors forms during build process.      
      Use this if you do not position or create components on run time.</source>
          <target>Sisulizer 在构建过程中镜像形式。如果您不在运行时定位或创建组件，请使用此选项。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows a sample XLIFF file based in the above settings.</source>
          <target>显示基于上述设置的示例 XLIFF 文件。</target>
        </trans-unit>
        <trans-unit>
          <source>Original language</source>
          <target>原始语言</target>
        </trans-unit>
        <trans-unit>
          <source>Compile resource files</source>
          <target>编译资源文件</target>
        </trans-unit>
        <trans-unit>
          <source>Clear the selected row Changed status.</source>
          <target>清除所选行已更改状态。</target>
        </trans-unit>
        <trans-unit>
          <source>MyApplicationDEU.dll (user&#x27;s UI language without the sublanguage, in this example German (Germany).</source>
          <target>MyApplicationDEU.dll（没有子语言的用户 UI 语言，在本例中为德语（德国）。</target>
        </trans-unit>
        <trans-unit>
          <source>Both lanugage and country parts are lower case. For example en-us and de-de.</source>
          <target>语言和国家部分都是小写的。例如 en-us 和 de-de。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the visual pane settings.</source>
          <target>指定可视窗格设置。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer tries to register COM objects that it uses if they are not already registered.</source>
          <target>如果选中 Sisulizer 尝试注册它使用的 COM 对象，如果它们尚未注册。</target>
        </trans-unit>
        <trans-unit>
          <source>Formatting tags</source>
          <target>格式化标签</target>
        </trans-unit>
        <trans-unit>
          <source>When you have multiple HTML-files to be localized there can be different kind of file extensions (e.g. .htm, .asp, .shtml). In such case it may be difficult to include all of them in the single wildcard (e.g. *.?htm). Instead you can set *.* as a filename and add each file extension to this list. During the 
scanning only files having extensions that are on the list will be scanned.</source>
          <target>当您有多个要本地化的 HTML 文件时，可以有不同类型的文件扩展名（例如 .htm、.asp、.shtml）。在这种情况下，可能很难将所有这些都包含在单个通配符中（例如 *.?htm）。相反，您可以将 *.* 设置为文件名并将每个文件扩展名添加到此列表中。在扫描过程中，只会扫描具有列表中扩展名的文件。</target>
        </trans-unit>
        <trans-unit>
          <source>xml:lang attribute is updated if it exists in the original XAML file. If not then it is added.</source>
          <target>如果原始 XAML 文件中存在 xml:lang 属性，则会更新该属性。如果没有，则添加它。</target>
        </trans-unit>
        <trans-unit>
          <source>Item contains image data (BMP, JPEG, GIF or PNG)  as a hexadecimal encoded string.</source>
          <target>项目包含作为十六进制编码字符串的图像数据（BMP、JPEG、GIF 或 PNG）。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer normalizes the white spaces in the element contents. This means removing multiple soft white spaces between each words. For example if you have following XAML</source>
          <target>如果选中 Sisulizer 将规范化元素内容中的空格。这意味着删除每个单词之间的多个软空白。例如，如果您有以下 XAML</target>
        </trans-unit>
        <trans-unit>
          <source>If checked each line of a Lines.Strings (e.g. TMemo.Lines) property is handled as a separate item. If unchecked the whole content of the List property is handled as a single item.</source>
          <target>如果选中 Lines.Strings（例如 TMemo.Lines）属性的每一行，则将作为单独的项目处理。如果未选中，则 List 属性的整个内容将作为单个项目处理。</target>
        </trans-unit>
        <trans-unit>
          <source>Resized control</source>
          <target>调整大小的控件</target>
        </trans-unit>
        <trans-unit>
          <source>Required string</source>
          <target>必需的字符串</target>
        </trans-unit>
        <trans-unit>
          <source>If we want to add more language we just make new sub directories, compile the language specific satellite assembly file (Sisulizer will do this automatically) and place that on the language specific sub directory (Sisulizer will do this automatically too).</source>
          <target>如果我们想添加更多语言，我们只需创建新的子目录，编译特定于语言的附属程序集文件（Sisulizer 会自动执行此操作）并将其放在特定于语言的子目录中（Sisulizer 也会自动执行此操作）。</target>
        </trans-unit>
        <trans-unit>
          <source>File list</source>
          <target>文件清单</target>
        </trans-unit>
        <trans-unit>
          <source>In many cases there is no need to translate all properties. For example colors or bitmaps are not always needed to be translated. They just bring extra rows and make the project file larger and make it slower to process. Check those data types that you do not want to localize. Uncheck those data type that you want to localize.</source>
          <target>在许多情况下，不需要翻译所有属性。例如，并不总是需要翻译颜色或位图。它们只是带来额外的行并使项目文件更大并使其处理速度变慢。检查您不想本地化的那些数据类型。取消选中要本地化的那些数据类型。</target>
        </trans-unit>
        <trans-unit>
          <source>WPF supports different reading order and automatic mirroring. This all is done by single property: &lt;em&gt;FlowDirection&lt;/em&gt;. It specifies both reading order and layout. If the value is LeftToRight then left to right  reading order and original layout is used.. If the value is RightToLeft then right to left reading order and mirrored layout is used.</source>
          <target>WPF 支持不同的阅读顺序和自动镜像。这一切都由单个属性完成： &lt;em&gt;FlowDirection&lt;/em&gt; 。它指定了阅读顺序和布局。如果值为 LeftToRight，则使用从左到右的阅读顺序和原始布局。如果值为 RightToLeft，则使用从右到左的阅读顺序和镜像布局。</target>
        </trans-unit>
        <trans-unit>
          <source>You can upload builded HTML files to the server.</source>
          <target>您可以将构建的 HTML 文件上传到服务器。</target>
        </trans-unit>
        <trans-unit>
          <source>Comment dialog allows adding and modifying of row-specific notes.</source>
          <target>注释对话框允许添加和修改行特定的注释。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer shows a message dialog before running a non-Unicode application.</source>
          <target>如果选中 Sisulizer，则在运行非 Unicode 应用程序之前会显示一个消息对话框。</target>
        </trans-unit>
        <trans-unit>
          <source>For example the component might contains Mirrored property that controls the layout of the component. When localizing to a bi-directional language such as Arabic or Hebrew this property should be set True. In order to localize the property you need to get the property value to the project grid first. To do that add the property name to the property list as an included property. Next time you scan a project containing source file that uses such a component the Mirrored property will be scanned.</source>
          <target>例如，组件可能包含控制组件布局的 Mirrored 属性。当本地化为双向语言（如阿拉伯语或希伯来语）时，此属性应设置为 True。为了本地化属性，您需要首先将属性值获取到项目网格中。为此，将属性名称作为包含的属性添加到属性列表中。下次扫描包含使用此类组件的源文件的项目时，将扫描镜像属性。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;strong&gt;using System.Globalization;&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;using System.Threading;&lt;/strong&gt;

static void Main()
{
  // Add this line of code
  &lt;strong&gt;Thread.CurrentThread.CurrentUICulture = CultureInfo.CurrentCulture;&lt;/strong&gt;

  Application.EnableVisualStyles();
  Application.SetCompatibleTextRenderingDefault(false);
  Application.Run(new Form1());
}</source>
          <target>&lt;strong&gt;使用 System.Globalization；&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;使用 System.Threading;&lt;/strong&gt; static void Main() { // 添加这行代码&lt;strong&gt;Thread.CurrentThread.CurrentUICulture = CultureInfo.CurrentCulture;&lt;/strong&gt; Application.EnableVisualStyles(); Application.SetCompatibleTextRenderingDefault(false); Application.Run(new Form1()); }</target>
        </trans-unit>
        <trans-unit>
          <source>The following line has an resource string tag that contains a comment (&amp;quot;Clicking this button opens on-line help&amp;quot;) and sets the maximum length to 300 pixels:</source>
          <target>下面一行有一个包含注释的资源字符串标记（“单击此按钮打开在线帮助”）并将最大长度设置为 300 像素：</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to specify the Visual C++ binary file options.</source>
          <target>使用此表指定 Visual C++ 二进制文件选项。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the alternative orginal values are used instead of actual original values whne exporting data. This is enabled only if you have &lt;a href=&quot;ProjectDialog.htm&quot;&gt;set alternative original&lt;/a&gt;.</source>
          <target>如果选中，则在导出数据时使用替代原始值而不是实际原始值。仅当您&lt;a href=&quot;ProjectDialog.htm&quot;&gt;设置了替代原件&lt;/a&gt;时才启用此功能。</target>
        </trans-unit>
        <trans-unit>
          <source>Translates tree nodes of TTreeView control and derived.</source>
          <target>翻译 TTreeView 控件和派生的树节点。</target>
        </trans-unit>
        <trans-unit>
          <source>Localize all similar files in the sub directories</source>
          <target>本地化子目录中的所有相似文件</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer evaluation version lets users test product functionality before buying a license. The evaluation version has the same functionality as the commercial version; evaluation version limitations don&amp;rsquo;t prevent users from testing all Sisulizer features. However Sisulizer evaluation version contains the following limitations:</source>
          <target>Sisulizer 评估版允许用户在购买许可证之前测试产品功能。评估版与商业版功能相同；评估版本限制不会阻止用户测试所有 Sisulizer 功能。但是 Sisulizer 评估版包含以下限制：</target>
        </trans-unit>
        <trans-unit>
          <source>PO files can be imported in two ways. They are</source>
          <target>PO 文件可以通过两种方式导入。他们是</target>
        </trans-unit>
        <trans-unit>
          <source>Translation status</source>
          <target>翻译状态</target>
        </trans-unit>
        <trans-unit>
          <source>Write original if no  value</source>
          <target>如果没有价值就写原件</target>
        </trans-unit>
        <trans-unit>
          <source>Type the file name, or press the &amp;quot;...&amp;quot; button to browse to a file.&lt;!-- #EndLibraryItem --&gt; The file must be an &lt;a href=&quot;OnlineHelpLocalization.htm&quot;&gt; online helpfile&lt;/a&gt; (e.g. C:\Samples\Sample.hhk).</source>
          <target>输入文件名，或按“...”按钮浏览文件。&lt;!-- #EndLibraryItem --&gt;该文件必须是&lt;a href=&quot;OnlineHelpLocalization.htm&quot;&gt;在线帮助文​​件&lt;/a&gt;（例如 C:\Samples\Sample.hhk）。</target>
        </trans-unit>
        <trans-unit>
          <source>The above application contains TFORM1 resource in German (7), English (9), Finnish (11) and Japanese (17).</source>
          <target>上述应用程序包含德语 (7)、英语 (9)、芬兰语 (11) 和日语 (17) 的 TFORM1 资源。</target>
        </trans-unit>
        <trans-unit>
          <source>If checked Sisulizer uses Office kind of menus.</source>
          <target>如果选中 Sisulizer 使用 Office 类型的菜单。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows some additional information about selected component.</source>
          <target>显示有关选定组件的一些附加信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Grammar checking is disabled if the selected spell checker does not support grammar checking.</source>
          <target>如果所选拼写检查器不支持语法检查，则禁用语法检查。</target>
        </trans-unit>
        <trans-unit>
          <source>Output file pattern and run parameters strings can contain the file and language parameters.</source>
          <target>输出文件模式和运行参数字符串可以包含文件和语言参数。</target>
        </trans-unit>
        <trans-unit>
          <source>Invalid amount of vertical bars</source>
          <target>无效的竖线数量</target>
        </trans-unit>
        <trans-unit>
          <source>SSL library</source>
          <target>SSL 库</target>
        </trans-unit>
        <trans-unit>
          <source>Status is showed as complete if the row is locked.</source>
          <target>如果行被锁定，则状态显示为完成。</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer setup (Sisu.exe) installs &lt;a href=&quot;http://en.wikipedia.org/wiki/Hunspell&quot; target=&quot;_blank&quot;&gt;Hunspell&lt;/a&gt; spell checker engine (hunspelldll.dll) into Sisulizer directory (e.g.&lt;!-- #BeginLibraryItem &quot;/Library/InstallDir.lbi&quot; --&gt;
C:\Program files (x86)\Sisulizer 4&lt;!-- #EndLibraryItem --&gt;). If engine file is not installed on Sisulizer directory you need to run Sisulizer setup again. Uninstall your current Sisulizer, remove the directory and run setup again. &lt;a href=&quot;http://en.wikipedia.org/wiki/OpenOffice&quot; target=&quot;_blank&quot;&gt;OpenOffice&lt;/a&gt; uses Hunspell spell checker.</source>
          <target>Sisulizer 安装程序 (Sisu.exe) 将&lt;a href=&quot;http://en.wikipedia.org/wiki/Hunspell&quot; target=&quot;_blank&quot;&gt;Hunspell&lt;/a&gt;拼写检查引擎 (hunspelldll.dll) 安装到 Sisulizer 目录（例如&lt;!-- #BeginLibraryItem &quot;/Library/InstallDir.lbi&quot; --&gt;C:\程序文件 (x86)\Sisulizer 4&lt;!-- #EndLibraryItem --&gt; ）。如果引擎文件未安装在 Sisulizer 目录中，您需要再次运行 Sisulizer 安装程序。卸载当前的 Sisulizer，删除目录并再次运行安装程序。 &lt;a href=&quot;http://en.wikipedia.org/wiki/OpenOffice&quot; target=&quot;_blank&quot;&gt;OpenOffice&lt;/a&gt;使用 Hunspell 拼写检查器。</target>
        </trans-unit>
        <trans-unit>
          <source>You can also specify additional import options. Possible values are:</source>
          <target>您还可以指定其他导入选项。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Imports data from a Multilizer binary dictionary file (.mld).</source>
          <target>从 Multilizer 二进制字典文件 (.mld) 导入数据。</target>
        </trans-unit>
        <trans-unit>
          <source>Row by Row</source>
          <target>逐行</target>
        </trans-unit>
        <trans-unit>
          <source>If checked the project is in translate only mode. In that mode you can only translate rows and edit the properties of the visual control. Other functions e.g. changing the properties of a source or adding a new source is not allowed.</source>
          <target>如果选中，则项目处于仅翻译模式。在该模式下，您只能转换行并编辑可视控件的属性。不允许使用其他功能，例如更改源的属性或添加新源。</target>
        </trans-unit>
        <trans-unit>
          <source>To make Sisulizer to create localized resource DLLs for your VCL file right click the source name on the project tree and choose Properties. Check &lt;em&gt;Resource DLL files&lt;/em&gt; check box.</source>
          <target>要使 Sisulizer 为您的 VCL 文件创建本地化的资源 DLL，请右键单击项目树上的源名称并选择“属性”。选中&lt;em&gt;资源 DLL 文件&lt;/em&gt;复选框。</target>
        </trans-unit>
        <trans-unit>
          <source>Clear the &lt;em&gt;Save to Translation Memory&lt;/em&gt; status of the every row in the project.</source>
          <target>清除项目中每一行的&lt;em&gt;保存到翻译记忆库&lt;/em&gt;状态。</target>
        </trans-unit>
        <trans-unit>
          <source>Show all items</source>
          <target>显示所有项目</target>
        </trans-unit>
        <trans-unit>
          <source>Translates &lt;a href=&quot;DuplicateString.htm&quot;&gt;duplicated items&lt;/a&gt; in selected language column.</source>
          <target>翻译所选语言列中的&lt;a href=&quot;DuplicateString.htm&quot;&gt;重复项&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Clear if translation is different</source>
          <target>如果翻译不同则清除</target>
        </trans-unit>
        <trans-unit>
          <source>When you right click a component on a dialog or form and choose &lt;em&gt;Rows&lt;/em&gt;, an Inspector dialog displays all the original and translated values of all rows of the selected components. You can use the dialog to edit translations.</source>
          <target>当您右键单击对话框或表单上的组件并选择&lt;em&gt;Rows 时&lt;/em&gt;，检查器对话框会显示所选组件的所有行的所有原始值和翻译值。您可以使用该对话框来编辑翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Show statistics in strings</source>
          <target>在字符串中显示统计信息</target>
        </trans-unit>
        <trans-unit>
          <source>First for All</source>
          <target>所有人第一</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer project file (.slp) is an XML based file that contains the localization project data. All translations and modification are kept in this file. If you want to backup your project, save this file. Project file contains all information about the project including original values, layouts, translations, images, etc. If you project contains lots of image and other binary data the project file might get very large. This will slow down opening of the project file. In such case you can exclude &lt;a href=&quot;ExcludeResourceTypes.htm&quot;&gt;binary resources&lt;/a&gt; and &lt;a href=&quot;ExcludeDataTypes.htm&quot;&gt;binary data type&lt;/a&gt;.</source>
          <target>Sisulizer 项目文件 (.slp) 是一个基于 XML 的文件，其中包含本地化项目数据。所有翻译和修改都保存在这个文件中。如果要备份项目，请保存此文件。项目文件包含有关项目的所有信息，包括原始值、布局、翻译、图像等。如果您的项目包含大量图像和其他二进制数据，项目文件可能会变得非常大。这将减慢项目文件的打开速度。在这种情况下，您可以排除&lt;a href=&quot;ExcludeResourceTypes.htm&quot;&gt;二进制资源&lt;/a&gt;和&lt;a href=&quot;ExcludeDataTypes.htm&quot;&gt;二进制数据类型&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Select the field that contains the comments.</source>
          <target>选择包含注释的字段。</target>
        </trans-unit>
        <trans-unit>
          <source>Classic Visual Basic does not support bidirectional languages.</source>
          <target>经典 Visual Basic 不支持双向语言。</target>
        </trans-unit>
        <trans-unit>
          <source>Do not localize</source>
          <target>不要本地化</target>
        </trans-unit>
        <trans-unit>
          <source>Item contains the length of the string in characters if string is encoded as UTF-16. Otherwise this contains length of the string in bytes.</source>
          <target>如果字符串编码为 UTF-16，则 Item 包含字符串的长度（以字符为单位）。否则，这包含以字节为单位的字符串长度。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;code&gt;la[-co][-script]&lt;/code&gt;&lt;br&gt;
        where</source>
          <target>&lt;code&gt;la[-co][-script]&lt;/code&gt;&lt;br&gt;在哪里</target>
        </trans-unit>
        <trans-unit>
          <source>Importing from Multilizer</source>
          <target>从 Multilizer 导入</target>
        </trans-unit>
        <trans-unit>
          <source>Excluded types</source>
          <target>排除的类型</target>
        </trans-unit>
        <trans-unit>
          <source>Draws an icon that shows the status of rows.</source>
          <target>绘制一个显示行状态的图标。</target>
        </trans-unit>
        <trans-unit>
          <source>By context first then by value</source>
          <target>先按上下文然后按值</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to view or edit a system vartiant of Sisulizer. Your can edit only custom variants (e.g. variant that you have added). All other are read only so you can only view them.</source>
          <target>使用此对话框查看或编辑 Sisulizer 的系统变体。您只能编辑自定义变体（例如您添加的变体）。所有其他都是只读的，因此您只能查看它们。</target>
        </trans-unit>
        <trans-unit>
          <source>Copy extensions</source>
          <target>复制扩展</target>
        </trans-unit>
        <trans-unit>
          <source>Selects the parent form of th current form. Use this menu to find the parenrt form of the current form.</source>
          <target>选择当前窗体的父窗体。使用此菜单查找当前表单的父表单。</target>
        </trans-unit>
        <trans-unit>
          <source>Check &lt;em&gt;Ignore character case on duplicates&lt;/em&gt; if you want that duplicates are compared by ignoring the case.</source>
          <target>如果您希望通过忽略大小写来比较&lt;em&gt;重复项，&lt;/em&gt;请选中&lt;em&gt;忽略重复项上的字符&lt;/em&gt;大小写。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet the specify the language and encoding properties.</source>
          <target>使用此表指定语言和编码属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Imports data from  an &lt;a href=&quot;http://www.csse.monash.edu.au/~jwb/j_edict.html&quot; target=&quot;_blank&quot;&gt;EDICT&lt;/a&gt; file. The file contains Japanese-English dictionary.</source>
          <target>从&lt;a href=&quot;http://www.csse.monash.edu.au/~jwb/j_edict.html&quot; target=&quot;_blank&quot;&gt;EDICT&lt;/a&gt;文件导入数据。该文件包含日英词典。</target>
        </trans-unit>
        <trans-unit>
          <source>Text file (.txt). &lt;a href=&quot;RegularExpressions.htm&quot;&gt;Regular expression&lt;/a&gt; rules are used to define the format of the file(s).</source>
          <target>文本文件 (.txt)。&lt;a href=&quot;RegularExpressions.htm&quot;&gt;正则表达式&lt;/a&gt;规则用于定义文件的格式。</target>
        </trans-unit>
        <trans-unit>
          <source>T&amp;auml;m&amp;auml; on esimerkki</source>
          <target>这是一个例子</target>
        </trans-unit>
        <trans-unit>
          <source>Zoom to fit</source>
          <target>缩放以适合</target>
        </trans-unit>
        <trans-unit>
          <source>If checked any text above can contain wildcard characters (? and *).</source>
          <target>如果选中，上面的任何文本都可以包含通配符（? 和 *）。</target>
        </trans-unit>
        <trans-unit>
          <source>File that Sisulizer project contains</source>
          <target>Sisulizer 项目包含的文件</target>
        </trans-unit>
        <trans-unit>
          <source>The length of the string is fixed. Some files using fixed string length contain the actual length in the header. If this is the case add a &lt;em&gt;string length&lt;/em&gt; or &lt;em&gt;string size&lt;/em&gt; field into the header definition. If header does not contain the string length specify the size value.</source>
          <target>字符串的长度是固定的。某些使用固定字符串长度的文件在标题中包含实际长度。如果是这种情况，请将&lt;em&gt;字符串长度&lt;/em&gt;或&lt;em&gt;字符串大小&lt;/em&gt;字段添加到标头定义中。如果标头不包含字符串长度，则指定大小值。</target>
        </trans-unit>
        <trans-unit>
          <source>Restores all none string properties of the selected controls and its child controls.</source>
          <target>恢复选定控件及其子控件的所有非字符串属性。</target>
        </trans-unit>
        <trans-unit>
          <source>Default language</source>
          <target>默认语言</target>
        </trans-unit>
        <trans-unit>
          <source>Left sides</source>
          <target>左侧</target>
        </trans-unit>
        <trans-unit>
          <source>If given shows only those rows whose translations are the given value longer than the original value.</source>
          <target>如果给定只显示那些翻译比给定值长于原始值的行。</target>
        </trans-unit>
        <trans-unit>
          <source>An open source spell checker that supports more than 50 languages. Hunspell is used by OpenOffice.&lt;br&gt;
    Sisulizer setup installs the engine but you have to &lt;a href=&quot;InstallHunspell.htm&quot;&gt;download dictionary files&lt;/a&gt;.</source>
          <target>一个开源拼写检查器，支持 50 多种语言。 OpenOffice 使用 Hunspell。&lt;br&gt; Sisulizer 安装程序安装引擎，但您必须&lt;a href=&quot;InstallHunspell.htm&quot;&gt;下载字典文件&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Learn more about &lt;a href=&quot;HtmlLocalization.htm&quot;&gt;HTML localization&lt;/a&gt; and &lt;a href=&quot;ChmLocalization.htm&quot;&gt;CHM localization&lt;/a&gt;.</source>
          <target>了解有关&lt;a href=&quot;HtmlLocalization.htm&quot;&gt;HTML 本地化&lt;/a&gt;和&lt;a href=&quot;ChmLocalization.htm&quot;&gt;CHM 本地化的&lt;/a&gt;更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>Clears the new status of the selected control and its child controls (if any).</source>
          <target>清除选定控件及其子控件（如果有）的新状态。</target>
        </trans-unit>
        <trans-unit>
          <source>Select the languages that your want to import</source>
          <target>选择要导入的语言</target>
        </trans-unit>
        <trans-unit>
          <source>If checked makes search to ignore hotkey characters in the text that is searched.&lt;br&gt;
    For example, if you search for &lt;em&gt;file&lt;/em&gt;, you will find &lt;em&gt;fi&amp;amp;le&lt;/em&gt;,</source>
          <target>如果选中，则搜索忽略搜索文本中的热键字符。&lt;br&gt;例如，如果您搜索&lt;em&gt;file&lt;/em&gt; ，您将找到&lt;em&gt;file&lt;/em&gt; &lt;em&gt;&amp;amp;le&lt;/em&gt; ，</target>
        </trans-unit>
        <trans-unit>
          <source>Invalid Amount of White Spaces Validation</source>
          <target>无效的空白数量验证</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer&#x27;s editing sheet shows new line visually using mirrored P sigh (just like MS Word). This character is replaced with the correct new line encoding when the localized items are created.</source>
          <target>Sisulizer 的编辑表使用镜像 P 叹息（就像 MS Word）直观地显示新行。创建本地化项目时，此字符将替换为正确的新行编码。</target>
        </trans-unit>
        <trans-unit>
          <source>Shows or hides &lt;a href=&quot;MainFormClose.htm#Projects&quot;&gt;Recent Projects pane&lt;/a&gt;.</source>
          <target>显示或隐藏&lt;a href=&quot;MainFormClose.htm#Projects&quot;&gt;最近的项目窗格&lt;/a&gt;。</target>
        </trans-unit>
        <trans-unit>
          <source>Unused inherited forms</source>
          <target>未使用的继承形式</target>
        </trans-unit>
        <trans-unit>
          <source>XAML file</source>
          <target>XAML 文件</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the format and options of the TMX file that is written.</source>
          <target>指定写入的 TMX 文件的格式和选项。</target>
        </trans-unit>
        <trans-unit>
          <source>CSV files (Comma Separate Value files) are text files where one record is one line and each fields are separated by a delimiter characters that is most often comma (,). Unfortunately the data format is not the same on every files. Some files uses tab or colon as separator. Some contains a language pair, some other contains several languages. There are at lest three different CSV files. They are use .csv file extension and all contain text data. File format are:</source>
          <target>CSV 文件（逗号分隔值文件）是文本文件，其中一条记录为一行，每个字段由分隔符分隔，分隔符通常是逗号 (,)。不幸的是，每个文件的数据格式并不相同。某些文件使用制表符或冒号作为分隔符。有些包含一个语言对，有些包含多种语言。至少有三个不同的 CSV 文件。它们使用 .csv 文件扩展名，并且都包含文本数据。文件格式为：</target>
        </trans-unit>
        <trans-unit>
          <source>Values can contain combined strings</source>
          <target>值可以包含组合字符串</target>
        </trans-unit>
        <trans-unit>
          <source>Sisulizer directory contains SlAddRes.exe command line tool that you can use in your makefile to add resources to your EXE file. Use it if you do not want Sisulizer to create EXE with embedded resource but you want Sisulizer to create resource DLL files and you manually embed resources DLL files into your EXE.</source>
          <target>Sisulizer 目录包含 SlAddRes.exe 命令行工具，您可以在 makefile 中使用该工具将资源添加到 EXE 文件中。如果您不希望 Sisulizer 创建带有嵌入资源的 EXE 但您希望 Sisulizer 创建资源 DLL 文件并且您手动将资源 DLL 文件嵌入到您的 EXE 中，请使用它。</target>
        </trans-unit>
        <trans-unit>
          <source>Use this sheet to select the Windows binary file resources to be localized.</source>
          <target>使用此表选择要本地化的 Windows 二进制文件资源。</target>
        </trans-unit>
        <trans-unit>
          <source>This works out of the box if &lt;a href=&quot;InstallPolar.htm&quot;&gt;you did not uncheck spell checking dictionaries&lt;/a&gt; when you installed Sisulizer.</source>
          <target>如果&lt;a href=&quot;InstallPolar.htm&quot;&gt;您&lt;/a&gt;在安装 Sisulizer 时&lt;a href=&quot;InstallPolar.htm&quot;&gt;没有取消选中拼写检查词典&lt;/a&gt;，这将是开箱即用的。</target>
        </trans-unit>
        <trans-unit>
          <source>A reference to a local DTD file is added to the file.</source>
          <target>对本地 DTD 文件的引用被添加到文件中。</target>
        </trans-unit>
        <trans-unit>
          <source>Import language</source>
          <target>导入语言</target>
        </trans-unit>
        <trans-unit>
          <source>Use this dialog to specify how the selected &lt;a href=&quot;ReportLocalization.htm&quot;&gt;ReportBuilder report file is localized&lt;/a&gt;. The dialog contains following sheets:</source>
          <target>使用此对话框指定所选&lt;a href=&quot;ReportLocalization.htm&quot;&gt;ReportBuilder 报告文件的本地化方式&lt;/a&gt;。该对话框包含以下工作表：</target>
        </trans-unit>
        <trans-unit>
          <source>or in .NET 2 and 3.x:</source>
          <target>或在 .NET 2 和 3.x 中：</target>
        </trans-unit>
        <trans-unit>
          <source>.NET binary file compiled by any .NET compiler</source>
          <target>由任何 .NET 编译器编译的 .NET 二进制文件</target>
        </trans-unit>
        <trans-unit>
          <source>In the above example we only needed to add two sources: a HTML (*.html) and an Online Help (Sample.*) source. This is because HHK, HHC and GLO files all have the same name and we could use Sample.* wild card. If the name were different you would have to add each file as a separate source to the Sisulizer project.</source>
          <target>在上面的例子中，我们只需要添加两个源：一个 HTML (*.html) 和一个在线帮助 (Sample.*) 源。这是因为 HHK、HHC 和 GLO 文件都具有相同的名称，我们可以使用 Sample.* 通配符。如果名称不同，您必须将每个文件作为单独的源添加到 Sisulizer 项目中。</target>
        </trans-unit>
        <trans-unit>
          <source>You can configure what to localize and how to localize by using HTML Help source&#x27;s &lt;a href=&quot;ChmSourceDialogOptionsSheet.htm&quot;&gt;option sheet&lt;/a&gt;.</source>
          <target>您可以使用 HTML 帮助源的&lt;a href=&quot;ChmSourceDialogOptionsSheet.htm&quot;&gt;选项表&lt;/a&gt;配置要本地化的内容以及如何本地化。</target>
        </trans-unit>
        <trans-unit>
          <source>Localized value is greater than the original value. Default color is blue.</source>
          <target>本地化值大于原始值。默认颜色为蓝色。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the environment options. Possible values are:</source>
          <target>指定环境选项。可能的值为：</target>
        </trans-unit>
        <trans-unit>
          <source>Null terminated UTF-16 string</source>
          <target>空终止的 UTF-16 字符串</target>
        </trans-unit>
        <trans-unit>
          <source>The biggest different between  VCL and FireMoney localization is that compared to  VCL you can have multiple target files. FireMonkey can have several target files: WIN32, WIN64, OSX, etc. When you create a project you only have to add one target file into Sisulizer project. Most often this is 32-bit Windows target but it can also be 64-bit Windows target. All other targets are added as platform files. Platform file is a file that Sisulizer handles like the main file (e.g the one you have added in to the project). Using this approach we eliminates the same resource items appearing multiple times. Starting from Delphi XE2 also VCL  can have two target files. One for WIN32 and another for WIN64.</source>
          <target>VCL 和 FireMoney 本地化之间最大的不同在于，与 VCL 相比，您可以拥有多个目标文件。 FireMonkey 可以有多个目标文件：WIN32、WIN64、OSX 等。当您创建一个项目时，您只需要将一个目标文件添加到 Sisulizer 项目中。大多数情况下，这是 32 位 Windows 目标，但也可以是 64 位 Windows 目标。所有其他目标都作为平台文件添加。平台文件是 Sisulizer 像主文件一样处理的文件（例如，您添加到项目中的文件）。使用这种方法，我们消除了多次出现的相同资源项。从 Delphi XE2 开始，VCL 也可以有两个目标文件。一个用于 WIN32，另一个用于 WIN64。</target>
        </trans-unit>
        <trans-unit>
          <source>Copyright &amp;copy; 2005-2018 Sisulizer. All rights reserved.</source>
          <target>版权所有 © 2005-2018 Sisulizer。版权所有。</target>
        </trans-unit>
        <trans-unit>
          <source>Read more from &amp;lt;sisulizer-dir&amp;gt;\Tutorial\Readme.html.</source>
          <target>从 &amp;lt;sisulizer-dir&amp;gt;\Tutorial\Readme.html 中了解更多信息。</target>
        </trans-unit>
        <trans-unit>
          <source>&lt;em&gt;Text Cutting&lt;/em&gt; specifies how long strings is cut. Possilbe values are:</source>
          <target>&lt;em&gt;文本剪切&lt;/em&gt;指定剪切字符串的长度。可能的值是：</target>
        </trans-unit>
        <trans-unit>
          <source>Prints the log pane.</source>
          <target>打印日志窗格。</target>
        </trans-unit>
        <trans-unit>
          <source>About dialog shows information about the application such as version number and current license.</source>
          <target>关于对话框显示有关应用程序的信息，例如版本号和当前许可证。</target>
        </trans-unit>
        <trans-unit>
          <source>This &lt;a href=&quot;Validation.htm&quot;&gt;validation&lt;/a&gt; checks if the same original string has been translated in two or more different ways.</source>
          <target>此&lt;a href=&quot;Validation.htm&quot;&gt;验证&lt;/a&gt;检查是否以两种或多种不同方式翻译了相同的原始字符串。</target>
        </trans-unit>
        <trans-unit>
          <source>Enter the file where you want to export to</source>
          <target>输入要导出到的文件</target>
        </trans-unit>
        <trans-unit>
          <source>Selects in the project tree a node that contains the current row.</source>
          <target>在项目树中选择包含当前行的节点。</target>
        </trans-unit>
        <trans-unit>
          <source>Restores the selected modified rule to the default value.</source>
          <target>将选定的修改规则恢复为默认值。</target>
        </trans-unit>
        <trans-unit>
          <source>Specifies the class path variable.</source>
          <target>指定类路径变量。</target>
        </trans-unit>
        <trans-unit>
          <source>Creating signed satellite assembly files</source>
          <target>创建签名的附属程序集文件</target>
        </trans-unit>
        <trans-unit>
          <source>Shows the &lt;a href=&quot;StringTranslationDialog.htm&quot;&gt;edit translation dialog&lt;/a&gt; box that lets you edit the translation of the selected row.</source>
          <target>显示&lt;a href=&quot;StringTranslationDialog.htm&quot;&gt;编辑翻译对话框&lt;/a&gt;，可让您编辑所选行的翻译。</target>
        </trans-unit>
        <trans-unit>
          <source>Insert localized data directly into the selected database. The localized data will be added either to localized rows, localized fields or localized tables. Use the Fields and Tables tree to control what items are used.</source>
          <target>将本地化数据直接插入所选数据库。本地化数据将添加到本地化行、本地化字段或本地化表中。使用字段和表树来控制使用哪些项目。</target>
        </trans-unit>
        <trans-unit>
          <source>Windows PE file (.exe, .dll, .ocx)  that has been compiled with a C/C++ compiler and used the standard Win32 resources such as dialog, menu and string resources.</source>
          <target>使用 C/C++ 编译器编译并使用标准 Win32 资源（例如对话框、菜单和字符串资源）的 Windows PE 文件（.exe、.dll、.ocx）。</target>
        </trans-unit>
        <trans-unit>
          <source>Hunspell is a better spell checker than Polar and its dictionaries typically contains more words than the dictionaries of Polar. Hunspell supports all the languages of Polar plus many more. Why don&#x27;t we replace Polar with Hunspell in Sisulizer setup? The reason is simple: Hunspell is an open source spell checker. Sisulizer has license to deploy the engine file, hunspelldll.dll, but not the dictionary files that are   under &lt;a href=&quot;http://en.wikipedia.org/wiki/GNU_General_Public_License&quot; target=&quot;_blank&quot;&gt;GPL&lt;/a&gt; or &lt;a href=&quot;http://en.wikipedia.org/wiki/GNU_Lesser_General_Public_License&quot; target=&quot;_blank&quot;&gt;LPGL&lt;/a&gt; licenses. They can only be deployed with open source applications. This is why Sisulizer setup installs only the engine file. However, the end user of Sisulizer  (you) is allowed to &lt;a href=&quot;InstallHunspell.htm&quot;&gt;download dictionary files&lt;/a&gt; and use them. We recommend you to &lt;a href=&quot;InstallHunspell.htm&quot;&gt;download&lt;/a&gt; an OpenOffice dictionary package and to install it to Sisulizer.</source>
          <target>Hunspell 是一个比 Polar 更好的拼写检查器，它的词典通常包含比 Polar 词典更多的词。 Hunspell 支持 Polar 的所有语言以及更多语言。为什么我们不在 Sisulizer 设置中用 Hunspell 替换 Polar？原因很简单：Hunspell 是一个开源拼写检查器。 Sisulizer 具有部署引擎文件 hunspelldll.dll 的许可，但没有&lt;a href=&quot;http://en.wikipedia.org/wiki/GNU_General_Public_License&quot; target=&quot;_blank&quot;&gt;GPL&lt;/a&gt;或&lt;a href=&quot;http://en.wikipedia.org/wiki/GNU_Lesser_General_Public_License&quot; target=&quot;_blank&quot;&gt;LPGL&lt;/a&gt;许可下的字典文件。它们只能与开源应用程序一起部署。这就是为什么 Sisulizer 安装程序只安装引擎文件的原因。但是，Sisulizer 的最终用户（您）可以&lt;a href=&quot;InstallHunspell.htm&quot;&gt;下载字典文件&lt;/a&gt;并使用它们。我们建议您&lt;a href=&quot;InstallHunspell.htm&quot;&gt;下载&lt;/a&gt;OpenOffice 词典包并将其安装到 Sisulizer。</target>
        </trans-unit>
        
      </group>
    </body>
  </file>
</xliff>